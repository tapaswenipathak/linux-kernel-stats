commit 0f979d815cd52084b99e9f6b367e79488850df2e
Merge: ab159ac569fd 0ab1438bad43
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat May 8 10:00:11 2021 -0700

    Merge tag 'kbuild-v5.13-2' of git://git.kernel.org/pub/scm/linux/kernel/git/masahiroy/linux-kbuild
    
    Pull more Kbuild updates from Masahiro Yamada:
    
     - Convert sh and sparc to use generic shell scripts to generate the
       syscall headers
    
     - refactor .gitignore files
    
     - Update kernel/config_data.gz only when the content of the .config
       is really changed, which avoids the unneeded re-link of vmlinux
    
     - move "remove stale files" workarounds to scripts/remove-stale-files
    
     - suppress unused-but-set-variable warnings by default for Clang
       as well
    
     - fix locale setting LANG=C to LC_ALL=C
    
     - improve 'make distclean'
    
     - always keep intermediate objects from scripts/link-vmlinux.sh
    
     - move IF_ENABLED out of <linux/kconfig.h> to make it self-contained
    
     - misc cleanups
    
    * tag 'kbuild-v5.13-2' of git://git.kernel.org/pub/scm/linux/kernel/git/masahiroy/linux-kbuild: (25 commits)
      linux/kconfig.h: replace IF_ENABLED() with PTR_IF() in <linux/kernel.h>
      kbuild: Don't remove link-vmlinux temporary files on exit/signal
      kbuild: remove the unneeded comments for external module builds
      kbuild: make distclean remove tag files in sub-directories
      kbuild: make distclean work against $(objtree) instead of $(srctree)
      kbuild: refactor modname-multi by using suffix-search
      kbuild: refactor fdtoverlay rule
      kbuild: parameterize the .o part of suffix-search
      arch: use cross_compiling to check whether it is a cross build or not
      kbuild: remove ARCH=sh64 support from top Makefile
      .gitignore: prefix local generated files with a slash
      kbuild: replace LANG=C with LC_ALL=C
      Makefile: Move -Wno-unused-but-set-variable out of GCC only block
      kbuild: add a script to remove stale generated files
      kbuild: update config_data.gz only when the content of .config is changed
      .gitignore: ignore only top-level modules.builtin
      .gitignore: move tags and TAGS close to other tag files
      kernel/.gitgnore: remove stale timeconst.h and hz.bc
      usr/include: refactor .gitignore
      genksyms: fix stale comment
      ...

commit 1fca37660326b3c7a310e35768cf554425dd7f64
Author: Masahiro Yamada <masahiroy@kernel.org>
Date:   Sun Apr 25 15:24:03 2021 +0900

    kernel/.gitgnore: remove stale timeconst.h and hz.bc
    
    timeconst.h and hz.bc used to exist in kernel/.
    
    Commit 5cee96459726 ("time/timers: Move all time(r) related files into
    kernel/time") moved them to kernel/time/.
    
    Commit 0a227985d4a9 ("time: Move timeconst.h into include/generated")
    moved timeconst.h to include/generated/ and removed hz.bc .
    
    Signed-off-by: Masahiro Yamada <masahiroy@kernel.org>

commit d082402e2174314e87131771d048925b2245b74c
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Sun Aug 11 00:53:01 2019 +0900

    kbuild: remove meaningless 'targets' in ./Kbuild
    
    timeconst.h is generated by $(call filechk,...), missing-syscalls and
    old-atomics are invoked by $(call cmd,...)
    
    None of them needs to be added to 'targets'.
    
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>

commit 668c35f69cc750aaf07bd5fe7710a47e2aed6e43
Merge: d8372ba8ce28 dec28d8ea2f7
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat Dec 29 12:03:17 2018 -0800

    Merge tag 'kbuild-v4.21' of git://git.kernel.org/pub/scm/linux/kernel/git/masahiroy/linux-kbuild
    
    Pull Kbuild updates from Masahiro Yamada:
     "Kbuild core:
       - remove unneeded $(call cc-option,...) switches
       - consolidate Clang compiler flags into CLANG_FLAGS
       - announce the deprecation of SUBDIRS
       - fix single target build for external module
       - simplify the dependencies of 'prepare' stage targets
       - allow fixdep to directly write to .*.cmd files
       - simplify dependency generation for CONFIG_TRIM_UNUSED_KSYMS
       - change if_changed_rule to accept multi-line recipe
       - move .SECONDARY special target to scripts/Kbuild.include
       - remove redundant 'set -e'
       - improve parallel execution for CONFIG_HEADERS_CHECK
       - misc cleanups
    
      Treewide fixes and cleanups
       - set Clang flags correctly for PowerPC boot images
       - fix UML build error with CONFIG_GCC_PLUGINS
       - remove unneeded patterns from .gitignore files
       - refactor firmware/Makefile
       - remove unneeded rules for *offsets.s
       - avoid unneeded regeneration of intermediate .s files
       - clean up ./Kbuild
    
      Modpost:
       - remove unused -M, -K options
       - fix false positive warnings about section mismatch
       - use simple devtable lookup instead of linker magic
       - misc cleanups
    
      Coccinelle:
       - relax boolinit.cocci checks for overall consistency
       - fix warning messages of boolinit.cocci
    
      Other tools:
       - improve -dirty check of scripts/setlocalversion
       - add a tool to generate compile_commands.json from .*.cmd files"
    
    * tag 'kbuild-v4.21' of git://git.kernel.org/pub/scm/linux/kernel/git/masahiroy/linux-kbuild: (51 commits)
      kbuild: remove unused cmd_gentimeconst
      kbuild: remove $(obj)/ prefixes in ./Kbuild
      treewide: add intermediate .s files to targets
      treewide: remove explicit rules for *offsets.s
      firmware: refactor firmware/Makefile
      firmware: remove unnecessary patterns from .gitignore
      scripts: remove unnecessary ihex2fw and check-lc_ctypes from .gitignore
      um: remove unused filechk_gen_header in Makefile
      scripts: add a tool to produce a compile_commands.json file
      kbuild: add -Werror=implicit-int flag unconditionally
      kbuild: add -Werror=strict-prototypes flag unconditionally
      kbuild: add -fno-PIE flag unconditionally
      scripts: coccinelle: Correct warning message
      scripts: coccinelle: only suggest true/false in files that already use them
      kbuild: handle part-of-module correctly for *.ll and *.symtypes
      kbuild: refactor part-of-module
      kbuild: refactor quiet_modtag
      kbuild: remove redundant quiet_modtag for $(obj-m)
      kbuild: refactor Makefile.asm-generic
      user/Makefile: Fix typo and capitalization in comment section
      ...

commit dec28d8ea2f731b7ec68a2c9421e99a165d47b57
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Mon Dec 24 23:11:09 2018 +0900

    kbuild: remove unused cmd_gentimeconst
    
    filechk_gentimeconst is always used instead of cmd_gentimeconst.
    
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>

commit 35728b8209ee7d25b6241a56304ee926469bd154
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed Oct 31 19:21:09 2018 +0100

    time: Add SPDX license identifiers
    
    Update the time(r) core files files with the correct SPDX license
    identifier based on the license text in the file itself. The SPDX
    identifier is a legally binding shorthand, which can be used instead of the
    full boiler plate text.
    
    This work is based on a script and data from Philippe Ombredanne, Kate
    Stewart and myself. The data has been created with two independent license
    scanners and manual inspection.
    
    The following files do not contain any direct license information and have
    been omitted from the big initial SPDX changes:
    
      timeconst.bc: The .bc files were not touched
      time.c, timer.c, timekeeping.c: Licence was deduced from EXPORT_SYMBOL_GPL
    
    As those files do not contain direct license references they fall under the
    project license, i.e. GPL V2 only.
    
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Acked-by: Kees Cook <keescook@chromium.org>
    Acked-by: Ingo Molnar <mingo@kernel.org>
    Acked-by: John Stultz <john.stultz@linaro.org>
    Acked-by: Corey Minyard <cminyard@mvista.com>
    Cc: Peter Zijlstra <peterz@infradead.org>
    Cc: Kate Stewart <kstewart@linuxfoundation.org>
    Cc: Philippe Ombredanne <pombredanne@nexb.com>
    Cc: Russell King <rmk+kernel@armlinux.org.uk>
    Cc: Richard Cochran <richardcochran@gmail.com>
    Cc: Nicolas Pitre <nicolas.pitre@linaro.org>
    Cc: David Riley <davidriley@chromium.org>
    Cc: Colin Cross <ccross@android.com>
    Cc: Mark Brown <broonie@kernel.org>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Paul E. McKenney <paulmck@linux.vnet.ibm.com>
    Link: https://lkml.kernel.org/r/20181031182252.879109557@linutronix.de

commit 205c8ada314f78e6637342089e5b585a051d6cf5
Author: Joe Stringer <joe@ovn.org>
Date:   Thu Dec 8 18:46:19 2016 -0800

    samples/bpf: Remove perf_event_open() declaration
    
    This declaration was made in samples/bpf/libbpf.c for convenience, but
    there's already one in tools/perf/perf-sys.h. Reuse that one.
    
    Committer notes:
    
    Testing it:
    
      $ make -j4 O=../build/v4.9.0-rc8+ samples/bpf/
      make[1]: Entering directory '/home/build/v4.9.0-rc8+'
        CHK     include/config/kernel.release
        GEN     ./Makefile
        CHK     include/generated/uapi/linux/version.h
        Using /home/acme/git/linux as source for kernel
        CHK     include/generated/utsrelease.h
        CHK     include/generated/timeconst.h
        CHK     include/generated/bounds.h
        CHK     include/generated/asm-offsets.h
        CALL    /home/acme/git/linux/scripts/checksyscalls.sh
        HOSTCC  samples/bpf/test_verifier.o
        HOSTCC  samples/bpf/libbpf.o
        HOSTCC  samples/bpf/../../tools/lib/bpf/bpf.o
        HOSTCC  samples/bpf/test_maps.o
        HOSTCC  samples/bpf/sock_example.o
        HOSTCC  samples/bpf/bpf_load.o
    <SNIP>
        HOSTLD  samples/bpf/trace_event
        HOSTLD  samples/bpf/sampleip
        HOSTLD  samples/bpf/tc_l2_redirect
      make[1]: Leaving directory '/home/build/v4.9.0-rc8+'
      $
    
    Also tested the offwaketime resulting from the rebuild, seems to work as
    before.
    
    Signed-off-by: Joe Stringer <joe@ovn.org>
    Tested-by: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Alexei Starovoitov <ast@fb.com>
    Cc: Daniel Borkmann <daniel@iogearbox.net>
    Cc: Wang Nan <wangnan0@huawei.com>
    Link: http://lkml.kernel.org/r/20161209024620.31660-7-joe@ovn.org
    [ Use -I$(srctree)/tools/lib/ to support out of source code tree builds ]
    Signed-off-by: Arnaldo Carvalho de Melo <acme@redhat.com>

commit 9315bc9a133011fdb084f2626b86db3ebb64661f
Author: Hans Westgaard Ry <hans.westgaard.ry@oracle.com>
Date:   Fri Oct 28 13:14:29 2016 +0200

    IB/core: Issue DREQ when receiving REQ/REP for stale QP
    
    from "InfiBand Architecture Specifications Volume 1":
    
      A QP is said to have a stale connection when only one side has
      connection information. A stale connection may result if the remote CM
      had dropped the connection and sent a DREQ but the DREQ was never
      received by the local CM. Alternatively the remote CM may have lost
      all record of past connections because its node crashed and rebooted,
      while the local CM did not become aware of the remote node's reboot
      and therefore did not clean up stale connections.
    
    and:
    
       A local CM may receive a REQ/REP for a stale connection. It shall
       abort the connection issuing REJ to the REQ/REP. It shall then issue
       DREQ with "DREQ:remote QPN” set to the remote QPN from the REQ/REP.
    
    This patch solves a problem with reuse of QPN. Current codebase, that
    is IPoIB, relies on a REAP-mechanism to do cleanup of the structures
    in CM. A problem with this is the timeconstants governing this
    mechanism; they are up to 768 seconds and the interface may look
    inresponsive in that period.  Issuing a DREQ (and receiving a DREP)
    does the necessary cleanup and the interface comes up.
    
    Signed-off-by: Hans Westgaard Ry <hans.westgaard.ry@oracle.com>
    Reviewed-by: Håkon Bugge <haakon.bugge@oracle.com>
    Reviewed-by: Sagi Grimberg <sagi@grimberg.me>
    Signed-off-by: Doug Ledford <dledford@redhat.com>

commit c6bbfbb729e88188b7c9113d58647766db03f1d4
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Mon May 30 03:01:23 2016 +0100

    ARM: 8576/1: avoid duplicating "Kernel: arch/arm/boot/*Image is ready"
    
    Commit 3939f3345050 ("ARM: 8418/1: add boot image dependencies to
    not generate invalid images") fixed bad image generation for the
    parallel building, but as its side effect, Kbuild now descends into
    arch/arm/boot/ again and again, duplicating the log messages.
    It looks clumsy, so let's display the same message only once.
    
    This commit moves the log rules from arch/arm/boot/Makefile to
    arch/arm/Makefile.  I did not delete them completely because *Image
    are the final targets that users are interested in.
    
    Without this commit, the log of incremental build is like follows:
    
    $ make ARCH=arm UIMAGE_LOADADDR=0x80208000 uImage
      CHK     include/config/kernel.release
      CHK     include/generated/uapi/linux/version.h
      CHK     include/generated/utsrelease.h
      CHK     include/generated/bounds.h
      CHK     include/generated/timeconst.h
      CHK     include/generated/asm-offsets.h
      CALL    scripts/checksyscalls.sh
      CHK     include/generated/compile.h
      Kernel: arch/arm/boot/Image is ready
      Kernel: arch/arm/boot/Image is ready
      Kernel: arch/arm/boot/zImage is ready
      Kernel: arch/arm/boot/Image is ready
      Kernel: arch/arm/boot/zImage is ready
      Image arch/arm/boot/uImage is ready
    
    With this commit, it will look like follows:
    
    $ make ARCH=arm UIMAGE_LOADADDR=0x80208000 uImage
      CHK     include/config/kernel.release
      CHK     include/generated/uapi/linux/version.h
      CHK     include/generated/utsrelease.h
      CHK     include/generated/bounds.h
      CHK     include/generated/timeconst.h
      CHK     include/generated/asm-offsets.h
      CALL    scripts/checksyscalls.sh
      CHK     include/generated/compile.h
      Kernel: arch/arm/boot/Image is ready
      Kernel: arch/arm/boot/zImage is ready
      Kernel: arch/arm/boot/uImage is ready
    
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>

commit 6e8ac724bf45d116195d57fbe3a949f570c35635
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Tue Apr 19 06:05:09 2016 +0100

    ARM: 8562/1: suppress "include/generated/mach-types.h is up to date."
    
    For incremental build, "include/generated/mach-types.h is up to date"
    is every time displayed like follows:
    
    $ make ARCH=arm
      CHK     include/config/kernel.release
      CHK     include/generated/uapi/linux/version.h
      CHK     include/generated/utsrelease.h
    make[1]: `include/generated/mach-types.h' is up to date.
      CHK     include/generated/bounds.h
      CHK     include/generated/timeconst.h
      CHK     include/generated/asm-offsets.h
    
    This commit avoids such a clumsy log and introduces Kbuild standard
    log style:
    
      GEN     include/generated/mach-types.h
    
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>

commit c7ab62bfbe0e27ef452d19d88b083f01e99f13a7
Author: Huang Rui <ray.huang@amd.com>
Date:   Wed Mar 9 13:45:06 2016 +0800

    perf/x86/amd/power: Add AMD accumulated power reporting mechanism
    
    Introduce an AMD accumlated power reporting mechanism for the Family
    15h, Model 60h processor that can be used to calculate the average
    power consumed by a processor during a measurement interval. The
    feature support is indicated by CPUID Fn8000_0007_EDX[12].
    
    This feature will be implemented both in hwmon and perf. The current
    design provides one event to report per package/processor power
    consumption by counting each compute unit power value.
    
    Here the gory details of how the computation is done:
    
    * Tsample: compute unit power accumulator sample period
    * Tref: the PTSC counter period (PTSC: performance timestamp counter)
    * N: the ratio of compute unit power accumulator sample period to the
      PTSC period
    
    * Jmax: max compute unit accumulated power which is indicated by
      MSR_C001007b[MaxCpuSwPwrAcc]
    
    * Jx/Jy: compute unit accumulated power which is indicated by
      MSR_C001007a[CpuSwPwrAcc]
    
    * Tx/Ty: the value of performance timestamp counter which is indicated
      by CU_PTSC MSR_C0010280[PTSC]
    * PwrCPUave: CPU average power
    
    i. Determine the ratio of Tsample to Tref by executing CPUID Fn8000_0007.
            N = value of CPUID Fn8000_0007_ECX[CpuPwrSampleTimeRatio[15:0]].
    
    ii. Read the full range of the cumulative energy value from the new
        MSR MaxCpuSwPwrAcc.
            Jmax = value returned.
    
    iii. At time x, software reads CpuSwPwrAcc and samples the PTSC.
            Jx = value read from CpuSwPwrAcc and Tx = value read from PTSC.
    
    iv. At time y, software reads CpuSwPwrAcc and samples the PTSC.
            Jy = value read from CpuSwPwrAcc and Ty = value read from PTSC.
    
    v. Calculate the average power consumption for a compute unit over
    time period (y-x). Unit of result is uWatt:
    
            if (Jy < Jx) // Rollover has occurred
                    Jdelta = (Jy + Jmax) - Jx
            else
                    Jdelta = Jy - Jx
            PwrCPUave = N * Jdelta * 1000 / (Ty - Tx)
    
    Simple example:
    
      root@hr-zp:/home/ray/tip# ./tools/perf/perf stat -a -e 'power/power-pkg/' make -j4
        CHK     include/config/kernel.release
        CHK     include/generated/uapi/linux/version.h
        CHK     include/generated/utsrelease.h
        CHK     include/generated/timeconst.h
        CHK     include/generated/bounds.h
        CHK     include/generated/asm-offsets.h
        CALL    scripts/checksyscalls.sh
        CHK     include/generated/compile.h
        SKIPPED include/generated/compile.h
        Building modules, stage 2.
      Kernel: arch/x86/boot/bzImage is ready  (#40)
        MODPOST 4225 modules
    
       Performance counter stats for 'system wide':
    
                  183.44 mWatts power/power-pkg/
    
           341.837270111 seconds time elapsed
    
      root@hr-zp:/home/ray/tip# ./tools/perf/perf stat -a -e 'power/power-pkg/' sleep 10
    
       Performance counter stats for 'system wide':
    
                    0.18 mWatts power/power-pkg/
    
            10.012551815 seconds time elapsed
    
    Suggested-by: Peter Zijlstra <peterz@infradead.org>
    Suggested-by: Ingo Molnar <mingo@kernel.org>
    Suggested-by: Borislav Petkov <bp@suse.de>
    Signed-off-by: Huang Rui <ray.huang@amd.com>
    Signed-off-by: Peter Zijlstra (Intel) <peterz@infradead.org>
    Reviewed-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Alexander Shishkin <alexander.shishkin@linux.intel.com>
    Cc: Andy Lutomirski <luto@amacapital.net>
    Cc: Arnaldo Carvalho de Melo <acme@kernel.org>
    Cc: Arnaldo Carvalho de Melo <acme@redhat.com>
    Cc: Borislav Petkov <bp@alien8.de>
    Cc: Brian Gerst <brgerst@gmail.com>
    Cc: David Ahern <dsahern@gmail.com>
    Cc: Denys Vlasenko <dvlasenk@redhat.com>
    Cc: H. Peter Anvin <hpa@zytor.com>
    Cc: Jiri Olsa <jolsa@redhat.com>
    Cc: Kan Liang <kan.liang@intel.com>
    Cc: Linus Torvalds <torvalds@linux-foundation.org>
    Cc: Namhyung Kim <namhyung@kernel.org>
    Cc: Robert Richter <rric@kernel.org>
    Cc: Stephane Eranian <eranian@google.com>
    Cc: Vince Weaver <vincent.weaver@maine.edu>
    Cc: jacob.w.shin@gmail.com
    Link: http://lkml.kernel.org/r/1457502306-2559-1-git-send-email-ray.huang@amd.com
    [ Fixed the modular build. ]
    Signed-off-by: Ingo Molnar <mingo@kernel.org>

commit 2aedcd098a9448b11eab895ee79acf519686555a
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Thu Mar 3 17:36:30 2016 +0900

    kbuild: suppress annoying "... is up to date." message
    
    Under certain conditions, Kbuild shows "... is up to date" where
    if_changed or friends are used.
    
    For example, the incremental build of ARM64 Linux shows this message
    when the kernel image has not been updated.
    
      $ make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu-
        CHK     include/config/kernel.release
        CHK     include/generated/uapi/linux/version.h
        CHK     include/generated/utsrelease.h
        CHK     include/generated/bounds.h
        CHK     include/generated/timeconst.h
        CHK     include/generated/asm-offsets.h
        CALL    scripts/checksyscalls.sh
        CHK     include/generated/compile.h
        CHK     kernel/config_data.h
      make[1]: `arch/arm64/boot/Image.gz' is up to date.
        Building modules, stage 2.
        MODPOST 0 modules
    
    The following is the build rule in arch/arm64/boot/Makefile:
    
      $(obj)/Image.gz: $(obj)/Image FORCE
              $(call if_changed,gzip)
    
    If the Image.gz is newer than the Image and the command line has not
    changed (i.e., $(any-prereq) and $(arg-check) are both empty), the
    build rule $(call if_changed,gzip) is evaluated to be empty, then
    GNU Make reports the target is up to date.  In order to make GNU Make
    quiet, we need to give it something to do, for example, "@:".  This
    should be fixed in the Kbuild core part rather than in each Makefile.
    
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Michal Marek <mmarek@suse.com>

commit 7b2a4306f9e7d64bb408a6df3bb419500578068a
Merge: 316dde2fe95b 03f136a2074b
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Nov 3 14:13:41 2015 -0800

    Merge branch 'timers-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull timer updates from Thomas Gleixner:
     "The timer departement provides:
    
       - More y2038 work in the area of ntp and pps.
    
       - Optimization of posix cpu timers
    
       - New time related selftests
    
       - Some new clocksource drivers
    
       - The usual pile of fixes, cleanups and improvements"
    
    * 'timers-core-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip: (25 commits)
      timeconst: Update path in comment
      timers/x86/hpet: Type adjustments
      clocksource/drivers/armada-370-xp: Implement ARM delay timer
      clocksource/drivers/tango_xtal: Add new timer for Tango SoCs
      clocksource/drivers/imx: Allow timer irq affinity change
      clocksource/drivers/exynos_mct: Use container_of() instead of this_cpu_ptr()
      clocksource/drivers/h8300_*: Remove unneeded memset()s
      clocksource/drivers/sh_cmt: Remove unneeded memset() in sh_cmt_setup()
      clocksource/drivers/em_sti: Remove unneeded memset()s
      clocksource/drivers/mediatek: Use GPT as sched clock source
      clockevents/drivers/mtk: Fix spurious interrupt leading to crash
      posix_cpu_timer: Reduce unnecessary sighand lock contention
      posix_cpu_timer: Convert cputimer->running to bool
      posix_cpu_timer: Check thread timers only when there are active thread timers
      posix_cpu_timer: Optimize fastpath_timer_check()
      timers, kselftest: Add 'adjtick' test to validate adjtimex() tick adjustments
      timers: Use __fls in apply_slack()
      clocksource: Remove return statement from void functions
      net: sfc: avoid using timespec
      ntp/pps: use y2038 safe types in pps_event_time
      ...

commit 03f136a2074b2b8890da4a24df7104558ad0da48
Author: Jason A. Donenfeld <Jason@zx2c4.com>
Date:   Tue Jul 14 19:24:45 2015 +0200

    timeconst: Update path in comment
    
    Signed-off-by: Jason A. Donenfeld <Jason@zx2c4.com>
    Cc: hofrat@osadl.org
    Link: http://lkml.kernel.org/r/1436894685-5868-1-git-send-email-Jason@zx2c4.com
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit 3939f3345050b1ace675675c47d99fd7b606d9e3
Author: Masahiro Yamada <yamada.masahiro@socionext.com>
Date:   Mon Aug 17 04:03:33 2015 +0100

    ARM: 8418/1: add boot image dependencies to not generate invalid images
    
    U-Boot is often used to boot the kernel on ARM boards, but uImage
    is not built by "make all", so we are often inclined to do
    "make all uImage" to generate DTBs, modules and uImage in a single
    command, but we should notice a pitfall behind it.  In fact,
    "make all uImage" could generate an invalid uImage if it is run with
    the parallel option (-j).
    
    You can reproduce this problem with the following procedure:
    
    [1] First, build "all" and "uImage" separately.
        You will get a valid uImage
    
      $ git clean -f -x -d
      $ export CROSS_COMPILE=<your-tools-prefix>
      $ make -s -j8 ARCH=arm multi_v7_defconfig
      $ make -s -j8 ARCH=arm all
      $ make -j8 ARCH=arm UIMAGE_LOADADDR=0x80208000 uImage
        CHK     include/config/kernel.release
        CHK     include/generated/uapi/linux/version.h
        CHK     include/generated/utsrelease.h
      make[1]: `include/generated/mach-types.h' is up to date.
        CHK     include/generated/timeconst.h
        CHK     include/generated/bounds.h
        CHK     include/generated/asm-offsets.h
        CALL    scripts/checksyscalls.sh
        CHK     include/generated/compile.h
        Kernel: arch/arm/boot/Image is ready
        Kernel: arch/arm/boot/zImage is ready
        UIMAGE  arch/arm/boot/uImage
      Image Name:   Linux-4.2.0-rc5-00156-gdd2384a-d
      Created:      Sat Aug  8 23:21:35 2015
      Image Type:   ARM Linux Kernel Image (uncompressed)
      Data Size:    6138648 Bytes = 5994.77 kB = 5.85 MB
      Load Address: 80208000
      Entry Point:  80208000
        Image arch/arm/boot/uImage is ready
      $ ls -l arch/arm/boot/*Image
      -rwxrwxr-x 1 masahiro masahiro 13766656 Aug  8 23:20 arch/arm/boot/Image
      -rw-rw-r-- 1 masahiro masahiro  6138712 Aug  8 23:21 arch/arm/boot/uImage
      -rwxrwxr-x 1 masahiro masahiro  6138648 Aug  8 23:20 arch/arm/boot/zImage
    
    [2] Update some source file(s)
    
      $ touch init/main.c
    
    [3] Then, re-build "all" and "uImage" simultaneously.
        You will get an invalid uImage at random.
    
      $ make -j8 ARCH=arm UIMAGE_LOADADDR=0x80208000 all uImage
        CHK     include/config/kernel.release
        CHK     include/generated/uapi/linux/version.h
        CHK     include/generated/utsrelease.h
      make[1]: `include/generated/mach-types.h' is up to date.
        CHK     include/generated/timeconst.h
        CHK     include/generated/bounds.h
        CHK     include/generated/asm-offsets.h
        CALL    scripts/checksyscalls.sh
        CC      init/main.o
        CHK     include/generated/compile.h
        LD      init/built-in.o
        LINK    vmlinux
        LD      vmlinux.o
        MODPOST vmlinux.o
        GEN     .version
        CHK     include/generated/compile.h
        UPD     include/generated/compile.h
        CC      init/version.o
        LD      init/built-in.o
        KSYM    .tmp_kallsyms1.o
        KSYM    .tmp_kallsyms2.o
        LD      vmlinux
        SORTEX  vmlinux
        SYSMAP  System.map
        OBJCOPY arch/arm/boot/Image
        Building modules, stage 2.
        Kernel: arch/arm/boot/Image is ready
        GZIP    arch/arm/boot/compressed/piggy.gzip
        AS      arch/arm/boot/compressed/piggy.gzip.o
        Kernel: arch/arm/boot/Image is ready
        LD      arch/arm/boot/compressed/vmlinux
        GZIP    arch/arm/boot/compressed/piggy.gzip
        OBJCOPY arch/arm/boot/zImage
        Kernel: arch/arm/boot/zImage is ready
        UIMAGE  arch/arm/boot/uImage
      Image Name:   Linux-4.2.0-rc5-00156-gdd2384a-d
      Created:      Sat Aug  8 23:23:14 2015
      Image Type:   ARM Linux Kernel Image (uncompressed)
      Data Size:    26472 Bytes = 25.85 kB = 0.03 MB
      Load Address: 80208000
      Entry Point:  80208000
        Image arch/arm/boot/uImage is ready
        MODPOST 192 modules
        AS      arch/arm/boot/compressed/piggy.gzip.o
        LD      arch/arm/boot/compressed/vmlinux
        OBJCOPY arch/arm/boot/zImage
        Kernel: arch/arm/boot/zImage is ready
      $ ls -l arch/arm/boot/*Image
      -rwxrwxr-x 1 masahiro masahiro 13766656 Aug  8 23:23 arch/arm/boot/Image
      -rw-rw-r-- 1 masahiro masahiro    26536 Aug  8 23:23 arch/arm/boot/uImage
      -rwxrwxr-x 1 masahiro masahiro  6138648 Aug  8 23:23 arch/arm/boot/zImage
    
    Please notice the uImage is extremely small when this issue is
    encountered.  Besides, "Kernel: arch/arm/boot/zImage is ready" is
    displayed twice, before and after the uImage log.
    
    The root cause of this is the race condition between zImage and
    uImage.  Actually, uImage depends on zImage, but the dependency
    between the two is only described in arch/arm/boot/Makefile.
    Because arch/arm/boot/Makefile is not included from the top-level
    Makefile, it cannot know the dependency between zImage and uImage.
    
    Consequently, when we run make with the parallel option, Kbuild
    updates vmlinux first, and then two different threads descends into
    the arch/arm/boot/Makefile almost at the same time, one for updating
    zImage and the other for uImage.  While one thread is re-generating
    zImage, the other also tries to update zImage before creating uImage
    on top of that.  zImage is overwritten by the slower thread and then
    uImage is created based on the half-written zImage.
    
    This is the reason why "Kernel: arch/arm/boot/zImage is ready" is
    displayed twice, and a broken uImage is created.
    
    The same problem could happen on bootpImage.
    
    This commit adds dependencies among Image, zImage, uImage, and
    bootpImage to arch/arm/Makefile, which is included from the
    top-level Makefile.
    
    Signed-off-by: Masahiro Yamada <yamada.masahiro@socionext.com>
    Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>

commit 6ac15baacb6ecd87c66209627753b96ded3b4515
Merge: d5fb82137b6c 65f26062cd8f
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Jul 1 15:44:18 2015 -0700

    Merge branch 'timers-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull timer fixes from Thomas Gleixner:
     "This contains:
    
       - a build regression fix introduced by the timeconst move
    
       - a hotplug regression fix introduced by the timer wheel diet
    
       - a cpu hotplug bug fix for the exynos clocksource driver"
    
    * 'timers-urgent-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      time: Remove development rules from Kbuild/Makefile
      timer: Fix hotplug regression
      clocksource: exynos_mct: Avoid blocking calls in the cpu hotplug notifier

commit 65f26062cd8f653dac11d3c00d326f7f57b5e098
Author: Thomas Gleixner <tglx@linutronix.de>
Date:   Wed Jul 1 09:57:35 2015 +0200

    time: Remove development rules from Kbuild/Makefile
    
    time.o gets rebuilt unconditionally due to a leftover Makefile rule
    which was placed there for development purposes.
    
    Remove it along with the commented out always rule in the toplevel
    Kbuild file.
    
    Fixes: 0a227985d4a9 'time: Move timeconst.h into include/generated'
    Reported-by; Stephen Boyd <sboyd@codeaurora.org>
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
    Cc: Nicholas Mc Guire <der.herr@hofr.at>

commit 0a227985d4a993a322ff72ecbaeee2611d624216
Author: Nicholas Mc Guire <hofrat@osadl.org>
Date:   Mon May 18 14:19:12 2015 +0200

    time: Move timeconst.h into include/generated
    
    kernel/time/timeconst.h is moved to include/generated/ and generated
    by the top level Kbuild. This allows using timeconst.h in an earlier
    build stage.
    
    Signed-off-by: Nicholas Mc Guire <hofrat@osadl.org>
    Cc: Masahiro Yamada <yamada.m@jp.panasonic.com>
    Cc: Sam Ravnborg <sam@ravnborg.org>
    Cc: Joe Perches <joe@perches.com>
    Cc: John Stultz <john.stultz@linaro.org>
    Cc: Andrew Hunter <ahh@google.com>
    Cc: Paul Turner <pjt@google.com>
    Cc: Michal Marek <mmarek@suse.cz>
    Link: http://lkml.kernel.org/r/1431951554-5563-1-git-send-email-hofrat@osadl.org
    Signed-off-by: Thomas Gleixner <tglx@linutronix.de>

commit fab58c4dc8da9983c88357da7455955e1fa05c38
Author: H. Peter Anvin <hpa@linux.intel.com>
Date:   Thu Feb 7 17:14:08 2013 -0800

    timeconst.pl: Eliminate Perl warning
    
    commit 63a3f603413ffe82ad775f2d62a5afff87fd94a0 upstream.
    
    defined(@array) is deprecated in Perl and gives off a warning.
    Restructure the code to remove that warning.
    
    [ hpa: it would be interesting to revert to the timeconst.bc script.
      It appears that the failures reported by akpm during testing of
      that script was due to a known broken version of make, not a problem
      with bc.  The Makefile rules could probably be restructured to avoid
      the make bug, or it is probably old enough that it doesn't matter. ]
    
    Reported-by: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Ben Hutchings <ben@decadent.org.uk>

commit 526a26556b9069238ea7eecb9095cc672daef0e5
Author: H. Peter Anvin <hpa@linux.intel.com>
Date:   Thu Feb 7 17:14:08 2013 -0800

    timeconst.pl: Eliminate Perl warning
    
    commit 63a3f603413ffe82ad775f2d62a5afff87fd94a0 upstream.
    
    defined(@array) is deprecated in Perl and gives off a warning.
    Restructure the code to remove that warning.
    
    [ hpa: it would be interesting to revert to the timeconst.bc script.
      It appears that the failures reported by akpm during testing of
      that script was due to a known broken version of make, not a problem
      with bc.  The Makefile rules could probably be restructured to avoid
      the make bug, or it is probably old enough that it doesn't matter. ]
    
    Reported-by: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit d8c3d7e8f9e47cc1a828ca7433376c60c4b9af23
Author: H. Peter Anvin <hpa@linux.intel.com>
Date:   Thu Feb 7 17:14:08 2013 -0800

    timeconst.pl: Eliminate Perl warning
    
    commit 63a3f603413ffe82ad775f2d62a5afff87fd94a0 upstream.
    
    defined(@array) is deprecated in Perl and gives off a warning.
    Restructure the code to remove that warning.
    
    [ hpa: it would be interesting to revert to the timeconst.bc script.
      It appears that the failures reported by akpm during testing of
      that script was due to a known broken version of make, not a problem
      with bc.  The Makefile rules could probably be restructured to avoid
      the make bug, or it is probably old enough that it doesn't matter. ]
    
    Reported-by: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 57eb4c95dff59038eb6223dc7696c93b045c4c3f
Author: H. Peter Anvin <hpa@linux.intel.com>
Date:   Thu Feb 7 17:14:08 2013 -0800

    timeconst.pl: Eliminate Perl warning
    
    commit 63a3f603413ffe82ad775f2d62a5afff87fd94a0 upstream.
    
    defined(@array) is deprecated in Perl and gives off a warning.
    Restructure the code to remove that warning.
    
    [ hpa: it would be interesting to revert to the timeconst.bc script.
      It appears that the failures reported by akpm during testing of
      that script was due to a known broken version of make, not a problem
      with bc.  The Makefile rules could probably be restructured to avoid
      the make bug, or it is probably old enough that it doesn't matter. ]
    
    Reported-by: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 0ca7ffb356063c5ece847687da457dfe748612a2
Merge: 30acd906b024 423a8155facf
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Wed Feb 27 12:25:47 2013 -0800

    Merge branch 'kbuild' of git://git.kernel.org/pub/scm/linux/kernel/git/mmarek/kbuild
    
    Pull kbuild changes from Michal Marek:
    
     - Alias generation in modpost is cross-compile safe.
    
     - kernel/timeconst.h is now generated using a bc script instead of
       perl.
    
     - scripts/link-vmlinux.sh now works with an alternative
       $KCONFIG_CONFIG.
    
     - destination-y for exported headers is supported in Kbuild files
       again.
    
     - depmod is called with -P $CONFIG_SYMBOL_PREFIX on architectures that
       need it.
    
     - CONFIG_DEBUG_INFO_REDUCED disables var-tracking
    
     - scripts/setlocalversion works with too much translated locales ;)
    
    * 'kbuild' of git://git.kernel.org/pub/scm/linux/kernel/git/mmarek/kbuild:
      kbuild: Fix reading of .config in link-vmlinux.sh
      kbuild: Unset language specific variables in setlocalversion script
      Kbuild: Disable var tracking with CONFIG_DEBUG_INFO_REDUCED
      depmod: pass -P $CONFIG_SYMBOL_PREFIX
      kbuild: Fix destination-y for installed headers
      scripts/link-vmlinux.sh: source variables from KCONFIG_CONFIG
      kernel: Replace timeconst.pl with a bc script
      mod/file2alias: make modalias generation safe for cross compiling

commit 83b53b8cc693fe3d1216f21796da009fc8809e9f
Author: H. Peter Anvin <hpa@linux.intel.com>
Date:   Thu Feb 7 17:14:08 2013 -0800

    timeconst.pl: Eliminate Perl warning
    
    commit 63a3f603413ffe82ad775f2d62a5afff87fd94a0 upstream.
    
    defined(@array) is deprecated in Perl and gives off a warning.
    Restructure the code to remove that warning.
    
    [ hpa: it would be interesting to revert to the timeconst.bc script.
      It appears that the failures reported by akpm during testing of
      that script was due to a known broken version of make, not a problem
      with bc.  The Makefile rules could probably be restructured to avoid
      the make bug, or it is probably old enough that it doesn't matter. ]
    
    Reported-by: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>

commit 121027a7a64a12e9e5c0289f12473ff11678a812
Merge: 5abcd76f5d89 63a3f603413f
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Tue Feb 19 19:12:03 2013 -0800

    Merge branch 'x86-build-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
    
    Pull two x86 kernel build changes from Ingo Molnar:
     "The first change modifies how 'make oldconfig' works on cross-bitness
      situations on x86.  It was felt the new behavior of preserving the
      bitness of the .config is more logical.  This is a leftover of the
      merge.
    
      The second change eliminates a Perl warning.  (There's another, more
      complete fix resulting of this warning fix, which second fix in flight
      to you via the kbuild tree, which will remove the timeconst.pl script
      altogether.)"
    
    * 'x86-build-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip:
      timeconst.pl: Eliminate Perl warning
      x86: Default to ARCH=x86 to avoid overriding CONFIG_64BIT

commit 70730bca1331fc50c3caacaea00439de1325bd6e
Author: H. Peter Anvin <hpa@zytor.com>
Date:   Thu Feb 14 15:13:55 2013 -0800

    kernel: Replace timeconst.pl with a bc script
    
    bc is the standard tool for multi-precision arithmetic.  We switched
    to Perl because akpm reported a hard-to-reproduce build hang, which
    was very odd because affected and unaffected machines were all running
    the same version of GNU bc.
    
    Unfortunately switching to Perl required a really ugly "canning"
    mechanism to support Perl < 5.8 installations lacking the Math::BigInt
    module.
    
    It was recently pointed out to me that some very old versions of GNU
    make had problems with pipes in subshells, which was indeed the
    construct used in the Makefile rules in that version of the patch;
    Perl didn't need it so switching to Perl fixed the problem for
    unrelated reasons.  With the problem (hopefully) root-caused, we can
    switch back to bc and do the arbitrary-precision arithmetic naturally.
    
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Acked-by: Sam Ravnborg <sam@ravnborg.org>
    Signed-off-by: Michal Marek <mmarek@suse.cz>

commit 63a3f603413ffe82ad775f2d62a5afff87fd94a0
Author: H. Peter Anvin <hpa@linux.intel.com>
Date:   Thu Feb 7 17:14:08 2013 -0800

    timeconst.pl: Eliminate Perl warning
    
    defined(@array) is deprecated in Perl and gives off a warning.
    Restructure the code to remove that warning.
    
    [ hpa: it would be interesting to revert to the timeconst.bc script.
      It appears that the failures reported by akpm during testing of
      that script was due to a known broken version of make, not a problem
      with bc.  The Makefile rules could probably be restructured to avoid
      the make bug, or it is probably old enough that it doesn't matter. ]
    
    Reported-by: Andi Kleen <ak@linux.intel.com>
    Signed-off-by: H. Peter Anvin <hpa@linux.intel.com>
    Cc: Andrew Morton <akpm@linux-foundation.org>
    Cc: <stable@vger.kernel.org>

commit e098675635479e9267cf2b12fb969c463cf506ab
Merge: 2905474d3842 b9095fd8a7f4
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Sat May 3 10:54:23 2008 -0700

    Merge git://git.kernel.org/pub/scm/linux/kernel/git/hpa/linux-2.6-inttypes
    
    * git://git.kernel.org/pub/scm/linux/kernel/git/hpa/linux-2.6-inttypes: (24 commits)
      Make constants in kernel/timeconst.h fixed 64 bits
      types: add C99-style constructors to <asm-generic/int-*.h>
      xtensa: types: use <asm-generic/int-*.h> for the xtensa architecture
      x86: types: use <asm-generic/int-*.h> for the x86 architecture
      v850: types: use <asm-generic/int-*.h> for the v850 architecture
      sparc64: types: use <asm-generic/int-*.h> for the sparc64 architecture
      sparc: types: use <asm-generic/int-*.h> for the sparc architecture
      sh: types: use <asm-generic/int-*.h> for the sh architecture
      s390: types: use <asm-generic/int-*.h> for the s390 architecture
      powerpc: types: use <asm-generic/int-*.h> for the powerpc architecture
      parisc: types: use <asm-generic/int-*.h> for the parisc architecture
      mn10300: types: use <asm-generic/int-*.h> for the mn10300 architecture
      mips: types: use <asm-generic/int-*.h> for the mips architecture
      m68k: types: use <asm-generic/int-*.h> for the m68k architecture
      m32r: types: use <asm-generic/int-*.h> for the m32r architecture
      ia64: types: use <asm-generic/int-*.h> for the ia64 architecture
      h8300: types: use <asm-generic/int-*.h> for the h8300 architecture
      frv: types: use <asm-generic/int-*.h> for the frv architecture
      cris: types: use <asm-generic/int-*.h> for the cris architecture
      blackfin: types: use <asm-generic/int-*.h> for the blackfin architecture
      ...

commit b9095fd8a7f41dc7ac0b0b7864f74766a3056f96
Author: H. Peter Anvin <hpa@zytor.com>
Date:   Fri May 2 16:18:42 2008 -0700

    Make constants in kernel/timeconst.h fixed 64 bits
    
    Force constants in kernel/timeconst.h (except shift counts) to be 64 bits,
    using U64_C() constructor macros, and eliminate constants that cannot
    be represented at all in 64 bits.  This avoids warnings with some gcc
    versions.
    
    Drop generating 64-bit constants, since we have no real hope of
    getting a full set (operation on 64-bit values requires a 128-bit
    intermediate result, which gcc only supports on 64-bit platforms, and
    only with libgcc support on some.)  Note that the use of these
    constants does not depend on if we are on a 32- or 64-bit architecture.
    
    This resolves Bugzilla 10153.
    
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>

commit f05c463be51898e745c4aa8245b05e25d73fa975
Merge: 8da56309f04d 5a1aa8a1aff6
Author: Linus Torvalds <torvalds@linux-foundation.org>
Date:   Mon Apr 28 17:29:43 2008 -0700

    Merge git://git.kernel.org/pub/scm/linux/kernel/git/sam/kbuild
    
    * git://git.kernel.org/pub/scm/linux/kernel/git/sam/kbuild:
      kconfig: add named choice group
      kconfig: fix choice dependency check
      kconifg: 'select' considered less evil
      dontdiff: ignore timeconst.h
      dontdiff: add modules.order
      kbuild: fix unportability in gen_initramfs_list.sh
      kbuild: fix help output to show correct arch
      kbuild: show defconfig subdirs in make help
      kconfig: reversed borderlines in inputbox

commit beda8ae7160bd7b521d9db274a27d8964dfba8ab
Author: Ben Dooks <ben-linux@fluff.org>
Date:   Fri Apr 18 16:28:35 2008 +0100

    dontdiff: ignore timeconst.h
    
    Ignore the autobuilt kernel/timeconst.h when
    using diff on an built kernel tree.
    
    Signed-off-by: Ben Dooks <ben-linux@fluff.org>
    Signed-off-by: Sam Ravnborg <sam@ravnborg.org>

commit c98aa86df3169e5d6275305376043134caa69831
Author: H. Peter Anvin <hpa@zytor.com>
Date:   Tue Feb 12 13:52:37 2008 -0800

    timeconst.pl: correct reversal of USEC_TO_HZ and HZ_TO_USEC
    
    The USEC_TO_HZ and HZ_TO_USEC constant sets were mislabelled, with
    seriously incorrect results.  This among other things manifested
    itself as cpufreq not working when a tickless kernel was configured.
    
    Signed-off-by: H. Peter Anvin <hpa@zytor.com>
    Tested-by: Carlos R. Mafra <crmafra@ift.unesp.br>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

commit 10d0aa3c0a03dd04227ab3a4958563d84276d02e
Author: Tony Luck <tony.luck@intel.com>
Date:   Mon Feb 11 13:23:46 2008 -0800

    [IA64] Fix build for sim_defconfig
    
    Commit bdc807871d58285737d50dc6163d0feb72cb0dc2 broke the build
    for this config because the sim_defconfig selects CONFIG_HZ=250
    but include/asm-ia64/param.h has an ifdef for the simulator to
    force HZ to 32.  So we ended up with a kernel/timeconst.h set
    for HZ=250 ... which then failed the check for the right HZ
    value and died with:
    
    Drop the #ifdef magic from param.h and make force CONFIG_HZ=32
    directly for the simulator.
    
    Signed-off-by: Tony Luck <tony.luck@intel.com>
