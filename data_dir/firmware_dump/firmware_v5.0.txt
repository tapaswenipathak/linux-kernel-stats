    net: dsa: lantiq: Add GPHY firmware files
      10) bnxt_en firmware timeout fix from Michael Chan.
      bnxt_en: Wait longer for the firmware message response to complete.
      bnxt_en: Fix typo in firmware message timeout logic.
    Merge branch 'bnxt_en-firmware-message-delay-fixes'
    bnxt_en: firmware message delay fixes.
    We were seeing some intermittent firmware message timeouts in our lab and
    bnxt_en: Wait longer for the firmware message response to complete.
    The code waits up to 20 usec for the firmware response to complete
    bnxt_en: Fix typo in firmware message timeout logic.
    The logic that polls for the firmware message response uses a shorter
    firmware messages than intended.  Fix it by using the proper counter.
      drm/amdgpu/psp11: TA firmware is optional (v3)
    Calls into UV firmware must be protected against concurrency, expose the
    pending threads waiting for firmware commands completion are terminated.
    drm/amdgpu/psp11: TA firmware is optional (v3)
     * IBSS join was missed during firmware restart, should
      firmware: arm_scmi: provide the mandatory device release callback
      19) Fix EQ firmware assert in qed driver, from Manish Chopra.
    qed: Fix EQ full firmware assert.
    relating the match level of the encapsulated packet to the firmware
    * fix a firmware regression from v4.18-rc1
    When calling firmware to allocate a CP ring or NQ, an interrupt associated
    setup after the firmware call returns.  When servicing the interrupt, the
    After finding a "firmware" dt node stratix10 tries to match it's
    which already takes care of decreasing the refcount on the "firmware"
    firmware: arm_scmi: provide the mandatory device release callback
    Fixes: 933c504424a2 ("firmware: arm_scmi: add scmi protocol bus to enumerate protocol devices")
    where the firmware running on the "secure processor" bit-bangs the
    Leaving the unknown bits as the firmware set them up seems to be a wiser
    where multiple queries can trigger request_firmware_no_wait and can have
    firmware versions safe use of the reserved bits.
    Fixes: 0ff1fb654bec ("{NET, IB}/mlx4: Add device managed flow steering firmware API")
    SP core back up. Just let the firmware keep it enabled and don't expose it
    the firmware keep it enabled.
    for firmware to go out of PCI reset.
    Spectrum-2 firmware boot process. Hence increase the SW timeout waiting for
    the firmware to come out of boot. This does not increase system boot time
    in cases where the firmware PHY calibration process is done quickly.
    firmware is configured as a module.  However, the '|| COMPILE_TEST' still
    raspberrypi-ts.c:(.text+0x3a8): undefined reference to `rpi_firmware_get'
    ld: raspberrypi-ts.c:(.text+0x3a8): relocation truncated to fit: R_AARCH64_CALL26 against undefined symbol `rpi_firmware_get'
    ld: raspberrypi-ts.c:(.text+0x4c8): undefined reference to `rpi_firmware_property'
    ld: raspberrypi-ts.c:(.text+0x4c8): relocation truncated to fit: R_AARCH64_CALL26 against undefined symbol `rpi_firmware_property'
    resources.  Without the proper flag, the firmware will change
    1) There are 2 ways how the firmware can disable monitoring of the TS-pin
    A3700 comphy initialization is done in the firmware (TF-A). Looking at
    initialized there in the firmware because they are AHCI related, while
    the firmware at this location does only PHY configuration. The
    * Fixing the firmware.
    The memory area [0x4000000-0x4200000[ is occupied by the PSCI firmware. Any
    In RISC-V, the M-mode runtime firmware provide SBI calls for
    Unfortunately some firmware revisions for Intel 760p/Pro 7600p devices did
      drm/amdgpu: add Vega20 PSP ASD firmware loading
     - Skip VF scanning on powerpc, which does this in firmware (Sebastian
      firmware: arm_sdei: Fix DT platform device creation
      firmware: arm_sdei: fix wrong of_node_put() in init function
      firmware: qcom: scm: fix compilation error when disabled
    drivers/firmware/memmap.c: modify memblock_alloc to memblock_alloc_nopanic
    firmware: arm_sdei: Fix DT platform device creation
    was merged. commit 3aa0582fdb82 ("of: platform: populate /firmware/ node
    firmware: arm_sdei: fix wrong of_node_put() in init function
    After finding a "firmware" dt node arm_sdei tries to match it's
    which already takes care of decreasing the refcount on the "firmware"
       - new driver for Raspberry Pi's touchscreen (firmware interface)
      - Skip VF scanning on powerpc, which does this in firmware (Sebastian
      ".platform" for storing the preboot/firmware keys needed for verifying
      preboot/firmware keys, which were previously posted for a different
         stability of a handful of firmware/platform interfaces
       - refactor firmware/Makefile
      firmware: refactor firmware/Makefile
      firmware: remove unnecessary patterns from .gitignore
      selftests: firmware: add CONFIG_FW_LOADER_USER_HELPER_FALLBACK to config
      selftests: firmware: remove use of non-standard diff -Z option
    len by sending cmd to firmware.
      gpio: raspberrypi-exp: decrease refcount on firmware dt node
    Fixes: a4891f105837 ("Input: atmel_mxt_ts - zero terminate config firmware file")
      firmware/efi: Add NULL pointer checks in efivars API functions
    Fixes: 59abd83672f7 (drivers: base: Introducing software nodes to the firmware node framework)
    Fixes: 59abd83672f7 (drivers: base: Introducing software nodes to the firmware node framework)
      firmware nodes except that they can be created by drivers themselves
       - Introduce "software nodes", analogous to the DT and ACPI firmware
         complement fwnodes representing real firmware nodes when they are
         the primary fwnode when the firmware lacks hardware description for
      drivers: base: Introducing software nodes to the firmware node framework
      dt-bindings: cpufreq: Introduce QCOM cpufreq firmware bindings
      media: ipu3-imgu: Fix firmware binary location
      media: staging/intel-ipu3: css: Add support for firmware management
       - Updated SMU firmware for GFX8 chips
     - Mellanox driver got fixed due to updates in their firmware.
    firmware: refactor firmware/Makefile
      64-bit platform crippled by a 32-bit firmware. To support EFI_MIXED_MODE,
    are not enabled/validated by the firmware.
    drm/amdgpu: add Vega20 PSP ASD firmware loading
    Add PSP ASD firmware loading on Vega20. Not sure why
    with a sharing mode indication to let firmware allows its usage.
      bottleneck, but for the moment only with experimental firmware on dual
    firmware: remove unnecessary patterns from .gitignore
    Commit df85b2d767aa ("firmware: Restore support for built-in firmware")
    ihex2fw was generated in firmware/ instead of scripts/ at that time
      dt-bindings: cpufreq: Introduce QCOM cpufreq firmware bindings
    RPi's firmware.
      for the moment only with experimental firmware on dual port HCAs we can
    earlier causes low level errors which we fence in the firmware so
    up to 6 registers. Due to the host firmware bug (just recently fixed),
    The skiboot firmware has a hot reset handler which fences the NVIDIA V100
    This is because when populating Driver Map using firmware raid map, all
    * use the same firmware for mt76x2e and mt76x2u
    memory ranges where kernel has asked firmware to move the content of old
    powerpc/fadump: Reservationless firmware assisted dump
    firmware default.
    supported in GA firmware.
    The firmware code was adapted as well to match the above.
    Use uid as part of alloc/dealloc transport domain to let firmware manages
    The ixgbe firmware may be polling PHYs in a way that is not protected by
    PHYs in all configurations since the firmware of the ixgbe device may
    This change tested on firmware ver 10.2.4-1.0-00042 in QCA988X chipset.
    Tested: QCA9984 with firmware ver 10.4-3.9.0.1-00005
            # another kernel path, RX from firmware
    Tested: QCA9984 with firmware ver 10.4-3.9.0.1-00005
    Tested on QCA9984 with firmware-5.bin_10.4-3.5.3-00053
    Tested on QCA998X with firmware-5.bin_10.2.4-1.0-00036
    Three main changes in this series, besides the usual firmware spec
    1. Add support for a new firmware communication channel direct to the
    firmware processor that handles flow offloads.  This speeds up
    Older firmware only supports 16-bit flow handle, because of which the
    Newer firmware supports 64-bit flow handle enabling the host to scale
    bnxt_en: Add support for 2nd firmware message channel.
    Earlier, some of the firmware commands (ex: CFA_FLOW_*) which are processed
    CHIMP in turn used to send them to KONG. Newer firmware supports a new
    messages sent to the firmware for CLS_FLOWER offload.
    return the 2nd firmware comm. channel's hwrm response address &
    bnxt_en: Use macros for firmware message doorbell offsets.
    In preparation for adding a 2nd communication channel to firmware.
    bnxt_en: Update firmware interface spec. to 1.10.0.33.
    The major changes are in the flow offload firmware APIs.
    This boot loader also handle firmware update. Mediatek Preloader will be
      firmware: qcom: scm: fix compilation error when disabled
    Secondary CPU is initialized and started by a U-BOOTROM firmware.
    by system controller firmware) and alarm functions needs to be done
      vxge: ensure data0 is initialized in when fetching firmware version information
    ath6kl: Only use match sets when firmware supports it
    firmware. In the process, it assumed match set support is always available
    that the firmware supports matching SSIDs in scheduled scans before setting
    id from firmware.
    - Driver sends OFA event acknowledgment to firmware.
    - Driver will wait until the new firmware is up and running.
     - if the firmware is not ready after 30 seconds,
    firmware to communicate firmware features supported and enabled by the
    firmware update required a chip reset but the admin did not want to reboot
    the machine in order to instantiate the firmware update.
    (0xFFFFFFFF-FFFFFFFF) results in a firmware fault.
    When in a sleepable (non-atomic) context, wait for firmware completion
    When in a sleepable (non-atomic) context, wait for firmware completion
    actually support the platform (firmware authentication, missing
    * fix a firmware crash which was a regression introduced in v4.20-rc4
    * fix a firmware crash with wcn3990 firmware
    HL2.0 firmware does not support setting quiet mode.  If the host driver sends
    the quiet mode setting command to the HL2.0 firmware, it crashes with the below
    The quiet mode command support is exposed by the firmware via thermal throttle
    is set.  10.x firmware versions support this feature by default, but
    Bluetooth: hci_bcm: Handle specific unknown packets after firmware loading
    unknown packets after the firmware is loaded.  This will cause
    ("Bluetooth: hci_bcm: Handle empty packet after firmware loading")
    vxge: ensure data0 is initialized in when fetching firmware version information
    causing it to lose its firmware and all state.
    firmware worked by accident.
    command response. However the Bluetooth firmware provided by vendors uses
    dt-bindings: cpufreq: Introduce QCOM cpufreq firmware bindings
    Add QCOM cpufreq firmware device bindings for Qualcomm Technology Inc's
    In addition, diags build uses include_legacy/atomfirmware.h for the
    net: hns3: getting tx and dv buffer size through firmware
    firmware, because different version of hardware requires different
    Merge branch 'mlxsw-VXLAN-and-firmware-flashing-fixes'
    mlxsw: VXLAN and firmware flashing fixes
    Patch #1 fixes firmware flashing failures by increasing the time period
    after which the driver fails the transaction with the firmware. The
    mlxsw: core: Increase timeout during firmware flash process
    During the firmware flash process, some of the EMADs get timed out, which
    The reason for these timeouts during firmware flashing is cache misses in
    the CPU running the firmware. In case the CPU needs to fetch instructions
    from the flash when a firmware is flashed, it needs to wait for the
    Fix by increasing EMADs' timeout while flashing firmware.
    mlxsw: spectrum: Update the supported firmware to version 13.1910.622
    This new firmware contains:
     * Secure firmware flash bug fix
    Currently firmware specific errors are returned directly in flash_device
    block size returned by firmware is big enough to cover the CoS counters,
    then we will display the new priority counters.  We call firmware to get
    media: ipu3-imgu: Fix firmware binary location
    The firmware binary is located under "intel" directory in the
    linux-firmware repository. Reflect this in the driver.
    ".platform" for storing the preboot/firmware keys needed for verifying
    preboot/firmware keys, which were previously posted for a different
    gpio: raspberrypi-exp: decrease refcount on firmware dt node
    We're getting a reference RPi's firmware node in order to be able to
    iwlwifi: mvm: don't send GEO_TX_POWER_LIMIT to old firmwares
    Old firmware versions don't support this command. Sending it
    to any firmware before -41.ucode will crash the firmware.
      firmware: imx: add pm svc headfile
      firmware: imx: remove resource id enums
     - Introduce a 'protected-clocks' binding for firmware protected clks
    Add imx8qxp clk driver which is based on SCU firmware clock service.
    Page queue is supported on Vega20 with SDMA firmware
       - fixed firmware image updates
      drm/amdgpu: update SMC firmware image for polaris10 variants
      drm/amdgpu: update smu firmware images for VI variants (v2)
    coming from the firmware. In one of the cleanup patches,
    The firmware changed the PHY data API, so follow suit.
     1) the firmware with the old API was never released;
    the IPU3 firmware binary as part of its initialization.
    media: staging/intel-ipu3: css: Add support for firmware management
    This add all the structs of IPU3 firmware ABI.
    Add macros and enums used for IPU3 firmware interface.
    legacy things can be reused), it's using a firmware interface now based
    Management firmware (mfw). Fix this gap with adding a reserved field.
    uncompressed Linux kernel binary without the need to run firmware.
    and there has been no update to this firmware since last few years,
      * Retrieve MRPC DMA mode version from adapter firmware
    MRPC DMA mode is a new feature of firmware, and the driver will fall back
    to MRPC normal mode if there is no support in the legacy firmware.
    the firmware, this parameter is just for debugging and testing.
    drivers/net/wireless/broadcom/brcm80211/brcmfmac/firmware.c: In function 'brcmf_fw_request_nvram_done':
    drivers/net/wireless/broadcom/brcm80211/brcmfmac/firmware.c:560:11: error: 'data_len' may be used uninitialized in this function [-Werror=maybe-uninitialized]
    brcmfmac: enable frameburst mode in default firmware setting
    The frameburst feature can enable per-packet framebursting in firmware
    TX throughput, we enable frameburst mode in default firmware setting.
    The credit numbers are static and tunable per chip in firmware side.
    This function converts some firmware-specific parameters into cfg80211
    * use the same firmware for mt76x2e and mt76x2u
    a message to suggest firmware upgrade.
    keys which are stored as platform or firmware keys in the 'db' variable.
    keyring is only the platform/firmware keys, it cannot be updated from
    firmware dump and loopback testing.
    We killed the bad firmware and this mod is no longer necessary.
    hardware with older firmware. The issue is this message means nothing to
    and storm firmware will never be updated with the SVID value.
    firmware versions had added safeguards against re-configuring an already
    After submitting a Firmware Download MRPC command, Switchtec firmware will
    firmware limitation.  Delayed MemRd completions are a problem for systems
    this should be done in firmware.
      firmware: imx: add SCU power domain driver
      firmware: imx: add pm svc headfile
      firmware: imx: remove resource id enums
    Merge tag 'tegra-for-4.21-firmware' of git://git.kernel.org/pub/scm/linux/kernel/git/tegra/linux into next/drivers
    firmware: tegra: Changes for v4.21-rc1
    the BPMP firmware version tag query if supported.
    * tag 'tegra-for-4.21-firmware' of git://git.kernel.org/pub/scm/linux/kernel/git/tegra/linux:
      firmware: tegra: Use in-band messages for firmware version query
      firmware: tegra: Print version tag at full
      firmware: tegra: Switch to global mrq_is_supported()
      firmware: tegra: Add helper to check for supported MRQs
    Since this is not needed any more on the latest SMC firmware.
    In Spectrum the firmware provided an abstraction for multicast routing
    - We re-queue the update stat work, only when working over firmware
    The device firmware can monitor up to HCA_CAP.max_num_of_monitor_counters.
    The firmware extended destination capabilities enable the driver to set
    firmware's extended destination capabilities.
    firmware for example), in different formats, hence making it hard to
    buggy firmware).  This patch attempts one more time to detect the
      firmware upgrade, system platform reset;
    drm/amdgpu: update SMC firmware image for polaris10 variants
    Some new variants require different firmwares.
    arm64: smp: Handle errors reported by the firmware
    The __cpu_up() routine ignores the errors reported by the firmware
    Fixes: 98f04cf0f1fc ("bnxt_en: Check context memory requirements from firmware.")
    important in the case of NVDIMMs since the firmware may change the
    information. No firmware / hypervisor that emitted the ibm,unit-size
    The vendor firmware was analyzed to get the right idea about
         cause the firmware on those boards to take down the system if we
    consumed within the firmware.
    drm/amdgpu/powerplay: check MC firmware for FFC support
    Check if the MC firmware supports FFC and tell the SMC so
    drm/amdgpu: update smu firmware images for VI variants (v2)
    Some new variants require updated firmware.
    V2: add MODULE_FIRMWARE for new firmwares
       - fixed firmware support for new GPUs
      drm/amdgpu/gmc8: always load MC firmware in the driver
      drm/amdgpu/gmc8: update MC firmware for polaris
      drm/amdgpu: update mc firmware image for polaris12 variants
    firmware: stratix10-svc: fix wrong of_node_put() in init function
    After finding a "firmware" dt node stratix10 tries to match it's
    which already takes care of decreasing the refcount on the "firmware"
    Fixes: 7ca5ce896524 ("firmware: add Intel Stratix10 service layer driver")
    - Use proper MC firmware for newer polaris variants
    firmware: qcom: scm: fix compilation error when disabled
    A "short" ARS (address range scrub) instructs the platform firmware to
    firmware to arrange every data address on the DIMM to be read / checked
    firmware arranges for "System RAM" and "Persistent Memory" to collide
    issue [1], platform firmware can inflict the same collision between
    case because platform firmware may merge multiple regions into a single
    sent to firmware from cfg80211 context.
    case of failure to send the wid command to firmware, an error status is
    directly fill the buffer in firmware format.
    caller context. Use structure to fill in the firmware specific format.
    is a failure to post the wid command to the firmware.
    manner. Now set the wid command to firmware directly from caller
    in firmware expected format.
    firmware expected format.
    related cfg operations callback. Now issuing the wid command to firmware
    staging: wilc1000: use mutex lock to synchronized sending 'wid' cmd to firmware
    Use mutex lock to protect the issuing of wid cmd to the firmware.
    for firmware.
    done in the firmware based on the UID credentials that the driver reports upon
      IB/mlx5: Enforce DEVX privilege by firmware
    UID=0 so that firmware will allow the XRCD usage.
    IB/mlx5: Enforce DEVX privilege by firmware
    Enforce DEVX privilege by firmware, this enables future device
    The secure firmware stores different configuration
    Patch loads profile binary from secure firmware over
    * add support for WCN3990 firmware crash recovery
    * add firmware memory dump support for QCA4019
    * add firmware error recovery while in AP mode
    * new firmware debugging infrastructure
    Currently, drivers do not have the ability to control the firmware
    drivers from running the device with a different firmware version for
    testing and/or debugging purposes. For example, testing a firmware bug
    drivers to run with a different firmware version than required by the
      # Flash new firmware using ethtool
      # Query firmware version to show changes took affect
        firmware-version: 13.1703.4
    mlxsw: spectrum: Load firmware version based on devlink parameter
    Load firmware version based on 'fw_load_policy' devlink parameter. The
          Default, load firmware version preferred by the driver
          Load firmware currently stored in flash
    The second option, 'flash', allow the device to run with different firmware
    For example, testing a firmware bug fix.
    mlxsw: core: Reset firmware after flash during driver initialization
    After flashing new firmware during the driver initialization flow (reload
    or not), the driver should do a firmware reset when it gets -EAGAIN in
    Many drivers load the device's firmware image during the initialization
    firmware image.
    example, testing a firmware bug fix.
    - James fixes the firmware interface after a commit changed the use of
    - Stefan adds a timeout check for Raspberry Pi firmware transactions and
      updates a bunch of SoC/firmware files to use SPDX tags
      firmware: raspberrypi: Switch to SPDX identifier
      firmware: raspberrypi: Fix firmware calls with large buffers
      firmware: raspberrypi: Define timeout for transactions
      arm64: dts: qcom: qcs404: Add scm firmware node
      firmware and the ARM CPU's view of what an ARM CPU cache line size is,
    count the real amount provided by firmware.
    this by passing the number of bytes reported used by the firmware.
    drm/amdgpu/gmc8: always load MC firmware in the driver
    load the MC firmware from the driver even if the vbios loaded
    drm/amdgpu/gmc8: update MC firmware for polaris
    Some variants require different MC firmware images.
    drm/amdgpu: update mc firmware image for polaris12 variants
    Some new variants require updated firmware.
    firmware on these devices as issues identifying the formally correct
    due to missing compatible firmware.
    Fixes: d850156a226a ("arm64: dts: qcom: msm8998: Add firmware node")
    routine since now mt76x2 and mt76x2u driver run the same firmware
    Unify firmware version used on mt76x0e and mt76x0u drivers.
    Add missing firmware declaration for mt76x0e driver
    looks like it can hangs the firmware. Vendor driver do not
    mt76x2: align mt76x2 and mt76x2u firmware
    Unify firmware version used on mt76x2e and mt76x2u drivers
    by buggy firmware to these regions would result in page fault which will
    Ideally, after kernel assumes control of the platform, firmware
    firmware/efi: Add NULL pointer checks in efivars API functions
      Workqueue: events request_firmware_work_func
    enabled. This flag tells the firmware layer to do some pre- and maybe
    enabled but the firmware is unable to deal with this kind of message
    and thus returns with reply code 0x41. For example older firmware may
    - Khadas VIM basic (AP6212) using firmware BCM43438A1.hcd
    - Khadas VIM pro (AP6255) using firmware BCM4345C0.hcd
    BCM43438A1.hcd firmware must be renamed to BCM43430A1.hcd.
    [   31.044351]  brcmf_firmware_path+0x11f/0xfffffffffffd3b40 [brcmfmac]
    alternate firmware path, we make the mistake of not handling the case
    where the firmware path is empty correctly. Since strlen(mp_path) can
    return 0, we'll end up accessing mp_path[-1] when the firmware_path
    The newest firmwares provide STA info using v7 of the struct. As v7
    provide the proper struct buffer. Without this change new firmwares will
    [    5.595963] [drm] Found UVD firmware Version: 1.87 Family ID: 17
    [    5.595969] [drm] PSP loading UVD firmware
    be it with hardware or firmware, applying the delay during the
    the hardware/firmware turning off the clock earlier
    Merge branch 'bnx2x-Popoulate-firmware-versions-in-driver-info-query'
    bnx2x: Popoulate firmware versions in driver info query.
    - Driver supports both direct Phy and custom firmware interface for Phy
      programming. This is due to different firmware modules available with
    these devices. Our firmware reports CDC configuration simultaneously
    firmware and VCHI driver to coordinate on using the correct cache line
    the firmware driver (silently hanging if the VPU doesn't respond to a
    mailbox transaction, and undersized buffers in the firmware property
    Fixes: cce96d1883da ("net: aquantia: Regression on reset with 1.x firmware")
    selftests: firmware: add CONFIG_FW_LOADER_USER_HELPER_FALLBACK to config
    selftests: firmware: remove use of non-standard diff -Z option
    loaded firmware file with the source firmware file. However, per the
    a usage error, which is suppressed, but then causes read_firmwares() to
    We update sync to reflect that the firmware version is compatible with
    Fixes: fa766c9be58b ("[media] Altera FPGA firmware download module")
    Use atomic_notifier_chain to fire firmware events at internal mlx5 core
    chain on firmware async events.
    ABM requires DMCU firmware, which is currently available for
    ensure your firmware is up to date.
    firmware: add remote status update client support
    firmware: add Intel Stratix10 service layer driver
    dt-bindings, firmware: add Intel Stratix10 service layer binding
    Assume firmware or bootloader configures console correctly.
    has no real firmware node, and use the old API only when
    drivers: base: Introducing software nodes to the firmware node framework
    to complement fwnodes representing real firmware nodes when
    and to supply the primary fwnode when the firmware lacks
    via dedicated HBM_DMA_SETUP request command. The firmware will perform
    Since firmware does not initialize  any of the generic timer CPU
    |now completely on par with the original MBL firmware's performance.
    - Added new CGX firmware interface API for sending link up/down
       - sdhci-pci: Workaround GLK firmware bug for tuning"
      mmc: sdhci-pci: Workaround GLK firmware failing to restore the tuning value
       - firmware loading fix
      drm/amdgpu: Add missing firmware entry for HAINAN
    (either by u-boot, firmware or chip defaults). This is achieved by using
    media: dt-bindings: media: Document bindings for venus firmware device
    Add devicetree binding documentation for firmware loader for video
    media: venus: firmware: add no TZ boot and shutdown routine
    firmware instructions whereas vcodec does the video frame processing.
    This change adds support to load the video firmware and bring ARM9
    An iommu domain is associated and managed with the firmware device.
    media: venus: firmware: register separate platform_device for firmware loader
    This registers a firmware platform_device and associate it with
    video-firmware DT subnode. Then calls dma configure to initialize
    media: venus: firmware: move load firmware in a separate function
    Separate firmware loading part into a new function.
    media: venus: firmware: add routine to reset ARM9
    The new debug ini TLVs can be either packed into firmware
    propagte the capability to the firmware.
    We have to choose different configuration and different firmwares
    The firmware stopped looking at this field long ago.
      test_firmware: fix error return getting clobbered
    - Add panel quirk for new GPD Win2 firmware.
    - add missing firmware declaration for hainan (SI chip)
    If the firmware reports a connection width that is not 1x, 4x, 8x or 12x
    This is needed to allow to run old kernels with new firmware.
    sdma_v4_0_init_microcode from sw_init to early_init, to load firmware
    firmware: raspberrypi: Switch to SPDX identifier
    Certain firmware configurations "protect" clks and cause the entire
    write protected clk registers. But other firmware configurations allow
    with the common clk framework. This way, when firmware is protecting
    the OS due to security restrictions put in place by firmware. For
    example, on some Qualcomm firmwares reading or writing certain clk
    registers causes the entire system to reboot, but on other firmwares
    we never need to register the clks or use them in certain firmware
    drm/i915: Downgrade unknown CSR firmware warnings
    firmware warnings") for huc and guc: downgrade CSR firmware warnings. If
    we have released no firmware yet for a platform, stop scaring the
    drm/i915: allow to load DMC firmware on next gen
    Before commit d8a5b7d79fb7 ("drm/i915/csr: keep max firmware size together
    with firmare name and version") it was possible to load the firmware for
    along the firmware to have the related capability.
    drm/amdgpu: Add missing firmware entry for HAINAN
    Fixes: 8eaf2b1faaf4 ("drm/amdgpu: switch firmware path for SI parts")
    DMCU firmware is not required - the system is expected to run
    mmc: sdhci-pci: Workaround GLK firmware failing to restore the tuning value
    GLK firmware can indicate that the tuning value will be restored after
    - Updated SMU firmware support for gfx8 chips
    firmware: raspberrypi: Fix firmware calls with large buffers
    Commit a1547e0bca51 ("firmware: raspberrypi: Remove VLA usage")
    https://github.com/raspberrypi/firmware/wiki/Mailbox-property-interface
    Fixes: a1547e0bca51 ("firmware: raspberrypi: Remove VLA usage")
    arm64: dts: qcom: qcs404: Add scm firmware node
    Add the scm firmware node to QCS404
    drm/i915: Downgrade unknown firmware warnings
    If we have released no firmware yet for a platform, stop scaring the
    firmware reports it for a given channel later.
    Use the correct compatible for the new protocol used by the firmware
    Krzysztof adds a hardware capability flag to indicate whether firmware
    iwlwifi: mvm: fix regulatory domain update when the firmware starts
    When the firmware starts, it doesn't have any regulatory
    driver can feed the firmware with previous knowledge that
    was kept in the driver, but the firmware may still not
    firmware can change the regulatory tables based on our
    rules. Then, if the firmware is shut down (when the
    created, the firmware will forget the country specific
    may allow channels and will try to teach the firmware about
    our location, but the firmware may still not allow to drop
    In this case, the firmware will reply with MCC_RESP_ILLEGAL
    iwlwifi: mvm: support sta_statistics() even on older firmware
    The oldest firmware supported by iwlmvm do support getting
    from mac80211 even on older firmware versions.
    Vasundhara fixes the year/month parameters for firmware coredump.
    I just got a new GDP Win2 device with an updated firmware, which still
    requires this quirk to get the rotation right, so add the new firmware
    SMC-D stress workload showed connection stalls. Since the firmware
    firmware: raspberrypi: Define timeout for transactions
    We should never assume to get a reply from the firmware otherwise
    Add HW capability flag to indicate that firmware supports stopping
    DMC firmware (toggled dynamically if conditions allow it) from the
    RK3399 tablet, known as Acer Chromebook Tab 10), where the EC firmware
    firmware: imx: add SCU power domain driver
    firmware: imx: add pm svc headfile
    firmware: imx: remove resource id enums
    SCU firmware uses resource id to provide services. Every device on
    The OLPC 1.75 boot firmware leaves two bytes in the TXFIFO. Those are
    the firmware should do this instead.
    staging: wilc1000: rename firmware related constants to follow better namespace
    Rename the firmware related macro by prefix with 'WILC_FW_' prefix for
    firmware and 'WILC_' prefix for driver constants.
    along with other macro defined for firmware.
    This patch prints the version of SMU firmware.
    med_power_with_dipm still causes freezes after updating the firmware to
    tools: Add 'firmware' category and add ihex2fw tool
    Commit 5620a0d1aacd ("firmware: delete in-kernel firmware") removed
    ihex2fw tool together with the rest of the contents of firmware/
    converstion, restore its original source code to tools/firmware
    test_firmware: fix error return getting clobbered
    Fixes: c92316bf8e94 ("test_firmware: add batched firmware tests")
    GXM) the temperature sensor inside SAR ADC is firmware-controlled (by
       firmware and IMP will perform global reset after firmware reloading,
    2. The driver needs to notify the hardware to reload the IMP firmware.
    3. The IMP firmware reloading makes the reset time of hardware longer,
    firmware.
    1. The firmware will wait for 100 ms before resetting the hardware and
    3. After firmware clearing the reset status register of all PF, the PF
    VF to enter the reset process and send a cmd to firmware to do the
    actual reset for the VF, it is possible that firmware has resetted
    IO not stopped problem when firmware is resetting VF.
    it will tell the PF to send cmd to firmware to reset itself.
    * add support for WCN3990 firmware crash recovery
    * add firmware memory dump support for QCA4019
    * add firmware error recovery while in AP mode
    marking) when top bit is set with recent firmwares.  Last (and perhaps
    specified by the firmware. However, it seems that subtlety got lost in
    firmware: tegra: Use in-band messages for firmware version query
    buffer, to retrieve the firmware version 'tag' during boot. If an
    older firmware is used, that does not support the new MRQ, fall back
    Update the firmware header file to a more recent version. The major
     * add a new MRQ for firmware version query ABI and deprecates the old
    firmware: tegra: Print version tag at full
    firmware: tegra: Switch to global mrq_is_supported()
    Patch "firmware: tegra: add helper to check for supported MRQs" added
    firmware: tegra: Add helper to check for supported MRQs
    Add a helper function to check that firmware is supporting a given MRQ
     in order to properly update them when performing firmware updates; the MC
     Status partition is used to determine whether a signed firmware image was
    While hardware gets into reset status, the firmware will not respond to
    drm/i915/csr: fix spelling mistake "firmare" -> "firmware"
    According to Asus firmware engineers, the meaning of these codes is only
    In the past, Asus firmwares would change the panel backlight directly
    LCD backlight directly, but unless the OS informs the firmware it is
    going to handle the display toggle hotkey events, the firmware still
    the display toggle hotkey does not perform any action. Our firmware
    tells the firmware that it should let the OS handle the display toggle
    kernel on faulty firmware implementation. Instead of it, just return
    There is no any known issue of faulty firmware in this matter,
    This patch initializes port speed so that firmware does not set lower
    operating speed. Setting lower speed in firmware impacts WRITE perfomance.
    intervening link bouncing, showed an odd interaction with firmware and
    Work around the firmware issue by issuing a link bounce if a FLOGI is
    The print related to number of VDs that a particular firmware supports is
    firmware profiles only supports upto 64VDs.
    Rename the scratch pad registers to match firmware headers.  No functional
    Latest firmware adds a mechanism to save firmware logs just before
    called snapdump which will help debugging firmware issues.  This feature
    requires extra time and firmware reports these values through new driver
    multiple cases where doorbell interrupts sent by firmware to indicate FW
    out firmware image data from mpi2_ioc.h to new file mpi2_image.h
    psp_xgmi_invoke is the helper function to issue ta cmd to firmware
    Add ucode handling for psp xgmi ta firmware.
    Add firmware/topology information for APL RVP
    malformed value passed by a firmware.
    Depending on specific chip model and firmware in use, either
    sources with the latest firmwares from linux-firmware for various brcmfmac
    Note that this configure the firmware's channel limits, the kernels own
    1) On really old firmware e.g. linux-firmware's 2011 brcmfmac4330-sdio.bin
    in linux-firmware.
    in linux-firmware.
    able to distribute these as part of linux-firmware, so that devices with
    co-exist under /lib/firmware.
    This commit adds support for callers of the brcmfmac/firmware.c code to
    brcmfmac: Remove recursion from firmware load error handling
    making brcmf_fw_get_firmwares and brcmf_fw_request_done directly call
    firmware_request_nowait resp. firmware_request themselves.
    brcmfmac: Remove firmware-loading code duplication
    some devices/firmwares:
    Fixes: 10115105cb3a ("ARM: spectre-v2: add firmware based hardening")
    contain the generated firmware name string:
       enquiry2->fw.firmware_type,
    drm/amdgpu: update smu firmware images for VI variants (v2)
    Some new variants require updated firmware.
    V2: add MODULE_FIRMWARE for new firmwares
    either firmware does it or the LPSS is kept always on Lynxpoint.
    The HL2.0 firmware sends only one channel info event per channel
    chan_info_event for all the channels, the HL2.0 firmware sends a
    The firmware does not indicate this behavior with any service bitmap
    and hence a new firmware feature flag is used to handle the modified
    firmware which sends single channel info event per scanned channel.
      const struct firmware *fw;
    We must check the return code of request_firmware() before we look at the
    ath10k: assign proper firmware crash dump structure
    QCA4019 firmware 10.4-3.2.1.1-00017
    QCA9984 firmware 10.4-3.5.3-00057
    This patch adds firmware crash memory dump support for QCA4019.
    QCA4019 firmware 10.4-3.2.1.1-00017
    ath10k: add support for WCN3990 firmware crash recovery
    Whenever the WCN3990 firmware becomes unavailable,
      firmware: dcdbas: include linux/io.h
    Revert until we sort out the sbios and firmware combinations that work
    mlxsw typically exercises, the firmware tolerated 0x1C-sized packets.
    A/B rootfs partition scheme for interruptible firmware updates
      statically allocated memory regions to be used for e.g. firmware.
      the firmware"
       - The Xilinx Zynq platform now has a firmware interface for its
         platform management unit. This contains a firmware "ioctl"
         we merged solved that by not exposing arbitrary firmware calls to
       - A new driver for NXP i.MX8, which need a firmware interface for
       - The SCPI firmware interface now contains support estimating power
      firmware: tegra: bpmp: Implement suspend/resume support
      firmware: xilinx: Add zynqmp IOCTL API for device control
      MAINTAINERS: imx: include drivers/firmware/imx path
      firmware: imx: add misc svc support
      firmware: imx: add SCU firmware driver support
       - More Icelake enablement + DMC firmware
      firmware/dmc/icl: Add missing MODULE_FIRMWARE() for Icelake.
      Input: silead - try firmware reload after unsuccessful resume
    Alpha gets the description of the physical memory from the firmware as an
    firmware is added to memblock.memory.
    My take is that Eaton upgraded their firmwares, so we don't need it
    MZ7TD256HAFV-000L9 SSD (firmware DXT02L5Q).
            # j=`openssl pkcs8 -in ~/pkcs7/firmwarekey2.priv -topk8 -nocrypt -outform DER | keyctl padd asymmetric foo @s`
       platform-firmware routines.
    by the firmware, instead of calculating the count.  Introduced driver
    workarounds due to current firmware limitations.  Fixed the queue
    (LSE), even though the firmware does not have this feature yet, so add
    firmware.
    to handle LSEs but there is no firmware support for this feature yet.
    firmware limitations. These workarounds are expected to go away once
    these limitations are fixed in the firmware.
    On a firmware release that has these issues addressed, these workarounds
    ice: Use capability count returned by the firmware
    The firmware now returns the capability count in the command buffer.
    Update to the current firmware major and minor version which are
       - Add support for enlisting the help of the EFI firmware to create
         so we can more gracefully recover from buggy EFI firmware.
    thermal: tsens: Check if the IP is correctly enabled by firmware
    The SROT registers are initialised by the secure firmware at boot. We
         mitigate Spectre-v4 dynamically without trapping to EL3 firmware
    simultaneous PTLBs are allowed on the bus, and if firmware will
    buffer used to transfer data from the firmware over the
    loading firmware.
    display configuration the firmware left us with, it likely would never
      mlxsw: core: Fix use-after-free when flashing firmware during init
    indicates if HuC firmware was loaded and verified. However, our
    firmware/dmc/icl: Add missing MODULE_FIRMWARE() for Icelake.
     restructure CSR firmware definition macros")
    Fixes: 4445930f1c4a ("firmware/dmc/icl: load v1.07 on icelake.")
    mlxsw: core: Fix use-after-free when flashing firmware during init
    flash a new firmware version it resets the ASIC after the flashing
      firmware to registered PFs mapped to a CGX::LMAC.
    Upon receiving notification from firmware the CGX event handler
         firmware with notification flag turned on for that PF.
    actions (drop and encap action) which firmware complains/errs
    If set, the firmware supports creating of flow tables with encap
    In commit 4502e9ec820d ("drm/i915/uc: Unify firmware loading") we
    stopped converting errors detected during firmware transfer into
    References: commit 4502e9ec820d ("drm/i915/uc: Unify firmware loading")
    Update the PPtable structure to fit the latest SMC firmware.
    ACPI_TYPE_INTEGER, however, in which case the platform firmware
    As the obj_id in the firmware is not globally unique the object type must
    Most other structures and firmware APIs are compatible with legacy
    The patch-set includes the usual firmware spec. update, some refactoring
    chips and a separate firmware call needs to be made to set it up.
    bnxt_en: Add helper functions to get firmware CP ring ID.
    we call firmware to query capability, we need to compare the PCIe
    MSIX max count with the firmware count and use the smaller one as
    Call firmware to configure the DMA addresses of all context memory
    bnxt_en: Check context memory requirements from firmware.
    firmware to check for context memory requirements and store the
    New firmware spec. allows interrupt coalescing parameters, such as
    short command format to send firmware messages greater than the
    to the firmware.
    Latest firmware spec. has some additional rx extended port stats and new
    bnxt_en: Update firmware interface spec. to 1.10.0.3.
    +       pr_info("%s: ROM rev. %.4s, firmware rev. %.4s, RMC rev. %.4s, "
    tc2: ROM rev. 1.0, firmware rev. 1.2, RMC rev. A, SMT ver. 1
    SMT frames with adapter's firmware.  Any SMT frame received from the RMC
    the firmware to process.  Similarly the firmware uses the SMT Tx queue
    However the outgoing SMT frames produced by the firmware bypass our
    firmware API are different in the DEFZA and hence a separate driver is
    via DMA in host memory by adapter's firmware copying received data
    firmware.  Any SMT frame received from the RMC via the Rx queue must be
    queued back by the driver to the SMT Rx queue for the firmware to
    process.  Similarly the firmware uses the SMT Tx queue to supply the
    GSMI_CMD_LOG_S0IX_RESUME = 0xb) that allow firmware to log any
    involve firmware on either of the paths. This command gives the
    firmware an opportunity to log any required information about the
    > cat event.kernel_software_watchdog > /sys/firmware/gsmi/append_to_eventlog
    name will be associated to vdev in firmware resource table.
    firmware: qcom: scm: Add WLAN VMID for Qualcomm SCM interface
    based on the parameter nbytes. Take firmware diag download as
    firmware-6.bin_WLAN.RM.4.4.1-00119-QCARMSWP-1, this also affects
    Tested with QCA6174 PCI with firmware
    It's not a regression with new firmware releases.
    firmware WLAN.RM.4.4.1-00110-QCARMSWPZ-1.
    cause unexpected behavior since the firmware is
    that the firmware is started and wmi is initialized
      Workqueue: events request_firmware_work_func
       if_usb_prog_firmware+0xc0/0x3db
       ? _request_firmware+0x54/0x47b
       ? _request_firmware+0x89/0x47b
       helper_firmware_cb+0x3c/0x3f
       request_firmware_work_func+0x37/0x6f
    mt76x0: pci: report firmware version using ethtool
    is meant to be used by the secure firmware to pass data to the secure
    this, so we can't simply write this configuration off as "buggy firmware".
    Some touchscreens, depending on the firmware and/or the digitizer, report
    Merge tag 'tegra-for-4.20-firmware-2' of git://git.kernel.org/pub/scm/linux/kernel/git/tegra/linux into next/drivers
    firmware: tegra: Changes for v4.20-rc1
    * tag 'tegra-for-4.20-firmware-2' of git://git.kernel.org/pub/scm/linux/kernel/git/tegra/linux:
      firmware: tegra: bpmp: Implement suspend/resume support
    correct view of devices without updated firmware, we clean up this incorrect
    nfp: flower: use host context count provided by firmware
    Read the host context count symbols provided by firmware and use
    operations. Given the expense of calling into firmware, maximize the
    space if allowed by the firmware.
    display configuration the firmware left us with, it likely would never
     - CGX (MAC controller) driver which communicates with firmware for
     with firmware, to address endianness issues.
     2 Added big-endian bitfields for CGX's kernel <=> firmware communication
    CGX LMAC link status change events from firmware
      and firmware can be acked immediately and hence event
    by low level secure firmware. For link management this patch
    adds a interface or communication mechanism between firmware
    - Support to send/receive commands/events to/form firmware.
      * reading firmware version
    firmware and reconfig RVU_AF_MSIXTR_BASE with IOVA.
    low level firmware. If found any, mark them as used in respective
    from Management firmware (MFW). Driver doesn't get notified if there's a
    firmware: tegra: bpmp: Implement suspend/resume support
    Clock driver queries supported clock information from firmware
      firmware: xilinx: Add zynqmp IOCTL API for device control
     - A series from Aisheng Dong to add SCU firmware driver for i.MX8
       exchange between AP and SCU firmware, and a set of SCU IPC
      MAINTAINERS: imx: include drivers/firmware/imx path
      firmware: imx: add misc svc support
      firmware: imx: add SCU firmware driver support
    in firmware resource table.
    drm/amd/pp: Implement load_firmware interface
    ip's firmware.
    Check whether the gfx/sdma firmware have been loaded successfully
    if upload firmware failed, no matter how many times
    firmware and regiters pll and output clocks with CCF.
    firmware: xilinx: Add zynqmp IOCTL API for device control
    Add ZynqMP firmware IOCTL API to control and configure
    They have also an internal Intel 8051 microcontroller whose firmware needs
    to be patched when the PHY is reset. If the 8051's firmware has the
    due to a limitation of the firmware.
    firmware needs to be patched when the PHY is reset. If the 8051's
    firmware has the expected CRC, its patching can be skipped. The
    package (internal address 0) due to a limitation of the firmware.
    firmware needs to be patched when the PHY is reset. If the 8051's
    firmware has the expected CRC, its patching can be skipped. The
    package (internal address 0) due to a limitation of the firmware.
    released) should NOT patch the firmware of the microcontroller or it'll
    MAINTAINERS: imx: include drivers/firmware/imx path
    Due to newly added IMX SCU firmware support, let's add
    drivers/firmware/imx into maintainership.
    firmware: imx: add misc svc support
    firmware: imx: add SCU firmware driver support
    This patch implements the SCU firmware IPC function and the common
    the firmware, Linux would incorrectly set a videomode with refresh rate
    sparc64 firmware may set these extended dividers during boot - and the
    firmware and the operating system if you intend to use the NAND
    In fact, the current denali.c code expects firmware to have already
    If no firmware (or bootloader) has initialized the controller, the
    and use that to send the change to the firmware.
    a buffer returned from request_firmware() with dma_map_single(). Memory
    returned from request_firmware() is mapped into the vmalloc region and
    from the firmware can be handled only after the device already
    the firmware, Linux would incorrectly set a videomode with refresh rate
    sparc64 firmware may set these extended dividers during boot - and the
    * support for getting firmware version via ethtool
    * inform cfg80211 when OBSS is not supported by firmware
    * retrieve MAC address from system firmware if provided
    * speed up QCA6174 and QCA9377 firmware download using diag Copy
            - firmware core revert/fix
      firmware: Always initialize the fw_priv list object
    iwlwifi: runtime: add send host command op to firmware runtime op struct
    Add send host command op to firmware runtime op struct to allow sending
    iwlwifi: bump firmware API version for 9000 and 22000 series devices
    Bump the firmware API version to 41.
    iwlwifi: nvm: get num of hw addresses from firmware
    the relevant data from the firmware, the number of reserved MAC
    While at it, fix-up the comments with firmware api names to actually
    match what we have in the firmware.
    Fixes: e9e1ba3dbf00 ("iwlwifi: mvm: support getting nvm data from firmware")
    4) during drv_stop the firmware crashes
    a command to the firmware asking to connect the queue
    to station id 0xff. This makes the firmware crash with the
    have a clean state from the firmware perspective.
    remoteproc: Check for NULL firmwares in sysfs interface
    The remoteproc framework provides a sysfs file 'firmware'
    for modifying the firmware image name from userspace. Add
    an additional check to ensure NULL firmwares are errored
    requesting a firmware during the start of a remoteproc
    firmware/dmc/icl: Add missing MODULE_FIRMWARE() for Icelake.
     restructure CSR firmware definition macros")
    Fixes: 4445930f1c4a ("firmware/dmc/icl: load v1.07 on icelake.")
    When doing core reset or global reset, the firmware will clear all
    firmware during reset. But when doing function reset, the driver
    The default mask configuration has been done by firmware, so the driver
    Input: silead - try firmware reload after unsuccessful resume
    A certain silead controller (Chip ID: 0x56810000) loses its firmware
    the firmware, should a resume error occur and retries the resuming.
      firmware_features = 0x00000007c45bfc57
    To support loading sdma firmware automatically from rootfs, enable
    Please get sdma firmware from below link and put it into
    rootfs entry -- /lib/firmware/imx/sdma/:
    https://git.kernel.org/pub/scm/linux/kernel/git/firmware/linux-firmware.git/tree/imx/sdma
    TOP, CPIF and PERIC CMUs are enabled. This is needed by the firmware
    Command responses and events from the firmware are copied twice in
    Notify firmware to flush cache before scanning when needed.
    Following cfg80211_ops conventions, firmware returns -ENOENT code
    it will be cancelled by firmware, then host driver will be properly
    in event handler. As a result, firmware receives second scan
    In case firmware reports that it can not do OBSS scanning for 40MHz
    processed by firmware, disconnect event with local parameter
    Leave it wireless core on host and to firmware.
    Especially on platforms without any boot firmware integration of the TPM
    TPM_DISABLED depending if the firmware deactivated or disabled the TPM.
    4 small bug fixes related to setting firmware message enables bits, possible
    This causes firmware to return error when the TC to hardware CoS queue
    firmware call to reserve VNICs.  This has the effect that the firmware
    crypto: ccp - Make function sev_get_firmware() static
     symbol 'sev_get_firmware' was not declared. Should it be static?
    Fixes: e93720606efd ("crypto: ccp - Allow SEV firmware to be chosen based on Family and Model")
    firmware told us, an entry in the sysfs tree will be made, but the type
    be available in firmware.
    firmware: Convert to using %pOFn instead of device_node.name
        drivers/media/platform/mtk-vpu/mtk_vpu.c:578 vpu_load_firmware()
    * support for getting firmware version via ethtool
    * retrieve MAC address from system firmware if provided
    * speed up QCA6174 and QCA9377 firmware download using diag Copy Engine
    not described by the firmware which is exactly the use case
    firmware: dcdbas: include linux/io.h
    Fixes: 12c956c4f32e ("firmware: dcdbas: Add support for WSMT ACPI table")
    The Management Complex (MC) firmware initially allowed the
    Newer firmware versions expose separate commands for
    the new firmware API for key config. Subsequent patches introduce
    the firmware API for configuring the classification and actual
    For firmware versions that support it, configure an Rx flow
    The Management Complex (MC) firmware initially allowed the
    * fix DMA error related regression with proprietary firmware
    Do the same in Linux by introducing new firmware PM callback
    usb: export firmware port location in sysfs
    The platform firmware "location" data is used to find port peer
    relationships. But firmware is an unreliable source, and there are
    between the firmware data and the real world.
    Claim if iLO generated accommodating firmware that might
       we will be safe even if the clock is not turned on by firmware.
      arm64: dts: qcom: msm8998: Add firmware node
      dt-bindings: firmware: scm: Add MSM8998 and SDM845
      firmware: qcom: scm: Refactor clock handling
      dt-bindings: firmware: scm: Refactor compatibles and clocks
    director mode and tcam resource from firmware, selects tuples used for
    Fixes: 39501ea64116 ("ath10k: download firmware via diag Copy Engine for QCA6174 and QCA9377.")
    whether it came from the software or firmware.
    With the latest firmware design, the beacon interval should be
    in the firmware. If not, beacon_int_min_gcd will be set
    Tested in QCA4019 with firmware ver 10.4-3.2.1.1-00015
    Tested in QCA9888 with firmware ver 10.4-3.5.1-0005
    Tested in QCA4019 with firmware ver 10.4-3.2.1.1-00011
    By default the firmware uses 1Mbps and 6Mbps rate for management packets
    management packets rate to the firmware.
    the value obtained from the WMI op version in the firmware file.
    patch) num_peers set to TARGET_TLV_NUM_PEERS although the firmware
    ath10k_pci 0000:01:00.0: firmware crashed! (guid ddf39880-3e64-4edf-b4e4-979d31724503)
    ath10k_pci 0000:01:00.0: firmware ver 10.2.4-1.0-00037 api 5 features no-p2p,raw-mode,mfp,allows-mesh-bcast crc32 a4a52adb
    ath10k_pci 0000:01:00.0: firmware register dump:
    firmware if provided"), we support pulling our MAC address from system
    firmware. Along with this, we should admit that it's possible for system
    firmware to be screwed up as well, omitting the MAC address there.
    mt76: report firmware version using ethtool
    to what appears in the output of 'dmesg' when the MCU firmware is loaded.
    Add pci load firmware routine. Move some shared mcu definitions
    firmware: Always initialize the fw_priv list object
    Fixes: 422b3db2a503 ("firmware: Fix security issue with request_firmware_into_buf()")
    firmware version is newer than expected. This is currently tested by
    This means that currently, if we suppose that the max firmware version
    Then firmware 0.1.3 will fail to load. This is because the minor version
    firmware version to 2 should mean any firmware version with a major
    the "max" firmware version as 0.2.3.. It is possible that such
    a firmware version doesn't even exist yet!
    there is no need to pass the firmware API versions separately.
    checking the firmware version to properly handle situations when
    firmware major/minor versions differ and when the branch version
    Anirudh updates the driver to ensure we query the firmware for the
    When there is an error in either ath3k_load_firmware() or
    as well, to show more information when a failing firmware loading
    firmware loading process.
    The XUSB firmware header is in little endian byte order, so make the
    with the firmware, but then got forgotten in the firmware and later
    reused for a different capability. Now the firmware added it in a
    This was based on a firmware capability that is now
    The firmware now enables different RB sizes configuration
    load firmware (even gives an incorrect impression that it actually
    loaded a firmware) and do unnecesary processing before concluding that
     WARNING kernel: [   34.093560] iwlwifi 0000:01:00.0: Direct firmware load for iwl-dbg-cfg.ini failed with error -2
     INFO kernel: [   34.111523] iwlwifi 0000:01:00.0: loaded firmware version 17.318154.0 op_mode iwlmvm
    iwlwifi: dbg: don't crash if the firmware crashes in the middle of a debug dump
    We can dump data from the firmware either when it crashes,
    or when the firmware is alive.
    Not all the data is available if the firmware is running
    firmware is halted), so we first check that the firmware
    bit to check if the firmware is alive or not. This bit
    firmware is sill working, and while we start to fill the
    buffer, the firmware crashes. Then we test STATUS_FW_ERROR
    or other firmware components.
    scsi: qla2xxx: Move log messages before issuing command to firmware
    before the command is issued to the firmware to prevent unknown behavior and
    - Add Icelake DMC firmware (Anusha)
    DEVX uid must exist from the ucontext or the device so that the firmware
    This will enable the firmware to filter out non privileged functionality
    firmware version is newer than expected. This is currently tested by
    This means that currently, if we suppose that the max firmware version
    Then firmware 0.1.3 will fail to load. This is because the minor version
    firmware version to 2 should mean any firmware version with a major
    the "max" firmware version as 0.2.3.. It is possible that such
    a firmware version doesn't even exist yet!
    there is no need to pass the firmware API versions separately.
    - Add support for enlisting the help of the EFI firmware to create memory
      we can gracefully recover from buggy EFI firmware.
    drm/i915/csr: restructure CSR firmware definition macros
    Use uniform prefixes for firmware path, version and size. Unify
    platform specific max firmware size macros for all platforms for clarity
    in the if ladder. Place the max firmware size macros in the platform
    stripped when packet is loading to firmware and this results, BT
    The necessary firmware has been submitted to the linux-firmware
    requests BT chip version and download the firmware.
    firmware: dcdbas: Move dcdbas to drivers/platform/x86
    firmware: dell_rbu: Move dell_rbu to drivers/platform/x86
    firmware: dcdbas: Add support for WSMT ACPI table
    buffer should be used, use the firmware-specified buffer instead of
    firmware: dell_rbu: Make payload memory uncachable
    The dell_rbu driver takes firmware update payloads and puts them in memory so
    drm/i915/csr: bypass firmware request on i915.dmc_firmware_path=""
    With i915.dmc_firmware_path="" it's obvious the intention is to disable
    CSR firmware loading. Bypass the firmware request altogether in this
    drm/i915/csr: keep max firmware size together with firmare name and version
    Move max firmware size to the same if ladder with firmware name and
    platform without actually loading the firmware, and makes the whole
    max firmware size, which is independent of the override.
    drm/i915/csr: keep firmware name and required version together
    This has been here since commit 1fe614d10f45 ("qed: Relax VF firmware
    drm/amdkfd: Report SDMA firmware version in the topology
    drm/amd/pp: Return error immediately if load firmware failed
       the guest shall be interpreted by the firmware. This flag
    - Adding firmware API for SoC with debugfs interface
      adds support for base firmware driver with query and clock APIs.
      firmware: xilinx: Add debugfs for query data API
      firmware: xilinx: Add debugfs interface
      firmware: xilinx: Add clock APIs
      firmware: xilinx: Add query data API
      firmware: xilinx: Add Zynqmp firmware driver
      dt-bindings: firmware: Add bindings for ZynqMP firmware
    This makes the drivers/firmware/efi/libstub code ignore the "quiet"
    memory region requested by the firmware isn't mapped in efi_pgd, which
    1. Avoid potential hangs caused by buggy firmware.
    2. Shout loud that the firmware is buggy and hence is not a kernel bug.
    After the kernel has booted, if any accesses by firmware causes a page
    firmware: xilinx: Add debugfs for query data API
    Add debugfs file to query platform specific data from firmware
    firmware: xilinx: Add debugfs interface
    Debugfs can be used to call firmware APIs with required
    * Calling firmware API through debugfs:
      # echo "<api-name> <arg1> .. <argn>" > /sys/.../zynqmp-firmware/pm
    * Read output of last called firmware API:
      # cat /sys/.../zynqmp-firmware/pm
    firmware: xilinx: Add clock APIs
    Add clock APIs to control clocks through firmware
    firmware: xilinx: Add query data API
    Add ZynqMP firmware query data API to query platform
    specific information(clocks, pins) from firmware.
    firmware: xilinx: Add Zynqmp firmware driver
    This patch is adding communication layer with firmware.
    Firmware driver provides an interface to firmware APIs.
    dt-bindings: firmware: Add bindings for ZynqMP firmware
    Add documentation to describe Xilinx ZynqMP firmware driver
    bindings. Firmware driver provides an interface to firmware
    This will enforce the umem usage by the firmware and not the 'pas' info.
    Set uid as part of TD commands so that the firmware can
    Set uid as part of XRCD commands so that the firmware can manage the
    Set uid as part of CQ creation so that the firmware can manage the
    objects upon calling the firmware.
    Set uid as part of RQT commands so that the firmware can manage the
    Set uid as part of TIS commands so that the firmware can manage the
    Set uid as part of TIR commands so that the firmware can manage the
    Set uid as part of MCG commands so that the firmware can manage the
    Set uid as part of DCT create command so that the firmware can
    Set uid as part of SRQ create command so that the firmware can manage
    Set uid as part of SQ commands so that the firmware can manage the
    Set uid as part of RQ commands so that the firmware can manage the
    Set uid as part of QP creation so that the firmware can manage the
    Use uid as part of PD commands so that the firmware can manage the
      firmware: ti_sci: Provide host-id as an optional dt parameter
    firmware then there is need to store them as part of cfg variables, so
    1. Addition of interface to fetch estimated power from the firmware
       strings instead of relying on the firmware to do the same
      firmware: arm_scmi: add a getter for power of performance states
      firmware: arm_scmi: use strlcpy to ensure NULL-terminated strings
    firmware: vpd: fix spelling mistake "partion" -> "partition"
    - firmware: Add serial number sysfs entry
      firmware: meson_sm: Add serial number sysfs entry
       7) Adjust firmware version requirements in mlxsw, from Petr Machata.
    This will enable the firmware to enforce the usage of kernel objects
    Set uid as part of DCT commands so that the firmware can manage the
    Set uid as part of SRQ commands so that the firmware can manage the
    Set uid as part of SQ commands so that the firmware can manage the
    Set uid as part of RQ commands so that the firmware can manage the
    Set uid as part of QP commands so that the firmware can manage the
    Set uid as part of CQ commands so that the firmware can manage the CQ
    The firmware should mark this CQ with the given uid so that it can
    request_firmware() and passed down directly to the i2c master to write
    some of the fields if they have been modified by the firmware or just
    Up until now, mlxsw tolerated firmware versions that weren't exactly
    allowed the users to test various firmware versions as long as they were
    crypto: ccp - Allow SEV firmware to be chosen based on Family and Model
    During PSP initialization, there is an attempt to update the SEV firmware
    by looking in /lib/firmware/amd/. Currently, sev.fw is the expected name
    of the firmware blob.
    This patch will allow for firmware filenames based on the family and
    Model specific firmware files are given highest priority. Followed by
    firmware for a subset of models. Lastly, failing the previous two options,
    The API is compatible with MC firmware 10.2.0+.
    - Add DMCU firmware loading for Raven (used for ABM and PSR)
    The MEC firmware expects the control stack at one page offset from the
    mlxsw: spectrum: Bump required firmware version
    traffic"). As the final piece of puzzle, a firmware issue whereby a wrong
    not necessary until firmware is talked to.
    brcmfmac: increase buffer for obtaining firmware capabilities
    When obtaining the firmware capability a buffer is provided of 512
    bytes. However, if all features in firmware are supported the buffer
    from firmware. Increasing the buffer to 768 bytes on stack.
    Decoding of firmware channel information was not complete for 160MHz
      Workqueue: events request_firmware_work_func
       request_firmware_work_func+0x36/0x60
      brcmfmac: brcmf_construct_chaninfo: Ignoring unexpected firmware channel 50
    b43: fix DMA error related regression with proprietary firmware
    that this situation happens when running the open-source firmware
    operation running the proprietary firmware
    reset unless the open-source firmware is being used.
    ALSA: hda/ca0132 - Change firmware name and usage
    The Recon3D, AE-5, Z and ZxR all share the same firmware file. Rename
    In certain multi-function switch dependent modes, firmware adds vlan tag 0
    drm/amdgpu: update vram_info structure in atomfirmware.h
    atomfirmware has structure changes in varm_info. Updated it
    powerpc/fadump: re-register firmware-assisted dump if already registered
    Remove mt76_fw dependency from mt76x0u_upload_firmware routine since
    it does not define firmware layout properly. Moreover use mt76_poll_msec
    Remove unused usb header file and move mt76x0 firmware definition
    mt76x0: usb: move firmware loading to usb.c
    mt76: unify firmware header between mt76x0 and mt76x2
    these aren't set correctly because the firmware doesn't always do it.
    Recent firmware revisions have added the ability to force
    USB2 mode by the modem firmware.
    firmware"), which added the code to mark clocks as CLK_IS_CRITICAL, causes
    enabled by the firmware") which is a previous attempt to fix this for some
    firmware") causes all unclaimed PMC clocks on Cherry Trail devices to be on
    approval may not work if the PF driver or the firmware is older.  This
    state without needing to call into firmware.
      firmware: Fix security issue with request_firmware_into_buf()
    drm/amdgpu: Add DMCU to firmware query interface
    DMCU firmware version can be read using the AMDGPU_INFO ioctl
    or the amdgpu_firmware_info debugfs entry
    drm/amd/display: Add DMCU firmware version
    Read the version number from the common firmware header and store
    drm/amdgpu/gfx9: add support for raven2 gfx firmware
    use raven2 gfx firmware.
    drm/amdgpu/sdma4: specify raven2 firmware.
    use raven2 sdma firmware.
    drm/amdgpu: add raven2 vcn firmware support
    Specify raven2 vcn firmware on amdgpu_vce_sw_init.
    drm/amdgpu: add raven2 to gpu_info firmware
    Add gpu_info firmware for raven2.
    drm/amdgpu: move get_rev_id at first before load gpu_info firmware
    drm/amdgpu: initilize picasso psp firmwares support
    firmware: coreboot: Only populate devices in coreboot_table_init()
    firmware: coreboot: Remap RAM with memremap() instead of ioremap()
    firmware: coreboot: Collapse platform drivers into bus core
    firmware: coreboot: Make bus registration symmetric
    this code in, even when there isn't any coreboot firmware on the device.
    firmware: coreboot: Unmap ioregion after device population
    Fixes: 570d30c2823f ("firmware: coreboot: Expose the coreboot table as a bus")
    firmware: coreboot: Let OF core populate platform device
    Now that the /firmware/coreboot node in DT is populated by the core DT
    /firmware/ node from of_platform_default_populate_init()") we should and
    Fixes: 3aa0582fdb82 ("of: platform: populate /firmware/ node from of_platform_default_populate_init()")
    firmware: google: make structure gsmi_dev static
    dt-bindings: firmware: scm: Add MSM8998 and SDM845
    firmware: qcom: scm: Refactor clock handling
    dt-bindings: firmware: scm: Refactor compatibles and clocks
    firmware/dmc/icl: load v1.07 on icelake.
    While at it, also add support to load the firmware
    v2: load firmware during system resume.(Imre)
    v4: Only load the firmware in this patch
    arm64: dts: qcom: msm8998: Add firmware node
    Add the firmware and scm nodes for msm8998
     * integrate GPHY firmware loading into DSA driver
    support a variable number of GPHYs. After the firmware was loaded the
    without the firmware it can not be probed on the MDIO bus.
    will always return (i.e. it will never hang).  But recently, firmware bugs
    To protect against firmware bugs, add a timeout in the SEV command
    further commands since the state of the SEV firmware is unknown.
    firmware: meson_sm: Add serial number sysfs entry
    The serial number is simply exposed as a sysfs entry under the firmware
    firmware is loaded.
    At the moment only the raven firmware is available.
    DMCU is optional, so if the firmware is not found, no error or
    PSP is already equipped to handle DMCU firmware loading, all
    DMCU has two pieces of firmware: the ERAM and the interrupt
    To this end, the DMCU firmware has a custom header and parsing
    struct firmware.
    that do not support devicetree provided by the firmware or by the
    firmware: Fix security issue with request_firmware_into_buf()
    When calling request_firmware_into_buf() with the FW_OPT_NOCACHE flag
    it is expected that firmware is loaded into buffer from memory.
    But inside alloc_lookup_fw_priv every new firmware that is loaded is
    added to the firmware cache (fwc) list head. So if any driver requests
    a firmware that is already loaded the code iterates over the above
    firmware buffer.
    when using request_firmware_into_buf.
    Fixes: 0e742e9275 ("firmware: provide infrastructure to make fw caching optional")
    firmwares
    When the firmware is not responding, execution of kexec boot causes a system
    hang. When firmware assertion happened, driver get notified with interrupt
    scsi: lpfc: add support to retrieve firmware logs
    This patch adds the ability to read firmware logs from the adapter. The driver
    attribute. Verbosity to be used by firmware when logging to host memory is
    attribute enables or disables loggy by firmware.
    will not free command until it is out of firmware's hand and Target Core has
    firmware to generate interrupt at a certain interval.  If the number of
    generated immediately by the firmware.
    cause loop between driver trying to send ABTS and firmware returning error.
    Turn ON logout_on_delete flag to make sure firmware resource for fcport is
    This seems to be required for all currently released GuC firmwares.
    v2: it is only needed by pre-Gen11 firmwares
    firmware: arm_scmi: add a getter for power of performance states
    The SCMI protocol can be used to get power estimates from firmware
    costs are already managed by the SCMI firmware driver, they are not
    address as this case was not handled from firmware side.
    staging:rtl8192u: Remove typedef from firmware_init_step_e - Style
    Remove the typedef directive from enumerated type firmware_init_step_e
    firmware: arm_scmi: use strlcpy to ensure NULL-terminated strings
    Replace all the memcpy() for copying name strings from the firmware with
    This is needed to avoid out of bounds accesses if the firmware returns
    Reference: https://forum.manjaro.org/t/firewire-m-audio-410-driver-wont-load-firmware/51165
    Fixes: a2b2a7798fb6('ALSA: bebob: Send a cue to load firmware for M-Audio Firewire series')
    devicetree to the kernel. Now either firmware or the boot selector (ex.
    debug or when using firmware that doesn't understand DT.
      firmware: arm_scmi: fix divide by zero when sustained_perf_level is zero
    triggered to respond in the dock's firmware temporarily puts it in a
    firmware: arm_scmi: fix divide by zero when sustained_perf_level is zero
    Fixes: a9e3fbfaa0ff ("firmware: arm_scmi: add initial support for performance protocol")
    ath10k: download firmware via diag Copy Engine for QCA6174 and QCA9377.
    Downloading firmware via BMI protocol takes too long time. For example,
    a ~700K bytes firmware takes about 500ms to download via BMI protocol.
    This is too long especially in suspend and resume scenario where firmware
    is re-downloaded unless WoWLAN is enabled. Downloading firmware via diag CE
    can reduce the time to ~40ms for a ~700K bytes firmware binary.
    Ath10k driver parses the firmware to segments and downloads the segments
    to the specified address directly. If the firmware is compressed or has
    firmware-6.bin_WLAN.RM.4.4.1-00111-QCARMSWP-1. QCA9377 is also affected.
    To download firmware via diag interface, driver needs to write the target
    As downloading firmware via diag interface is only required for qca6174
    firmware-6.bin_WLAN.RM.4.4.1-00111-QCARMSWP-1. QCA9377 is also affected.
    firmware-6.bin_WLAN.RM.4.4.1-00111-QCARMSWP-1. QCA9377 is also affected.
    This feature is enabled by the host driver if firmware is capable.
    After receiving event from host, firmware allocates the necessary
    This patch adds a new qed firmware with fixes and support for new features.
      bnxt_en: Fix firmware signaled resource change logic in open.
    Use mt76u_mcu_fw_send_data utility routine for firmware uploading and
    layer in mt76x0_upload_firmware
    utility function for mcu firmware loading
    mac through firmware when link is changed, this patch unify the
    bnxt_en: Fix firmware signaled resource change logic in open.
    Fixes: 25e1acd6b92b ("bnxt_en: Notify firmware about IF state changes.")
    will always return (i.e. it will never hang).  But recently, firmware bugs
    To protect against firmware bugs, add a timeout in the SEV command
    further commands since the state of the SEV firmware is unknown.
    If there are some tx packets pending in firmware, and then system
    enters suspend, firmware will fail for wow enable. This will trigger
    mac80211 to stop ath10k and download firmware again, then it is
    After add the waiting htt tx complete, then firmware will have some
    Tested with QCA6174 PCI with firmware
    It's not a regression with new firmware releases.
    ath10k: retrieve MAC address from system firmware if provided
    Devices may provide their own MAC address via system firmware (e.g.,
    Kick out firmware fb when loading Tegra driver.
    firmware-supplied values. Those timings are then reported through the
    firmware already closed the queues after having parsed the
      truncation of return values from firmware calls and resolving a
     Hardware name: Cavium Inc. Saber/Saber, BIOS Cavium reference firmware version 7.0 08/04/2018
    avoid confusion with discrete devices, add part of the firmware to be
    as the firmware never ended up implementing it, and now the PRPH
    We offloaded all the RX configuration of init to firmware. However,
    by firmware.
    [   74.747364] iwlwifi 0000:01:00.0: loaded firmware version 29.610311.0 op_mode iwlmvm
    [   78.116132] iwlwifi 0000:01:00.0: loaded firmware version 29.610311.0 op_mode iwlmvm
    iwlwifi: don't WARN on trying to dump dead firmware
    During d3, the firmware records debug data into internal buffer
    Boards booted under secure firmware (e.g. Hardkernel Odroid boards)
    for the 'firmware' child node. This removes directly accessing the name
       its status 1 ms later. If the status has not updated by the firmware at
    adau17x1_setup_firmware and adau17x1_has_dsp is only used internally, so
    Fixes: 7740d04d901d ("usb: dwc3: pci: Enable ULPI Refclk on platforms where the firmware does not")
    unless one of them is the basic NIC firmware, in which case
    code to handle changes to the spec, specifically the firmware expects
    Hieu adds the ability for firmware logging during initialization.
    Sebastian adds support for firmware NVM recovery mode, which logs a
    firmware: ti_sci: Provide host-id as an optional dt parameter
    able to independently communicate with the firmware without the need
    independently communicate with the firmware without the need going
    platforms. The firmware name used by the DSP will be set dynamically
    ixgbe: firmware recovery mode
    ice: Enable firmware logging during device initialization.
    When a malicious operation is detected, the firmware triggers an
       when they receive an interrupt from the firmware.
    3) Fix default scheduler topology buffer size as the firmware expects
    range of firmwares, including 10.2.4.70.67.
    The firmware/driver never recovers from that state automatically,
    Intel's firmware would fail to transmit because the peer is
    drm/amdgpu: Remove the sriov checking and add firmware checking
    Unify bare metal and sriov, and add firmware checking for
    Raven doesn't have an VCE block and so also no buggy VCE firmware.
    drm/amdgpu:change VEGA booting with firmware loaded by PSP
    With PSP firmware loading, TMR mc address is supposed to be used.
    drm/amdgpu: Change VCE booting with firmware loaded by PSP
    With PSP firmware loading, TMR mc address is supposed to be used.
    security processor for the GPU.  It handles firmware
    Add support for the new SMU firmware interface for clock adjustment.
    drm/amdgpu: update atomfirmware.h
    drm/amdgpu: move firmware definitions into amdgpu_ucode header
    Tested on QCA4019 and firmware version 10.4.3.2.1.1-00010
      drivers/firmware: psci_checker: stash and use topology_core_cpumask for hotplug tests
    firmware) exactly when the platform supports the DC9 state. To reach
       - Avoid invoking the platform firmware to make the platform enter the
         confuse the firmware and cause it to crash (Rafael Wysocki).
      i2c: core: Parse SDA hold time from firmware
    firmware console buffers without spinning with interrupts disabled.
      Input: atmel_mxt_ts - zero terminate config firmware file
      remoteproc: qcom: mdt_loader: Make the firmware authentication optional
      Documentation: update firmware loader fallback reference
      firmware: vpd: Fix section enabled flag on vpd_section_destroy
    has been in place on the firmware loader for years.  Move the fallback
      drm/msm/adreno: Load the firmware before bringing up the hardware
      bunch of AMD fixes (includiing some required firmware changes for new
      drm/amdgpu:add VCN booting with firmware loaded by PSP
         CPUs (controlled by firmware), as a Spectre v2 mitigation.
    least in one case, the platform firmware gets confused if a PCIe
     and the platform firmware is not going to be invoked to actually
       strategy where firmware owns the registers (Alexandru Gagniuc)
        strategy where firmware owns the registers (Alexandru Gagniuc)
    If the platform requests Firmware-First error handling, firmware is
     - Allow IMA and LSMs to prevent sysfs firmware load fallback (e.g. if
       using signed firmware), from Mimi.
      ima: based on policy warn about loading firmware (pre-allocated buffer)
      ima: based on policy require signed firmware (sysfs fallback)
      firmware: add call to LSM hook before firmware sysfs fallback
    drm/i915: Fix PM refcounting w/o DMC firmware
    The case where the firmware isn't specified for a platform (although
    the firmware is specified but can't be loaded for some reason. Hence we
    firmware only later.
      ASoC: wm_adsp: Declare firmware controls from codec driver
      firmware: qcom: scm: add a dummy qcom_scm_assign_mem()
    drm/amdgpu:add VCN booting with firmware loaded by PSP
    Setup psp firmware loading for VCN, and make VCN block
    drm/amdgpu:add new firmware id for VCN
    Add the new firmware id for VCN into the enum
    Update tmr mc address with firmware loading address
    which is returned from PSP firmware
    drm/amdgpu:add tmr mc address into amdgpu_firmware_info
    of its firmware which is loaded by PSP
         into the firmware occur from a kernel thread
      efi/x86: Prevent reentrant firmware calls in mixed mode
    A6XX core code, the GMU and the HFI (hardware firmware interface)
    drm/msm/adreno: Load the firmware before bringing up the hardware
    Failure to load firmware is the primary reason to fail adreno_load_gpu().
    of missing firmware.
    whether the kernel or platform firmware sets the bits.
    cxgb4: update 1.20.8.0 as the latest firmware supported
    Change t4fw_version.h to update latest firmware version
    replacing a device, changing motherboard firmware, or applying kernel
    Patches 1-3 update the driver to use a new firmware version. Due to a
    mlxsw: spectrum: Update the supported firmware to version 13.1702.6
    This new firmware contains:
            - Support for flashing future firmware without reboot
    The kernel BUG happens when wowl is enabled from firmware. In
    From Denis: Use max #EQs reported by firmware to request MSIX vectors.
    New firmware has defined new HCA capability field called "max_num_eqs",
    i2c: core: Parse SDA hold time from firmware
    for us if provided by firmware.
    ASoC: wm_adsp: Declare firmware controls from codec driver
    move the creation of the firmware controls to the codec
    used by the firmware.
            drivers/media/tuners/tuner-xc2028.c:378 load_all_firmwares() warn: argument 4 to %d specifier is cast from pointer
            drivers/media/tuners/tuner-xc2028.c:619 load_firmware() warn: argument 6 to %d specifier is cast from pointer
    Piotr adds a missing return code for when the firmware returns a busy
    state.  Also added the process to command firmware to start
    ibmvnic: Update firmware error reporting
    in by firmware, so do not print it and do not use it to query for
    ibmvnic: Update firmware error reporting with cause string
    When backing device firmware reports an error, it provides an
    firmware to start rearrangement process.
    have one, we can handle this firmware wart in powerpc platform code.
    powerpc/powernv: Query firmware for count cache flush settings
    If we detect the appropriate flag from firmware we patch a branch
    SMT evaulation on x86 is a trainwreck as the firmware has all the
    handled by psp firmware. dal should not program the
    * add support for enhanced DMA firmware feature
    * add firmware support for AP+BT dual mode
    This series includes the usual firmware spec update.  The driver has
    to firmware so that firmware can release some resources during IFDOWN.
    ethtool method to get firmware core dump and hwmon temperature reading
    entry at a time using the firmware API.  The firmware call can only be
    bnxt_en: Notify firmware about IF state changes.
    Use latest firmware API to notify firmware about IF state changes.
    bnxt_en: Move firmware related flags to a new fw_cap field in struct bnxt.
    The flags field is almost getting full.  Move firmware capability flags
    to a new fw_cap field to better organize these firmware flags.
    Add support to collect live firmware coredump via ethtool.
    firmware that the driver is compliant with the latest spec.  With
    that, the firmware can return expanded RSS profile IDs that the driver
    firmware may return failure when the driver tries to update PHY
    Add code to detect firmware support for external loopback and the extra
    bnxt_en: Update firmware interface version to 1.9.2.25.
    New interface has firmware core dump support, new extended port
    statistics, and IF state change notifications to the firmware.
      firmware: qcom: scm: add a dummy qcom_scm_assign_mem()
    revision id. We should get it from firmware, instead of a fix value.
    querying the msix number from firmware, and adjusting it with roce
    Bluetooth: btqca: Add wcn3990 firmware download support.
    These arguments will help to decide type of firmware files
    - load the firmware and config for the current chipset (already
    - send the firmware and config blob to the device (already supported by
    Sending the last firmware and config blob download command
    right after the firmware and config blob download - which means that at
    4) load the firmware and config for the current chipset (already
    8) send the firmware and config blob to the device (already supported by
    where needed (the btrtl driver for example needs two blobs: firmware and
    centralizing the code which loads the firmware and config blobs and
    This makes the firmware names show up in modinfo.
    Bluetooth: btusb: Use bt_dev_err for Intel firmware loading errors
    Driver uses shadow pointer instead of Mirror pointer for firmware dump
    queue from firmware dump template reading.
    Prevent user from sending commands through sysfs while firmware is not
    firmware state to go out of sync.  This patch fixes this link instablity
    For ABORT_XRI_CN command, firmware identifies XRI to abort by IOTAG and RPI
    processing of WoWLAN features reported by firmware and implementation
    mt76x0: load firmware from mediatek subdir
    to indicate this is USB device firmware.
    firmware. Here the ISH device PCI device id was reused for some non Linux
    real ISH firmware is present to take action. This delay will add to boot
    firmware: vpd: Fix section enabled flag on vpd_section_destroy
    Only a firmware with version 2.1 and above supports dma ring feature.
    The firmware never implemented this, and they do not plan to.
    Currently the firmware does not stop recording debugging data when
          bit in the PHYSDEV_CONTROL register. Lancer firmware goes into
    state at boot is not setup by the firmware, instead relying on the edge
     controlling the mux is initialized by the firmware so that the USB data
         for Intel SoCs (LPSS) that caused the platform firmware to be
    (a) Ports handled by the firmware must not be transitioned to D3 by the
        OS behind the firmware's back:
    OPAL firmware provides the facility for some groups of sensors to be
    wil6210: increase firmware ready timeout
    The QCA4019 hw1.0 firmware 10.4-3.2.1-00050 and 10.4-3.5.3-00053 (and most
    Since the firmware is closed source and nothing can be done from our side
    WMI_CHAN_FLAG_PASSIVE seems to be interpreted by the firmware to not
    brcmfmac: specify some features per firmware version
    Some features supported by firmware aren't advertised and there is no
    Most firmwares support monitor interface but only the latest ones
    reliable detection method for older firmwares (BRCMF_C_MONITOR was tried
    headers can't be reliably detected for all firmwares.
    This commit adds table that allows mapping features to firmware version.
    It adds mappings for 43602a1 and 4366b1 firmwares from
    linux-firmware.git. Both were confirmed to be passing monitor frames.
    rsi: add firmware support for AP+BT dual mode
    Currently, AP mode will work on only WLAN alone firmware. To give support
    for AP and BT dual mode, adding firmware entry in 'struct ta_metadata'.
    The firmware entry is based on what coex_mode is used in driver and coex
    necessary in rsi_load_firmware(). Instead of this, driver can use
    Because key descriptor is getting corrupted and firmware is unable to
    before sending it to firmware.
    Mwifiex firmware inserts only Microsoft information element
    wait_chip_ready() and wait_firmware_ready() are never called in atomic
    Recent FPGA firmware reports more data and values in sent command
    Adjustments to match the FPGA firmware, and the signal I/Q values are
    reported as s16 types from the card firmware.
    service is enabled in the firmware for backward compatibility).
    Tested in QCA988X with firmware ver 10.2.4.70.45
    Tested in QCA4019 with firmware ver 10.4-3.2.1.1-00011
    is returned by the firmware.
    when the firmware sends the over-the-air tx status of
    in a single event and sent by the firmware to host, if this
    support needs to be disabled in the wmi init cmd, sent to the firmware.
    to let firmware know the features supported by the host driver.
    This field is ignored if it is not supported by firmware.
    indicate the firmware to send completion event for every mgmt tx
    Issues a wmi command to firmware when multicast rate change is received with the
    Tested on QCA9984 with firmware ver 10.4-3.6-00104
    simply return. There are some systems where the firmware is setting high
    SSIDs from firmware and report to cfg80211 core.
    settings to the device firmware.
    the firmware has set. E.g. the Pinnacle 290e disables them by default,
    cleanups and provide more improvements for further firmware releases.
    Instead of letting the firmware fail when trying to add more ports than
    Input: atmel_mxt_ts - zero terminate config firmware file
    coherent_dma_mask, it doesn't make much sense for the firmware code to
    coherent_dma_mask, it doesn't make much sense for the firmware code to
    When an explicit DMA limit is described by firmware, we need to remember
    When an explicit DMA limit is described by firmware, we need to remember
    Fixes: f7dc0157e4b5 ("drm/i915/uc: Fetch GuC/HuC firmwares from guc/huc specific init")
    This structure needs to align with structure in atomfirmware table.
    The CODA7541 firmware does not set the SPS frame cropping fields to
    the cropping information in the headers produced by the firmware with
    media: coda: let CODA960 firmware set frame cropping in SPS header
    streams. The CODA960 firmware can do this on its own if asked to.
    the USBcan II firmware.
    The embedded firmware aligns its messages on 32-bit boundaries.
    that run essentially the same firmware:
    watchdog on "legacy" firmware.
    firmware.
    RAVE SP firmware covered by "legacy" variant uses 16-bit CCITT
            igb: Workaround for igb i210 firmware issue
    usb: dwc3: pci: Enable ULPI Refclk on platforms where the firmware does not
    On some Bay Trail (BYT) systems the firmware does not enable the
    properly provide GPIO resources in the ACPI firmware-node resources
    In 22560 devices the firmware will do all the hw configurations,
    firmware self init.
    In addition, the init flow changes so the firmware is loaded
    give the ROM the IML's address before kicking the firmware's
    drivers/firmware: psci_checker: stash and use topology_core_cpumask for hotplug tests
      firmware: qcom: scm: add a dummy qcom_scm_assign_mem()
    uapi structures and defines, as well as firmware work request structures.
    DPB buffers (with UBWC NV12 format) and give them to the firmware.
    This moves setting of default properties (firmware debug, idle
    When a msm8016 based system is woken up from suspend, the firmware in
      - The controller firmware reports to support RTD3
    PCI device is runtime suspended as well. The ICM firmware then starts
    * add support for enhanced DMA firmware feature
    during the last firmware loading rework. That resulted in brcmfmac not
      qmi_wwan: fix interface number for DW5821e production firmware
    qmi_wwan: fix interface number for DW5821e production firmware
    version of the firmware. Confirmed with the vendor that the final
    On x86 some firmwares use a low non native resolution for the display when
    and came from the vio hvc driver. The firmware console has hardened
    OPAL console writes do not have to synchronously flush firmware /
    opal_console_write_buffer_space did not work correctly. That firmware
    console is busy (especially if it was being spammed by firmware),
    A new console flushing firmware API was introduced to replace event
    OPAL_BUSY_EVENT from firmware.
    delay added to keep it from hitting the firmware too frequently.
    reserved data will be exposed by the firmware by an application that
    for firmware to enable forward compatibility for future bits there.
    1) From Feras Daoud, Added the support for firmware log tracing,
    first by introducing the firmware API needed for the task and then
     - Add hardware structures for the firmware tracer
    with older firmware. The next patch is by Roman Fietze and fixes the setup of
    Introduce CONFIG_LOONGSON3_ENHANCEMENT"), existing or future firmware
      "ACPI Reclaim memory" by the firmware.
    information provided by the firmware (EFI) and retaining cacheability
    can: peak_canfd: fix firmware < v3.3.0: limit allocation to 32-bit DMA addr only
    The DMA logic in firmwares < v3.3.0 embedded in the PCAN-PCIe FD cards
    This issue has been fixed in firmware v3.3.0 and next.
    The firmware for the coprocessor and its source code can be
    efi/x86: Prevent reentrant firmware calls in mixed mode
    firmware: qcom: scm: add a dummy qcom_scm_assign_mem()
    triggered at the time of writing. The TCS are triggered by the firmware
    depending on which firmware has been loaded into the serial engine
    serial engine firmware anyway.
      this is handled in the SCPI firmware)
    list PCIe ports as firmware-first, linux will not use native services.
    This happens because aer_acpi_firmware_first() doesn't take 'pcie_ports'
    [    3.633920] iwlwifi 0000:00:14.3: loaded firmware version 38.c0e03d94.0 op_mode iwlmvm
    Currently the compressed streams in DSP firmwares are
    the firmware. This is fragile and also limits things to a
    Here a new form of firmware parameter is added, the HOST_BUFFER
    firmware file. This is more robust and allows for the possiblity
    Newer voice control firmwares can capture multiple audio channels.
    All controls derived from the loaded firmware should be created prior
    As newer firmware supports double push/pop in a single FTE, we add
    HP Proliant systems, because it expects the firmware to take over
    present, the firmware expects the kernel to use it for CPU
    Unfortunately, the firmware interface used by that driver is not
    The firmware interface used by the pcc-cpufreq driver is
    The firmware_loader can be built as a loadable module, which now
    ERROR: "security_kernel_load_data" [drivers/base/firmware_loader/firmware_class.ko] undefined!
    Fixes: 6e852651f28e ("firmware: add call to LSM hook before firmware sysfs fallback")
    as a dial. The firmware processes the detection of the tool and forward
    The firmware also exports Contact ID, Countact Count which may hint that
    of the current backing device and a notification from firmware that
    error printouts as firmware returns outgoing traffic with a generic
    firmware is busy swapping in a new backing adapter and is not ready
    ima: based on policy warn about loading firmware (pre-allocated buffer)
    firmwares.  The firmware subsystem allows drivers to request this
    firmware be loaded from the filesystem, but this requires that the
    entire firmware be loaded into kernel memory first before it's provided
    to the driver.  This can lead to a situation where we map the firmware
    twice, once to load the firmware into kernel memory and once to copy the
    firmware into the final resting place.
    To resolve this problem, commit a098ecd2fa7d ("firmware: support loading
    into a pre-allocated buffer") introduced request_firmware_into_buf() API
    that allows drivers to request firmware be loaded directly into a
    Do devices using pre-allocated memory run the risk of the firmware being
    firmware, kexec image, and/or the IMA policy signatures.  This build time
    ima: based on policy require signed firmware (sysfs fallback)
    With an IMA policy requiring signed firmware, this patch prevents
    the sysfs fallback method of loading firmware.
    firmware: add call to LSM hook before firmware sysfs fallback
    Add an LSM hook prior to allowing firmware sysfs fallback loading.
    Fixes: dd84441a7971 ("x86/speculation: Use IBRS if available before calling into firmware")
    drm/nouveau/secboot/tegra: Enable gp20b/gp10b firmware tag when relevant
    firmware, and it is not effectively supported in Linux due to lack of
    - ideally, the UEFI firmware, which is tightly coupled with the
      supersede the one provided by the firmware,
    Merge tag 'tegra-for-4.19-firmware' of git://git.kernel.org/pub/scm/linux/kernel/git/tegra/linux into next/soc
    firmware: tegra: Changes for v4.19-rc1
    This contains a single fix for the Trusted Foundations firmware
    * tag 'tegra-for-4.19-firmware' of git://git.kernel.org/pub/scm/linux/kernel/git/tegra/linux:
      firmware: arm_scmi: remove some unnecessary checks
    firmware.
    - Stefan adds the GET_THROTTLED firmware property value that is required
      Raspberry Pi firmware driver accordingly to register such a device
      firmware: raspberrypi: Remove VLA usage
      firmware: raspberrypi: Register hwmon driver
      ARM: bcm2835: Add GET_THROTTLED firmware property
    drm/amdgpu/pp/smu7: cache smu firmware toc
    drm/amd/display: read DP sink and DP branch hardware and firmware revision from DPCD
    that can be accessed depends on the firmware configuration.
    these sleeps are to wait for opal (firmware).
    expected that firmware/bootloader will have enabled the required
    Merge branch 'cxgb4-move-stats-fetched-from-firmware-to-debugfs'
    cxgb4: move stats fetched from firmware to debugfs
    Some stats are fetched via slow firmware mailbox, which can cause
    Patch 1 removes stats fetched via firmware from ethtool -S.
    cxgb4: expose stats fetched from firmware via debugfs
    Expose stats obtained from firmware via debugfs. These stats can't
    be part of ethtool -S because the slow firmware mailbox can cause
    cxgb4: remove stats fetched from firmware
    When running ethtool -S, some stats are requested from firmware.
    Since getting these stats via firmware mailbox is slow, some packets
      arch/arm/firmware/trusted_foundations.c:47:10: error: parameter
    the firmware may be different from the one that is actually present in
    Tests now reveal that the predicted firmware differences with the
    Need to notify firmware when driver is loaded and unloaded.
    complete, firmware will start posting Asynchronous Event, However driver
    The PBDE optimizations aren't supported in all firmware revs.
    firmware.
    (provided by firmware perhaps) with a stable kernel version. Deferred
    Last two patches allow different ASICs to require different firmware
    versions and add two resources that need to be queried from firmware by
    under-voltage detection from the Raspberry Pi firmware, and a change
    firmware: raspberrypi: Remove VLA usage
    Existing callers of the firmware interface never need more than 24
    v2: Fix the length passed to rpi_firmware_property_list (by anholt,
    firmware: raspberrypi: Register hwmon driver
    Since the raspberrypi-hwmon driver is tied to the VC4 firmware instead of
    particular hardware its registration should be in the firmware driver.
    Noralf's modifications to the downstream firmware driver. In case of
    firmware: arm_scmi: remove some unnecessary checks
    crypto: inside-secure - move the firmware to a better location
    This patch moves the firmware loaded by the Inside Secure SafeXcel
    driver from /lib/firmware/ to /lib/firmware/inside-secure/eip197b/. This
    firmwares.
    supported by the driver that loads a firmware).
    Documentation: update firmware loader fallback reference
    The firmware loader has a fallback mechanism, and it now has some proper
    firmware on a separated flash and having rootfs partition in it.
    dt-bindings: mtd: document Broadcom's TRX firmware format binding
    Broadcom based home router devices use TRX firmware format. It's a
    The HCLGE_RX_PRIV_EN_B is used to tell the firmware whether
    the firmware will ignore the value.
    liquidio: fix kernel panic when NIC firmware is older than 1.7.2
    Pre-1.7.2 NIC firmware does not support (and does not respond to) the "get
    only) during modprobe.  Due to a bug in older firmware (with respect to
    firmware version.
    [ 8.669163] r8822be: Using firmware rtlwifi/rtl8822befw.bin
    usb: host: xhci-rcar: Simplify getting the firmware name for R-Car Gen3
    This patch simplifies getting the firmware name for R-Car Gen3.
    has the firmware_name of R-Car Gen3 as "V3", the xhci-rcar doesn't
    usb: host: xhci-plat: add firmware_name for R-Car Gen3
    To clean up the xhci-rcar.c code later, this patch adds firmware_name
    Fixes: 5620a0d1aacd ("firmware: delete in-kernel firmware")
    ath10k_sdio mmc2:0001:1: Direct firmware load for ath10k/QCA9377/hw1.0/board-2.bin failed with error -2
    drm/amdgpu: switch firmware path for SI parts
    Use separate firmware path for amdgpu to avoid conflicts
    drm/amdgpu: switch firmware path for CIK parts (v2)
    Use separate firmware path for amdgpu to avoid conflicts
    suspend so long as the OEM has implemented it properly in the firmware.
    dumps of the firmware, I discovered that this machine did in fact
    The vbios firmware structure changed between v3_1 and v3_2. So,
         to avoid confusing the platform firmware which started to happen
    'firmware' is a module param which may been longer than firmware_id,
    with zeroed memory,no need to set firmware_id[0] to '\0'.
    That struct is used when querying firmware for the STA. It seem is has
    43602a1 and 4366b1 firmwares (7.35.177.56 and 10.10.69.3309 accordingly)
    were using. It also seems to be used by early 4366c0 firmwares
    The problem appears when switching to the 10.10.122.20 firmware. It uses
    To receive all v4 specific info with the newest firmware we have to
    That struct is passed by a firmware when querying for STA info. Flags
    New Broadcom firmwares mark monitor mode packets using a newly defined
    As not every firmware generates radiotap header this commit introduces
    BRCMF_FEAT_MONITOR_FMT_RADIOTAP flag. It has to be has based on firmware
    new firmware release).
    brcmfmac: detect firmware support for radiotap monitor frames
    Depending on used build-time options some firmwares may already include
    brcmfmac: detect firmware support for monitor interface
    Many/most of firmwares support creating monitor interface but only the
    Later some fallback detecion method may be added for older firmwares.
    media: coda: mark CODA960 firmware version 2.1.9 as supported
    This patch adds the i.MX6 CODA960 firmware versions 2.1.9
    (revision 32515) to the list of supported firmware versions.
    firmware in this CPU. They can also be configured to use an external
      scripts/Makefile.build:311: recipe for target 'arch/arm/firmware/trusted_foundations.o' failed
    Some firmware relies on the OS to show the boot graphics.
    * fix firmware image corruption for rtl8821ae
    * fix crash if there's no firmware image
    * fix a firmware crash during bandwidth change
    a sysfs interface to access version of the platform ME firmware
    Currently an open firmware property is copied into partition_name variable
    when the open firmware property is read and copied into the driver for the
    It turns out that enabling LPM triggers a firmware bug somewhere, which
    from firmware, we will read invalid trailer data from the packet,
    different firmware for the touchscreen to fonction properly.
    Fixes: 0fefbfbaa ("qed*: Management firmware - notifications and defaults")
    firmware-version: 0x00015e0b
    platform firmware on the affected machine and that may very well
    not matter for suspend-to-idle as platform firmware is not involved
        # no VF limit from firmware
    * fix a firmware crash during bandwidth change
    rtlwifi: rtl8821ae: fix firmware is not ready to run
    Without this patch, firmware will not run properly on rtl8821ae, and it
    rtl8821ae uses two kinds of firmwares for normal and WoWlan cases, and
    each firmware has firmware data buffer and size individually. Original
    code always overwrite size of normal firmware rtlpriv->rtlhal.fwsize, and
    this mismatch causes firmware checksum error, then firmware can't start.
    Fixes: fe89707f0afa ("rtlwifi: rtl8821ae: Simplify loading of WOWLAN firmware")
    drm/i915/uc: Fetch GuC/HuC firmwares from guc/huc specific init
    We're fetching GuC/HuC firmwares directly from uc level during
    suspend so long as the OEM has implemented it properly in the firmware.
    dumps of the firmware, I discovered that this machine did in fact
    - fix VCN firmware version reporting for upcoming firmware
    The vbios firmware structure changed between v3_1 and v3_2. So,
    firmware (aka QSEE), which is running as the hypervisor, might
    described by firmware and managed by kernel drivers rather than
    firmware description.
    While debugging driver crashes related to a buggy firmware
    Originally tested on 4.16+ kernel with ath10k-ct 10.4 firmware
    reconfigure the PHYMODE setting to firmware instead of just configuring
    the BANDWIDTH info, otherwise it'll trigger a firmware crash with
    firmware register dump:
    Vendor firmware/uboot has different reserved regions depending on
    firmware version, but current codebase reserves the same regions on
      [11, 0]  for firmware revision
    I believe the "auth_req->length" comes from the firmware and if the
    firmware is malicious or buggy, you're already toasted so the impact of
    frames. Pass addr/mask randomization parameters to firmware.
    CHANGE_INTF firmware command. All validation is to be done by firmware.
    wlcore: Make sure firmware is initialized in wl1271_op_add_interface()
    Let's fix this by first checking if we need to boot the firmware. And
    on the keyboard LED on their own via hardware/firmware, but the
    isn't allowed to use it (the platform firmware may be operating the SHPC
      - A simplified acpi_get_hp_hw_control_from_firmware() that we call only
    acpi_get_hp_hw_control_from_firmware() is implemented when CONFIG_ACPI=y,
    a limited firmware interface, it also overflows in the year 2106.
    An SHPC can be operated either by platform firmware or by the OS.  The OS
    firmware wants to prevent an OS from operating an SHPC, it must supply an
    hardware/firmware platform doesn't support ACPI.  In that case,
    acpi_get_hp_hw_control_from_firmware() is implemented but
    Unfortunately on some platforms the firmware acting as PPM
    firmware) still does not report any other status changes if
    firmware in the system. One occasion of such mailboxes is
    Using built-in in kernel image without a firmware in filesystem
    if the mask was bigger than a firmware set dma_mask_bits that apparently
    ARM: bcm2835: Add GET_THROTTLED firmware property
    Recent Raspberry Pi firmware provides a mailbox property to detect
    The u32 value returned by the firmware is divided into 2 parts:
    Align with firmware tools, no functionality change
    debug eg. misbehaving network device firmware, but we do not need them
    Add support to register a memory with the firmware via the DEVX
    register the physical addresses with the firmware and get a unique id
    Add support to create and destroy firmware objects via the DEVX
    Add support to run general firmware command via the DEVX interface.
    In that mode of work the firmware manages the isolation between
    supported by the firmware prior to creating the DEVX user id.
      net/mlx5: Prevent warns in dmesg upon firmware commands
    net/mlx5: Prevent warns in dmesg upon firmware commands
    this patch prevents warns upon firmware commands as of invalid user
    ASoC: Intel: common: add firmware/topology information for SOF
    There is a possibility that firmware on the controller was upgraded before
    from the controller firmware, checks all pending I/Os at the driver level
    firmware. So the mdt_load function can be directly used to load
    the firmware. Also add the relevant resets required for this core.
    remoteproc: qcom: mdt_loader: Make the firmware authentication optional
    qcom_mdt_load function loads the mdt type firmware and
    The firmware interface for passing the timestamp is also limited to
      firmware: dmi: Add access to the SKU ID string
    firmware: dmi: Add access to the SKU ID string
    from /sys/firmware/dmi/tables/DMI
    Calling fan related SMM functions implemented by Dell BIOS firmware on Dell
    media: dvb: fix location of get_dvb_firmware script
    drm/amdgpu: Fix uvd firmware version information for vega20 (v2)
    report vcn ucode version via amdgpu_firmware_info sysfs interface.
    For example, to turn off the shutup on Lenovo P50, create a "firmware
    patch" file (e.g. /lib/firmware/alsa/lenovo-p50) containing the
    FWs.  These are firmwares which can have more than one vNIC per PF
      PCI/AER: Move pcie_aer_get_firmware_first() to portdrv.h
       - firmware: Support small NVRAM partitions
       - Interrogate HW for firmware version; rave-sp
      PCI/AER: Move pcie_aer_get_firmware_first() to portdrv.h
    PCI/AER: Move pcie_aer_get_firmware_first() to portdrv.h
    Move pcie_aer_get_firmware_first() to portdrv.h, where it can be more
    DMC firmware bits for WA#1183 are missing for SKL. After that I
         for arm64 using SMC firmware call to set a hardware chicken bit
      ima: based on policy verify firmware signatures (pre-allocated buffer)
      - simplify SHPC handoff from firmware (Mika Westerberg)
      - simplify SHPC handoff from firmware (Mika Westerberg)
      PCI: shpchp: Remove get_hp_hw_control_from_firmware() wrapper
      PCI: shpchp: Remove acpi_get_hp_hw_control_from_firmware() flags
      ARM: spectre-v2: add firmware based hardening
    Before the firmware updates the crq's tail pointer, if the VF driver
         firmware
    screen,  after a suspend/resume on systems where the firmware clears the
    does not send this mailbox command, firmware assumes maximum supported
      The large chunk of these are firmware core documentation and api
      be able to understand the firmware code better. There's also a user
      for a new firmware api call.
      Documentation: clarify firmware_class provenance and why we can't rename the module
      Documentation: remove stale firmware API reference
      Documentation: fix few typos and clarifications for the firmware loader
      ath10k: re-enable the firmware fallback mechanism for testmode
      ath10k: use firmware_request_nowarn() to load firmware
      firmware: add firmware_request_nowarn() - load firmware without warnings
      firmware_loader: make firmware_fallback_sysfs() print more useful
      firmware_loader: move kconfig FW_LOADER entries to its own file
      firmware_loader: replace ---help--- with help
      firmware_loader: enhance Kconfig documentation over FW_LOADER
      firmware_loader: document firmware_sysfs_fallback()
      firmware: rename fw_sysfs_fallback to firmware_fallback_sysfs()
      firmware: use () to terminate kernel-doc function names
      Input: usbtouchscreen - add sysfs attribute for 3M MTouch firmware rev
      crypto: caam - fix MC firmware detection
      4. If a Thunderbolt device was connected, the host router firmware uses
    expects to manage hotplug below that Port, and firmware on the host router
    The structure shared between driver and management firmware (MFW)
    * support new DFS host confirmation feature in the firmware
    * add debugfs file for reading firmware capabilities
    powerpc/64s: Enable barrier_nospec based on firmware settings
    Check what firmware told us and enable/disable the barrier_nospec as
    firmware does not enable it. Also re-patching modules is not supported
    only acts as a barrier on newer machines with appropriate firmware
    call firmware, so it could hang on a lock or possibly corrupt a
    another CPU, which wait for it to leave firmware (or time out) to
    option (stops the CPU, and possibly allows firmware to be debugged).
    PCI: shpchp: Remove get_hp_hw_control_from_firmware() wrapper
    get_hp_hw_control_from_firmware() is a trivial wrapper around
    acpi_get_hp_hw_control_from_firmware(), probably intended to be generic in
    case other firmware needed similar OS/platform negotiation.
    Remove get_hp_hw_control_from_firmware() and call
    acpi_get_hp_hw_control_from_firmware() directly.  Add a stub for
    acpi_get_hp_hw_control_from_firmware() for the non-ACPI case.
    PCI: shpchp: Remove acpi_get_hp_hw_control_from_firmware() flags
    acpi_get_hp_hw_control_from_firmware() no longer uses the flags parameter,
    firmware if the phy is not stopped or disconnected, which will
    cause firemware timeout problem because the firmware is busy
    the vf table is full, the firmware will disable the vf vlan
    This patch checks the if resp_code from firmware is
    skl-tplg-interface.h describes firmware format details for Skylake
      Max number of cores passed to firmware: u (NR_CPUS = 2048)
      Max number of cores passed to firmware: 2048 (NR_CPUS = 2048)
    firmware, so the v2.0 version needs its own entry.
    half coming from the firmware.
    the firmware.
    On a system where firmware can dynamically change the state of the
    let's enforce it by calling into the firmware again to disable it.
    On a system where the firmware implements ARCH_WORKAROUND_2,
    firmware.
    implemented by the higher exception level (either hypervisor or firmware)
    USB device (which we make the firmware for), on a specific port
    ARM: spectre-v2: add firmware based hardening
    Add firmware based hardening for cores that require more complex
    handling in firmware.
    When the branch predictor hardening is enabled, firmware must have set
    bits are properly enabled by firmware via all entry paths to the kernel.
    selftests: firmware: return Kselftest Skip code for skipped tests
    When firmware test(s) get skipped because of unmet dependencies and/or
    * support new DFS host confirmation feature in the firmware
    BSS_LEAVE events from firmware. However it is possible that no such
    events will be sent by firmware, e.g. if EAPOL timed out.
    No need to rely upon firmware events in this case.
    pass default value. Leave further processing to firmware.
    qtnfmac: fix firmware command error path
    Control path will not be operational after firmware failure. Change bus
    qtnfmac: decode error codes from firmware replies
    to a firmware command, into one of standard errno codes.
    The GET_ID command, added as of SEV API v0.16, allows the SEV firmware
    to install SEV firmware newer than the currently active SEV firmware.
    For the new SEV firmware to be applied it must:
    * Pass the validation test performed by the existing firmware.
    * Be of the same build or a newer build compared to the existing firmware.
    crypto: caam - fix MC firmware detection
    Add a module parameter to override SCL frequency provided by firmware.
    (and have its firmware reloaded) for bluetooth to work after
    Bluetooth: btmrvl: support sysfs initiated firmware coredump
    mwifiex: skip sending GT_REKEY_OFFLOAD_CFG if firmware has no support
    If firmware does not support embedded supplicant, then it in turn
    If current frame is nullfunc frame, we ask firmware to report by filling
    firmware.
    Now, the firmware takes responsibility to handle the led, the dirver just
    Before the firmware updates the crq's tail pointer, if the PF driver
    different modems, based on different chipsets and firmwares. Newer
    firmware updates for platforms incorporating this SoC allow the IOMMU
    vendor firmware. Enable this faster TS speed on card port 0 (contained
    demod) and parallel stv0910 connections when the card firmware is at least
      firmware: qcom: scm: Fix crash in qcom_scm_call_atomic1()
      firmware: qcom: scm: Add ipq4019 soc compatible
      firmware: qcom: scm: Fix crash in qcom_scm_call_atomic1()
    If firmware supports the forward action with a destination list
    Mellanox firmware provides two control knobs for this feature:
      pcp mode. The default is pcp mode. Once in dscp mode, firmware will
    The firmware trust state (in QPTS register) is changed based on the
    firmware requires mlx5 driver to copy the IP header to the
    reattempt login with backing device firmware.
    unsupported [by firmware] inputs [for example - mac ext,
    rt_firmware_hdr'.
    staging: rtl8723bs: Fix camel-case in 'struct rt_firmware_hdr'.
    the 'Function' member of 'struct rt_firmware_hdr'.
    staging: rtl8723bs: Fix camel-case in 'struct rt_firmware'.
    Change the members of 'struct rt_firmware' to be snake case instead
    firmware in test mode the relevant netlink channel needs to be exposed
    In the 10.4-3.6 firmware branch there's a new DFS Host confirmation
    firmware on the specifications of detected radar type. This allows the
    firmware to validate if the host's radar pattern detector unit is
    the radar pulses sent as phy error events from firmware. If the check
    fails the firmware won't allow use of DFS channels on AP mode when using
    Hence this patch is mandatory when using a firmware from 10.4-3.6 branch.
    the queue asyncronously, we are racing against the firmware code with
    updates to the buffer descriptors. Presumably, the firmware scans the ring
    Tested on QCA9984 with firmware ver 10.4-3.6-0010
    This patch adds firmware crash memory dump support for QCA9888 and QCA99X0.
    QCA9888 firmware 10.4-3.5.3-00053
    QCA99X0 firmware 10.4.1.00030-1
    firmware: qcom: scm: Fix crash in qcom_scm_call_atomic1()
    nfp: flower: check for/turn on LAG support in firmware
    to fail as firmware will reject any commands other than the
    error as backing device firmware requests reinitialization.
    By default, firmware controls receive buffer configuration and priority
    net/mlx5: PPTB and PBMC register firmware command support
    Add firmware command interface to read and write PPTB and PBMC
      libata: blacklist Micron 500IT SSD with MU01 firmware
    directly to request_firmware().  It was introduced for allowing the
    across a partition migration. This fixed a firmware bug where a
    value. Ensure we always have enough space for any future firmware.
    Current control firmware does not cater too well to multi-host
    brcmfmac: trigger memory dump on SDIO firmware halt message
    Attempt to dump dongle memory for debug upon receiving firmware halt
    brcmfmac: trigger memory dump upon firmware halt signal
    PCIe dongle firmware signals a halt/trap through mailbox interrupt.
    The driver already supports device coredump initiated by firmware
    Association IEs and the Authentication type to driver / firmware which
    Auto rate table sent to firmware is getting corrupted
    brcmfmac: add debugfs entry for reading firmware capabilities
    This allows reading all capabilities as reported by a firmware. They are
    It's how firmware reports support for various features, e.g. supported
    Access to all that info is useful for trying new firmwares, comparing
    Merge branch 'qed-firmware-TLV'
    qed*: Add support for management firmware TLV request.
    Management firmware (MFW) requires config and state information from
    The patch adds required management firmware (MFW) interfaces such as
    using custom firmware. It is also not needed when we can locate the right
    modules, firmware, IMA policy) is updated.  Unlike custom IMA policy
    ima: based on policy verify firmware signatures (pre-allocated buffer)
    Fixes: a098ecd firmware: support loading into a pre-allocated buffer (since 4.8)
    Now that we have informed the firmware that the Power Button driver is active,
    libata: blacklist Micron 500IT SSD with MU01 firmware
    With this patch, we could assign the delay from firmware, or we could
    The firmware has supported for reading sensor values of size u32.
    This patch adds support to use newer firmware functions which allows
      firmware: arm_scmi: Use after free in scmi_create_protocol_device()
      added this cycle so that it will work with a recent firmware change.
    Added support for adapter and firmware reset").  The common code interface
    adapter and firmware reset").
    $ echo firmware > /sys/class/scsi_host/host<N>/host_reset
    Under some circumstances firmware marks a CPU as GUARDed CPU and boot the
    crash in some drivers, for example this firmware crash in ath10k due
    [ 3078.258407] ath10k_pci 0000:0d:00.0: firmware crashed! (uuid d6ed5961-93cc-4d61-803f-5eda55bb8643)
    [ 3078.258608] ath10k_pci 0000:0d:00.0: firmware ver 10.2.4.70.59-2 api 5 features no-p2p,raw-mode,mfp crc32 4159f498
    [ 3078.260627] ath10k_pci 0000:0d:00.0: firmware register dump:
    devices contain old versions of DICE firmware which lacks detailed
    as they come from firmware packages.
    A request has been made to NVIDIA to release updated firmware.
    drm/nouveau/gr/gf100-: support firmware-provided bundle/method everywhere
    drm/nouveau/gr/gf100-: support firmware-provided sw_ctx everywhere
    drm/nouveau/gr/gf100-: support firmware-provided sw_nonctx everywhere
    firmware on it.
    getting the firmware filename) and then after loading the firmware,
    AOSP use userspace firmware loader to load firmwares, which will
    allow the firmware fail driver attempts to wild card the source eswitch
    match field. If this bit is not set, the firmware ignores the source
    * add firmware memory dump support for QCA9984
    ibmvnic: Fix non-fatal firmware error reset
    to handle a non-fatal firmware error. Move that call within the code
    If the firmware map fails for whatever reason, remember to free
    arm64: Add support for ACPI based firmware tables
    drivers: base cacheinfo: Add support for ACPI based firmware tables
    cache_override_properties() would provide firmware help to
    Use the vbios table rather than gpu info firmware.
    drm/amdgpu: drop gpu_info firmware for vega20
    drm/amdgpu/atomfirmware: add parser for gfx_info table
    Add support for the gfx_info table on boards that use atomfirmware.
    drm/amdgpu/atomfirmware: add new gfx_info data table v2.4 (v2)
    drm/amdgpu/gfx9: Add support for vega20 firmware
    drm/amdgpu/sdma4: Specify vega20 firmware
    drm/amdgpu: Specify vega20 vce firmware
    drm/amdgpu: Specify vega20 uvd firmware
    drm/amdgpu: Add smu firmware support for vega20
    drm/amdgpu: Add gpu_info firmware for vega20. (v2)
    vega20_gpu_info firmware stores gpu configuration for vega20.
    v2: drop gpu info firmware for vega20
    drm/amdgpu: Add gpu_info firmware for vega20.
    drm/amdgpu: drop gpu_info firmware for vega20
    mfd: rave-sp: Add code to print firmware versions
    firmware version info.
    - Module parameter to override DMC firmware (Jani)
      firmware: arm_scmi: simplify exit path by returning on error
      firmware: arm_scmi: improve exit paths and code readability
      firmware: arm_scmi: remove unnecessary bitmap_zero
      firmware: arm_scmi: drop unused `con_priv` structure member
      firmware: arm_scmi: rename scmi_xfer_{init,get,put}
      firmware: arm_scmi: rename get_transition_latency and add_opps_to_device
      firmware: arm_scmi: fix kernel-docs documentation
      firmware: arm_scmi: improve code readability using bitfield accessor macros
    Input: usbtouchscreen - add sysfs attribute for 3M MTouch firmware rev
    Allow querying of the firmware revision of the device
    The UVD firmware doesn't seem to like the HDP flush here.
    drm/amd/display: Add get_firmware_info_v3_2 for VG12
    drm/amdgpu: add VEGAM VCE firmware support
    drm/amdgpu: add VEGAM UVD firmware support
    drm/amdgpu: add VEGAM GFX firmware support
    drm/amdgpu: add VEGAM SDMA firmware support
    drm/amdgpu: skip VEGAM MC firmware load
    drm/amdgpu: add VEGAM SMU firmware support
    drm/amdgpu: bypass GPU info firmware load for VEGAM
    table of register_list_format/register_restore in RLC firmware.
    drm/amdgpu: add save restore list cntl gpm and srm firmware support
    drm/amdgpu: add new rlc firmware header format v2.1
    drm/amdgpu: print the vbios version in the debugfs firmware info
    Useful for info gathering about what firmwares are in use in
    smu firmware do not update response register immediately under
    User need to set start time and end time, firmware can calculate
    firmware in real time.
    drm/amdgpu/powerplay: rename smu7_upload_mc_firmware
    It doesn't actually upload any firmware is just
      management functions which causes a firmware fault and vmw_pvscsi to
    changing the OS image or firmware.
    For firmware, installed latest but dated openfwwf 5.2
    This problem doesn't occur when using propriatory firmware
    openfwwf firmware, as the comment in the b43_dma_handle_txstatus() suggests.
    card using rsi_send_vap_dynamic_update, which results firmware is unable to
    when common card ready indication received from firmware. Hence resetting
    The firmware DMAC_47_16 header re-write token was defined twice,
    underlying hardware/firmware state (like register dump, firmware
    drivers to collect device specific snapshot of the hardware/firmware
    specific hardware/firmware logs to /proc/vmcore are as follows:
    firmware/hardware log collection.
    3. Device driver collects all hardware/firmware logs into the buffer
    The device specific hardware/firmware logs can be seen as elf notes
    to collect the device specific hardware/firmware logs.  The logs will
    firmware logs as elf notes.
    hardware/firmware logs in crash recovery kernel, before hardware is
      driver's registered hardware/firmware logs in patch 1.
    - Replaced the API to allow drivers to register their hardware/firmware
    Register callback to collect hardware/firmware dumps in second kernel
    before hardware/firmware is initialized. The dumps for each device
    specific hardware/firmware logs to /proc/vmcore are as follows:
    firmware/hardware log collection.
    3. Device driver collects all hardware/firmware logs into the buffer
    Documentation: clarify firmware_class provenance and why we can't rename the module
    Clarify the provenance of the firmware loader firmware_class module name
    Documentation: remove stale firmware API reference
    Documentation: fix few typos and clarifications for the firmware loader
    ath10k: re-enable the firmware fallback mechanism for testmode
    The ath10k testmode uses request_firmware_direct() in order to avoid
    producing firmware load warnings. Disabling the fallback mechanism was a
    ath10k: use firmware_request_nowarn() to load firmware
    This reduces the unnecessary spew when trying to load optional firmware:
    "Direct firmware load for ... failed with error -2"
    firmware: add firmware_request_nowarn() - load firmware without warnings
    Currently the firmware loader only exposes one silent path for querying
    optional firmware, and that is firmware_request_direct(). This function
    This patch introduces a variations of request_firmware() that enable the
    firmware_loader: make firmware_fallback_sysfs() print more useful
    callers intertwined and it'd be unclear exactly for what firmware
    firmware_loader: move kconfig FW_LOADER entries to its own file
    are some components related to firmware which have *nothing* to
    firmware_loader: replace ---help--- with help
    firmware_loader: enhance Kconfig documentation over FW_LOADER
    it easier to later move these kconfig entries into the firmware_loader/
    This also now recommends using firmwared [0] for folks left needing a
    uevent handler in userspace for the sysfs firmware fallback mechanis
    given udev's uevent firmware mechanism was ripped out a while ago.
    [0] https://github.com/teg/firmwared
    firmware_loader: document firmware_sysfs_fallback()
    firmware: rename fw_sysfs_fallback to firmware_fallback_sysfs()
    firmware: use () to terminate kernel-doc function names
    firmware: wrap FW_OPT_* into an enum
    DT, but not enabled by the firmware.
    stuck in firmware), %pS also gives out pcsr hexadecimal value.
    Variable 'byte' in ks7010_upload_firmware function is declared
    in ks7010_upload_firmware function. Remove one of them.
    firmware or bootloader leaves these interrupts asserted.
      firmware: ti_sci: Switch to SPDX Licensing
      firmware: arm_scmi: Use after free in scmi_create_protocol_device()
    When reset flags in capsule header are not set, it means firmware
    drivers/firmware/efi/libstub/tpm.c:62:6: warning:
    Note that part of drivers/firmware/efi/libstub/secureboot.c is duplicated
    as on all the quirky x86 firmware we support is enough of a burden as it
    EFI firmware, but requires us to define all struct definitions carefully
    ALSA: hda/ca0132: R3Di and SBZ quirk entires + alt firmware loading
    This patch also adds the ability to load alternative firmwares for each
    card, the firmwares can be obtained from within the Windows driver.
    "ctefx-sbz.bin". If the alternative firmware for the given quirk is not
    firmware.
      vega12 atom firmware support were added, and some power management
      drm/amd/display: Add get_firmware_info_v3_2 for VG12
      CC      drivers/media/platform/qcom/venus/firmware.o
    rather then relying only on properties set by the firmware.
    liquidio: bump up driver version to 1.7.2 to match newer NIC firmware
    firmware expects HMA memory to be zeroed, use __GFP_ZERO
    MTU.  This is unnecessary as the max MTU advertised by firmware should have
    * Turn on SCOM_DEBUGFS - Handy for hardware/firmware debugging, security risk?
    firmware: arm_scmi: simplify exit path by returning on error
    firmware: arm_scmi: improve exit paths and code readability
    firmware: arm_scmi: remove unnecessary bitmap_zero
    firmware: arm_scmi: drop unused `con_priv` structure member
    firmware: arm_scmi: rename scmi_xfer_{init,get,put}
    firmware: arm_scmi: rename get_transition_latency and add_opps_to_device
    - Atom firmware table updates for vega12
      drm/amd/display: Add get_firmware_info_v3_2 for VG12
    firmware, then went looking for a valid xc5000 firmware to fix the
    hint on the firmware mismatch.
    drm/amd/display: Add get_firmware_info_v3_2 for VG12
    lanes with firmware version 1.25.0 or later. Also, update the LCB
    firmware: arm_scmi: fix kernel-docs documentation
    firmware: arm_scmi: improve code readability using bitfield accessor macros
    The device in question is not power managed by platform firmware,
    The BCM43364 uses the same firmware as the BCM43430 (which is already
    firmware file 'brcmfmac43430-sdio.bin'.
    firmware: arm_scmi: Use after free in scmi_create_protocol_device()
    Fixes: 907b6d14911d ("firmware: arm_scmi: add per-protocol channels support using idr objects")
    This series includes a bug fix for a regression in firmware message polling
    in one case.  If the VF driver gets a valid MAC address from the firmware
    This assumption is not correct.  Newer firmware remembers the VF MAC
    without setting enables flag in the firmware request. SFP module id is
    messages from firmware rejecting the unsupported firmware calls.
    bnxt_en: Fix firmware message delay loop regression.
    A recent change to reduce delay granularity waiting for firmware
    It's rather common that a firmware is loaded into an SDIO func device
    However, to actually start running the new firmware, sometimes a soft reset
    scsi: lpfc: Handle new link fault code returned by adapter firmware.
    In situations when the firmware image in inappropriate for the chip
    thus allowing the firmware to be downloaded.  Eventually, after the
    download, the chip rejects the firmware but it is logged as a generic
    firmware download error.
    firmware error conditions which can occur concurrently:
    scsi: qedf: Improve firmware debug dump handling
    Get all firmware debug data instead of just a grc dump.
       firmware behavior. Based on AddlFlags2 field FW/Driver behaviour can
    provided by the management firmware.
    path (platform firmware reads error state from hardware and sends it to
    if firmware is capable. Userspace tool ‘iw’ can process this
      One i915 model firmware, two vmwgfx fixes, one vc4 fix and one bridge
    via firmware, often from secure boot ROM or hardware fuses at boot time.
    firmware: ti_sci: Switch to SPDX Licensing
    simply packs the data into a firmware notification message and sends
    Dropped/lost firmware notification messages will not cause "lost
    the card's FPGA firmware and usable for all kind of cards, without the
    implemented in the card firmware.
    cxgb4: update latest firmware version supported
    Change t4fw_version.h to update latest firmware version
    firmware.
    And for the firmware (IBRS to be set), see patch titled:
    which either comes from firmware node, or comes from debounce value
      Input: atmel_mxt_ts - fix the firmware update
    Add DMC firmware for Geminilake.
    drm/i915/firmware: Correct URL for firmware
    Replace 01.org URL with upstream linux-firmware repo URL.
    We no longer release firmware to 01.org.
    linux-firmware.git is the ultimate place to find
    the i915 firmwares.
    NIC firmware does not support disabling rx vlan offload, but the VF driver
    be pretty depending on the device (and the firmware in it), so it's
    differently depending on the firmware, and we can't set it
    Newer versions of the firmware for the Qualcomm Datacenter Technologies
    newer (restricted) firmware, it will fail to probe.
    Support for QCOM8001 is removed as there is no longer any firmware that
    drm/i915: add support for specifying DMC firmware override by module param
    Use i915.dmc_firmware_path to override default firmware for the platform
    firmware, which causes a fault.
    firmware upgrade.
    querying pfc stats, firmware returns error when trying to
    Input: atmel_mxt_ts - fix the firmware update
    resulting always in a failure and firmware flashing action
    [dtor: adjusted vendor spelling to match shipping firmware]
    firmware.
    A hostready signal is introduced to inform firmware through mailbox
    brcmfmac: constify firmware mapping tables
    The information in the firmware mapping does not need to be modified
    due to firmware requirement. Add an explicit check for this requirement
    mwifiex: always configure firmware mac address during changing virtual interface
    When interface type changed, firmware using a new connction pointer.
    mwifiex: make firmware mac address consistent with host configuration
    For user configurated mac address, directly set to firmware with no change.
    * Hardening of the firmware loading code to avoid issues with
    (and have its firmware reloaded) for bluetooth to work after
    to the firmware. This is never the case with runtime power
    As the Geminilake firmware is now merged to linux-firmware.git
    use MODUE_FIRMWARE to load the firmware.
        i915 0000:00:02.0: Direct firmware load for
        i915 0000:00:02.0: Failed to load DMC firmware
        i915 0000:00:02.0: DMC firmware homepage:
            https://01.org/linuxgraphics/downloads/firmware
    and now shows that the firmware has correctly loaded:
        [drm] Finished loading DMC firmware i915/glk_dmc_ver1_04.bin (v1.4)
    Testing with DIM enabled on older kernels indicated that firmware calls
    latency of firmware calls on newer Intel processors.
    bnxt_en: Do not set firmware time from VF driver on older firmware.
    Older firmware will reject this call and cause an error message to
    bnxt_en: Check the lengths of encapsulated firmware responses.
    * fix a regression with the older firmware API 31 (eg. 31.560484.0)
     "Here are some small driver core and firmware fixes for 4.17-rc3
      firmware: some documentation fixes
      selftests:firmware: fixes a call to a wrong function name
      firmware: Fix firmware documentation for recent file renames
      test_firmware: fix setting old custom fw path back on exit, second try
      test_firmware: Install all scripts
      firmware: arm_scmi: remove redundant null check on array
    Very recently, open source system firmware like coreboot started unsetting
    Tested on QCA9984 with firmware-5.bin_10.4-3.5.3-00057
    As the Geminilake firmware is now merged to linux-firmware.git
    use MODUE_FIRMWARE to load the firmware.
        i915 0000:00:02.0: Direct firmware load for
        i915 0000:00:02.0: Failed to load DMC firmware
        i915 0000:00:02.0: DMC firmware homepage:
            https://01.org/linuxgraphics/downloads/firmware
    and now shows that the firmware has correctly loaded:
        [drm] Finished loading DMC firmware i915/glk_dmc_ver1_04.bin (v1.4)
    with a Sandisk SD7UB3Q256G1001 SSD (firmware version X2180501) is
    the quirk list in the future: name - firmware
    get a firmware warning when deleting the remaining destinations on the
    There are many OEM customized firmware versions for the PM830, so for now
    lets assume this is firmware version specific and blacklist LPM based on
    the firmware version.
      firmware: arm_scmi: remove redundant null check on array
    to enter the deepest state advertised by firmware. If CPUIDLE is not
    The page loading code trusts the data provided in the firmware images
    iwlwifi: introduce Image Loader (IML) - new firmware image
    loads the rest of the firmware images to the device.
    a firmware decides to enforce them.
    wilc_wlan_get_firmware()
    firmware: some documentation fixes
    selftests:firmware: fixes a call to a wrong function name
     This is a patch to the tools/testing/selftests/firmware/fw_run_tests.sh
    staging: ks7010: use u8 instead of unsigned char for firmware buffers
    is being used for firmware buffers with u8 type which is preferred.
    * add firmware memory dump support for QCA9984
    Fixes: c3b2f7ca4186 ("qtnfmac: implement asynchronous firmware loading")
    supported by the same firmware as 4366c0.
    This driver manages the Generic Interface (GENI) firmware based Qualcomm
    firmware: qcom: scm: Add ipq4019 soc compatible
    OPAL_BUSY_EVENT from firmware, which causes large scheduling
    params' internal frame to firmware. This patch takes care of it.
    sequence. This change fixes a firmware hang issue observed during
    * Station notify frame is send to firmware after sending assoc
      delay in creation of station control block in firmware.
    because this bit can be cleared by the hardware/firmware before the
    ALSA: dice: improve support for ancient firmware for DICE
    In early stage of firmware SDK, DICE seems to lose its backward
    this with Alesis Multimix 12 FireWire with ancient firmware (approx.
    This commit adds support for the ancient firmware. Check of global section
    can't handle this unit, too. This means that TCAT releases firmware SDK
    without backward compatibility for the ancient firmware.
    Below list is a early history of driver/firmware package released by
     * Unknown: PAL v1.0.41.2, firmware v1.0.3
     * Mar 2006: PAL v1.54.0, firmware v1.0.4
     * Dec 2006: PAL v2.0.0.2, firmware v2.0
     * Jun 2007: PAL v3.0.41.5, firmware v2.0
     * Jul 2007: PAL v3.0.56.2. firmware v2.0
     * Jan 2008: PAL v3.0.81.1080, firmware v2.0
    If I can assume that firmware version is the same as DICE version, DICE
    version for the issued firmware may be v1.0.3. According to code base of
    When the firmware doesn't enumerate the PCI bus and leaves it up to the
    bad, and we have already applied some workaround to avoid the firmware
    of version 7 was updated, causing older versions of the firmware to
    them to the firmware message. The driver currently tells the core that
    wcn36xx: handle scan cancellation when firmware support is missing
    For firmwares that don't have the SCAN_OFFLOAD feature bit set, do
    pending that can't be stopped due to firmware hickups, wcn->scan_req
    When the firmware sends a WCN36XX_HAL_SCAN_IND_DEQUEUED indication,
    will be ignored by the firmware which does not support
    in the wcn3990 firmware the checksum is incorrect in the TCP/UDP packets
    The firmware message to delete BSS keys expects a BSS index to be passed.
    we received from the firmware when the BSS was configured.
    done after the firmware command was sent. This reportedly fixes the
    Also, AFAIU, when a BSS is deleted, the firmware apparently drops all the
    offset parameter is used for 802.3, but the actual offset firmware
    rx_decap_mode is ATH10K_HW_TXRX_NATIVE_WIFI, then firmware will
    Tested with QCA6174 hw3.0 with firmware
    This has always failed, so it's not a regression with new firmware
    based on the service bit firmware reported. Driver sets the
    spoofed flag in scan_ctrl_flag to firmware if upper layer has
    Test with QCA6174 hw3.0 and firmware-6.bin_WLAN.RM.4.4.1-00102-QCARMSWP-1,
    for firmware to notice new WLAN service to host driver. Hereby,
    for thoese new WLAN service, firmware will notice host driver by
    firmware: bcm47xx_nvram: Support small (0x6000 B) NVRAM partitions
       in firmware file header. There are two reports (one from an OpenWrt
    message from firmware) introduced a bug by using wrong source address in
    Fixes: fe014d4e6b55 (staging: wilc1000: free memory allocated for general info message from firmware)
            nct6683 nct6683.2592: NCT6683D EC firmware version 1.0 build 07/18/16
    staging: ks7010: Replace mdelay with usleep_range in ks7010_upload_firmware
    ks7010_upload_firmware() is never called in atomic context.
    The call chain ending up at ks7010_upload_firmware() is:
    [1] ks7010_upload_firmware() <- ks7010_sdio_probe()
    Despite never getting called from atomic context, ks7010_upload_firmware()
    staging: ks7010: ks7010: factor out firmware copy process into ks7010_copy_firmware
    This commit extracts firmware copy process into a new function
    ks7010_copy_firmware. Because rom_buf is only needed for this
    been renamed to release_host into ks7010_upload_firmware original
    staging: ks7010: fix error handling in ks7010_upload_firmware
    if the firmware is running reading General Communication
    It also set ret to EBUSY if firmware is running before
    firmware: coreboot: Add coreboot framebuffer driver
    firmware: coreboot: Remove unused coreboot_table_find
    firmware: vpd: Probe via coreboot bus
    firmware: memconsole: Probe via coreboot bus
    firmware: coreboot: Expose the coreboot table as a bus
    firmware: Fix firmware documentation for recent file renames
    firmware_class.c was split into several files under
    drivers/base/firmware_loader. The new main.c has the functions which
    /request_firmware.rst references.
    test_firmware: fix setting old custom fw path back on exit, second try
    Commit 65c79230576 tried to clear the custom firmware path on exit by
    writing a single space to the firmware_class.path parameter.  This
    and fw_get_filesystem_firmware() only ignores zero-length paths.
    Fixes: 0a8adf58475 ("test: add firmware_class loader test")
    Fixes: 65c79230576 ("test_firmware: fix setting old custom fw path back on exit")
    test_firmware: Install all scripts
    "make TARGETS=firmware install" keeps working.
    Fixes: 29a1c00ce1df8 ("test_firmware: add simple firmware firmware test ...")
    Fixes: b3cf21fae1fe0 ("test_firmware: test three firmware kernel configs ...")
    not supported by the platform SCMI firmware.
    On some boards, under heavy load, the EC firmware is
    reserve the firmware framebuffer so that we can inherit it would always
    fail, as the firmware framebuffer starts at address 0.
    framebuffer as the firmware is doing (see note below).
    This fixes the i915 driver no longer being able to inherit the firmware
    that the firmware framebuffer is a linear mapping of the stolen memory
    scsi: ips: fix firmware timestamps for 32-bit
    32-bit platforms, leading to incorrect times passed to the firmware.
    calculation passes an 8-bit century number into the firmware that can
    time64_to_tm() to convert it into the firmware format greatly simplifies
    use the result to pass into a 32-bit field in the firmware, which still
    risks an overflow, but if the firmware is written to expect unsigned
    no different from doing a firmware upgrade on KVM.
    This is implemented as a new class of "firmware" registers, where
     - Prevent crashes in our RFI fallback flush handler if firmware didn't
    optional" relies on that the bootloader or firmware has deasserted
    Most of this will go away once the 22000 firmware supports adaptive
    In some firmware images, the length of BNX_DIR_TYPE_PKG_LOG nvram type
    Fixes: 3ebf6f0a09a2 ("bnxt_en: Add installed-package firmware version reporting via Ethtool GDRVINFO")
    ath10k-firmware repository) for the default BDF to occur in an earlier
    firmware assert that happens when ring indices of copy engine 5 are stuck
    ring arithmatic. As a result,firmware asserts did not go away entirely
    firmware version: 10.4-3.5.3-00052.
    primarily for slow operations, like firmware writes.
    For some firmware variants - specifically 'capture packed stream' - RSS
    6. Added some firmware stats description and removed for some
    The dummy firmware interface functions return 0, which means success,
    Note that this assumes the firmware always fills in the requested data
    Fixes: d45f1a563b92dac7 ("staging: vc04_services: fix up rpi firmware functions")
    Due to a firmware bug, the hypervisor can send an interrupt to a
    flag for the interrupt line is still set in firmware. No further
    firmware: arm_scmi: remove redundant null check on array
       conditions from firmware.
       actually the minimal set when we build with support for firmware
      firmware: dmi_scan: Use lowercase letters for UUID
      firmware: dmi_scan: Add DMI_OEM_STRING support to dmi_matches
      firmware: dmi_scan: Fix UUID length safety check
      platform/chrome: cros_ec_lpc: Add support for Google devices using custom coreboot firmware
    Warn if an IRQ doesn't have a valid PASID (indicating a firmware bug).
         generic SMCCC-based firmware call
    firmware.
    firmware: dmi_scan: Use lowercase letters for UUID
    firmware: dmi_scan: Add DMI_OEM_STRING support to dmi_matches
    firmware: dmi_scan: Fix UUID length safety check
    Fixes: a814c3597a6b ("firmware: dmi_scan: Check DMI structure length")
    DSP_RUN needs to be disabled during firmware write otherwise
    is already running firmware.
     4) When using 1.x firmware on aquantia, issue a deinit before we
      net: aquantia: Regression on reset with 1.x firmware
    drm/amd/pp: Use release_firmware directly in powerplay
    net: aquantia: Regression on reset with 1.x firmware
    On ASUS XG-C100C with 1.5.44 firmware a special mode called "dirty wake"
    OPAL_BUSY_EVENT from firmware, which causes large scheduling
       - firmware: Use mac_pton() for MAC address parsing
    The firmware code cannot cope with requests to remove BSS indices that have
    which subsequently leads to a firmware crash:
    that have not been configured in the firmware, and don't call into the
    firmware with invalid indices.
    firmware and OS can agree, and if a particular call needs something
    possible, so non-fatal firmware errors don't cause hangs.
    platform/chrome: cros_ec_lpc: Add support for Google devices using custom coreboot firmware
    custom coreboot firmware.
    a custom firmware.
    os_info is updated only when /sys/firmware/reipl/reipl_type is
    under /sys/firmware/reipl/{reipl_type}/ without subsequent write to
    /sys/firmware/reipl/reipl_type lead to incorrect os_info reipl block
    In this case, skb->data comes from the hardware or firmware so it's not
    going to overflow unless there is a firmware bug.
    brcmfmac: fix firmware request processing if nvram load fails
    Fixes: d09ae51a4b67 ("brcmfmac: pass struct in brcmf_fw_get_firmwares()")
    This matches what the HWS firmware expects on GFXv9 chips.
    A 'short' ARS request asks platform firmware to return an ARS payload
    description is invalid.  It was due to a concern of any funky firmware
         drivers/firmware and drivers/reset across platforms"
      firmware: arm_scmi: prevent accessing rate_discrete uninitialized
      firmware, DMI: Add function to look up a handle and return DIMM size
    The allocation/deallocation operations are using new firmware
    by the firmware (once dt_cpu_ftrs gains versioning support).
      There's really not much here, just a bunch of firmware code
      mt7601u: use firmware_request_cache() to address cache on reboot
      firmware: add firmware_request_cache() to help with cache on reboot
      firmware: fix typo on pr_info_once() when ignore_sysfs_fallback is used
      firmware: explicitly include vmalloc.h
      firmware: ensure the firmware cache is not used on incompatible calls
      test_firmware: modify custom fallback tests to use unique files
      firmware: add helper to check to see if fw cache is setup
      firmware: fix checking for return values for fw_add_devm_name()
      rename: _request_firmware_load() fw_load_sysfs_fallback()
      test_firmware: test three firmware kernel configs using a proc knob
      test_firmware: expand on library with shared helpers
      firmware: enable to force disable the fallback mechanism at run time
      firmware: enable run time change of forcing fallback loader
      firmware: move firmware loader into its own directory
      firmware: split firmware fallback functionality into its own file
      firmware: move loading timeout under struct firmware_fallback_config
      firmware: use helpers for setting up a temporary cache timeout
      firmware: simplify CONFIG_FW_LOADER_USER_HELPER_FALLBACK further
      pata_it821x: Delete an error message for a failed memory allocation in it821x_firmware_command()
    Port the atomfirmware.h and populates the
    ("powerpc/powernv: Return secondary CPUs to firmware before FW update"),
    destination system with unpatched firmware), but some flags are not
      firmware/dmi_scan: Uninline dmi_get_bios_year() helper
    Read the Inline TLS capability from firmware.
    Misc. updates including updated firmware interface, some additional
    for the new firmware ring reservation scheme.  The new scheme requires
    the vectors used by bnxt_en on new firmware using the new scheme.
    bnxt_en: Improve valid bit checking in firmware response message.
    When firmware sends a DMA response to the driver, the last byte of the
    The firmware spec allows these response messages to increase in
    bnxt_en: Check max_tx_scheduler_inputs value from firmware.
    need to check the current max_tx_scheduler_inputs parameter from firmware.
    bnxt_en: Update firmware interface to 1.9.1.15.
    feature sets because they are intended to be enabled by firmware.
    platform firmware or the OS, so the host bridge driver may have to request
    interface down in firmware, firmware continuously enqueues rx traffic to
    firmware to stop queueing packets to host via send_rx_ctrl_cmd(lio, 0).
    Also, ensure that the packet headroom reserved by the flower firmware is
    number in firmware CPU discovery. Use that rather than setting
    * add firmware memory dump for QCA9984
    * support for a new firmware API version
    firmware) sometimes do not get processed in a timely manner.  Reason is:
    ctrl_qpg field in the oct_txpciq struct.  It is the NIC firmware that does
    * add firmware memory dump for QCA9984
    ath10k: fix vdev stats for 10.4 firmware
    only for TLV based firmware and fix it for 10.4 firmware
    as of now. The vdev stats in 10.4 firmware is split into two
    newer 10.4 based firmware, these counters will be displayed
    Frimware: firmware-5.bin_10.4-3.5.3-00053
    For WPA encryption, QCA6174 firmware(version: WLAN.RM.4.4) will unblock
    4-way handshake firmware will unblock the data when peer authorized. Since
    TDLS is 3-way handshake host need send authorize cmd to firmware to unblock
    QCA6174 firmware(version: WLAN.RM.4.4) support TDLS link inactivity detecting.
    QCA6174 firmware(version: WLAN.RM.4.4) support TDLS peer buffer STA,
    wcn36xx: Fix firmware crash due to corrupted buffer address
    concurent tx call, leading to potential buffer coruption and firmware
    It appears that the WCN36xx firmware doesn't actually respond to
    firmware coredump file. Some of the regions need to be read using ioread() so
    ath10k: add FW API 6 firmware image for QCA9377
    The firmware of QCA6174/QCA9377 already support the feature, just enable
    QCA6174, only firmware-4.bin doesn't support this, otherwise all support.
    QCA9377, all the firmwares upstreamed support this command
    WMI_PEER_ASSOC_CMDID cause firmware to assert due to resource exhaust.
    Now the firmware assert doesn't happen anymore.
    Issue observed in QCA9984 platform with firmware version:10.4-3.5.3-00053.
    This Change tested in QCA9984 with firmware version: 10.4-3.5.3-00053 and
    QCA988x platform with firmware version: 10.2.4-1.0-00036.
    ath10k_pci 0002:01:00.0: firmware crashed! (guid e61f1274-9acd-4c5b-bcca-e032ea6e723c)
    ath10k_pci 0002:01:00.0: firmware ver 10.4-3.5.3-00053 api 5 features no-p2p,mfp,peer-flow-ctrl,btcoex-param,allows-mesh-bcast crc32 4c56a386
    ath10k_pci 0002:01:00.0: firmware register dump:
         firmware interface for describing CPU features.
    staging: wilc1000: free memory allocated for general info message from firmware
    information message received from the firmware. Added NULL check and used
    In some firmware configuration, UMR usage from Virtual Functions is restricted.
    in a "funky" state - and we try to open them. But the modem firmware
    information for SeaBIOS. The information is extracted from the firmware
    These systems firmware don't set the chassis capability bit in the Get
      firmware: arm_scmi: prevent accessing rate_discrete uninitialized
    - firmware: update init to use module_platform_driver_probe
      firmware: meson-sm: rework meson_sm_init to use module_platform_driver_probe
    Merge tag 'tegra-for-4.17-firmware' of ssh://gitolite.kernel.org/pub/scm/linux/kernel/git/tegra/linux into next/drivers
    Pull "firmware: Changes for v4.17-rc1" from Thierry Reding:
    * tag 'tegra-for-4.17-firmware' of ssh://gitolite.kernel.org/pub/scm/linux/kernel/git/tegra/linux:
      firmware: tegra: adjust tested variable
      firmware: tegra: Simplify channel management
    based on the firmware flag.
    firmware.
    receive from firmware regarding Spectre/Meltdown mitigations.
    The feature names reflect the names we are given by firmware on bare
    Arguably these could be firmware features, but that then requires them
    incompatible with the way firmware features work (at the moment at
        firmware versions prohibited using SYS-DMAC2.  This restriction has
    firmware/dmi_scan: Uninline dmi_get_bios_year() helper
    mt76: use mt76_poll_msec routine in mt76pci_load_firmware()
    Use mt76_poll_msec() in mt76pci_load_firmware to check if the firmware
    to get the needed firmware name.
    brcmf_fw_request_firmwares() function.
    brcmfmac: pass struct in brcmf_fw_get_firmwares()
    Make the function brcmf_fw_get_firmwares() a bit more easy to extend
    brcmfmac: derive firmware filenames from basename mapping
    Instead of defining individual filenames for firmware and nvram
    brcmfmac: do not convert linux error to firmware error string
    maps it to a firmware error string which should not happen. Simply
    it's loaded but without the DMC firmware being available.
           firmware. The driver can configure the Tx scheduler tree by
    1) A VSI is allocated in the firmware using the "add VSI" admin queue
       command (implemented as ice_aq_add_vsi). The firmware returns an
       the firmware's VSI queue allocation imap. If the VSI can't get a
    On boot, an L2 switch element is created in the firmware per physical
    the firmware and stored by the driver.
    to interact with other subsystems (like firmware, PHY, etc.). It is
    firmware.
    the driver uses it to get the firmware version.
    It works with the new wmi cmd and event introduced in 10.4 firmware
    Firmware version: firmware-5.bin_10.4-3.0-00209
    - Total number MSDUs received from firmware
    gather this and related data from firmware.
    arm64/sve: Document firmware support requirements in Kconfig
    firmware.  There is no means to hide the presence of SVE from EL2,
    work correctly on SVE capable hardware unless the firmware does
    firmware to support their hardware.  However, developers may hit
    of compatible firmware versions.
    cxgb4: depend on firmware event for link status
    Depend on the firmware sending us link status changes,
    of the same product (or different versions of firmware).
      iio: chemical: ccs811: Corrected firmware boot/application mode transition
    it's loaded but without the DMC firmware being available.
    drm/i915/uc: Fetch uC firmware in init_early
    We were fetching uC firmwares in separate uc_init_fw step, while
    This will also simplify upcoming patches, as size of the firmware
    If GuC firmware is not available on the system and we load i915 with enable
    With drivers implementing rate control in driver or firmware
        The firmware SHALL not return TPM2_RC_RETRY prior to the completion
     3) Don't try to get firmware dump if not loaded in iwlwifi, from Shaul
      net: aquantia: Fix a regression with reset on old firmware
    mt7601u: use firmware_request_cache() to address cache on reboot
    request_firmware_cache() will ensure the firmware is available on resume
    from suspend if on reboot the device retains the firmware.
    reload the firmware, the opmization saves us about max 1s, minimum 10ms.
    firmware: add firmware_request_cache() to help with cache on reboot
    Some devices have an optimization in place to enable the firmware to
    requesting and loading the firmware. This can save up to 1s in load
    When these devices retain the firmware on a reboot and then suspend
    they can miss looking for the firmware on resume. To help with this we
    need a way to cache the firmware when such an optimization has taken
    firmware: fix typo on pr_info_once() when ignore_sysfs_fallback is used
    Merge branch 'mlxsw-Update-supported-firmware-version'
    mlxsw: Update supported firmware version
    The first patch bumps the firmware version supported by the driver. The
    mlxsw: spectrum: Update the supported firmware to version 13.1620.192
    This new firmware contains:
    net: aquantia: Fix a regression with reset on old firmware
    cxgb4: Support firmware rdma write completion work request.
    cxgb4: Support firmware rdma write with immediate work request.
    firmware may not be please to get such an exception. Yes, this
    connection descriptions also from firmware by using the
    media: s5p-mfc: Use real device for request_firmware() call
    Provide proper (real) struct device to request_firmware() call. This fixes
    (NULL device *): Direct firmware load for s5p-mfc-v6-v2.fw failed with error -2
    (NULL device *): Direct firmware load for s5p-mfc-v6.fw failed with error -2
    s5p-mfc 11000000.codec: Direct firmware load for s5p-mfc-v6-v2.fw failed with error -2
    s5p-mfc 11000000.codec: Direct firmware load for s5p-mfc-v6.fw failed with error -2
    on qla2200. The error handler assumes newer firmware that is available
    Fix it with separate debug prints on different firmware generations like
    - atomfirmware smu dpm table updates
    handles the driver interaction with the smu firmware
    - s3 fix for firmware loading
    Add driver firmware interface header.
    drm/amd/powerplay: update atomfirmware.h (v2)
    drm/amdgpu/gfx9: add support for vega12 firmware
    drm/amdgpu/sdma4: specify vega12 firmware
    Declare the firmware and fetch the proper file.
    drm/amd/display: Add bios firmware info version for VG12
    bios_parser_get_firmware_info() routine.
    drm/amdgpu: specify vega12 vce firmware
    Declare firmware and add support for the file.
    drm/amdgpu: specify vega12 uvd firmware
    Declare firmware and add support for the file.
    drm/amdgpu: initilize vega12 psp firmwares
    drm/amdgpu: vega12 to smu firmware
    Add the cgs interface to query the smu firmware for vega12
    and declare the firmware.
    drm/amdgpu: add gpu_info firmware for vega12
    media: af9015: refactor copy firmware to slave demod
    media: af9015: refactor firmware download
      the firmware bug.
    firmware: explicitly include vmalloc.h
    drivers/base/firmware_loader/fallback.c: In function 'map_fw_priv_pages':
    drivers/base/firmware_loader/fallback.c:232:2: error: implicit declaration of function 'vunmap'; did you mean 'kunmap'? [-Werror=implicit-function-declaration]
    drivers/base/firmware_loader/fallback.c:233:18: error: implicit declaration of function 'vmap'; did you mean 'kmap'? [-Werror=implicit-function-declaration]
    drivers/base/firmware_loader/fallback.c:233:16: warning: assignment makes pointer from integer without a cast [-Wint-conversion]
    drivers/base/firmware_loader/fallback.c: In function 'firmware_loading_store':
    drivers/base/firmware_loader/fallback.c:274:4: error: implicit declaration of function 'vfree'; did you mean 'kvfree'? [-Werror=implicit-function-declaration]
    drivers/base/firmware_loader/fallback.c: In function 'fw_realloc_pages':
    drivers/base/firmware_loader/fallback.c:405:15: error: implicit declaration of function 'vmalloc'; did you mean 'kvmalloc'? [-Werror=implicit-function-declaration]
    drivers/base/firmware_loader/fallback.c:405:13: warning: assignment makes pointer from integer without a cast [-Wint-conversion]
    Sometimes (firmware bug?) the V5 boost GPIO is not configured as output
    from the firmware to fix this.
    drm/amdgpu: add VCN to firmware query interface
    Need to be able to query the VCN firmware version from
      drm/msm/adreno: Use generic function to load firmware to a buffer object
      drm/msm/adreno: Define a list of firmware files to load per target
    Merge branch 'mlxsw-Adapt-driver-to-upcoming-firmware-versions'
    mlxsw: Adapt driver to upcoming firmware versions
    that is going to be denied by upcoming firmware versions.
    mlxsw: spectrum_acl: Adapt ACL configuration to new firmware versions
    However, empty ACL groups are considered invalid and upcoming firmware
    firmware: arm_scmi: prevent accessing rate_discrete uninitialized
        ../drivers/firmware/arm_scmi/clock.c:185:5: warning: 'rate_discrete'
        ../drivers/firmware/arm_scmi/clock.c:128:7: note:
    Fixes: 5f6c6430e904 ("firmware: arm_scmi: add initial support for clock protocol")
    firmware: ensure the firmware cache is not used on incompatible calls
    request_firmware_into_buf() explicitly disables the firmware cache,
    meanwhile the firmware cache cannot be used when request_firmware_nowait()
    issues undocumented behaviours should misuses of the firmware cache
    One of the reasons we want to enforce this is the firmware cache is
    test_firmware: modify custom fallback tests to use unique files
    Users of the custom firmware fallback interface is are not supposed to
    use the firmware cache interface, this can happen if for instance the
    one of the APIs which use the firmware cache is used first with one
    firmware file and then the request_firmware_nowait(uevent=false) API
    We'll soon become strict about this on the firmware interface to reject
    firmware: add helper to check to see if fw cache is setup
    Add a helper to check if the firmware cache is already setup for a device.
    firmware: fix checking for return values for fw_add_devm_name()
    Currently fw_add_devm_name() returns 1 if the firmware cache
    correctness. It is actually non-fatal if the firmware cache
    device so that prior to suspend we cache the firmware onto memory,
    so that on resume the firmware is reliably available. We never
    really rare cases we my have never setup the firmware cache for
    devres firmware cache names on v3.7.
    Fixes: f531f05ae9437 ("firmware loader: store firmware name into devres list")
    rename: _request_firmware_load() fw_load_sysfs_fallback()
    test_firmware: test three firmware kernel configs using a proc knob
    the built-in functionality of the built-in firmware.
    test_firmware: expand on library with shared helpers
    firmware: enable to force disable the fallback mechanism at run time
    You currently need four different kernel builds to test the firmware
    to test the firmware API down to two.
    firmware: enable run time change of forcing fallback loader
    firmware API completely:
    firmware: move firmware loader into its own directory
    firmware: split firmware fallback functionality into its own file
    The firmware fallback code is optional. Split that code out to help
    distinguish the fallback functionlity from othere core firmware loader
    if you enable firmware loading is so that we can later enable the kernel
    firmware loader is modular.
    firmware: move loading timeout under struct firmware_fallback_config
    timeout configuration under struct firmware_fallback_config.
    firmware: use helpers for setting up a temporary cache timeout
    We only use the timeout for the firmware fallback mechanism
    firmware: simplify CONFIG_FW_LOADER_USER_HELPER_FALLBACK further
    authenticating the ICM firmware and reading root switch config space.
    Preventing a crash on certain Lenovo systems where ICM firmware for some
    drivers/firmware/qemu_fw_cfg.c:485:17: warning: cast to restricted __be32
    drivers/firmware/qemu_fw_cfg.c:540:22: warning: cast to restricted __le32
    $ make C=1 CF=-D__CHECK_ENDIAN__ drivers/firmware/qemu_fw_cfg.o
    drivers/firmware/qemu_fw_cfg.c:491:29: warning: incorrect type in assignment (different base types)
    drivers/firmware/qemu_fw_cfg.c:491:29:    expected restricted __be32 [usertype] size
    drivers/firmware/qemu_fw_cfg.c:491:29:    got unsigned int
    drivers/firmware/qemu_fw_cfg.c:492:31: warning: incorrect type in assignment (different base types)
    drivers/firmware/qemu_fw_cfg.c:492:31:    expected restricted __be16 [usertype] select
    drivers/firmware/qemu_fw_cfg.c:492:31:    got int
    $ make C=1 CF=-D__CHECK_ENDIAN__ drivers/firmware/qemu_fw_cfg.o
    drivers/firmware/qemu_fw_cfg.c:55:33: warning: restricted __be16 degrades to integer
    drivers/firmware/qemu_fw_cfg.c:55:52: warning: restricted __le16 degrades to integer
      libata: Make Crucial BX100 500GB LPM quirk apply to all firmware versions
    firmware. This commit splits the "Crucial_CT512MX100*" quirk into 2
    quirks, one for the "MU01" firmware and one for all other firmware
    "MU01" firmware version.
    libata: Make Crucial BX100 500GB LPM quirk apply to all firmware versions
    but limited this to the MU02 firmware version, according to:
    http://www.crucial.com/usa/en/support-ssd-firmware
    firmware versions.
    Note the reporters Crucial_CT480M500SSD3 has a firmware version of MU03
    LPM fixes in its changelog, so the quirk matches all firmware versions.
    limited to higher capacity versions of the SSDs (different firmware?),
    by the firmware. It is expected that all the MACs will evacuate the
      properties are provided to kernel by firmware. Thsi patch adds new
    through machine description provided by the firmware. This patch adds
    Testing brcmfmac with more recent firmwares resulted in AP interfaces
    support for IAPP in Broadcom's firmwares.
    Older firmwares were only generating 802.11f frames. Newer ones like:
       disassociation perfromed by a firmware (possible local DoS attack).
    We have forced usb3 to work in usb2 only mode in firmware by setting
    into the phy_cfg before sending it to the firmware.  And also create a
    which means that the firmware wasn't flushing the right
    queue and we could get a firmware crash upon remove
    stations. The firmware will know how to handle this even
    [   42.900602]  ? firmware_map_remove+0xdf/0xdf
    [   43.051604]  ? firmware_map_remove+0xdf/0xdf
    recent kernels, as it tries to load a wrong firmware
    drm/amdgpu: use adev->firmware to determine whether to load the PSP module
    The per device firmware load method is limited to what makes sense for
    drm/amdgpu: move firmware loading type setup to common code
    firmware: enable to split firmware_class into separate target files
    The firmware loader code has grown quite a bit over the years.
    In order to split the firmware loader code into different components
    keep the firmware_class name to remain compatible with scripts which
    The firmware_class used to represent the idea that the code was a simple
    sysfs firmware loader, provided by the struct class firmware_class.
    The sysfs firmware loader used to be the default, today its only the
    test_firmware: replace syfs fallback check with kconfig_has helper
    test_firmware: enable custom fallback testing on limited kernel configs
    request firmware API call request_firmware_nowait() using the custom
    test_firmware: add simple firmware firmware test library
    10GBASE-T ports. Same driver and firmware works for liquidio NIC with
       WOPCM offset register based on the presence of HuC firmware (Michal)
    drm/i915: Add HuC firmware size related restriction for Gen9 and CNL A0
    available GuC WOPCM size to be larger than or equal to HuC firmware size.
    size to be larger than or equal to HuC firmware size on both Gen9 and CNL
    will lead to GuC firmware execution failures. On the other hand, with
    HuC firmware size (which is likely less than 200KB on Gen9), so that we can
    WOPCM that will be based on platform specific HuC/GuC firmware sizes.
     - Init GuC WOPCM partition as soon as firmware fetching is completed
    The VCHIQ firmware communication channel operates in parallel with our
    exposes the firmware's media decode/encode and ISP interfaces.
    binding, so we have to use the firmware's fallback value.
    staging: vc04_services: Replace "firmware" node with a compatible lookup.
    firmware, DMI: Add function to look up a handle and return DIMM size
      - Add GPIO ACPI mapping table to behave correctly when firmware
    thunderbolt: Prevent crash when ICM firmware is not running
    that the ICM firmware is not running properly. This is most likely an
    issue in BIOS/firmware but as side-effect driver crashes the kernel due
    to be handled in firmware code due to access permissions on those
    the only ones that cannot be dealt with by the firmware.
    address to the firmware in the wmi command. Since the
      Pi GPIO expander which is controlled via the VC4 firmware
      ARM: dts: bcm2835: make the firmware node into a bus
    firmware versions prohibited using SYS-DMAC2.  This restriction has been
    mwifiex: get_channel from firmware
    firmware.
    After firmware is loaded, based on the operating mode CARD
    (i.e. wlan and BT). Actual coex implementation is in firmware.
    Coex module just schedule the packets to firmware by taking them
    firmware and library, it is recommended to disable dynamic clock and
    and use it during firmware and library download.
    minimum MTU value provided by firmware, so pad small packets
    for that when providing the L2 header to firmware.
    firmware names.
    commit a56f7428d753 ("drm/radeon: Add early unregister of firmware fb's").
    check firmware capabilities before setting ethtool
    In a scenario where the command queued to firmware get dropped or times
    out, MTU change from host will not propagate to firmware. So, it is
    required for host driver to wait for response from firmware or timeout
    warning in firmware logs.
    the firmware message.
      not stable and useless with the updated firmware
    Since the firmware cmd to setup mac pause params is the same as the
    firmware cmd to pfc pause params, this patch unifies the pause params
     - The SMCCC firmware interface for the spectre variant 2 mitigation has
       value from firmware.
    allows firmware to return a non zero, positive value to describe
     "One notable fix to properly advertise our support for a new firmware
    Intel Titan Ridge is the next Thunderbolt 3 controller. The ICM firmware
    This patch add support for Intel Titan Ridge and the new ICM firmware
    message to the ICM firmware. Only the devices listed in the boot ACL are
    The ICM firmware rejects devices if the maximum topology limit is
    While there fix icm_firmware_init() to return the real error code
    likelihood that these firmware images have all been replaced by that time.
    this when stepping through the firmware causes us to skip 16 bytes every
    Instead use fragment size steps through the firmware blob.
    * some firmware debugging fixes
    * fix a firmware sysassert most usually triggered in IBSS
    * add possibility to obtain firmware error
    firmware: tegra: adjust tested variable
    firmware: tegra: Simplify channel management
    media: si2168: fix a comment about firmware version
    With firmware 4.0.11, sleep/resume works well without
    need of download it every time. But firmware 4.0.19
    on a device, however, it is possible to probe the clocks from the firmware
    Fixes: 11e4438ee330 ("irqdomain: Introduce a firmware-specific IRQ specifier structure")
    Fixes: 08d53aa58cb1 ("of/fdt: export fdt blob as /sys/firmware/fdt")
    firmware: meson-sm: rework meson_sm_init to use module_platform_driver_probe
    Commit 3aa0582fdb82 ("of: platform: populate /firmware/ node from
    all the devices under the /firmware/ node in of_platform_default_populate_init()
    rule). Therefore, we register new set of firmware like commands for
    by the firmware behavior addressed in a7ae81952cda ("i2c: i801: Allow
       - SCMI just needs a mechanism to signal the remote firmware. Such
      firmware: arm_scmi: add device power domain support using genpd
      firmware: arm_scmi: add per-protocol channels support using idr objects
      firmware: arm_scmi: refactor in preparation to support per-protocol channels
      firmware: arm_scmi: add option for polling based performance domain operations
      firmware: arm_scmi: add support for polling based SCMI transfers
      firmware: arm_scmi: probe and initialise all the supported protocols
      firmware: arm_scmi: add initial support for sensor protocol
      firmware: arm_scmi: add initial support for power protocol
      firmware: arm_scmi: add initial support for clock protocol
      firmware: arm_scmi: add initial support for performance protocol
      firmware: arm_scmi: add scmi protocol bus to enumerate protocol devices
      firmware: arm_scmi: add common infrastructure and support for base protocol
      firmware: arm_scmi: add basic driver infrastructure for SCMI
    through the commit 81faa5566864 ("firmware: arm_scpi: Revert updates made
      firmware: arm_scpi: improve info message for pre-1.0 firmware
      firmware: arm_scpi: use FIELD_GET/_PREP to simplify macro definitions
      firmware: arm_scpi: remove struct sensor_capabilities
      firmware: arm_scpi: fix incorrect __iomem accesses using correct accessors
      firmware: arm_scpi: remove all single element structures
      firmware: arm_scpi: drop unnecessary type cast to scpi_shared_mem
      firmware: arm_scpi: improve struct sensor_value
      firmware: arm_scpi: improve handling of protocol and firmware version subfields
      firmware: arm_scpi: improve struct dvfs_info to make code better readable
      firmware: arm_scpi: make scpi_probe completely device-managed
      firmware: arm_scpi: make freeing mbox channels device-managed
      firmware: arm_scpi: remove two unneeded devm_kfree's in scpi_remove
    The firmware has a requirement that the P2P_DEVICE address should
    brcmfmac: add possibility to obtain firmware error
    The feature module needs to evaluate the actual firmware error return
    Fixes: b69c1df47281 ("brcmfmac: separate firmware errors from i/o errors")
    * Lego EV3 gains firmware recovery mode support
    rather then relying only on properties set by the firmware. The platform
    crystal setup the cx25840 cannot load the firmware or
    The firmware event workqueue should not be marked as WQ_MEM_RECLAIM
    Note that these depend on the am335x-pm-firmware.elf.
    * Some firmware debugging fixes;
    * Fix a firmware sysassert most usually triggered in IBSS;
    Fixes: 7d41ef3479a6 (drm/i915: Add Guc/HuC firmware details to error state)
    The buses should honor the firmware interface used to register the device,
    before calling into firmware") don't need any kind of special treatment
    by firmware.
    to firmware.  This interfaces allows linux to "call back" into firmware
    feature is no longer available in firmware.  To be compatible and
    not attempt to call back into firmware on system not supporting CRU,
    drm/i915/huc: Mark firmware as failed on auth failure
    If we fail to authenticate HuC firmware, we should change
    on firmware verification failure.
    and for resolving this issue Hisilicon released new MCU firmware, but
    unfortunately the new MCU firmware has side effect and results in the
    Since Ryzen does not support PSP/SEV firmware hence i->psp_data will
    Commit 7ed915059c3001 (gpio: raspberrypi-ext: fix firmware dependency)
    built-in when the firmware is a module. But the Kconfig syntax for doing
    gpio: raspberrypi-ext: fix firmware dependency
    When the firmware driver is a loadable module, the gpio driver cannot be
    gpio-raspberrypi-exp.c:(.text+0xb4): undefined reference to `rpi_firmware_property'
    gpio-raspberrypi-exp.c:(.text+0x1ec): undefined reference to `rpi_firmware_property'
    gpio-raspberrypi-exp.c:(.text+0x360): undefined reference to `rpi_firmware_property'
    gpio-raspberrypi-exp.c:(.text+0x4d4): undefined reference to `rpi_firmware_property'
    gpio-raspberrypi-exp.c:(.text+0x670): undefined reference to `rpi_firmware_property'
    drivers/gpio/gpio-raspberrypi-exp.o:gpio-raspberrypi-exp.c:(.text+0x7fc): more undefined references to `rpi_firmware_property' follow
    gpio-raspberrypi-exp.c:(.text+0x93c): undefined reference to `rpi_firmware_get'
    firmware driver is completely disabled.
    iwlwifi: avoid collecting firmware dump if not loaded
    Trying to collect firmware debug data while firmware
    However, in older FW, the firmware will start beaconing
    This is fixed in later firmware, so make the order
    Module id is a property of firmware manifest and can vary across
    The Bay Trail SST-DSP firmware version looses track of all streams over a
    using this firmware version.
    SST / DSP firmware versions.
    the kernel, we landed a firmware change to configure this line even
    firmware change landed we kept the kernel change to deal with the fact
    update their firmware.
    firmware without the fix in it.  Specifically looking in the firmware
    Thus, by now, everyone should have the new firmware and it's safe to
      third commit is a consequence of a newer DFPE firmware which would
    IB/mlx5: Avoid passing an invalid QP type to firmware
    Current firmware refuses this as an invalid QP type, but future/past
    firmware may do something else.
    firmware: arm_scmi: add device power domain support using genpd
    firmware: arm_scmi: add per-protocol channels support using idr objects
    firmware: arm_scmi: refactor in preparation to support per-protocol channels
    firmware: arm_scmi: add option for polling based performance domain operations
    firmware: arm_scmi: add support for polling based SCMI transfers
    firmware: arm_scmi: probe and initialise all the supported protocols
    firmware: arm_scmi: add initial support for sensor protocol
    firmware: arm_scmi: add initial support for power protocol
     drivers/firmware/arm_scmi/Makefile |   2 +-
     drivers/firmware/arm_scmi/power.c  | 242 +++++++++++++++++++++++++++++++++++++
     create mode 100644 drivers/firmware/arm_scmi/power.c
    firmware: arm_scmi: add initial support for clock protocol
    firmware: arm_scmi: add initial support for performance protocol
    firmware: arm_scmi: add scmi protocol bus to enumerate protocol devices
    firmware: arm_scmi: add common infrastructure and support for base protocol
    firmware: arm_scmi: add basic driver infrastructure for SCMI
    FYI: Martin said the ROM sdma firmware works with this patch,
    but external sdma firmware still does not send breaks on a
    system memory in _clone_sg_entries before submitting it to firmware.
      drm/amd/display: provide an interface to query firmware version
    added/removed in the firmware and the appropriate net/wireless
    However, on scan offload cancellation, firmware sends a scan complete
    Preparation for a new QCA9377 firmware release. The new firmware release
    banks were not getting used in previous firmware releases.
    brcmfmac: remove duplicate pointer variable from brcmf_sdio_firmware_callback()
    In brcmf_sdio_firmware_callback() two pointer variables were used
    Now we can move brcmf_attach() until after the firmware has been downloaded
    Allocate the control rx buffer needed for firmware control interface
    required initialization before handling firmware control messages.
    qtnfmac: implement asynchronous firmware loading
    In pci probe() function start firmware loading, protocol handshake
    Tell wifi and BT firmware the default port ID to set multiports' state
    In new design, SW_DEFINE[1:0] of tx desc are used by firmware, and the TX
    Default example file wl1251-nvs.bin, found in linux-firmware repository,
    to help debugging the storage server firmware.
    Instead of keeping the firmware's pull settings, we better apply
    work-around firmware's LESM. False positive error messages were
       - use IBRS around firmware calls
      x86/speculation: Move firmware_restrict_branch_speculation_*() from C to CPP
    Whenever ath10k firmware discards a packet (HTT_TX_COMPL_STATE_DISCARD
    firmware needs two more buffers: one to hold the currently decoded frame
    multiple times without reloading the firmware.
       firmware that we support it until the bugs can be ironed out.
     - Finally two fixes for the RFI flush support, so that firmware can
      powerpc/powernv: Support firmware disable of RFI flush
      powerpc/pseries: Support firmware disable of RFI flush
      powerpc/pseries: Fix duplicate firmware feature for DRC_INFO
    iio: chemical: ccs811: Corrected firmware boot/application mode transition
    firmware state from boot to application mode. However, APP_START is not a
    is never power reset, thus the firmware could be in either boot or
    APP_START. Only if the firmware is not in application mode and has valid
    firmware application loaded, then it will continue to start transiting the
    firmware boot to application mode.
      scsi: qla2xxx: Fix double free bug after firmware timeout
    Breaking the miss rule into two (unicast and multicast) allows the firmware
    firmware: arm_scpi: improve info message for pre-1.0 firmware
    On legacy pre-1.0 firmware versions so far the following message is
    Therefore replace the message with the following if firmware doesn't
    SCP Protocol legacy pre-1.0 firmware
    firmware: arm_scpi: use FIELD_GET/_PREP to simplify macro definitions
    firmware: arm_scpi: remove struct sensor_capabilities
    firmware: arm_scpi: fix incorrect __iomem accesses using correct accessors
    firmware: arm_scpi: remove all single element structures
    firmware: arm_scpi: drop unnecessary type cast to scpi_shared_mem
    firmware: arm_scpi: improve struct sensor_value
    firmware: arm_scpi: improve handling of protocol and firmware version subfields
    firmware: arm_scpi: improve struct dvfs_info to make code better readable
    firmware: arm_scpi: make scpi_probe completely device-managed
    firmware: arm_scpi: make freeing mbox channels device-managed
    firmware: arm_scpi: remove two unneeded devm_kfree's in scpi_remove
    MINDSTORMS EV3 to reboot into a special firmware update mode.
    it will boot into a special firmware update mode where the flash memory
    powerpc/powernv: Support firmware disable of RFI flush
    Some versions of firmware will have a setting that can be configured
    powerpc/pseries: Support firmware disable of RFI flush
    Some versions of firmware will have a setting that can be configured
    The driver checking prevented G7 firmware download. The driver
    Revise the firmware download interface checking.
    Dirk adds an uncommon FW image name to the list of firmware files
    nfp: advertise firmware for mixed 10G/25G mode
    operation. Recently, firmware has been added for this configuration
    firmware will provide. Don't release the login buffer until
    Add a description of the RPi3 GPIO expander that the VC4 firmware controls.
    ARM: dts: bcm2835: make the firmware node into a bus
    This allows adding devices for which the firmware exposes control interface
        /sys/firmware/sclp_sd/config/data
        /sys/firmware/sclp_sd/config/reload
    The Raspberry Pi 3 GPIO expander is controlled by the VC4 firmware over
    I2C. The firmware mailbox interface allows the ARM core to control the
    soc: bcm2835: sync firmware properties with downstream
    Add latest firmware property tags from the latest Raspberry Pi downstream
    We were leaving them in the power on state (or the state the firmware
    powerpc/pseries: Fix duplicate firmware feature for DRC_INFO
    We had a mid-air collision between two new firmware features, DRMEM_V2
    firmware that supports both properties is not widely available, and
    Fixes: 3f38000eda48 ("powerpc/firmware: Add definitions for new drc-info firmware feature")
    firmware carries around a bunch of unused Package objects.
    The EC/ACPI firmware on Lenovo ThinkPads used to report a status
    start and stop charge thresholds in the EC and battery firmware
    x86/speculation: Move firmware_restrict_branch_speculation_*() from C to CPP
    firmware_restrict_branch_speculation_*() recently started using
    check DP SINK DPCD register to see if MST enabled. DP RX firmware may
    drm/msm/adreno: Use generic function to load firmware to a buffer object
    Move a5xx specific code to load firmware into a buffer object to
    drm/msm/adreno: Define a list of firmware files to load per target
    The number and type of firmware files required differs for each
    firmware file use a generic list of files that should be loaded
    find the appropriate firmware(s) that it needs to load.
    it is super useful for firmware debugging.
    a GPU reset (and reloading the firmware on next submit).
    x86/speculation: Use IBRS if available before calling into firmware
    But firmware isn't, so use IBRS for firmware calls if it's available.
    Ignore hpwdt.c for now. It's taking spinlocks and calling into firmware
    drm/amd/display: provide an interface to query firmware version
    We have an mst dock firmware that will emulate an EDID with bad
    check DP SINK DPCD register to see if MST enabled. DP RX firmware may
    VCE firmware?
    lost. APE firmware is missing the driver state in this
    Heartbeat mechanism with APE firmware. This heartbeat mechanism
    is needed to notify the APE firmware about driver state.
    bootloader/firmware. The Midas family of boards, including Trats2,
    have such a firmware, so allow them to use cpuidle.
    $ cat /sys/firmware/devicetree/.../partitions/partition@4c00000/label;echo
    pata_it821x: Delete an error message for a failed memory allocation in it821x_firmware_command()
    firmware. In fact, reading or writing them will cause the system
    property to indicate how the firmware has configured things.
    - New DMC firmware for 1.07 Cannonlake (Anusha)
            * Go to linux-firmware.git to get it
    firmware. These buffers contain information such number of TX
    We can free the buffer we send to firmware as soon as we get
    Dave fixes an issue where the MAC, firmware version and NPAR checks used
    to determine if shutting off the firmware LLDP engine is supported or
     - Update the sa_firmware variable and determine if DropIO request is
    scsi: qla2xxx: Fix double free bug after firmware timeout
    When the qla2xxx firmware is unavailable, eventually
     - clarify a comment about firmware speculation control
    firmware versions or NPAR enabled PFs which do not support the
    firmware version 4.33.
    be extracted from the firmware file. Generalize this interface to allow
    i40e: Add delay after EMP reset for firmware to recover
    This patch adds necessary delay for 4.33 firmware to recover after
    structures too quickly to communicate with firmware after EMP reset
    scsi: lpfc: Fix RQ empty firmware trap
    in Documentation/devicetree/bindings/arm/firmware/linaro,optee-tz.txt
      cros_ec: fix nul-termination for firmware build info
    unique mapping ID to firmware for each pool. This value is assigned
    * correct firmware RAM dump length for QCA6174/QCA9377
    * revert a recent commit which broke ath10k firmware metadata parsing
       - the bulk of the diff is regenerated firmware files, the change to
      improved one for Spectre/v2 (via a newly defined firmware interface
       - using the new firmware SMC calling convention specification update
       - removing the current PSCI GET_VERSION firmware call mitigation as
         vendors are deploying new SMCCC-capable firmware
      firmware/psci: Expose SMCCC version through psci_ops
      firmware/psci: Expose PSCI conduit
      firmware: Use PTR_ERR_OR_ZERO()
    * correct firmware RAM dump length for QCA6174/QCA9377
    * revert a recent commit which broke ath10k firmware metadata parsing
    basic NIC firmwares anyway.
    PIDR at boot. However previously the value was inherited from firmware
    ath10k_pci 0000:03:00.0: found firmware features ie (1 B)
    ath10k_pci 0000:03:00.0: found firmware features ie (4 B)
    https://github.com/qca/open-ath9k-htc-firmware/pull/71#issuecomment-361100070
    ath10k_pci 0000:02:00.0: firmware crashed during chip reset
    ath10k_pci 0000:02:00.0: firmware crashed! (uuid 5d018951-b8e1-404a-8fde-923078b4423a)
    ath10k_pci 0000:02:00.0: firmware ver  api 0 features  crc32 00000000
    Loading IORT table from initrd can be used to fix severe firmware
    allocation, stream id translation and IORT table from firmware.
    firmware is ready.
    from initrd to override which from firmware.
    Bluetooth: hci_ll: Replace mdelay with msleep in download_firmware
    download_firmware() is never called from atomic context.
    Despite never getting called from atomic context, download_firmware()
     +                      BT_ERR("Error in firmware loading err = %d,"
    use the same firmware loading mechanism as previous generation,
      ibmvnic: fix empty firmware version and errors cleanup
    If vendors haven't updated their firmware to do SMCCC 1.1, they
    We thus rely on the firmware narrowing it for us, which is not
    firmware/psci: Expose SMCCC version through psci_ops
    firmware/psci: Expose PSCI conduit
    In order to call into the firmware to apply workarounds, it is
    A new feature of SMCCC 1.1 is that it offers firmware-based CPU
    when calling into the firmware, and provides a new feature discovery
    and inject an UNDEF instead of returning an error. Since firmware
    and inject an UNDEF instead of returning an error. Since firmware
       version 1.6 of the DSM specification. This includes testing firmware
      libnvdimm/nfit_test: add firmware download emulation
      ? firmware_map_remove+0x73/0x73
      ? firmware_map_remove+0x73/0x73
    ibmvnic: fix empty firmware version and errors cleanup
    This patch makes sure that the firmware version is never NULL. Moreover,
    Fixes: a107311d7fdf ("ibmvnic: fix firmware version when no firmware level
    Cleanup around unpublished GLK firmware blobs, and other small fixes.
      firmware: dmi: handle missing DMI data gracefully
      firmware: dmi_scan: Fix handling of empty DMI strings
      firmware: dmi_scan: Drop dmi_initialized
      firmware: dmi: Optimize dmi_matches
      firmware: dmi: handle missing DMI data gracefully
      firmware: dmi_scan: Fix handling of empty DMI strings
      firmware: dmi_scan: Drop dmi_initialized
      firmware: dmi: Optimize dmi_matches
      ibmvnic: fix firmware version when no firmware level has been provided by the VIOS server
    firmware: dmi: handle missing DMI data gracefully
    firmware: dmi_scan: Fix handling of empty DMI strings
    firmware: dmi_scan: Drop dmi_initialized
    firmware: dmi: Optimize dmi_matches
    arch/x86/kernel/cpu/common.c:882:43: error: 'cpu_no_speculation' causes a section type conflict with 'e820_table_firmware_init'
    arch/x86/kernel/cpu/common.c:895:43: error: 'cpu_no_meltdown' causes a section type conflict with 'e820_table_firmware_init'
    about hardware/firmware CVE workarounds") commit right now will not
      rtc-opal: Fix handling of firmware error codes, prevent busy loops
    nvidia's firmware has a set of registers which are initially programmed
       - New firmware support for KBL/SKL
    libnvdimm/nfit_test: add firmware download emulation
    Adding support in nfit_test for DSM v1.6 firmware update sequence. The test
    will simulate the flashing of firmware to the DIMM. A bogus version string
    will be returned as the test has no idea how to parse the firmware binary.
      of: platform: populate /firmware/ node from of_platform_default_populate_init()
    ibmvnic: fix firmware version when no firmware level has been provided by the VIOS server
    Older versions of VIOS servers do not send the firmware level in the VPD
    leading but the firmware version in the ethtool will be NULL. Therefore,
    this patch fixes the firmware string and its warning.
      The majority of the work here is in the firmware subsystem, with
      firmware: Fix up docs referring to FIRMWARE_IN_KERNEL
      firmware: Drop FIRMWARE_IN_KERNEL Kconfig option
      USB: serial: keyspan: Drop firmware Kconfig options
      test_firmware: fix missing unlock on error in config_num_requests_store()
      test_firmware: make local symbol test_fw_config static
      firmware: Fix a typo in fallback-mechanisms.rst
    Since the firmwares are not yet released to public repo,
    v2: Remove the firmware versions (Michal)
    device, where it caused a firmware assert. This is described in detail
    ~9700 bytes, it will cause a firmware error that will bring the card
    we also release other firmware objects, we can avoid this BUG:
         for the firmware dual port rocee capability
      scsi: megaraid: use ktime_get_real for firmware time
       firmware limitations in some NVMe drives that are striped internally
    values. Currently these valuse used by driver/firmware for rate control
    SAE without full implementation in the kernel/firmware while still being
    firmware: Use PTR_ERR_OR_ZERO()
    drivers/firmware/efi/efi.c:610:8-14: WARNING: PTR_ERR_OR_ZERO can be used
      ata: pata_it821x: Replace mdelay with usleep_range in it821x_firmware_command
      covering an improved firmware interface (requires firmware changes)
            secure firmware
       - arm64 support for RAS (firmware first only) and SDEI (software
         delegated exception interface; allows firmware to inject a RAS
      arm64: Unconditionally enable IESB on exception entry/return for firmware-first
    assign BAR addresses to. The firmware in the switch manages this
    Michal updates the driver to pass critical errors from the firmware to
    packets by the firmware, so that the firmware will not consume LLDPDU
    LLDP packets by the firmware, so that its current state is persistent
    Calling fan related SMM functions implemented by Dell BIOS firmware on Dell
    Calling fan related SMM functions implemented by Dell BIOS firmware on Dell
    rtc-opal: Fix handling of firmware error codes, prevent busy loops
    After initial validation of SR-IOV resources, firmware will associate
    To avoid conflicts over whether platform firmware or the OS controls DPC,
    handling does not have firmware-first AER handling.
    Fixes: 73834aec7199 ("ixgbe: extend firmware version support")
    Merge branch 'cxgb4-fix-dump-collection-when-firmware-crashed'
    cxgb4: fix dump collection when firmware crashed
    Patch 1 resets FW_OK flag, if firmware reports error.
    Patch 2 fixes incorrect condition for using firmware LDST commands.
    access to collect dumps when firmware is crashed.
    cxgb4: use backdoor access to collect dumps when firmware crashed
    Fallback to backdoor register access to collect dumps if firmware
    cxgb4: fix incorrect condition for using firmware LDST commands
    Only contact firmware if it's alive _AND_ if use_bd (use backdoor
    cxgb4: reset FW_OK flag on firmware crash
    If firmware reports error, reset FW_OK flag.
    ata: pata_it821x: Replace mdelay with usleep_range in it821x_firmware_command
    After checking all possible call chains to it821x_firmware_command here,
    my tool finds that it821x_firmware_command
    And it821x_firmware_command calls kmalloc(GFP_KERNEL),
    so it proves again that it821x_firmware_command
    firmware: Fix up docs referring to FIRMWARE_IN_KERNEL
    firmware: Drop FIRMWARE_IN_KERNEL Kconfig option
    Fixes: 5620a0d1aacd ("firmware: delete in-kernel firmware")
    Fixes: 0946b2fb38fd ("firmware: cleanup FIRMWARE_IN_KERNEL message")
    USB: serial: keyspan: Drop firmware Kconfig options
    The USB_SERIAL_KEYSPAN_* firmware options no longer do anything.
    Fixes: 5620a0d1aacd ("firmware: delete in-kernel firmware")
    Bluetooth: btintel: Create common function for firmware download
    The firmware download flow for RAM SKU is same for both USB and UART
    firmware flash, it needs to be explicitly removed, otherwise we would try and
    When attempting enter factory mode on firmware that does not support it,
    Fixes: fd335ab04b3f ("Input: edt-ft5x06 - add support for M09 firmware version")
    Bluetooth: btintel: Use boot parameter from firmware file
    HCI_Intel_Reset command after downloading the firmware.
    The boot parameter is embedded in the firmware data and to support
    the firmware instead of using static values per SKU.
    the firmware and this is Intel generic command used in both USB and
    Bluetooth: hci_intel: Update firmware filename for Intel 9x60 and later
    The format of Intel Bluetooth firmware for bootloader product is
    brcmfmac: separate firmware errors from i/o errors
    When using the firmware api it can fail simply because firmware does
    adding a parameter to pass the firmware error separately and in case
    of a firmware error always return -EBADE to user-space.
    The list of supported configuration is reported by firmware during
    wireless card bring-up. Communication protocol between firmware
    qtnfmac: report hardware/firmware information via ethtool
    Enable reporting of qtnfmac hardware and firmware details
    Various bits of hardware and firmware versions are useful for debug
    TLV is used to pass ACL data to firmware in start_ap cfg80211 callback.
    Fixes: 91c1953de387 ("cxgb4: use zlib deflate to compress firmware dump")
    Fixes: 91c1953de387 ("cxgb4: use zlib deflate to compress firmware dump")
    the firmware fails to configure the VSI, so check for this state.
    In some weird circumstances with DCB enabled, the firmware can fail to
    to firmware.
    firmware provided max17042_platform_data. The CONFIG_OF implementation of
    when there is no firmware provided pdata, independent of CONFIG_OF.
    Report DS4 firmware and hardware version through sysfs for both
    Fixes: 3aa0582fdb82 ("of: platform: populate /firmware/ node from of_platform_default_populate_init()")
    Add Polaris version check if firmware support UVD encode
    The fallback RFI flush is used when firmware does not provide a way
    the year value that the firmware expects starts in 2000 while 'struct
    Fixes: b416c099472a ("scsi: arcmsr: Add a function to set date and time to firmware")
    We get stuck in the loop when firmware sends a cqe response during
    native command) to the firmware. Driver already has an existing, similar
    1. Driver will pass MFI command to the firmware if the latter supports
       NVMe encapsulated processing (not all SAS3.5 firmware supports this
    scsi: megaraid: use ktime_get_real for firmware time
    version (0x01 firmware 0x0e) now respond with incorrect data to the "Get
     psmouse serio2: trackpoint: IBM TrackPoint firmware: 0x0e, buttons: 0/0
    Please refer to the firmware build instruction on MacchiatoBin board:
    ACPI tables provided by firmware. Enabling coexistence with the DT
      world, the firmware is responsible for clock maintenance.
      port it results in depending on GMAC settings done during firmware
    test_firmware: fix missing unlock on error in config_num_requests_store()
    Fixes: c92316bf8e94 ("test_firmware: add batched firmware tests")
    test_firmware: make local symbol test_fw_config static
    lib/test_firmware.c:99:20: warning:
    AQC11x family with updated hardware (B1) and firmware (2.x and 3.x branches).
    state before NIC startup. It also supports cards with signed firmware (RBL)
    net: aquantia: Introduce support for new firmware on AQC cards
    Some of the functions are being shared with 1.x firmware
    net: aquantia: Introduce firmware ops callbacks
    New AQC cards will have an updated firmware with new binary interface.
    This patch extracts firmware specific operations into a separate table
    separate firmware ops table introduction.
    be in firmware which is incompatible with old one.
    powerpc/firmware: Add definitions for new drc-info firmware feature
         firmware
      KVM: PPC: Book3S: Provide information about hardware/firmware CVE workarounds
    The new firmware interfaces for branch prediction behaviour changes
    the firmware, instruction-access keys is always reported as zero.
    BPF firmware currently exposes IRQ moderation capability.
    Merge branch 'cxgb4-reduce-memory-footprint-for-collecting-firmware-dump'
    cxgb4: reduce memory footprint for collecting firmware dump
    to compress collected firmware dump.
    Patch 2 adds zlib deflate to compress collected firmware dump.
    cxgb4: use zlib deflate to compress firmware dump
    Use zlib deflate to compress firmware dump. Collect and compress
    as much firmware dump as possible into a 32 MB buffer.
    Update firmware dump collection logic to use compression when available.
    drivers/firmware/psci_checker.o: In function `psci_checker':
    shutdown - otherwise the firmware will end up clearing RAM on every
    KVM: PPC: Book3S: Provide information about hardware/firmware CVE workarounds
    * continue driver initialisation even if CLM blob (firmware) file is
    actual memory size will be hard-coded in the loaded VPE firmware), and
    implements a firmware command.
    The AP6212 needs a firmware blob. Loading the provided firmware file
    with taking NMIs (in KVM guest code, in firmware, etc) which makes them
    First, we upgrade the firmware interface spec.  Due to a change in
    Expand the call to test all resources if the firmware supports the new
    use the new firmware API to specify min and max resources for each VF.
    The new method will call firmware to reserve the desired tx, rx, cmpl
    call will check the actual resources that firmware is able to reserve.
    provided by firmware.  The driver will then reserve the final resources
    resources are not fixed and can by adjusted by firmware.  The driver
    adapts to the available resources that the firmware can reserve for
    numbers the same when firmware can allocate more RX than TX or vice versa.
    bnxt_en: Add the new firmware API to query hardware resources.
    resources.  Use the new API when it is supported by firmware.
    In preparation for new firmware APIs to allocate hardware resources,
    bnxt_en: Update firmware interface to 1.9.0.
    The version has new firmware APIs to allocate PF/VF resources more
    RDMA/bnxt_re: Add support for query firmware version
    The device now reports firmware version thus, removing
    firmware version from underlying device and report it
    through the kernel verb to get firmware version string.
    multiple cores but that do not have firmware control to pin separate LBA
    Keep the 1GB limit for older firmware (although this is more of a kernel
    Keep the 1GB limit for older firmware (although this is more of a kernel
    returns -EAGAIN when we request_firmware(), and then driver got failed
    is not existence in firmware path, but the -ENOENT error is transferred to
    -EAGAIN in firmware_class.c with user helper.
    Because of that, we continue with CLM data currently present in firmware
    if getting error from doing request_firmware().
    and inject an UNDEF instead of returning an error. Since firmware
    happen for cases where it's already difficult to reset the firmware
    We expect to have firmware-first handling of RAS SErrors, with errors
    notified via an APEI method. For systems without firmware-first, add
    We expect to have firmware-first handling of RAS SErrors, with errors
    notified via an APEI method. For systems without firmware-first, add
    must have belonged to firmware. Executing an ESB instruction is the
    only way to update DISR, so we can expect firmware to have handled
    arm64: Unconditionally enable IESB on exception entry/return for firmware-first
    become pending SErrors. We expect to have firmware-first RAS support
    Any system without firmware-first handling of errors will take the SError
    Platform level RAS support may require additional firmware support.
    An ACPI system with firmware-first may use SError as its 'SEI'
    Platform level RAS support may require additional firmware support.
    * add memory dump to firmware coredump files
    * firmware coredump for usb devices
    firmware: arm_sdei: Fix return value check in sdei_present_dt()
    Fixes: 677a60bd2003 ("firmware: arm_sdei: Discover SDEI support via ACPI")
    the resource table, or omit it for firmware that is known not to have a
    disabled by the firmware). But since the LPSS code does not bind to the
    firmware: arm_sdei: Discover SDEI support via ACPI
    firmware: arm_sdei: add support for CPU private events
    firmware: arm_sdei: Add support for CPU and system power states
    for registering callbacks from the platform firmware into the OS.
    firmware: arm_sdei: Add driver for Software Delegated Exceptions
    for registering callbacks from the platform firmware into the OS.
    This is typically used to implement firmware notifications (such as
    firmware-first RAS) or promote an IRQ that has been promoted to a
    firmware-assisted NMI.
    Docs: dt: add devicetree binding for describing arm64 SDEI firmware
    for registering callbacks from the platform firmware into the OS.
    IRQ that has been promoted to a firmware-assisted NMI.
    Add a new devicetree binding to describe the SDE firmware interface.
      drm/msm: update adreno firmware path in MODULE_FIRMWARE
    Fixes: bded747bb432 ("net/mlx5: Add raw ethernet local loopback firmware command")
    and Tegra firmware doesn't program them.
    AMD CPUs.  The generic solution would be to have the firmware enable the
    * add memory dump to firmware coredump files
    With firmware 1.07 having fixed the state corruption issue, we can enable
    firmware raid map.
    scsi: megaraid_sas: Error handling for invalid ldcount provided by firmware in RAID map
    Currently driver does not validate ldcount provided by firmware.  If the
    mlxsw: spectrum: Fix typo in firmware upgrade message
    The firmware should in theory prevent sending (and automasking) those
    is correct there are firmwares out there with race conditions in this
    when a module gets inserted.  Also extended the displaying of firmware
    identify firmware versions/images.
    patch that with some sequence. Newer firmwares are able to advertise
    schedule runtime PM resume for the device if platform firmware
    pm_resume_via_firmware() to check that.  Also make it check the
    firmware: Fix a typo in fallback-mechanisms.rst
    ixgbe: extend firmware version support
    might be managed by the firmware (for functions like powering on and
        that are filled by firmware
    - accompany firmware changes fixing RSSI values in received mgmt frames
    qtnfmac: pass complete channel data between driver and firmware
    buffers is allocated by the firmware and not the driver. The driver sets
    The first one fixes the TC Flower flow parameter passed to firmware.  The
    The call into firmware will invalidate the branch predictor state, preventing
    drivers/firmware: Expose psci_get_version through psci_ops structure
    port RoCE functionality if supported by the firmware.
    firmware in the INIT_HCA command if it reports the sw_owner_id
    Enable DC transport in the firmware to provide its functionality.
    The last command used to shutdown firmware might be timeout,
    and trigger firmware dump in asynchronous pcie/sdio work.
    For command timeouts, USB firmware will automatically emit
    firmware dump events, so we don't implement device_dump().
    For user-initiated dumps, we trigger it by issue firmware
    dump event command to firmware, as there is no command
    When firmware hang on usb interface, context dump will be
    upload to host using 0x73 firmware debug event.
    rtlwifi: rtl8723: Add error handling to no existing firmware
    Without firmware, driver wastes time to download and wait for MCU bootup,
    and then kernel core dump finally. If request_firmware fails, the value
    max_fw_size=0 is set, so we check the value before downloading firmware.
    controlled.  I think it actually comes from the firmware?  Anyway, I
    Changed 'firware' to 'firmware'
    firmware.
    Input: raydium_i2c_ts - include hardware version in firmware name
    Add hardware version to the firmware file name to handle scenarios where
    * Populate firmware nodes during platform init
      of: platform: populate /firmware/ node from of_platform_default_populate_init()
      firmware: qcom_scm: Add dependent headers to qcom_scm.h
      firmware: qcom_scm: drop redandant of_platform_populate
      firmware: ti_sci: Use %zu for size_t print format
    - Arnd provides an update to the Raspberry Pi firmware interface and uses time64_t to
      firmware: raspberrypi: print time using time64_t
    v2: Since the firmware is  merged to linux-firmware.git,
    Since the firmwares are not yet released to public repo,
    v2: Remove the firmware versions (Michal)
    of: platform: populate /firmware/ node from of_platform_default_populate_init()
    Since "/firmware" does not have its own "compatible" property as it's
    just collection of nodes representing firmware interface, it's sub-nodes
    Currently different firmware drivers search the /firmware/ node and
    the /firmware/ node during init to avoid more drivers continuing to
    To generalize the solution this patch populates the /firmware/ node
        arch_timer: WARNING: Please fix your firmware
    Fetch actual data from firmware instead of static data
    index. The shadow register is dma'ed by firmware.
       command back to upper layers without actually issuing to the firmware
    while flashing firmware to card. We no longer need sf_fw_start
    'DOWN' and then modify this only on events received from firmware.
    when they are about to be destroyed. This is necessary so firmware
    can know which state the driver is in, e.g. the firmware will not send
    This prevents nuisance warning messages printed whenever the firmware
    nfp: flower: obtain repr link state only from firmware
    to the link state reported by firmware.
      drivers/firmware/efi/efi.c:610:8-14: WARNING: PTR_ERR_OR_ZERO can be used
    virtual mapping breaks capsules that are processed by the firmware
    ASoC: Intel: Skylake: Disable clock gating during firmware and library download
    During firmware and library download, sometimes it is observed that
    firmware and library download is timed-out resulting into probe failure.
    This patch disables dynamic clock gating while firmware and library
    number, serial number, FRU number, firmware revision, ccin, and the
    This series advances all qed* drivers to use firmware 8.33.1.0 which brings
    minor functional changes for this firmware.
    Advance the qed* drivers to use firmware 8.33.1.0:
    With commit d9e2e0143c the 'GuC-specific firmware loader' doc
         :doc: GuC-specific firmware loader
    WARNING: kernel-doc '../scripts/kernel-doc -rst -enable-lineno -function GuC-specific firmware loader ../drivers/gpu/drm/i915/intel_guc_loader.c' failed with return code 1
      ASoC: wm_adsp: Fix validation of firmware and coeff lengths
    The smu firmware is loaded by the sbios on APUs, so query it
    Add memory dump to the firmware crash data file which is provided to user space
    via devcoredump interface. This makes it easier for firmware engineers to debug
    firmware crashes.
    ath10k: refactor firmware crashdump code to coredump.c
    Enable TDLS wider bandwidth support for 5GHz based on firmware wmi capabilities.
    This patch is required for chipset QCA9888. Tested with firmware version
    ath10k: Add fw feature flag for non-bmi firmware load
    HL1.0 firmware is not loaded via bmi. The bmi specific
    reset happens in btusb_open(), hence firmware loading gets interrupted.
    Direct firmware load for imx/sdma/sdma-imx6q.bin failed with error -2
    https://github.com/onitake/gsl-firmware/blob/master/firmware/linux/silead/gsl3676-onda-obook-20-plus.fw
    scsi: arcmsr: waiting for iop firmware ready before issue get_config command to iop
    Waiting for iop firmware ready before issue get_config command to iop
    Pi firmware driver.
    - New DMC firmware for Skylake (Anusha)
    firmware: qcom_scm: Add dependent headers to qcom_scm.h
    firmware: qcom_scm: drop redandant of_platform_populate
    all the devices under the /firmware/ node, this patch removes the
    The smu firmware is loaded by the sbios on APUs, so query it
    Set the new common smu firmware version for smu7 parts (CI and VI).
    if the firmware has a certain capability.
    Recently a new command was added to the firmware
    Skip Quota handling if firmware implements Quota.
    Latest firmware calculates both phases of the TKIP
    Geneve firmware support has been recently added, so the patchset includes
    work beginning in iwlwifi to have rate scaling in firmware/hardware,
    A Master adds a SoundWire bus instance which scans the firmware
    The one case where this fails is if the user loads a firmware that lacks
    a particular channel of the previous firmware that was running, in which
    Add a new event type that is newly exposed by recent firmware. The event
    will never occur if the firmware is too old. If user space tries to use
    Note that while firmware may enable LTR, Linux itself currently does not
    de-asserted.  So this patch should not have any effect unless firmware
    and (2) the ACPI path where firmware reads the AER registers and hands them
    media: s5p-mfc: Fix lock contention - request_firmware() once
    Driver calls request_firmware() whenever the device is opened for the
    is true several times. This is not necessary since the firmware is saved
    in the fw_buf. s5p_mfc_load_firmware() copies the buffer returned by
    the request_firmware() to dev->fw_buf.
    there is no need to keep requesting firmware and copying it to fw_buf.
    Fix s5p_mfc_load_firmware() to call request_firmware() once and keep state.
    Change _probe() to load firmware once fw_buf has been allocated.
    s5p_mfc_open() and it continues to call s5p_mfc_load_firmware() and init
    hardware which is the step where firmware is written to the device.
    This addresses the mfc_mutex contention due to repeated request_firmware()
    [  552.313700]        _request_firmware+0x3ec/0x78c
    [  552.318291]        request_firmware+0x3c/0x54
    [  552.322642]        s5p_mfc_load_firmware+0x54/0x150 [s5p_mfc]
    media: s5p-mfc: Remove firmware buf null check in s5p_mfc_load_firmware()
    s5p_mfc_load_firmware() will not get called if fw_buf.virt allocation
    There is no need to check if it is null in s5p_mfc_load_firmware().
       capabilities included in the firmware, and the later patches add support
    - New DMC firmware for Skylake (Anusha)
    IN_PROGRESS status, which is only used on some EC firmwares where we
    GOOG004 ACPI device") added support when the firmware reports the ACPI
    device, there are some firmwares though that doesn't report this device
    firmware) was changed to use a different pair of bits to
    firmware: ti_sci: Use %zu for size_t print format
    cros_ec: fix nul-termination for firmware build info
    nfp: implement firmware flashing
    We only allow flashing the firmware from reprs or PF netdevs. VFs do not
    The firmware flashing NSP operation takes longer to execute than the
    HL1.0 firmware branch, used in wcn3990, transmits management
    firmware message. Once scan has been completed a scan indicator
    message is received from firmware.
    10.2.4 firmware branch (used in QCA988X) does not support
    hardcoded 6 Mbit/s. But pktlog firmware facility provides per peer tx
    statistics. The firmware sends one pktlog event for every four
    Tested on QCA9880 with firmware version 10.2.4.70.48. This should also
    work with firmware branch 10.2.4-1.0-00029
    is sending data packets to firmware from host with qos enabled
    Due to qos enabled, firmware is discarding the packet.
    haup-ir-blaster.bin firmware file is no longer needed, and the driver
    firmwares. For instance, the return size of cap iovar is 271 bytes in 4373
    References: 8620eb1dbbf2 ("drm/i915/uc: Don't use -EIO to report missing firmware")
    drm/msm: update adreno firmware path in MODULE_FIRMWARE
    The preferred location for Adreno firmware files is now in qcom/ subfolder,
    especially now that we are adding some of them in linux-firmware.
    all CPUs can be enabled on boot. This assumes that the PSCI firmware
    PSCI firmware version is set to v0.2 which aligns with the current
    The demodulator requires firmware. Download one from here:
    http://palosaari.fi/linux/v4l-dvb/firmware/MN88472/02/latest/
    However, speedo support is implemented in the BPMP firmware, hence the
    Now that we have a get_match_data() callback as part of the firmware node,
    Now that we have a get_match_data() callback as part of the firmware node,
    firmware has been loaded.
    With commit d9e2e0143c the 'GuC-specific firmware loader' doc
         :doc: GuC-specific firmware loader
     pvr2_hdw_check_firmware drivers/media/usb/pvrusb2/pvrusb2-hdw.c:1812
            drivers/media/tuners/xc5000.c:841 xc5000_is_firmware_loaded() error: uninitialized symbol 'id'.
            drivers/media/tuners/xc4000.c:1047 check_firmware() error: uninitialized symbol 'hwmodel'.
            drivers/media/tuners/xc4000.c:1060 check_firmware() error: uninitialized symbol 'hwmodel'.
            drivers/media/tuners/xc4000.c:1064 check_firmware() error: uninitialized symbol 'hwmodel'.
      firmware: arm_scpi: Revert updates made during v4.15 merge window
       - dibusb-common: don't do DMA on stack on firmware load
    ASoC: wm_adsp: Fix validation of firmware and coeff lengths
    Note that hw/firmware also expects a CABAC model configuration which
    The firmware timestamp is an unsigned 32-bit value, but we copy it into
    firmware interface, not a kernel problem.
    media: s2255drv: update firmware load
    fixes intermittent soft reboot issue with firmware load
    adopt v4l2 controls with the firmware interface expectations.
    firmware which is yet to be released.
       firmware release.
     * Drop the NEEDS_CSR_GT_PERF_WA macro since all firmwares have now been
    issuing chip reset. At the time of chip reset firmware is re-initilized
    longer be supported.  The firmware will send a message to the driver
    The 10.4 firmware defines this as a 3-bit field, as does the
    at least in the firmware header I have seen.  This patch
    fixes the ath10k wmi header to match the firmware.
    when enabling wowlan and entering suspend the last write to the firmware
    the firmware running in full active mode consuming high power.
    allowing the firmware to go into power save during wowlan uspend.
    scsi: arcmsr: Add a function to set date and time to firmware
    to set date and time to firmware.
    was received from firmware.
    /sys/firmware/efi/systab shows several different values, it breaks sysfs
    drm/amdgpu:cleanup firmware.fw_buf alloc/free
    When UVD bo is created, its size is based on the information from firmware
    v2: move firmware size calculation into macro definition
    v3: align firmware size to the gpu page size
    hardware/firmware availability or preference.
    drm/i915/uc: Don't use -EIO to report missing firmware
    to handle missing firmware should be done higher level function
    drm/i915/uc: Don't fetch GuC firmware if no plan to use GuC
    HuC firmwares. We can save memory and avoid possible dmesg noise.
    drm/i915/guc: Move firmware selection to init_early
    Doing GuC firmware path selection from sanitize_options function
    drm/i915/huc: Move firmware selection to init_early
    Doing HuC firmware path selection from sanitize_options function
    optionally supported by firmware providing a _abi_dump_spec rtsym. This
    nfp: dump firmware name
    are actually updated from the firmware.
    When sending LQ command, verify the rate scaling is not in firmware.
    New devices will have rate scaling algorithm running in the firmware.
      firmware: vpd: Fix platform driver and device registration/unregistration
      firmware: vpd: Tie firmware kobject to device lifetime
      firmware: vpd: Destroy vpd sections in remove function
       - a Kconfig help text cleanup now that the firmware is not in the
      firmware: cleanup FIRMWARE_IN_KERNEL message
    - Convert phylink/sfp to use fwnode rather than DT so that other firmware
    device_node to taking a fwnode_handle. This will allow other firmware
    we can support more than just device tree firmware.
    drm/i915/skl: DMC firmware for skylake v1.27
    to read the current time. This is not a problem, since the firmware
    data we pass to the firmware properly, so I'm doing the same thing here.
    scsi: bfa: use ktime_get_real_ts64 for firmware timestamp
    engine which cannot rotate in hardware, so the firmware just leaves things
    drm/amdgpu: refine SR-IOV firmware VRAM reservation to protect data
    Update the programming sequence to allow DMCU firmware to be loaded by
    PSP. This code detects whether the firmware is loaded and does a check
    Added registry key method to allow force loading of firmware from kernel
    mode driver for test purposes. This is old method of firmware loading
    Changed loading sequence to initialize IRAM after firmware completely
    context within the SEV firmware. In order to do so, the guest owner
    for this guest from the SEV ASID pool. The firmware must be initialized
     - an in-kernel API to communicate with the SEV firmware. The API can be
    Note that the key management functionality provided by the SEV firmware
    WARNING: kernel-doc '../scripts/kernel-doc -rst -enable-lineno -function GuC-specific firmware loader ../drivers/gpu/drm/i915/intel_guc_loader.c' failed with return code 1
      firmware: arm_scpi: Revert updates made during v4.15 merge window
    firmware: arm_scpi: Revert updates made during v4.15 merge window
    meaningful to use runtime PM to such devices; the system firmware (ACPI)
    short firmware messages.
    In the function brcmf_sdio_firmware_callback() the driver is
    Fixes: 7a51461fc2da ("brcmfmac: unbind all devices upon failure in firmware callback")
    If the value for the firmware configuration parameters
    initialization, but userspace can replace the firmware while
    * Change in the way we print the firmware version;
    ("iwlwifi: fix firmware names for 9000 and A000 series hw"):
    There is no need, since we preserve firmware settings, to override
    This patch makes v9.39 firmware as default firmware for KBL.
    Note: GuC logging control is changed with this firmware. GuC is
    to be fixed in future firmwares.
    This patch makes v9.29 firmware as default firmware for BXT.
    Note: GuC logging control is changed with this firmware. GuC is
    to be fixed in future firmwares.
    This patch makes v9.33 firmware as default firmware for SKL.
    Note: GuC logging control is changed with this firmware. GuC is
    to be fixed in future firmwares.
    test_firmware: wrap custom sysfs load tests into helper
    test_firmware: wrap basic sysfs fallback tests into helper
    test_firmware: wrap sysfs timeout test into helper
    firmware: replace #ifdef over FW_OPT_FALLBACK with function checks
    never wants to run it, such as request_firmware_direct().
            request_firmware() force fallback
            request_firmware_into_buf() force fallback
            request_firmware_nowait() force fallback
            request_firmware_direct() always ignore fallback
            request_firmware() ignore fallback
            request_firmware_into_buf() ignore fallback
            request_firmware_nowait() depends on uevent flag
            request_firmware_direct() always ignore fallback
    firmware: provide helper for FW_OPT_USERHELPER
    firmware: add helper to copy built-in data to pre-alloc buffer
            request_firmware_into_buf()
    firmware: use static inline for to_fw_priv()
    firmware: rename sysfs state checks with sysfs prefix
    firmware: use static inlines for state machine checking
    firmware: remove unused __fw_state_is_done()
    After commit e44565f62a ("firmware: fix batched requests - wake all waiters")
    firmware: remove duplicate fw_state_aborted()
    firmware: move core data structures to the top of file
    Move main core data structures used internally for firmware to the top
    firmware: rename struct fw_priv->fw_id to fw_name
    firmware: rename struct firmware_buf to struct fw_priv
    firmware.
    firmware: rename struct firmware_priv to struct fw_sysfs
    The struct firmware_priv is only used for the sysfs fallback
    test_firmware: fix setting old custom fw path back on exit
    The file /sys/module/firmware_class/parameters/path can be used
    to set a custom firmware path. The fw_filesystem.sh script creates
    a temporary directory to add a test firmware file to be used during
    Fixes: 0a8adf58475 ("test: add firmware_class loader test")
    firmware: fix detecting error on register_reboot_notifier()
    Fixes: fe304143b0c3d ("firmware: Avoid deadlock of usermodehelper lock at shutdown")
    firmware: provide helpers for registering the syfs loader
    firmware: fix capturing errors on fw_cache_init() on early init
    Fixes: 07646d9c0938d ("firmware loader: cache devices firmware during suspend/resume cycle")
    firmware: add helper to unregister pm ops
    ALSA: korg1212: Delete a duplicate function call "release_firmware" in snd_korg1212_create()
    The function "release_firmware" is called in the current implementation of
    the function "_request_firmware" after a failure was detected.
    Link: https://elixir.free-electrons.com/linux/v4.14-rc8/source/drivers/base/firmware_class.c#L1196
    firmware: raspberrypi: print time using time64_t
    The firmware timestamp is an unsigned 32-bit value, but we copy it into
    firmware interface, not a kernel problem.
    firmware: vpd: Fix platform driver and device registration/unregistration
    Fixes: 049a59db34eb ("firmware: Google VPD sysfs driver")
    firmware: vpd: Tie firmware kobject to device lifetime
    It doesn't make sense to have /sys/firmware/vpd if the device is not
    Fixes: 049a59db34eb ("firmware: Google VPD sysfs driver")
    firmware: vpd: Destroy vpd sections in remove function
    Fixes: 049a59db34eb ("firmware: Google VPD sysfs driver")
    firmware: cleanup FIRMWARE_IN_KERNEL message
    The help for FIRMWARE_IN_KERNEL still references the firmware_install
    command that was recently removed by commit 5620a0d1aacd ("firmware:
    delete in-kernel firmware").
    linux-firmware package, and remove any reference to firmware being
    Fixes: 5620a0d1aacd ("firmware: delete in-kernel firmware").
    * child_regions_with_firmware
    buffer, or a firmware file. This makes it difficult to write
    is in a sg table, as a single buffer, or a firmware file.
    * fpga_mgr_firmware_load
    Also use devm_kstrdup to copy firmware_name so we aren't making
    other available firmware versions seems to support mark/space
    <7>[ 3069.935211] [drm:intel_fb_initial_config [i915]] Not using firmware configuration
    firmware. This limitation causes a delay in updating the s0ix counters and
    2) For AE_ALREADY_EXISTS and AE_NOT_FOUND, use the "firmware error"
    This is useful in case some hardware/firmware operations really require the
    <7>[ 3069.935211] [drm:intel_fb_initial_config [i915]] Not using firmware configuration
    iwlwifi: print the version number of the firmware in hex
    This feature was actually removed from firmware, but without
    iwlwifi: mvm: revert support new Coex firmware API
    When we act as an AP, new firmware versions handle
    for scan command firmware interface change.
    * fix a regression with firmware API change of scan cmd (introduced in
      firmware version 34)
    * fix the exported firmware name strings for 9000 and A000 devices
    Jake fixes a regression issue with older firmware, where we were using
    the NVM lock to synchronize NVM reads for all devices and firmware
    versions, yet this caused issues with older firmware prior to version
    1.5.  Fixed this by only grabbing the lock for newer devices and firmware
    Doing so can cause a regression on older firmware prior to 1.5,
    especially when downgrading the firmware.
    the NVM), or if we're currently running 1.5 or newer firmware.
    drivers/firmware: psci: Convert timers to use timer_setup()
    HID: Ignore Jabra HID interface based on firmware version
    Modify hid_lookup_quirk() to consider the firmware version of these two
    Fixes: be94535f9531 ("mlxsw: spectrum: Make split flow match firmware requirements")
    * Fix the exported firmware name strings for 9000 and A000 devices;
      firmware: scm: Add new SCM call API for switching memory ownership
      Fixes include changes to skip firmware tests on systems that aren't
      selftests: firmware: skip unsupported custom firmware fallback tests
      selftests: firmware: skip unsupported async loading tests
       - reorganized parisc PDC (firmware-access) header files for usage
         latch last shutdown status, firmware update, SMART error injection,
    The firmware may have set up the pipe correctly, but the FIFO
      drivers/firmware: psci_checker: Add missing destroy_timer_on_stack()
         for long running operations performed by OPAL firmware, and changes
    iwlwifi: fix firmware names for 9000 and A000 series hw
    iwlwifi 9000 and a0000 series hw contains an extra dash in firmware
    firmware:       iwlwifi-9260-th-b0-jf-b0--34.ucode
    firmware:       iwlwifi-9260-th-a0-jf-a0--34.ucode
    firmware:       iwlwifi-9000-pu-a0-jf-b0--34.ucode
    firmware:       iwlwifi-9000-pu-a0-jf-a0--34.ucode
    firmware:       iwlwifi-QuQnj-a0-hr-a0--34.ucode
    firmware:       iwlwifi-QuQnj-a0-jf-b0--34.ucode
    firmware:       iwlwifi-QuQnj-f0-hr-a0--34.ucode
    firmware:       iwlwifi-Qu-a0-jf-b0--34.ucode
    firmware:       iwlwifi-Qu-a0-hr-a0--34.ucode
    configuration and firmware selection for devices on the 9000 series.
    Fix the firmware selection by adding files for the B-steps; add
    try to load the wrong firmware file.
       - HuC/GuC firmware refactoring
      media: Don't do DMA on stack for firmware upload in the AS102 driver
    Newer firmware versions (such as iwlwifi-8000C-34.ucode) have
    format when the firmware reports it, otherwise the scan command will
    selftests: firmware: skip unsupported custom firmware fallback tests
    Ignore custom firmware loading and cancellation tests on older
    Fixes: 061132d2b9c9 ("test_firmware: add test custom fallback trigger")
    selftests: firmware: skip unsupported async loading tests
    Ignore async firmware loading tests on older kernel releases,
           ("selftests: firmware: add empty string and async tests")
    undo a previous 'request_firmware()', as already done in the other error
         for their open source audio firmware
      scsi: mpt3sas: Handle NVMe PCIe device related events generated from firmware.
      firmware: tegra: Propagate error code to caller
    Fixes: e20f469660ad ("liquidio: synchronize VF representor names with NIC firmware")
     transmission/handling and functions which allows the retrival of firmware
    Merge branch 'mlxsw-Update-firmware-version'
    mlxsw: Update firmware version
    This set adjusts the driver to use a new firmware version. The new
    router interface (RIF) since at that time the firmware did not support
    mlxsw: spectrum: Update minimum firmware version to 13.1530.152
    This new firmware contains:
       by firmware
         a non zero TSC_ADJUST value, which is considered a firmware bug on
         This applies to HPE/SGI UV platforms where the platform firmware
      x86/tsc: Drastically reduce the number of firmware bug warnings
    /sys/firmware/devicetree and its symlink /proc/device-tree, reported by
    release they've also gained support for their open source firmware.
       their open source audio firmware.
    same way as the core. However an alternate firmware fix exists which should
    On PowerNV platforms, firmware provides exit latency and
    And fix the warning on a successful firmware log.
    The firmware for brcmfmac devices includes information regarding
    uses the same naming scheme as the other firmware files with extension
    the firmware. This causes a link error when one driver selects rt5514
    The controller is controlled by a firmware which, in the version
    Take the DSCR value set by firmware as the dscr_default value,
    Avoid waiting on this spinloop when booting with OPAL firmware. This
    When requesting a shared interrupt, we assume that the firmware
    After the panic teardown firmware command, health_care detects the error
    no longer needed because the panic teardown firmware command will bring
    workqueue request before sending panic teardown firmware command.
    The firmware uses a mailbox to communicate to the host what is going
    Bit 4 is cause of this message, but this actually indicates the firmware
      ALSA: usb-audio: support new Amanero Combo384 firmware version
    Fixes: 4318c7347847 ("scsi: mpt3sas: Handle NVMe PCIe device related events generated from firmware.")
    aacraid passes the current time to the firmware in one of two ways,
    extra steps during firmware upload needed only for unsupported
    drm/i915/guc: Split GuC firmware xfer function into clear steps
    Transfer of GuC firmware requires few steps that currently
    Module id is a property of firmware manifest and can vary between
    media: Don't do DMA on stack for firmware upload in the AS102 driver
    kernel:  as102_firmware_upload.isra.0+0x1dc/0x210 [dvb_as102]
    kernel: as10x_usb: error during firmware upload part1
    Let's allocate the the structure dynamically so we can get the firmware
    [   14.243057] as10x_usb: firmware: as102_data1_st.hex loaded with success
    [   14.500777] as10x_usb: firmware: as102_data2_st.hex loaded with success
    subdevice and a subdev-notifier by parsing firmware information. This
    the resource table associated to a remote processor firmware.
    Don't use sizeof(uint32_t) or similar types for hardware or firmware
    DWORD size. The hardware and firmware don't care about Linux types.
    format sent from host to the firmware. The code to update
    Some systems without proper firmware and/or hardware description data
    drm/i915: Add Guc/HuC firmware details to error state
    Include GuC and HuC firmware details in captured error state
    uc firmware pretty printer, introduce new drm-printer variant
    uc firmware pretty printer to accept const input.
       8304    1084     128    9516    252c drivers/nfc/s3fwrn5/firmware.o
       7894    1180     128    9202    23f2 drivers/nfc/s3fwrn5/firmware.o
    Mellanox firmware provides two control knobs for this feature:
      pcp mode. The default is pcp mode. Once in dscp mode, firmware will
    The firmware trust state (in QPTS register) is changed based on the
    firmware requires mlx5 driver to copy the IP header to the
    where the max values are read from the firmware and the number of
    net/mlx5: QPTS and QPDPM register firmware command support
    must be set in the QPDPM firmware command.
    Add MLX5_SET16 and MLX5_GET16 for 16bit structure field in firmware
    net/mlx5: QCAM register firmware command support
    cxgb4: update latest firmware version supported
    Change t4fw_version.h to update latest firmware version
    direct access to physical memory to the firmware SMM methods via a pointer.
    - GuC/HuC firmware loader refactoring (Michal)
         fails due to firmware etc.
    scsi: mpt3sas: Handle NVMe PCIe device related events generated from firmware.
    * The controller firmware sends separate events for NVMe devices and
      firmware through PCIe Topology Change list events.
    * The PCIe device state change events are sent when the firmware
    * The enumeration event are sent when the firmware starts PCIe device
    firmware and the firmware needs to translate it. This will have a
    firmware.
      halmac_download_firmware_88xx.part.47+0x477/0x600 [r8822be]
      halmac_download_firmware_88xx+0x32/0x40 [r8822be]
    the firmware.  When doing that, we must hold the mutex.  The
    from iwl_pcie_load_firmware_chunk in pcie/tx.c, since this is a common
    When sending to firmware the rate scaling, we limit aggregation
    liquidio: bump up driver version to 1.7.0 to match newer NIC firmware
      drm/amdgpu:add fw-vram-usage for atomfirmware
     - Another firmware workaround for GICv2
    the timestamp of the firmware build. This is fine as long as
    we don't get a firmware build past 2038.
    interfaces and works until 2106, when the firmware-defined
     - a workaround for broken f81534 firmware-handling of overruns
    irqchip/gic: Deal with broken firmware exposing only 4kB of GICv2 CPU interface
    There is a lot of broken firmware out there that don't really
    by the firmware (we provide a "irqchip.gicv2_force_probe" option
    firmware of CPU problems, some of which may have been corrected.
    drivers/firmware: psci_checker: Add missing destroy_timer_on_stack()
    - Markus updates the Broadcom STB DPFE driver to avoid loading the firmware when
      memory: brcmstb: dpfe: skip downloading firmware when possible
    Merge tag 'tegra-for-4.15-firmware' of ssh://gitolite.kernel.org/pub/scm/linux/kernel/git/tegra/linux into next/drivers
    Pull "firmware: tegra: Changes for v4.15-rc1" from Thierry Reding:
    * tag 'tegra-for-4.15-firmware' of ssh://gitolite.kernel.org/pub/scm/linux/kernel/git/tegra/linux:
      firmware: tegra: Add BPMP debugfs support
      firmware: tegra: Add stubs when BPMP not enabled
      firmware: tegra: Expose tegra_bpmp_mrq_return()
      firmware: tegra: Propagate error code to caller
    interchanging the current time with the firmware. This will overflow in
    from sst-firmware.c in some configurations, but not in others:
    sound/soc/intel/common/sst-firmware.c:1278:20: error: expected declaration specifiers or '...' before string constant
    sound/soc/intel/common/sst-firmware.c:1279:16: error: expected declaration specifiers or '...' before string constant
    ALSA: usb-audio: support new Amanero Combo384 firmware version
    Support DSD_U32_BE sample format on new Amanero Combo384 firmware
    Fixes: 3eff682d765b ("ALSA: usb-audio: Support both DSD LE/BE Amanero firmware versions")
    If GuC firmware performs an engine reset while that engine had a
    preemption stage descriptor. GuC firmware retains all pending work
    liquidio: synchronize VF representor names with NIC firmware
    LiquidIO firmware supports a vswitch that needs to know the names of the
    send its name to the firmware when it gets registered and when its name
      drm/nouveau/gr/gf100-: don't prevent module load if firmware missing
    drm/nouveau/gr/gf100-: don't prevent module load if firmware missing
    drm/amdgpu:add fw-vram-usage for atomfirmware
     + fw loading re-work with helper to handle either /lib/firmware/qcom/$fw
       or /lib/firmware/$fw.. background, we've started landing fw for some of
       generations in linux-firmware, but there is a preference to put fw files
     a firmware capability bit (MC_CMD_GET_CAPABILITIES_OUT_RX_INCLUDE_FCS).
    There is a get/put operation in order to get firmware is_available
    In new firmware versions the firmware enforces a minimum of 5
    interface configurations like admin state and MTU to LiquidIO firmware and
    admin state and MTU to LiquidIO firmware and to retrieve HW counted
    Add a convenience function for parsing firmware for information on related
    requirements related to firmware information parsing or the async
    notifier is typically dependent on information from platform firmware and
    Add USB PID/VID for Sierra Wireless EM7355 LTE modem QDL firmware update
    This patch refactor code to first load all firmware blobs
    firmware: scm: Add new SCM call API for switching memory ownership
    We are disabling of interrupts from firmware in freeze handler.
    reloading of firmware and device initialization is performed.
    wowlan config frame is internally sent to firmware in mac80211
    Bluetooth: btusb: Update firmware filename for Intel 9x60 and later
    The format of Intel Bluetooth firmware for bootloader product is
    on host (mac80211) rather than firmware. Rebuild cipher header
    configure 'tags' and patch the firmware.
    host to NIC firmware to set the unicast MAC address list of the macvtap
    drm/msm/adreno: deal with linux-firmware fw paths
    When firmware was added to linux-firmware, it was put in a qcom sub-
    loading firmware.
    Previously, in an effort to defer initializing the gpu until firmware
    Instead move request_firmware() to gpu->hw_init() and construct the gpu
    be aware of a gpu that hasn't managed to load firmware and hw_init()
    notifies the NIC firmware to stop forwarding packets to host is done too
    This series includes firmware interface update, some optimizations,
    This is a firmware internal reset after driver is unloaded.
    bnxt_en: Check maximum supported MTU from firmware.
    Some NICs have a firmware enforced maximum MTU setting by management
    firmware.  Set up netdev->max_mtu accordingly.
    bnxt_en: Get firmware package version one time.
    The current code retrieves the firmware package version from firmware
    firmware will not change while the driver is loaded.  Get the version
    Also, display the full 4-part firmware version string and remove the
    bnxt_en: Update firmware interface to 1.8.3.1
    Vxlan encap/decap filters are added to this firmware spec.
    This series of patches collect more firmware and hardware dumps
    The current firmware 10.4-3.5.1-00035 on QCA9888 supports
    The Current firmware 10.4-3.5.1-00035 on QCA9888 does not
    Reason is:  it is incompatible with the firmware's use for SLI_SCRATCH_1.
    drm/i915/guc: Add preemption action to GuC firmware interface
    Let's update GuC firmware interface with those new definitions.
    wrong warning message with the Leaf v2 firmware version v4.1.844.
    mlx5_core 0001:01:00.6: firmware version: 16.20.1011
    In case of failure in loading customize topology firmware, dfw_sst.bin
    whole key. It turns out though that iwlwifi firmware doesn't
    locking/atomics, firmware/ivc: Convert ACCESS_ONCE() to READ_ONCE()/WRITE_ONCE()
    consistent DMA buffers based on the firmware capability.
    of FW capability. This is needed to ensure firmware downgrades do not
    This limitation is h/w dependent and can not be changed in firmware.
    Older firmware version unconditionally pulls 4k frame for IOC INIT MFA
    size to support older firmware.
    Driver needs to send current host time to firmware during init.
    latest firmware.
    As of Leaf v2 firmware version v4.1.844 (2017-02-15), flush tx queue is
    liquidio: pass date and time info to NIC firmware
    firmware and periodically update the host time to NIC firmware.
    This is to make NIC firmware use the same time reference as Host,
    so that it is easy to correlate logs from firmware and host for debugging.
    disabled on a given platform by the system firmware, the driver does not
    generally found in the modem firmware and is used for accessing
    open-source firmware to avoid repeating ACPI-related information
    sound/soc/intel/common/sst-firmware.c:288:3: warning: Value stored to
    * Add SCM firmware APIs for download mode and secure IO service
      firmware: qcom: scm: Expose download-mode control
      firmware: qcom: scm: Expose secure IO service
      firmware: arm_scpi: silence sparse warnings
      firmware: arm_scpi: remove all single element structures
      firmware: arm_scpi: drop unnecessary type cast to scpi_shared_mem
      firmware: arm_scpi: improve struct sensor_value
      firmware: arm_scpi: improve handling of protocol and firmware version subfields
      firmware: arm_scpi: improve struct dvfs_info to make code better readable
      firmware: arm_scpi: remove scpi_remove
      firmware: arm_scpi: make freeing mbox channels device-managed
      firmware: arm_scpi: pre-populate dvfs info in scpi_probe
      firmware: arm_scpi: remove two unneeded devm_kfree's in scpi_remove
      firmware: arm_scpi: remove usage of drvdata and don't reset scpi_info to null
      dynamic firmware loading and offers the ability to respond with DRAM refresh
    to be firmware-agnostic in line with SMMUv2.
    GX efuse driver which uses the "secure monitor" firmware to access the
    because they do not use the meson secure monitor firmware to access the
    firmware and compatibility string.
    - reprogram dmc firmware on resume, dmc state fix (Imre)
    - huc/guc firmware refacoring (Sagar, Michal)
    Currently the kernel relies on firmware to inform it whether or not the
    PF will copy some necessary firmware and information to the shared
    - Phil provides a fix for a future Raspberry Pi firmware which will make the
    Merge branch 'for-4.15/firmware' into for-4.15/clk
    when not described by firmware - those we whitelist with an automatic
    those problems and lets the decision of whether firmware description of
    Merge branch 'for-4.15/firmware' into for-4.15/soc
    Merge branch 'for-4.15/firmware' into for-4.15/thermal
    firmware: tegra: Add BPMP debugfs support
    Tegra power management firmware running on the co-processor (BPMP)
    status of selected resources controlled by the firmware (such as
    Add support to "mirror" the firmware's file system to debugfs. At
    boot, query firmware for a list of all possible files and create
    file path name and data to firmware via DRAM.
    firmware: tegra: Add stubs when BPMP not enabled
    firmware: tegra: Expose tegra_bpmp_mrq_return()
    scsi: pm80xx: ILA and inactive firmware version through sysfs
    Added support to read ILA version and inactive firmware version from MPI
    staging: fsl-dpaa2/eth: Add firmware version
    Include firmware version in the driver information exported
    Provide information about used firmware files via modinfo.
    across all firmware versions.
    publicly-available firmwares, which creates unnecessary user
    confusion [1]. Even if the firmware was available, the mainline
    that was used by boot firmware.  It selects the first device that:
    drm/i915/uc: Add pretty printer for uc firmware
    firmware: tegra: Propagate error code to caller
    Response messages from Tegra BPMP firmware contain an error return code
    x86/tsc: Drastically reduce the number of firmware bug warnings
    This was NOT a firmware bug at the time so introducing a whole avalanche
    In case of GuC firmware loading failure we were reporting
    drm/i915/uc: Unify firmware loading
    drm/i915: Update DMC firmware load error messages
    Also as homepage of DMC firmware is same as for the GuC and Huc,
    drm/i915/uc: Add message with firmware url
    In case of firmware fetch failure we should help user
    find latest firmware. URL macro duplication from csr.c
    drm/i915/uc: Improve debug messages in firmware fetch
    GuC status message printed right after firmware upload may be too
    drm/i915/uc: Check all firmwares against WOPCM size
    Both GuC and HuC firmwares will be moved into WOPCM so
    GuC firmware. Rename them to match object-verb pattern and
    happened in firmware while the host is in D3, with the second
    potential firmware response corruption on NVRAM and DCB parameters,
    bnxt_en: Fix possible corruption in DCB parameters from firmware.
    firmware call until the firmware DCB parameters have been copied.
    This will prevent possible corruption of the firmware data.
    bnxt_en: Fix possible corrupted NVRAM parameters from firmware response.
    In bnxt_find_nvram_item(), it is copying firmware response data after
    releasing the mutex.  This can cause the firmware response data
    to be corrupted if the next firmware response overwrites the response
    Link status query firmware messages originating from the VFs are forwarded
    Alan fixes and issue where on some firmware versions, we were failing to
    Hardware dumps - Collects firmware and hardware dumps.
    Patch 4 collects firmware mbox log and device log.
    Try to access TP indirect registers via firmware first.  If this fails,
    firmware do not conflict each other while accessing the TP indirect
    cxgb4: collect firmware mbox and device log dump
    Collect firmware mbox and device logs before collecting the rest of
    the hardware dumps to snap the firmware state before the mailbox logs
    Add driver to support older EC firmware that only support deprecated
    When querying the NVM for supported phy_types, on some firmware
    Check 'ethtool <iface>' if you have the right (wrong?) firmware.
    solution an IMC firmware upgrade (obtained via BIOS update) and
    ath10k: store coverage-class in case firmware is not booted
    firmware does not support group management frame ciphers (BIP),
    default for all firmwares but Power save for station mode still not supported
    in some of the firmware versions. Which results in firmware crash while
    support in firmware and then the firmware image can tell to ath10k that power
    non-WoWLAN firmware. But it forgot the $subject case.
    to firmware, which might be active or passive. Firmware will
    Panic observed with latest firmware, and upstream kernel:
         underlying low-level firmware interface, DT or ACPI, by making the
    Fixes: 3b27d00e7b6d7c88 ("device property: Move fwnode graph ops to firmware specific locations")
    There are two types of memory reservations firmware can ask the kernel
    [    4.310646] rtas_flash: no firmware flash support
    OVMF firmware (OVMF_CODE-need-smm.fd).
    OVMF firmware (OVMF_CODE-need-smm.fd).
    firmware: qcom: scm: Expose download-mode control
    firmware: qcom: scm: Expose secure IO service
    Fixes: bba8e3f42736 ("ARM64: dts: meson-gx: Add firmware reserved memory zones")
    which causes the I/O to be quickly retried. However, firmware needed
     * load regulatory database as firmware file (myself)
    been reset by firmware), made PCI's and ACPI's ->complete() callbacks
    might have been reset by firmware).
    since the "firmware" file (regulatory.db) can be linked into the
    cfg80211: support loading regulatory database as firmware file
    In order to be able to request firmware when the module initializes,
    firmware loader is at the same level but linked earlier, so it can
    be called from there. Otherwise, when both the firmware loader and
    * Avoid redundant command to the firmware;
      noisy (i.e. no repeated warnings on a firmware triggered error);
    with BCM4345 rev C0 firmware.
    This patch defines the firmware subversion.
    BCM4345 rev C0 firmware.
    when they share the same firmware node after commit 478573c93abd (driver
    Parent device will have its primary firmware node pointing to an ACPI
    node and secondary firmware node point to device properties.
    firmware node to point to the same 'struct fwnode_handle' and the
    associated secondary firmware node, i.e. the device properties as the
    Describe the binding for firmware-configured instances of the Synopsys
    software/firmware synchronization register.  Added error checks when we
    - When the I2C is busy, the PHY reads are delayed.  The firmware will
    This series migrates our eBPF offload from old PoC firmware to
    In the initial PoC firmware I simply disabled ECC on the instruction
    net: hns3: Cleanup for struct that used to send cmd to firmware
    that used to send cmd to firmware. This will help us finding the
    cmd to firmware in hclge_main module.
    firmware: arm_scpi: silence sparse warnings
    firmware: arm_scpi: remove all single element structures
    firmware: arm_scpi: drop unnecessary type cast to scpi_shared_mem
    to support firmware command parallelism for flow steering requests from
        2) The firmware command execution.
    and will allow us to execute multiple firmware commands simultaneously and overcome the
    firmware bottleneck.
    memory: brcmstb: dpfe: skip downloading firmware when possible
    We want to skip downloading the DPFE firmware from Linux if it was
    successfully, the driver skips the firmware download step.
    Usually, when the firmware performs all the low level configuration that is
    Alan re-enables PTP L4 for XL710 devices with firmware version 6.0 or
    greater, now that the previous bug in the older firmware is fixed.
    removed from the list when the firmware refused to add the requested
    the firmware.
    the firmware.
    v2: Set the same default orientation as the closed source firmware
    working when the firmware is disabled from talking to our I2C lines.
      drm/i915/cnl: Reprogram DMC firmware after S3/S4 resume
    add a new one it is rejected by firmware and automatically removed from the
    however causes the newly added filter to be accepted by firmware but
    filter number to be removed from the list when firmware refused to add the
    accepted by firmware and effectively applied to the NIC.
    from the list when it was rejected by firmware.
    re-enabled on those devices with updated firmware.
    will help us catch it quicker during firmware/driver development.
    In released firmware/driver versions, we obviously make sure this
    - a firmware issue
    values, this will tell us that the PCIe bus is OK, but may be a firmware
    issue or a driver/firmware issue.
    sends a command to the firmware.
    sending unnecessary commands to the firmware.
    Sending a PHY_CTXT_CMD to the firmware has a cost since it
    iwlwifi: mvm: support firmware debug trigger on frame reorder timeout
    failure when it tries to read the temperature while the firmware is
    drm/i915/uc: Unify initialization of the uC firmware helper
    Unify initialization of the uC firmware helper as we want to
    - GLK suspend resume - Reprogram DMC firmware after s3/s4.
      drm/i915/cnl: Reprogram DMC firmware after S3/S4 resume
    firmware: arm_scpi: improve struct sensor_value
    firmware: arm_scpi: improve handling of protocol and firmware version subfields
    firmware: arm_scpi: improve struct dvfs_info to make code better readable
    configurations of the firmware shipped on ASPEED boards. Ensure a driver
    before starting the DMC firmware's DC state handler.
    drm/i915/cnl: Reprogram DMC firmware after S3/S4 resume
    The DMC firmware program memory is lost after S3/S4 system suspend, so
    set again, so the firmware behaves as though it’s interacting with an
    needs to be set at load_8051_firmware() and _dc_start(). Currently, it's
    only set at load_8051_firmware().
    exists firmware mappings to map root complexes ids to SMMU ids
    This configuration is used by the OpenPower firmware for it's
    firmware: arm_scpi: remove scpi_remove
    firmware: arm_scpi: make freeing mbox channels device-managed
    firmware: arm_scpi: pre-populate dvfs info in scpi_probe
    firmware: arm_scpi: remove two unneeded devm_kfree's in scpi_remove
    firmware: arm_scpi: remove usage of drvdata and don't reset scpi_info to null
    When I2C is enabled, the comment string for "Altera FPGA firmware
    before starting the DMC firmware's DC state handler.
    drm/i915/cnl: Reprogram DMC firmware after S3/S4 resume
    The DMC firmware program memory is lost after S3/S4 system suspend, so
             _request_firmware+0x39f/0x880
             request_firmware_direct+0x37/0x50
    platform/firmware supports it.
    scsi: lpfc: Fix secure firmware updates
    If multiple DMA buffers are used for the download, some firmware revs
    This requires NIC firmware providing version 1.7 of the API. With
    older NIC firmware 802.1ad tagged packets will continue to be dropped.
    and NVM firmware upgrade continue to work as before (with the small
    Mariusz relaxes the firmware check since Fortville and Fort Park NICs
    can and do have different firmware versions, so only warn for older
    Fortville firmware.  Fixed an errata with a flow director statistic that
    normal circumstances.  Refactor the firmware version checking since
    Fortville and Fort Park devices can have different firmware versions.
    firmware versions. So be smart about how we handle these. Move the FW
    Fortville and Fort Park devices are often on different firmware release
    firmware Fortville 3 or earlier.
    embed the c4iw_wr_wait object in the message sent to firmware.  So for
    A NULL pending_msg_hdr is not an error, it just means that the firmware
    This could cause a new error to be populated by firmware in-between
      drm: add backwards compatibility support for drm_kms_helper.edid_firmware
      drm: handle override and firmware EDID at drm_do_get_edid() level
    Offline.quietDuration was added in the 8051 firmware, and the driver
    state of the NFP firmware, only VXLAN traffic on well known port 4789 is
    * CVE-2017-0786: add length check scan results from firmware
    firmware/microcode part triggers HMI interrupts when hitting such
    It's already included in atomfirmware.h
    drm/amd/display: Rename firmware_info to dc_firmware_info
    This is to avoid conflicts with amdgpu's firmware_info once we
    drm/amd/display: refclock from bios firmwareInfoTable
    Due to a bug in aquantia atlantic card firmware, it sometimes reports
    drm/amdgpu:fix firmware memoryleak(v2)
    this fix memory leak due to request_firmware after driver
    release gmc firmware for gmc6/7/8 as well
    Requested by SRIOV, the clearance of the bit moved into firmware
    is executing the firmware command.
    2) The firmware command execution.
    ieee802154: atusb: fix firmware version check to enable frame retries
    Besides the warning the old check would also fail for firmware versions
    liquidio: firmware loading
    1. Allow host driver parameter to override auto-loaded firmware (in flash).
    2. Verify version of firmware that is auto-loaded from flash.
    3. Change value of fw_type module parameter to reflect default firmware
    liquidio: update module parameter fw_type to reflect firmware type loaded
    liquidio: verify firmware version when auto-loaded from flash.
    liquidio: allow override of firmware present in flash
    CPUs on newer firmware.  It also garbage collects some stub clock code
    drm/i915: Speed up DMC firmware loading
    to load the DMC firmware. Due to the cost of acquiring/releasing a lock,
    and the size of the DMC firmware, this slows down DMC loading a lot.
    This patch simply acquires the lock, writes the entire firmware,
    in the order of 10ms on platforms with DMC firmware (GEN9+).
    enabled by any distro yet. This driver obtains error info from firmware
    firmware implementation.
    And most devices and firmwares will never trigger a stall as a result
    unexpected behaviour, hoping that it attracts attention from firmware
    We will dump information about firmware version, firmware file
      parisc: Add wrapper for pdc_instr() firmware function
     - tweak to firmware update timing in Elan I2C touchpad driver.
    support the page deallocation feature from firmware.
    Architecture document, one should use the PDC_INSTR firmware function to
    Testing on a C3000 and C8000 showed that this firmware call isn't
    parisc: Add wrapper for pdc_instr() firmware function
    operation during firmware update. Let's increase the delay to ensure that
    firmware updates.
    though the gadget's firmware has crashed -- a reasonably accurate
      The in-kernel firmware was removed during the previous merge window.
       - remove firmware install from rpm-pkg / deb-pkg
      kbuild: deb-pkg: remove firmware package support
      kbuild: rpm-pkg: delete firmware_install to fix build error
    The driver / firmware will decide whether to use it or not.
    NL80211_EXT_FEATURE_ACCEPT_BCAST_PROBE_RESP. Because a device's firmware
    kbuild: deb-pkg: remove firmware package support
    Commit 5620a0d1aacd ("firmware: delete in-kernel firmware") deleted
    in-kernel firmware support, including the firmware install command.
    So, the firmware package does not make sense any more.  Remove it.
    kbuild: rpm-pkg: delete firmware_install to fix build error
    Commit 5620a0d1aacd ("firmware: delete in-kernel firmware") deleted
    in-kernel firmware support, including "make firmware_install".
      make[2]: *** No rule to make target `firmware_install'.  Stop.
    Commit df85b2d767aa ("firmware: Restore support for built-in firmware")
    is out of the scope of "make firmware_install".  So, the right thing to
    do is to kill the use of "make firmware_install".
    Fixes: 5620a0d1aacd ("firmware: delete in-kernel firmware")
    controllers to query the firmware version or flash new firmware.
    commands are not allowed. So, skip sending commands, to firmware
    Driver sends a series of scan commands to firmware to serve a
    rtlwifi: rtl8192ee: Fix memory leak when loading firmware
    Fortunately, each firmware load only leaks 4 buffers, which likely
    Cancel active scans and deactivate firmware scan watchdog timer
    The driver was not properly configuring firmware with regard to the
    Upon handling the firmware notification for scans the length was
    firmware i.e. when it is not randomly generated, to the HNS3 hardware.
    net: hns3: Fixes initialization of phy address from firmware
    each port need to be fetched from firmware and device initialized
    number allowed by firmware is indicated with this resource.
    drm: add backwards compatibility support for drm_kms_helper.edid_firmware
    Add drm_kms_helper.edid_firmware module parameter with param ops hooks
    to set drm.edid_firmware instead, for backwards compatibility.
    drm: handle override and firmware EDID at drm_do_get_edid() level
    Handle debugfs override edid and firmware edid at the low level to
    Move firmware EDID loading from helper to core, as the functionality
    parameter from drm_kms_helper.edid_firmware to drm.edid_firmware, which
    Some future work remains related to override and firmware EDID
    firmware EDID is validated separately in the loader. Some unification
    v2: move firmware loading to core
    firmware and Acer R11 Cherrytrail Chromebook
    the firmware takes care of the MCLK/plt_clk_3.
    ("clk: x86: Do not gate clocks enabled by the firmware")'
    the firmware-managed clocks are not impacted by enable/disable
    In some situations we don't receive notification from firmware that
    drm/amdgpu: add support for request SI/CI firmware in CGS
    drm/amdgpu/psp: declare raven psp firmware
    1. xhci_plat comes from firmware
    2. xhci_plat is child of a device from firmware (dwc3-plat)
    firmware: Restore support for built-in firmware
    Commit 5620a0d1aac ("firmware: delete in-kernel firmware") removed the
    entire firmware directory.  Unfortunately it thereby also removed the
    support for built-in firmware.
    This restores the ability to build firmware directly into the kernel by
    EXTRA_FIRMWARE_DIR is now the standard directory /lib/firmware/.
    Fixes: 5620a0d1aac ("firmware: delete in-kernel firmware")
      because it broke iwlwifi firmware loading"
    Merge tag 'firmware_removal-4.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/driver-core
    Pull firmware removal from Greg KH:
      the agreement that the firmware/ tree should be dropped from the
      kernel, and everyone use the linux-firmware package instead. For some
      week, so here's a single patch that drops the whole firmware tree. The
      last firmware update was back in 2013, and all distros have been using
      linux-firmware instead since at least that year, if not before. The
    * tag 'firmware_removal-4.14-rc1' of git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/driver-core:
      firmware: delete in-kernel firmware
    Jens found that iwlwifi firmware loading failed on a Lenovo X1 Carbon,
      iwlwifi 0000:04:00.0: Direct firmware load for iwlwifi-8000C-34.ucode failed with error -2
      iwlwifi 0000:04:00.0: Direct firmware load for iwlwifi-8000C-33.ucode failed with error -2
      iwlwifi 0000:04:00.0: Direct firmware load for iwlwifi-8000C-32.ucode failed with error -2
      iwlwifi 0000:04:00.0: loaded firmware version 31.532993.0 op_mode iwlmvm
      iwlwifi 0000:04:00.0: Failed to load firmware chunk!
    firmware: delete in-kernel firmware
    The last firmware change for the in-kernel firmware source code was back
    in 2013.  Everyone has been relying on the out-of-tree linux-firmware
    noticed that the firmware expects the size of only the engine context
    in newer GuC firmwares anyway.
    GuC firmware itself. Transform the magic numbers into defines.
    drm/amdgpu: enable raven to load firmwares by psp at default (v2)
    issue is due to a firmware flaw.
    Revert "firmware: add sanity check on shutdown/suspend"
    It causes random failures of firmware loading at resume time (well,
    firmware disabling is not actually synchronous with any particular
    load the firmware at resume seems to occasionally hit the "firmware
    loading is disabled" logic because the firmware loader hasn't gotten the
    Some kind of sanity check for not trying to load firmware when it's not
      firmware: arm_scpi: fix endianness of dev_id in struct dev_pstate_set
      firmware: tegra: set drvdata earlier
      firmware: Convert to using %pOF instead of full_name
     "The iwlwifi firmware compat fix is in here as well as some other
    * fix regression with older firmwares
    * workaround firmware crash for bcm4345
    The firmware feature check introduced for multi-scheduled scan is also
    failing for bcm4345 devices resulting in a firmware crash.
    Fixes: 9fe929aaace6 ("brcmfmac: add firmware feature detection for gscan feature")
    is enable so we don't pass addresses to the firmware when not needed
    iwlwifi 0000:01:00.0: Failed to load firmware chunk!
         ARM stub loader so that the firmware can use strict mapping
       - Add support for requesting the firmware to wipe RAM at warm reboot
      efi/random: Increase size of firmware supplied randomness
      firmware/efi/esrt: Constify attribute_group structures
      firmware/efi: Constify attribute_group structures
      firmware/dcdbas: Constify attribute_group structures
    Note that the current version of -31.ucode in linux-firmware.git
    this firmware soon, so it won't be a problem anymore.
    Fixes: 7089ae634c50 ("iwlwifi: mvm: use firmware LED command where applicable")
      crypto: cavium - add release_firmware to all return case
    to a firmware assert in iwlwifi for example.
    do not occur which was causing the failed firmware updates.
    already held, such as the firmware update path which wants to lock once
    devices, causing failed firmware updates which left the eeprom in
    This should resolve firmware updates and also fix potential raise that
      'firmware nodes' that can be handled by the device properties
         'firmware nodes' that can be handled by the device properties
      firmware tests to help ensure that that crazy api is working properly.
      test_firmware: add batched firmware tests
      firmware: enable a debug print for batched requests
      firmware: define pr_fmt
      firmware: send -EINTR on signal abort on fallback mechanism
      test_firmware: add test case for SIGCHLD on sync fallback
       - Full support of the firmware Page Deallocation Table with
    ACPI-firmware-node and selects intel_soc_pmic_config_byt_crc resp.
    firmware boot vector.
    enhancements. The name of the firmware files does not have to be added
    instead. Each GPHY can now also boot separate firmware (thus mixing of
      targets that have proven to be unreliable (early-)RAM on some firmware
      x86/boot/KASLR: Work around firmware bugs by excluding EFI_BOOT_SERVICES_* and EFI_LOADER_* from KASLR's choice
    Fixes: 2dff19622421 ("nfp: process MTU updates from firmware flower app")
       - Update PM4 headers for new firmware
    19) Fix conflicts between firmware load failure and health_care timer in
    drm/amdgpu: declare the new firmware files needed by polaris asics
    a firmware difference?). This non-working gamepad seems to require
    Tested with QCA6174 hw3.0, firmware ('WLAN.RM.4.4.1-00008-QCARMSWP-1')
    Sometimes there is a firmware crash but the hardware
    ath10k: activate user space firmware loading again
    In commit 9f5bcfe93315 ("ath10k: silence firmware file probing
    warnings") the firmware loading was changed from request_firmware() to
    request_firmware_direct() to silence some warnings in case it fails.
    request_firmware_direct() directly searches in the file system only and
    the firmware directly.
    firmware gets extracted from some vendor specific partition when the
    driver requests this firmware. This mechanism does not work any more
    Fixes: 9f5bcfe93315 ("ath10k: silence firmware file probing warnings")
    x86/boot/KASLR: Work around firmware bugs by excluding EFI_BOOT_SERVICES_* and EFI_LOADER_* from KASLR's choice
    In real life however, we have workarounds for broken x86 firmware,
                     * firmware that accesses them even when they shouldn't.
    pdev->dev.archdata.firmware_data, PCI_DN(devnode), or parent's list.
    the console flushing from the panic() path before calling firmware to
    the firmware reboot. However in practice, it's critical to get the
    powerpc/pseries/le: Work around a firmware quirk
    Some PowerVM firmware when delivering a system reset interrupt to a
    stopping to depend on the firmware/bootloader configuration when using
    what's done in the firmware/bootloader as well.
    firmware/bootloader configuration).
    mvpp2 driver currently relies on the firmware/bootloader to configure
    There is an issue where the firmware fails during mlx5_load_one,
    Fixes: e207b7e99176 ("net/mlx5e: ConnectX-4 firmware support for DCBX")
    that the firmware now owns this command.  However, there is nothing that
    According to the ACPI specification, firmware is not required to provide
    Extend hest_disable variable to track whether the firmware provides this
    net:ethernet:aquantia: Show info message if bad firmware version detected.
    We should inform user about wrong firmware version
    drm/amd/include: Add hdmi_redriver_set to atomfirmware
    drm/amdgpu: support polaris10/11/12 new cp firmwares
    Newer versions of the CP firmware require changes in how the driver
    Change the firmware name for new firmware to maintain compatibility with
    * add tdls support for 10.4 firmware
    Various changes including updated firmware interface, improved TX ring
    The problem is that the firmware will disable the current TX rings even
    1. Instead of reserving the new set of TX rings, just ask the firmware
    the firmware message to do that.  If not available, abort and the
    firmware and reserve again.
    bnxt_en: Update firmware interface spec. to 1.8.1.4.
    Flow APIs are added in this firmware interface.
    a platform based on ACPI firmware info.  acpi_blacklisted(),
    Fixes: 7f080c3f2ff0 ("cxgb4: Add support to enable logging of firmware mailbox commands")
       ACPI event source and not in the max1704 firmware node, then the
    ACPI firmware-node, add support for this.
    firmware: vpd: use memunmap instead of iounmap
    controlled.  I think it actually comes from the firmware?  Anyway, I
      Input: trackpoint - add new trackpoint firmware ID
    The last is needed by encoder firmware to add padding at the
    Venus encoder driver where the hardware (firmware side) adds few
    efi/random: Increase size of firmware supplied randomness
    for requesting that the firmware clear all RAM on reset before booting
    device firmware instead of relying on our MAC/VLAN filter list. Thus,
    hardware features which are enabled on some firmware or some MAC types.
    Running firmware tests:
    make --silent -C tools/testing/selftests/firmware/ run_tests
    modprobe: ERROR: could not insert 'test_firmware': Operation not
    ./fw_filesystem.sh: /sys/devices/virtual/misc/test_firmware not present
    modprobe: ERROR: could not insert 'test_firmware': Operation not
    modprobe: ERROR: could not insert 'test_firmware': Operation not
    ./fw_filesystem.sh: /sys/devices/virtual/misc/test_firmware not present
    modprobe: ERROR: could not insert 'test_firmware': Operation not
    Rather than wait for corrected switch firmware, ensure the VVL bits are
    seconds.  If the commands are already completed by firmware, there is an
    (embedded inside chain frame of MPT frame) to firmware, driver sets the
    or L2 firmware is adding a NULL VLAN tag which can cause FIP solicitation
    Above condition will resolve as management firmware is capable of
    When multicast traffic is sent the QPN filtering is done by the firmware
    Enable SW parsing on Raw Ethernet send queue by default if firmware
      firmware: arm_scpi: fix endianness of dev_id in struct dev_pstate_set
    firmware to load hotword model at address 0x4ff80000.
    commit c815fdebef44 ("wlcore: spi: Populate config firmware data")
    commit d776fc86b82f ("wlcore: sdio: Populate config firmware data")
    is present in the file system (lib/firmware/ti-connectivity/wl1271-nvs.bin)
    Fixes: c815fdebef44 ("wlcore: spi: Populate config firmware data")
    Fixes: d776fc86b82f ("wlcore: sdio: Populate config firmware data")
    * add tdls support for 10.4 firmware
    liquidio: change manner of detecting whether or not NIC firmware is loaded
    In the NIC firmware, the 1-bit flag indicating "firmware is loaded" moved
    Remove code that sets the "firmware is loaded" flag because it's now the
    firmware's job to do that.
    In the code that detects whether or not the firmware is loaded, don't just
    rely on checking the "firmware is loaded" flag because that may cause a
    rare false negative.  Add code that deduces whether or not the firmware is
    Also bump up driver version to match newer NIC firmware.
    userspace via entries in /sys/firmware/acpi/tables/
    file in a new directory /sys/firmware/acpi/tables/data/BERT
    layer can reuse a request while the firmware is still processing
    firmware: arm_scpi: fix endianness of dev_id in struct dev_pstate_set
    Fixes: 37a441dcd5f4 ("firmware: arm_scpi: add support for device power state management")
    the firmware/bootloader initialization. Some patches cleanup some parts
    firmware/bootloader initialization to configure some parts, as the Group
    driver was relying on the firmware/bootloader initialization; this patch
    this commit, and the mvpp2 driver was relying on the bootloader/firmware
    relying on the bootloader/firmware initialization. This doesn't mean
    Merge branch 'liquidio-VF-driver-will-notify-NIC-firmware-of-MTU-change'
    liquidio: VF driver will notify NIC firmware of MTU change
    Make VF driver notify NIC firmware of MTU change.  Firmware needs this
    liquidio: make VF driver notify NIC firmware of MTU change
    parisc: PDT/firmware: Add support to read PDT on older PAT-machines
    Older machines with a PAT firmware (e.g. the rp5470) return their Page
    This patch adds the necessary structures and wrappers to call firmware.
    signed blobs from NVIDIA in linux-firmware.
           signed firmware to us, this is the best we can do for now.
    crypto: cavium - add release_firmware to all return case
    Two return case misses to call release_firmware() and so leak some
      drm/i915/opregion: let user specify override VBT via firmware load
    acknowledge with the invalid code. I guess this is a bug of firmware. I
    confirmed the bug in firmware version 1.04 and this is the latest one.
    we can't rely on label name in the driver since vendor firmware might
    firmware/efi/esrt: Constify attribute_group structures
    firmware/efi: Constify attribute_group structures
    firmware/dcdbas: Constify attribute_group structures
    This relies on the firmware to actually take the section permission
    On UEFI systems, the firmware may expose a Graphics Output Protocol (GOP)
    configured and enabled by the UEFI firmware, and the GOP protocol will
    While this is less likely to occur on x86, given that the firmware's
    significance to the firmware itself are omitted from the linear mapping.
    special significance to the firmware, and it is up to the OS to decide
    - Update PM4 headers for new firmware that support scratch memory
    firware -> firmware
    representors are only the PCIe and MAC port statistics firmware
    Extend representors' ethtool ops to show basic info like firmware
    Input: trackpoint - add new trackpoint firmware ID
    Synaptics add new TP firmware ID: 0x2 and 0x3, for now both lower 2 bits
    Merge tag 'tegra-for-4.14-firmware' of git://git.kernel.org/pub/scm/linux/kernel/git/tegra/linux into next/drivers
    * tag 'tegra-for-4.14-firmware' of git://git.kernel.org/pub/scm/linux/kernel/git/tegra/linux:
      firmware: tegra: set drvdata earlier
    Merge branch 'liquidio-initialization-fixes-for-embedded-firmware'
    liquidio: initialization fixes for embedded firmware
    skd: Submit requests to firmware before triggering the doorbell
    Fixes: e9e1ba3dbf00 ("iwlwifi: mvm: support getting nvm data from firmware")
    in the 5.2GHz band.  The firmware has been modified to not allow this
    firmware will assert when we try to use it.
    in order to load the appropriate firmware.
    firmware knows about more flags than the driver.
    ping pong with the firmware:
    iwlwifi: mvm: update the firmware API in TX
    The firmware team is now re-using a bit that hasn't been
    This bit will be set by the firmware to indicate that
    iwlwifi: mvm: support new Coex firmware API
    The firmware now adds more information about time sharing
    It required the driver to configure the firmware based on
    we can't rely on label name in the driver since vendor firmware might
    Add DSD support for new Amanero Combo384 firmware version with a new
    PID. This firmware uses DSD_U32_BE.
    Fixes: 3eff682d765b ("ALSA: usb-audio: Support both DSD LE/BE Amanero firmware versions")
    Bluetooth: hci_bcm: Handle empty packet after firmware loading
    packet type 0x00 after launching the firmware. This will cause logging
    On some systems the platform firmware expects GPEs to be enabled
    The platform firmware on some systems, however, expects GPEs to be
    SoC is the same as for Nouveau for the Tegra GPU firmware (see
    drm/i915/opregion: let user specify override VBT via firmware load
    Add a module parameter to load the VBT using the firmware loader, not
    unlike the EDID firmware mechanism.
    v2: clarify firmware load return value check (Bob)
    v3: kfree the loaded firmware blob
    firmware: tegra: set drvdata earlier
    Auto rate frame is sent to firmware when a new station is
    to firmware to inform the firmware about new station connection.
    capabilities frame with AP mode is configured to firmware, beacon
    is taken from mac80211, descriptor is prepared and send to firmware.
    Same is notified to firmware through vap_capabilities frame
    Fail probe if FCoE capability is not enabled in the firmware.
    (or later) should use the V3 firmware, the driver needs to check
    Since the firmware_name is decided by xhci-rcar.c on R-Car Gen3 now,
     - Remoce .firmware_name from xhci_plat_renesas_rcar_gen3.
    usb: host: xhci: rcar: Add firmware_name selection by soc_device_match()
    This patch adds firmware_name selection by soc_device_match() to
    use other firmware name in the future. (For now, using the firmware
    handling this in firmware via the psci interface on 32bit Rockchip socs.
    * Fix mdt_loader to use request_firmware_into_buf()
      soc: qcom: mdt_loader: Use request_firmware_into_buf()
    Merge branch 'nfp-process-MTU-updates-from-firmware-flower-app'
    nfp: process MTU updates from firmware flower app
    updates from the firmware which is added by the second patch of this
    nfp: process MTU updates from firmware flower app
    handler MTU updates received from the firmware may be safely processed.
    the UART as configured by firmware.
    firmware: Convert to using %pOF instead of full_name
    To match current firmware. The map process packet has been extended
    The dpm control for vcn has been moved to firmware, kernel always spins
    * fix firmware crash (a recent regression in bcm4343{0,1,8}
    * An old bug in SMPS where the firmware was not aware of SMPS changes
    We want the firmware, and other changes, in here as well.
    devices that would only be registered using a specific firmware interface
    platform firmware.
    pinctrl: baytrail: Do not call WARN_ON for a firmware bug
    kernel bugs. For signalling a firmware bug dev_warn(dev, FW_BUG "...")
    The firmware feature check introduced for multi-scheduled scan turned out
    to be failing for bcm4343{0,1,8} devices resulting in a firmware crash.
    Fixes: 9fe929aaace6 ("brcmfmac: add firmware feature detection for gscan feature")
    It was implemented through psci firmware.
    It was implemented through psci firmware.
     "Here are three firmware core fixes for 4.13-rc5.
      firmware: avoid invalid fallback aborts by using killable wait
      firmware: fix batched requests - send wake up on failure on direct lookups
      firmware: fix batched requests - wake all waiters
    The firmware expects a MAC_REPR control message when a MAC representor
    netdev upon receipt of a control message from the firmware. This requires
    pata_cs5536 to be used with vendor firmware.
       - disable some deep idle states if the firmware configuration for
    scsi: aic7xxx: regenerate firmware files
    Regenerate firmware files to make cleaner base for following fix.
    test_firmware: add batched firmware tests
    The firmware API has a feature to enable batching requests for the same fil
    release_firmware() has not been called for a successful firmware call. This
      o request_firmware() and
      o request_firmware_direct()
       o request_firmware_nowait(uevent=true) and
       o request_firmware_nowait(uevent=false)
    can be configured with another knob. The call request_firmware_into_buf()
    pass for the following 3 kernel builds possible for the firmware API:
    firmware: enable a debug print for batched requests
    firmware: define pr_fmt
    firmware: send -EINTR on signal abort on fallback mechanism
    test_firmware: add test case for SIGCHLD on sync fallback
    on sync firmware requests which rely on the sysfs interface for a
    firmware: avoid invalid fallback aborts by using killable wait
    Commit 0cb64249ca500 ("firmware_loader: abort request if wait_for_completion
    later triggered a sync request for firmware through a sysfs interface which
    interruptible wait we constructed on firmware_class and detects it as an
    abort *before* userspace could get a chance to write the firmware. Upon
    $ sudo tools/testing/selftests/firmware/fw_fallback.sh
    tools/testing/selftests/firmware/fw_fallback.sh: error - sync firmware request cancelled due to SIGCHLD
    $ sudo tools/testing/selftests/firmware/fw_fallback.sh
    tools/testing/selftests/firmware/fw_fallback.sh: SIGCHLD on sync ignored as expected
    exclusively relying on the fallback mechanism for firmware (2 drivers),
    triggers to load firmware. Only distributions relying on the fallback
       unrelated to firmware loading, it could be sleep 2; for all we care ]
       ends up calling request_firmware() kernel side
    3) The firmware loading fallback mechanism is used, the request is sent to
    4) before firmware loading completes pid 42 dies (for any reason, even
       request_firmware() caller.
    Fixes: 0cb64249ca500 ("firmware_loader: abort request if wait_for_completion is interrupted")
    firmware: fix batched requests - send wake up on failure on direct lookups
    The firmware API batched requests feature has been broken since the API call
    request_firmware_direct() was introduced on commit bba3a87e982ad ("firmware:
    Introduce request_firmware_direct()"), added on v3.14 *iff* the firmware
    When no firmware is found the worker which goes on to finish never informs
    For device drivers with optional firmware schemes (ie, Intel iwlwifi, or
    Netronome -- even though it uses request_firmware() and not
    request_firmware_direct()), this could mean that when you boot a system with
    multiple cards the firmware will seem to never load on the system, or that
    right time for this to work, also release_firmware() must not be called
    API-type                               no-firmware-found   firmware-found
    request_firmware()                     FAIL                OK
    request_firmware_direct()              FAIL                OK
    request_firmware_nowait(uevent=true)   FAIL                OK
    request_firmware_nowait(uevent=false)  FAIL                OK
    API-type                               no-firmware-found   firmware-found
    request_firmware()                     FAIL                OK
    request_firmware_direct()              FAIL                OK
    request_firmware_nowait(uevent=true)   FAIL                OK
    request_firmware_nowait(uevent=false)  FAIL                OK
    API-type                               no-firmware-found   firmware-found
    request_firmware()                     OK                  OK
    request_firmware_direct()              FAIL                OK
    request_firmware_nowait(uevent=true)   OK                  OK
    request_firmware_nowait(uevent=false)  OK                  OK
    API-type                               no-firmware-found   firmware-found
    request_firmware()                     OK                  OK
    request_firmware_direct()              OK                  OK
    request_firmware_nowait(uevent=true)   OK                  OK
    request_firmware_nowait(uevent=false)  OK                  OK
    API-type                               no-firmware-found   firmware-found
    request_firmware()                     OK                  OK
    request_firmware_direct()              OK                  OK
    request_firmware_nowait(uevent=true)   OK                  OK
    request_firmware_nowait(uevent=false)  OK                  OK
    API-type                               no-firmware-found   firmware-found
    request_firmware()                     OK                  OK
    request_firmware_direct()              OK                  OK
    request_firmware_nowait(uevent=true)   OK                  OK
    request_firmware_nowait(uevent=false)  OK                  OK
    Fixes: bba3a87e982ad ("firmware: Introduce request_firmware_direct()"
    firmware: fix batched requests - wake all waiters
    The firmware cache mechanism serves two purposes, the secondary purpose is
    secondary purpose of the firmware cache mechanism: batched requests on
    The firmware cache is used for:
       by keeping firmware in memory during the suspend/resume cycle
       lookup, which keeps the firmware in memory until the last
       release_firmware() is called
    the first user calling release_firmware(). The devres name used for the
    internal firmware cache is used as a hint other pending requests are
    ongoing, the firmware buffer data is kept in memory until the last user of
    the buffer calls release_firmware(), therefore serializing requests and
    ("firmware: do not use fw_lock for fw_state protection") ported the firmware
    just go back to using completions as before commit 5b029624948d ("firmware:
    with the same firmware name is used, otherwise batched requests will wait
    API-type                               no-firmware-found   firmware-found
    request_firmware()                     FAIL                FAIL
    request_firmware_direct()              FAIL                FAIL
    request_firmware_nowait(uevent=true)   FAIL                FAIL
    request_firmware_nowait(uevent=false)  FAIL                FAIL
    API-type                               no-firmware-found   firmware-found
    request_firmware()                     FAIL                FAIL
    request_firmware_direct()              FAIL                FAIL
    request_firmware_nowait(uevent=true)   FAIL                FAIL
    request_firmware_nowait(uevent=false)  FAIL                FAIL
    API-type                               no-firmware-found   firmware-found
    request_firmware()                     FAIL                FAIL
    request_firmware_direct()              FAIL                FAIL
    request_firmware_nowait(uevent=true)   FAIL                FAIL
    request_firmware_nowait(uevent=false)  FAIL                FAIL
    API-type                               no-firmware-found   firmware-found
    request_firmware()                     FAIL                OK
    request_firmware_direct()              FAIL                OK
    request_firmware_nowait(uevent=true)   FAIL                OK
    request_firmware_nowait(uevent=false)  FAIL                OK
    API-type                               no-firmware-found   firmware-found
    request_firmware()                     FAIL                OK
    request_firmware_direct()              FAIL                OK
    request_firmware_nowait(uevent=true)   FAIL                OK
    request_firmware_nowait(uevent=false)  FAIL                OK
    API-type                               no-firmware-found   firmware-found
    request_firmware()                     OK                  OK
    request_firmware_direct()              FAIL                OK
    request_firmware_nowait(uevent=true)   OK                  OK
    request_firmware_nowait(uevent=false)  OK                  OK
    Fixes: 5b029624948d ("firmware: do not use fw_lock for fw_state protection")
    firmware how to distribute/throttle power between different entities
    RDMA: Simplify get firmware interface
    In the reference HID sensor hub firmware all Named array enums were
    iwlwifi: mvm: fix the coex firmware API
    The firmware API defined in the header files didn't match
    the structure that are actually passed by the firmware.
    Fix this issue if it is not supported by the firmware.
    5 logical addresses, but only 1 is handled since the Suspend firmware can
    The Suspend firmware configuration will be added in an other patchset.
    When an RX block-ack session times out, the firmware, which offloads
    iwlwifi: dump smem configuration when firmware crashes
    the firmware crashes. This is useful mainly for later
    iwlwifi: mvm: use firmware LED command where applicable
    firmware instead. Add support for this. Note that this means that
    the LED cannot be turned on while the firmware is off, so using an
    request, then we send an ADD_STA command to the firmware
    firmware hasn't sent the response to the ADD_STA command.
    liquidio: fix misspelled firmware image filenames
    Fix misspelled firmware image filenames advertised via MODULE_FIRMWARE().
    soc: qcom: mdt_loader: Use request_firmware_into_buf()
    By switching to the request_firmware_into_buf() we load the segment data
    scratch buffers for these. In particular the modem firmware consists of
    | a000000.wifi: firmware ver 10.4-3.4-00082 api 5 features no-p2p,mfp,[...]
    | a800000.wifi: firmware ver 10.4-3.4-00082 api 5 features no-p2p, [...]
    This patch fixes system hang/crash while firmware dump is attempted with
    Following stack trace is seen during firmware dump capture process
    When the device/firmware supports multi-channel, it can have P2P
    the num_different_channels in wiphy info was not correct when firmware
    firmware will set privacy bit and add WPA OUI in VENDOR IE in beacon and
    firmware could parse correctly.
    vap dynamic update frame to firmware.
    BUFFER_AVAILABLE interrupt is sent by firmware to indicate
    We get buffer full event from firmware whenever Tx queue is full
    frame is downloaded to firmware with default settings and
    configuration frames are downloaded to firmware when power save
    firmware and may therefor sleep, resulting in the following report:
    This is done by introducing a mutex to cover firmware configuration
    operations changing the state or configuration of the firmware. With
    firmware support full rx reorder. If the full rx
    scsi: aic7xxx: fix firmware build deps
    gcc-7 complains that the firmware version strings might overflow
    IORT named components provide firmware configuration describing
    configurations reported by firmware.
    the DMA set-up required by firmware. By making PCI devices DMA set-up
    Backward compatibility with older firmware is preserved, the modified
    driver reads max_flow_counter_31_16 as 0 from the older firmware and
    with older firmware is preserved as we kept the 16 LSBs of the counter
    the S3 path in the platform firmware which remains untested and turns
         the firmware has it enabled already so that audio doesn't get
      clk: x86: Do not gate clocks enabled by the firmware
    WMI interface for all the firmwares(except QCA6174) does not include the
    TDLS implementation on 10.4 firmware requires host to configure the
    ath10k: add tdls support for 10.4 firmwares
    This patch adds the support of TDLS feature for 10.4 firmware
    10.4 firmwares.
    TDLS implementation for 10.4 firmwares introduces new wmi services by
    HTC protocol working and it's possible to boot the firmware,
    Sometimes, we might using wifi-only firmware with a combo firmware name,
    which includes firmware download using host DMA, DO/D3 handlers, irq_thread
    qtnfmac: fix handling of iftype mask reported by firmware
    is not returned by firmware. This patch implements the scan timeout
    and then sends command to firmware. Beacon IEs are not sent since
    beacon update is handled by firmware.
    On startup driver obtains regulatory rules from firmware and
    domain change can be requested by host. In this case firmware
    then firmware updates hardware channel configuration and host
    rtlwifi: Fix fallback firmware loading
    firmware") added code to load an old firmware file if the new one is
    request_firmware_nowait() does not wait for the firmware to show up
    ("rtlwifi: rtl8192cu: Add new firmware") instead.
    Fixes: f70e4df2b384 ("rtlwifi: Add code to read new versions of firmware")
    * An old bug in SMPS where the firmware was not aware of SMPS changes;
    -Management Complex (MC) firmware initializes / manages (partially)
      scsi: aic7xxx: fix firmware build with O=path
      drm/amdgpu: disable firmware loading for psp v10
    drm/ast: Actually load DP501 firmware when required
    The ast driver has a code to load the DP501 firmware, but it's never
    firmware on demand, and release the firmware at exit as well.
    variant on it (the S3 implementation in the platform firmware turns
    http://devicetree.org/open-firmware/home.html
    where the firmware authors cannot be bothered to program that
    Currently we use the stop-api provided by the firmware to program the
    All the firmware versions the driver supports enable DQA, and thus
    firmware image doesn't support AP_LINK_PS but we're running
    only sent by the FW in production, for development firmwares, an
    Fixes: e9e1ba3dbf00 ("iwlwifi: mvm: support getting nvm data from firmware")
    devices due to firmware issues, but checking for the new TX API
    iwlwifi: reorganize firmware API
    Apart from DVM, all firmware uses the same base API, and there's
    in the source better and reorganize the firmware API to a new
    iwlwifi: refactor firmware debug code
    Split out the firmware debug code to be more general, so that it
    iwlwifi: track current firmware image in common code
    Track the current firmware image in the common code instead
    our firmware assert.
    iwlwifi: add TLV for MLME offload firmware capability
    The firmware now adds a new DWORD for the MLME offload's
    capability even on firmware versions that don't support
    firmware where the IP header starts. If we have an IV, then
    added by the firmware itself.
    firmware on it.
    when a link down occurs. The firmware will
    firmware.
    IB/hfi1: Fix initialization failure for debug firmware
    Loading debug signed firmware fails if started immediately after
    failed attempt to load production firmware. A short delay is
    cxgb4: core hardware/firmware support for Forward Error Correction on a link
    liquidio: bump up driver version to match newer NIC firmware
    Bump up driver version to match newer NIC firmware.  Also update
    nic_rx_stats (a struct common to host driver and firmware) by adding a new
    string length for the procfs name and the firmware version string:
    compatible with the "data" field in "struct firmware" which is of type
    malicious firmware file was supplied, kernel data beyond these buffers
     - fix cavium/nitrox firmware path
      crypto: cavium/nitrox - Change in firmware path.
    rtlwifi: Fix memory leak when firmware request fails
    This patch will fix memory leak when firmware request fails
    firmware_stat and adapter->mfg_mode is pointless as the device
    unitialized stack garbage to pass all the way through to the firmware
    [ 1184.821158] mwifiex_pcie 0000:01:00.0: info: dnld wifi firmware from 174948 bytes
    descriptor structure. Also DFS channel indication to firmware
    Newer firmware sends information about number of blocks through
    frame to the firmware.
    firmware's requirement. This logic is moved to rsi_usb_card_write() so
    The format of the frame is modified in firmware to include eeprom length
    and offset. This frame does not return firmware version now. Also same
    for 64-bit kernels. That was because old firmwares didn't necessarily
    Merge branch 'nfp-extend-firmware-request-logic'
    nfp: extend firmware request logic
    application firmwares onto NFP.  We want to support both users selecting
    one of the firmware images provided by Netronome (which are optimized
    for different use cases each) as well as firmware images created  by
    the right firmware image being placed in /lib/firmware.  This vastly
    therefore we first try to load firmware specific to the device (by
    nfp: only use direct firmware requests
    request_firmware() will fallback to user space helper and may cause
    helper functionality switch to the simpler request_firmware_direct()
    nfp: look for firmware image by device serial number and PCI name
    We generally look up firmware by card type, but that doesn't allow
    to select firmware per adapter.
    Unfortunately user space firmware helper seems fraught with
    handling firmware uevents have been dropped from systemd and most
    To allow users selecting firmware for a particular device look up
    firmware names by serial and pci_name().  Use the direct lookup to
    can place in /lib/firmware/netronome files named:
    We use a hack to defer probe when firmware was not pre-loaded
    firmware in initramfs, the driver will most likely get another
    firmware image is present in initramfs if nfp.ko is placed
       a bad page is reported by firmware. This is now fixed and the kernel
       structure in our firmware on-board-flash storage driver
      parisc: Fix crash when calling PDC_PAT_MEM PDT firmware function
    firmware.
    (b) some firmware appears to return multiple results for a given
    kernel but without its support in the firmware, I got
    platform/qcom/venus/firmware.c: In function 'venus_boot':
    platform/qcom/venus/firmware.c:63:49: error: passing argument 3 of 'dmam_alloc_coherent' from incompatible pointer type [-Werror=incompatible-pointer-types]
    When these bugs are fixed that will break firmware loading,
    firmware buffer into reserved (and memblock removed)
    load firmware segments into proper places and unmap
    drm/amdgpu: disable firmware loading for psp v10
    Now asd firmware is not ready for psp v10, will enable it when it's available
    Add a firmware wrapper function, which asks PDC firmware for the DIMM slot of a
    parisc: Fix crash when calling PDC_PAT_MEM PDT firmware function
    introduced the pdc_pat_mem_read_pd_pdt() firmware helper function, which
    Fix it by using the pdc_result struct instead when calling firmware and copy
    scsi: aic7xxx: fix firmware build with O=path
    Building firmware with O=path was apparently broken in aic7 for ever.
    This series includes updating the firmware interface, adding
    bnxt_en: Set ETS min_bw parameter for older firmware.
    In addition to the ETS weight, older firmware also requires the min_bw
    bnxt_en: Report firmware DCBX agent.
    Report DCB_CAP_DCBX_LLD_MANAGED only if the firmware DCBX agent is enabled
    disabled in firmware, we report DCB_CAP_DCBX_LLD_HOST and allow host
    port statistics updates, so that the firmware logs will not be
    bnxt_en: Retrieve the hardware bridge mode from the firmware.
    bnxt_en: Update firmware interface spec to 1.8.0.
    VF representors and PTP are added features in the new firmware spec.
    Current firmware supported by the driver doesn't support batch deletion
    When delay drop timeout is expired, the firmware raises
    net/mlx5: Add raw ethernet local loopback firmware command
    Add support for raw ethernet local loopback firmware command.
    (application) or boot mode, depending on whether firmware/configuration is
    Another number of controllers does not store firmware in a non-volatile
    memory, and they similarly need to have firmware loaded before input device
    There is a desire to be able to trigger firmware loading via udev, but it
    On tango platforms, firmware configures the CPU clock, and Linux is
    firmware throws at us.
    as the number of arguments can be explicitly obtained from the firmware
    A hardware/firmware error may happen at any point in time. In
     * iwlwifi firmware crashes, but no error can be reported at this
    Sometimes, we can have an firmware crash while trying to
    recover from a previous firmware problem.
    a firmware crash we will bail out fairly early and in the
    When that timer expired after a double firmware crash,
    platform/qcom/venus/firmware.c: In function 'venus_boot':
    platform/qcom/venus/firmware.c:63:49: error: passing argument 3 of 'dmam_alloc_coherent' from incompatible pointer type [-Werror=incompatible-pointer-types]
    When these bugs are fixed that will break firmware loading,
    firmware buffer into reserved (and memblock removed)
    load firmware segments into proper places and unmap
    Starting FW version 20.6.47, firmware is keeping separate statistics
    both the format and the length are defined by the firmware interface.
    firmware before the root partition is mounted.
    liquidio: support new firmware statistic fw_err_pki
    Added support for new firmware statistic 'tx_err_pki'.
    media: coda: mark CODA960 firmware versions 2.3.10 and 3.1.1 as supported
    contained in the i.MX firmware download archives provided by NXP at
    http://www.nxp.com/lgfiles/NMG/MAD/YOCTO/firmware-imx-3.5.7-1.0.0.bin
    and http://www.nxp.com/lgfiles/NMG/MAD/YOCTO/firmware-imx-5.4.bin,
      clk: x86: Do not gate clocks enabled by the firmware
    clk: x86: Do not gate clocks enabled by the firmware
    the firmware. In this case avoid gating the clock.
    crypto: cavium/nitrox - Change in firmware path.
    Moved the firmware to "cavium" subdirectory as suggested by
    The smartpqi firmware will bypass the cache for any request larger than
    The hpsa firmware will bypass the cache for any request larger than 1MB,
    altera-ps-spi loads FPGA firmware over SPI, using the "passive serial"
    These flags only work on Power9 firmwares, and worse can cause boot
    to firmware loading failure.
    where firmware takes care of IDM operations. This patch updates
    firmware itself. Driver is not supposed to touch IDM registers.
    So this patch masks IDM operations in case firmware is taking
    timing is, just use the value that the firmware was using.
    Some firmwares in Huawei E3372H devices have been observed to switch back
    drm/amdgpu: call atomfirmware get_clock_info for atomfirmware systems
    drm/amdgpu: add get_clock_info for atomfirmware
    drm/amdgpu/atomfirmware: implement vram_width for APUs
    Implement support using the new atomfirmware system info table.
    drm/amdgpu: set firmware loading type as direct by default for raven
    We should open this path and set it as direct by default till psp firmware
    drm/amdgpu: add ACG SMU firmware for other vega10 variants
    drm/amdgpu: unify some atombios/atomfirmware scratch reg functions
    Align with the atomfirmware code.
    drm/amdgpu: add check when no firmware need to load
    /sys/firmware/iscsi_bootX/ using qed NVM-image reading API and further
    48C temparature.  And with EC firmware revisioned as 1.14, without
    without upgrading the EC firmware.
    be fixed by upgrading the EC firmware on that machine.
    upgrading the EC firmware is not an option.
    a firmware message.
    The PF driver sets up a list of firmware commands from the VF driver that
    whereas the firmware interface is defined in u32 types, causing bits in
         firmware-agnostic way (Sakari Ailus, Kieran Bingham)"
      device property: Move fwnode graph ops to firmware specific locations
       - Prevent overwriting of the e820 firmware table, which causes kexec
      x86/boot/e820: Introduce the bootloader provided e820_table_firmware[] table
      x86/boot/e820: Rename the e820_table_firmware to e820_table_kexec
      x86/boot/e820: Avoid overwriting e820_table_firmware
       - TI Keystone SCI firmware controlled clks and OMAP4 clkctrl
      of: document /sys/firmware/fdt
       - Add support for the new NVDIMM platform/firmware mechanisms
      ASoC: Intel: Skylake: Add support to read firmware registers
    between wlan firmware and wlan wcn3990 platform driver. Add copy
    Fixes: c0eab5b3580a ("liquidio: CN23XX firmware download")
    should not hurt with old firmwares, because if they don't
    firmwares advertising ABI 5.x, however, can depend on the
    x86/boot/e820: Introduce the bootloader provided e820_table_firmware[] table
    Add the real e820_tabel_firmware[] that will not be modified by the kernel
    In addition to that modify the code so that e820_table_firmwarep[] is
    exposed via sysfs to represent the real firmware memory layout,
    x86/boot/e820: Rename the e820_table_firmware to e820_table_kexec
    Currently the e820_table_firmware[] table is mainly used by the kexec,
    introduce the real e820_table_firmware[] table.
    x86/boot/e820: Avoid overwriting e820_table_firmware
    the kexec kernel might fake a mptable and saves it into the e820_table_firmware[]
    invoking of e820_reserve_setup_data() will overwrite the e820_table_firmware[]
    Fix this issue by updating the e820_table_firmware[] according to
         based on the "BPMP" firmware
       - ARM SCPI firmware
      firmware: tegra: Fix locking bugs in BPMP
      firmware: arm_scpi: add support to populate OPPs and get transition latency
      reorg, the new mux driver subsystem, google firmware driver updates,
      maintainers. There's also some small firmware updates in here, a new
         maintained by firmware and holds the list of memory addresses which
         non-compliant firmware (Ard Biesheuvel)
    Commit bdd0384a5ada ("ASoC: Intel: Skylake: Add support to read firmware
    registers") introduced firmware register read so added sst-dsp-priv.h but
    Fixes: bdd0384a5ada ("ASoC: Intel: Skylake: Add support to read firmware registers")
    Last minute changes to get new hardware and firmware support for
    drivers/built-in.o: In function `mlx5_firmware_flash':
    (.text+0x5aed72): undefined reference to `mlxfw_firmware_flash'
    - A fix for the nfcmrvl driver firmware download mechanism.
    ("net/mlx5: Fix driver load error flow when firmware is stuck") Kernels >= v4.4*
    matter as we drain the scancodes queued in the firmware's ring buffer
    of: document /sys/firmware/fdt
    Add ABI documentation for /sys/firmware/fdt
    Update contact email for /sys/firmware/devicetree/* and add mail list
    ASoC: Intel: Skylake: Add support to read firmware registers
    debug options for driver like module configuration read, firmware register
    Adding callbacks for PMK provisioning. If firmware supports offloading
    The firmware may have supplicant code built-in. This is detected
    The ConnectX chip firmware programs the FPGA by accessing its configuration
    firmware arranges for cpu caches to be flushed on a power-fail event.
    move the firmware related header files there.
    firmware image starting from 8000 family.
    The firmware team also requested to send the BT_COEX
    When the firmware supports CDB, PHY contexts cannot be modified to
    Fix the kernel-doc, and remove some fields even the firmware doesn't
    iwlwifi: mvm: remove some CamelCase from firmware API
    Fixes: 015e367494c1 ("rsi: Register interrupt handler before firmware load")
    When uid checking is enabled firmware guarantees uniqueness of the uids
    firmware provided ids.
    firmware, at the time of crash, moves this memory chunk to different
    pending. As the IO is outstanding with the firmware, it may do DMA
    index.  The shadow register is dma'ed by firmware.
    The pmem driver assumes if platform firmware describes the memory
    flush data to a power-fail safe zone. We warn if the firmware does not
    This flag lets userspace know which firmware partitions are currently in
    If an old kernel is in use, or the firmware doesn't support these fields,
    fallback to default firmware. Change EPROM read function to treat
    to its uart port. In that case, firmware can be applied, but there is
    net/mlx5: Fix driver load error flow when firmware is stuck
    When wait for firmware init fails, previous code would mistakenly
    no matter if P-states are controlled by hardware or firmware
    firmware is being loaded. So, add a check to make sure the DSP resets
    these DSP devices. The driver expects the firmware names to be of the
    support, and firmware download.
    memory for virtio vrings/buffers and other sections of the firmware
    * add module parameter ftm_mode to load separate firmware for factory
    * go back to using dma_alloc_coherent() for firmware scratch memory
    On ACPI systems, the driver depends on firmware pre-initializing the
    and from the firmware. The representors act as upper-devices. For TX
    netdev to prepend metadata to the packet before forwarding the firmware. On
    received from the firmware and forwards the skb to the representor after
    used to communicate configuration information with the firmware. These
    firmware directing them over ACPI.
    once firmware starts using the new codes in place of generic ones, and
    exercises the ACPI S3 path in the firmware) and suspend-to-idle is
    firmware interface that can be used to indicate to the platform that
    iwlwifi: pcie: delete the Tx queue timer earlier upon firmware crash
    When the firmware crashes, the transmit queues can't make
    then it is properly initialized in drivers/firmware/efi/efi.c, but not in
    Fixes: b6eaa45aa18b ("iwlwifi: mvm: add the cause of the firmware dump in the dump")
    Our firmware wants it the other way around: first set
    iwlmvm doesn't remove the station from the firmware when
            remove_the_station_from_the_firmware()
    Fixes: ab02165ccec4 ("iwlwifi: add wide firmware command infrastructure for TX")
    Platforms which support the firmware-first RAS error reporting model
    CONFIG_EFI_CAPSULE_LOADER allows the user to update the EFI firmware,
    Until now, the ICU was configured in a static fashion by the firmware,
    provided by firmware.
    interrupt polarity correctly if it's properly specified in firmware
    provided by firmware.
    provided by firmware.
    iwlwifi: mvm: change the firmware name loading
    The firmware moved the development from a0 MAC to z0.
    to embed few partitions into a single one / single firmware file.
        Drop !vc4->firmware_kms check, as the firmware_kms
    Move the special case for the early Galileo firmware into
    With the firmware first model, the platform could inform the OS about a
    * add module parameter ftm_mode to load separate firmware for factory
    * go back to using dma_alloc_coherent() for firmware scratch memory
    firmware file to the device.
    firmware file to the device.
    As the firmware flash process takes about 20 seconds and ethtool
    shared module to be used while flashing the device firmware.
    MCC (Management Component Control) allows to control a firmware
    a firmware component.
    information about firmware components.
    supported by the firmware for header re-write to the corresponding
    device property: Move fwnode graph ops to firmware specific locations
    Move firmware specific implementations of the fwnode graph operations to
    firmware specific locations.
    properties. The implementation of this functionality for each firmware
    type was embedded in the fwnode property core. Move it out to firmware
     4) Several mlx5 driver fixes (firmware readiness, timestamp cap
      firmware bugs so it is fairly important.
    at least a few of the hooks (eg. kernel modules, firmware, and the kexec
    Alice updates flags related to firmware interactions for WoL and admin
    Greg fixes the parsing of firmware 4.33 admin queue commmand "Get CEE
    DCBX PER CFG" because the firmware now creates the oper_prio_tc nibbles
    which was causing the firmware confusion in some reset sequences, when
    Filip adds support for OEM firmware version, so that if a OEM specific
    firmware version string instead of etrack id.
    After successful loading of firmware, a CARD READY indication is
    in firmware i.e. WLAN, BT.
    Boot parameters are changed in new firmware. Also three
    rsi: Register interrupt handler before firmware load
    Before firmware load, sometimes false interrupts are received.
    is moved before firmware load. We will drop these false interrupts
    ("mwifiex: disable channel filtering feature in firmware"), it proved to
    brcmfmac: Use separate firmware for revision 0 of the brcm43430 chip
    The brcm43430 chip needs different firmware files for chip revision 0
    and 1. The file currently in linux-firmware is for revision 1 only.
    VHT80+80. Inform userspace and the the QCA firmware about that limitation
    Without this, a 9984 firmware will not use 2x2 ratesets when
    the firmware would not have configured the rxnss_override.
    The ath10k firmware doesn't announce its VHT channel width capabilities in
    i40e: Add support for OEM firmware version
    This patch adds support for OEM firmware version. If OEM specific
    adapter is detected ethtool reports OEM product version in firmware
    i40e: Support firmware CEE DCB UP to TC map re-definition
    The firmware expects the port number passed when setting up
    the POWER9 host firmware image. The SPI_NOR_DUAL_READ flags is added
    between driver and firmware; i915 will still responsible for detecting a
    remind the firmware about the outstanding submissions. This will be
    Whenever firmware indicates that there's an async indication it needs
    [media] af9013: refactor firmware download routine
    Refactor firmware download routine.
    We need to wait 2nd demod power-up before download firmware. Move
    [media] media: venus: update firmware path with linux-firmware place
    This makes firmware name and path part of venus_resources
    firmware version.
    responsibility to comunicate with the firmware through an
    and encoder parts to comunicate with the firmware. For example
    packets to be send from host to firmware.
     - hfi_msgs takes care of messages sent from firmware to the
     * firmware loader
    firmware/ivc: use dma_mapping_error
    crypto: chcr - Pass lcb bit setting to firmware
    scsi: lpfc: Fix crash after firmware flash when IO is running.
    OS crashes after the completion of firmware download.
    address are read from the firmware, same as platform device-based
    in the firmware, use that instead of handling all the DMI work
    Merge tag 'tegra-for-4.13-firmware' of git://git.kernel.org/pub/scm/linux/kernel/git/tegra/linux into next/drivers
    firmware: tegra: Changes for v4.13-rc1
    as a bogus error code return in the BPMP firmware implementation.
    * tag 'tegra-for-4.13-firmware' of git://git.kernel.org/pub/scm/linux/kernel/git/tegra/linux:
      firmware: tegra: Fix locking bugs in BPMP
      firmware: arm_scpi: add support to populate OPPs and get transition latency
    NFC: nfcmrvl: fix firmware-management initialisation
    Fix this by moving the firmware initialisation before device
    registration since the firmware work queue should be available before
    firmware-workqueue name is now derived from the nfc-device name.
    Fixes: 3194c6870158 ("NFC: nfcmrvl: add firmware download support")
    NFC: nfcmrvl: use nfc-device for firmware download
    Use the nfc- rather than phy-device in firmware-management code that
    Fixes: 3194c6870158 ("NFC: nfcmrvl: add firmware download support")
    (Alternate Mac/Phy) function gets probed but the loaded firmware
    recent firmware in linux-firmware (Version 14.66.35.p52).
    The second region is used by the "suspend firmware". The u-boot sources
    (/arch/arm/cpu/aml_meson/m8/firmwareld.c) state that the suspend
    firmware is located at "64M + 15M" which matches CONFIG_MESON_SUSPEND in
    the Amlogic GPL kernel sources. The "suspend firmware" is responsible
    segments from the firmware location and put them in memory and
    firmware states, and this may occasionally lead to the allocation
    Fixes: 6d0507a777fb ("brcmfmac: add parameter to pass error code in firmware callback")
      firmware: dmi_scan: Check DMI structure length
      firmware: dmi: Fix permissions of product_family
      firmware: dmi_scan: Make dmi_walk and dmi_walk_early return real error codes
      firmware: dmi_scan: Look for SMBIOS 3 entry point first
    On Tegra186 systems with certain firmware revisions, leaving the GPU in
    sysfs-firmware-ofw describes the /sys/firmware/devicetree/ hierarchy
      drm/amdgpu: fix missed gpu info firmware when cache firmware during S3
    updates require firmware commands that cannot be performed under a
    firmware commands in each iteration of the work.
    Currently the firmware API is partial and allows to offload only
    can happen when the firmware is still executing an FLR flow and did not
    reset if firmware indicates that the resource is closed.
    brcmfmac: unbind all devices upon failure in firmware callback
    When request firmware fails, brcmf_ops_sdio_remove is being called and
    function. So in brcmf_sdio_firmware_callback() we need to unbind the
    driver from both sdio_func devices when firmware load failure is indicated.
    brcmfmac: use firmware callback upon failure to load
    When firmware loading failed the code used to unbind the device provided
    with parameter to pass error code so add that in this commit upon firmware
    brcmfmac: add parameter to pass error code in firmware callback
    Extend the parameters in the firmware callback so it can be called
    drm/amdgpu: fix missed gpu info firmware when cache firmware during S3
    gpu_info firmware is released after data is used. But when system enters into
    suspend, upper class driver will cache all firmware names. At that time,
    not release gpu_info firmware until device finished.
    [  903.236589] cache_firmware: amdgpu/vega10_sdma1.bin
    [  903.236591] cache_firmware: amdgpu/vega10_sdma1.bin ret=0
    [  903.471815] (NULL device *): loading /lib/firmware/updates/4.11.0-custom/amdgpu/vega10_gpu_info.bin failed with error -2
    [  903.482870] (NULL device *): loading /lib/firmware/updates/amdgpu/vega10_gpu_info.bin failed with error -2
    [  903.492716] (NULL device *): loading /lib/firmware/4.11.0-custom/amdgpu/vega10_gpu_info.bin failed with error -2
    firmware driver, which is not yet initialized.
    firmware: dmi_scan: Check DMI structure length
    firmware: dmi: Fix permissions of product_family
    Fixes: c61872c9833d ("firmware: dmi: Add DMI_PRODUCT_FAMILY identification string")
    firmware: dmi_scan: Make dmi_walk and dmi_walk_early return real error codes
    firmware: dmi_scan: Look for SMBIOS 3 entry point first
    layer provided to the ARM64 arch code to parse and enable ACPI firmware
    Fixes: 410ed13cae39 ("Add the mlxfw module for Mellanox firmware flash process")
    In K2G, the clock handling is done through firmware executing on a
    separate core. Linux kernel needs to communicate to the firmware
    firmware through the TI SCI driver. The driver adds support for
    firmware: tegra: Fix locking bugs in BPMP
    Fixes: 983de5f97169 ("firmware: tegra: Add BPMP support")
    provided by firmware.
    The test was backwards, triggering IRQ autoprobing if the firmware
    controlled by firmware logic, depending on the status of the wireless
    The BPMP firmware, found on Tegra186 and later, provides an ABI that can
    to align the host driver with the new format used in the wilc firmware.
    firmware with the drv_handler index and also uses two new
    firmware instead of having multiple if-else statements in the host driver
    firmware(14.02 or higher) available on the vendor tree on github or on the
    linux-firmware project. The existing firmware files on the linux-firmware
    rtlwifi: btcoex: settings before firmware is downloaded
    behaviors before the firmware has been downloaded successfully.
    firmware control the btcoexistence when the firmware is ready.
    the matchsets. The firmware can send event upon finding BSSIDs and
    and in firmware event handler context. As such we need to protect it
    currently relies on g-scan support in firmware and will set struct
    The firmware currently has a limit of 64 channels that can be configured
    since the FCoE firmware would not do the filtering for us.
    Enable probe for T6 adapters, add code to flash T6 firmware and firmware
      experiencing the issues when running older firmware.
    code that retrieves a reset_mask from the firmware.
    This patch loads the DMC on CNL.The firmware version
    is taken first and then check for iwl_mvm_firmware_running().
    also rsi driver got a support for new firmware and supporting ath10k
    * new loading for the new firmware version
    Unfortunately since this behaviour is dependent on the firmware
      firmware: vpd: do not leak kobjects
      firmware: vpd: avoid potential use-after-free when destroying section
      firmware: vpd: do not leave freed section attributes to the list
      Four of the qla2xxx fixes only affect the firmware dump path, but it's
    because we can't rely on label name in the driver since vendor firmware
    which would cause device firmware to declare that VF as malicious -
    Once firmware indicates that a given VF is malicious and until
    VF clients are configured as enforced, meaning firmware is validating
    instead of the vid, leading to firmware declaring it as malicious.
      piece of firmware data it should not have"
    Provides hardware counters and firmware information.
    These adapters have crypto engines that need firmware
    Two firmwares are needed for this engine to work. Their are mostly used
    Coffee Lake reuses Kabylake's HUC firmware.
    print it as a part of ethtool's firmware version string.
    application firmware build name.  Keep it around, similar to RTSym
    liquidio: disallow enabling firmware debug from a VF
    Disallow enabling firmware debug from a VF.  Only PF is allowed to do that.
    provided by firmware.
      ARM: dts: bcm283x: Reserve first page for firmware
    The root cause is the firmware on those machines provides invalid BGRT
    Almost low level functions from open firmware have used const to
    of connecting devices and upgrading their firmware, add a small document
    thunderbolt: Add support for host and device NVM firmware upgrade
    Starting from Intel Falcon Ridge the NVM firmware can be upgraded by
    firmware upgrade tools can be use to find out suitable NVM image if the
    NVM image (the kernel does very minimal validation). The ICM firmware
    itself authenticates the new NVM firmware and fails the operation if it
    not have properly authenticated firmware. In this mode the switch only
    accepts a couple of commands including flashing a new NVM firmware image
    communicate with the firmware. Add functions that can be used to access
    reason for this is that the ICM firmware does not validate it and it
    firmware running on the host controller) or external (software driver).
    firmware or both.
    Merge branch 'mlxsw-Remove-compatibility-with-old-firmware'
    mlxsw: Remove compatibility with old firmware
    Up until recently we couldn't enforce a minimal firmware version, which
    forced us to be compatible with old firmware versions. This patchset
    In commit be94535f9531 ("mlxsw: spectrum: Make split flow match firmware
    in the device's firmware. This resulted in asymmetrical code with
    The problem in the firmware is long gone and since we can now enforce a
    minimal firmware version, we can simplify the code and make it symmetric
    In new firmware versions (that we can now enforce via
    request_firmware()), only the first LPM tree is reserved and not the
    Read port connector type from the firmware instead of caching it in the
    for passing messages to and from the application firmware.  The
    around a firmware bug on i.MX27, use the same mechanism to service IDR
      iwlwifi: mvm: fix firmware debug restart recording
    * fix the minimum firmware API requirement for 7265D, 3168, 8000 and
    firmware nodes. Instead of the OF API, use more generic fwnode API to
    On the Amlogic SoCs, the bootloader firmware can handle the IR hardware
    firmware to permit powering the system back.
    Some vendor bootloader firmware were modified to switch to this
    firmware: https://github.com/beagleboard/beaglebone-black-wireless/tree/master/firmware
    Bump the maximum accepted firmware API number for devices in the 8000,
    The firmware no longer uses this command group, so remove it from
    iwlwifi: split firmware API from iwl-trans.h
    are firmware API and which are something else, split the
    firmware API into a separate file to include here.
    iwlwifi: mvm: clear firmware running bit earlier
    Clear the firmware running bit before flushing the FW (error) dump
    iwlwifi: mvm: check firmware is up in debugfs
    firmware from being used when the firmware isn't running.
    firmware loading code for them anyway.
    iwlwifi: mvm: fix firmware debug restart recording
    When we want to stop the recording of the firmware debug
    and restart it later without reloading the firmware we
    compiled in the firmware), we don't need to set those
    registers after the firmware has been loaded, but only
    restarted the firmware.
    well, by moving the arm64 init code to drivers/firmware/efi/arm-runtime.c
    ARM that defines the mapping routines for the firmware tables.
    exposed by the firmware. It also sets the hardware name used in crash
          certain workarounds for buggy hardware and/or firmware need to be
    The firmware for Quark X102x prepends a security header to the capsule
    firmware, without putting any knowledge of the nature of such quirks
    firmware: arm_scpi: add support to populate OPPs and get transition latency
    mlxsw: spectrum: Rename the firmware file
    Change the firmware file name to be in "mellanox" directory.
    This commit is a followup to the linux-firmware commit a4c72696f5f4
    ("Mellanox: Add firmware for mlxsw_spectrum")
      scsi: qedi: Set firmware tcp msl timer value.
      scsi: qedi: Correctly set firmware max supported BDs.
    in a structure specific to a given driver instance.  Sadly, firmware
    For all known firmwares out in the wild, it seems that whenever the
    firmware exposes multiple FUJ02E3 ACPI devices.
    firmware: move umh try locks into the umh code
    originally added to prevent stalling suspend, later the firmware cache
    firmware_enabled() are intended to address any possible races cured only
    firmware_enabled() code in place we are a bit more sure to move the
    firmware is rather new, it was added via commit abb139e75c2cdb ("firmware:
    teach the kernel to load firmware files directly from the filesystem") by
    ("firmware_class: Do not warn that system is not ready from async loads")
    merged on v3.4, after Rafael noted that the async firmware API call
    request_firmware_nowait() should not be penalized to fail if userspace is
    giving up. The WARN_ON() was kept for the sync firmware API call though on
    request_firmware(). At this time there was no direct filesystem lookup for
    firmware though.
    Print a warning if firmware is requested when tasks are frozen") merged on
    the v3.0 kernel by Rafael to print a warning back when firmware requests
    direct fs lookups or the firmware cache.
    firmware: move assign_firmware_buf() further up
    firmware: add sanity check on shutdown/suspend
    The firmware API should not be used after we go to suspend
    firmware: always enable the reboot notifier
    we can easily share the reboot notifier for the firmware_class
    firmware: share fw fallback killing on reboot/suspend
    firmware: move kill_requests_without_uevent() up above
         /sys/firmware/acpi/tables interface to prevent a counter in the
    supported and causes firmware hang while running tunnel IO.
    firmware when the iSCSI mac is to be changed.
    MADT GICC entry length through ACPI firmware version (it changed from 76
    false negatives depending on the ACPI firmware version and how the MADT
    entries are laid out in memory (ie on ACPI 5.1 firmware MADT GICC
    and update them to always use the firmware version specific MADT GICC
    iwlwifi: mvm: use proper sta_addr in firmware API
    iwlwifi: mvm: support getting nvm data from firmware
    Instead, we get all needed data from firmware.
    See Documentation/powerpc/firmware-assisted-dump.txt for details. In
              reserved area by firmware at the time of
    We are using PSP to resume firmware after suspend, and it is
    module to flash the new firmware file to the device.
    As the firmware flash process takes about 20 seconds and ethtool takes the
    enforcing this assumption [although management firmware does set it
    passed from management firmware during initialization in
        its child VFs in IGU CAM based on the management firmware info
     b. PF is going to stop using the SB resource [management firmware
    While the assumption is still kept by management firmware, we already
    cxgb4: update latest firmware version supported
    Change t4fw_version.h to update latest firmware version
    ath10k firmware checks nbytes == 0 as part of determining if DMA
    rsi: use subdirectory for firmware file
    linux-firmware maintainers prefer to have a subdirectory for
    firmware files. Code is changed here to pick firmware file from
    AP interface need process remain-on-channel firmware event and notify
    is configured in firmware. This configuration is limited to minimum
    configuration. The configuration in firmware was not using that macro
    Paul cleans up led_[on|off] for X550EM_X, since the firmware configures
    firmware add support for this feature, so still ctrl by vbios.
    Fixes: 410ed13cae39 ("Add the mlxfw module for Mellanox firmware flash process")
    we have observed host system hang when device firmware crash,
    ath10k: go back to using dma_alloc_coherent() for firmware scratch memory
    The 1st 2 patches add short firmware message support for new VF devices.
    firmware message is a fixed 16-byte message sent using the standard
    firmware communication channel.  The short message has a DMA address
    pointing to the legacy long firmware message.
    firmware with RDMA-related statistics; [much] worse than that -
    new management firmware the system logs would get filled with these
    In case management firmware indicates a change in the used S-tag,
    The existing code wouldn't cause the management firmware to set
    Older firmware used by device didn't distinguish between RoCE and RoCE
    use the proper firmware HSI values.
    firmware's capability to change MAC address at runtime and HWMON
    When communicating to the firmware, we even get an open-coded 64-bit
    bridge ACPI device firmware binding.
    stop-api provided by the firmware by which the firmware can restore
    underlying firmware as to what stop state to put the threads that have
      There is a patch hitting drivers/firmware/* that I was uncertain to
       - Make a few Intel Chromebooks with Cherryview DMI firmware work
      firmware: dmi: Add DMI_PRODUCT_FAMILY identification string
    GpioInt resource. When the firmware passes GpioInt resource
    The cause is that on this machine the firmware provides the EFI ACPI BGRT
    this firmware bug.
      drivers/firmware/efi/libstub/secureboot.c:19:27: error: duplicate 'const' declaration specifier [-Werror=duplicate-decl-specifier]
      drivers/firmware/efi/libstub/secureboot.c:22:27: error: duplicate 'const' declaration specifier [-Werror=duplicate-decl-specifier]
    Revert "firmware: vpd: remove platform driver"
      Input: elan_i2c - ignore signals when finishing updating firmware
    until firmware sends a notification that the driver can reset.
    then await a signal from firmware to determine the correct reset method.
    Also increase SOFT_COMMAND_BUFFER_SIZE to match what the firmware expects.
    They have known firmware bugs.  A fix is apparently in the works --
    once fixed firmware is available, someone from Intel (Hi, Keith!)
      ARM: dts: bcm283x: Reserve first page for firmware
    Merge branch 'mlxsw-Support-firmware-flash'
    mlxsw: Support firmware flash
    Add support for device firmware flash on mlxsw spectrum. The firmware files
    The firmware flash is triggered on driver initialization time if the device
    firmware version does not meet the minimum firmware version supported by
    Currently, to activate the newly flashed firmware, the user needs to
    needed for the firmware flash process on Mellanox products, such as the
    MFA2 format parsing and the firmware flash state machine logic. As the
    Patches 6 and 7 add boot-time firmware upgrade on the mlxsw spectrum
    Patch 8 adds a fix needed for new firmware versions.
    mlxsw: spectrum_router: Adjust RIF configuration for new firmware versions
    In new firmware versions, when configuring a {Port, VID} as a router
    This change doesn't break existing firmware versions, but is required
    for newer firmware versions.
    mlxsw: spectrum: Validate firmware revision on init
    Make the spectrum module check the current device firmware version, and if
    it is below the supported version, use the libfirmware API to request a
    firmware file with the supported firmware version and flash it to the
    The firmware file names are expected to be of Mellanox Firmware Archive
    device's firmware. As the mlxfw module is shared between several different
    The MCDA register allows reading and writing a firmware component.
    The MCC register allows controlling and querying the firmware flash state
    The MCQI register queries information about firmware components. It will
    Add the mlxfw module for Mellanox firmware flash process
    devices firmware, which consists of:
       the format used to store the Mellanox firmware. The MFA2 format file can
       hold firmware for many different silicon variants, differentiated by a
     - Implement the firmware flash state machine logic, which is a common
       logic for Mellanox products needed to flash the firmware to the device.
    Input: elan_i2c - ignore signals when finishing updating firmware
    firmware update. Our timeout is only 300 msec so we are fine simply letting
    command after updating firmware. We clear interrupt by attempting to read
    firmware: vpd: remove platform driver
    firmware: vpd: do not clear statically allocated data
    firmware: vpd: use kasprintf() when forming name of 'raw' attribute
    firmware: vpd: use kdtrndup when copying section key
    firmware: vpd: do not leak kobjects
    Fixes: 049a59db34eb ("firmware: Google VPD sysfs driver")
    firmware: vpd: avoid potential use-after-free when destroying section
    Fixes: 049a59db34eb ("firmware: Google VPD sysfs driver")
    firmware: vpd: do not leave freed section attributes to the list
    Fixes: 049a59db34eb ("firmware: Google VPD sysfs driver")
    firmware: google: memconsole: Prevent overrun attack on coreboot console
    The recent coreboot memory console update (firmware: google: memconsole:
    additional lines added concurrently by runtime firmware can be read out.
    buffer usually resides in firmware-reserved memory that is not covered
    Fixes: a5061d028 ("firmware: google: memconsole: Adapt to new coreboot ring buffer format")
    The darn instruction relies on firmware enablement, so it has been
    Fixes: 17a3dd2f5fc7 ("powerpc/mm/radix: Use firmware feature to enable Radix MMU")
    qla2xxx [0000:09:00.0]-504b:9: RISC paused -- HCCR=40, Dumping firmware.
    qla2xxx [0000:09:00.0]-504b:9: RISC paused -- HCCR=40, Dumping firmware.
    drm/amdgpu: properly byteswap gpu_info firmware
    smu firmware which handles power management.
    Based on new vcn firmware interface changes
    drm/amdgpu: add vcn firmware header offset
    New firmware add psp header.
    drm/amdgpu: add module firmware for raven
    Fetch correct firmware for raven for gfx and sdma.
    formal released on firmware feature version #46. So enable it
    according to firmware feature version, otherwise, world switch will
    need update smu firmware to version 0x1c20.
    Taken care of by gpu info firmware now.
    v3: rework based on latest firmware
    drm/amdgpu: parse the gpu_info firmware (v4)
    drm/amdgpu: add gpu_info firmware (v3)
    Add a new gpu info firmware to store gpu specific configuration
    a new IPC to DSP, only after receiving a reply from the firmware for the
    iwlegacy firmware can crash when power save is configured. PS was
    that user who enable PS is aware of that and can relate firmware crahes
    rsi: Remove old firmware loading method
    The older firmware loading method is not usable by any Redpine chipset.
    Hence removing that part of the code. Older firmware image with
    rsi: Add new firmware loading method
    The older firmware loading method has been deprecated and not in use
    present in the flash. Before loading the functional firmware, host
    issues boot loader commands to verify whether firmware to load is
    different from the current functional firmware. If not, firmware
    firmware.
    "rs9113_wlan_qspi.rps" is the firmware filename used in this patch.
    new firmware loading method. As part of this, the function
    USB multibyte read will be used in the new firmware loading method
    firmware loading method for RS9113 chipset. As the file rsi_91x_pkt.c
    scsi: qedi: Set firmware tcp msl timer value.
    scsi: qedi: Correctly set firmware max supported BDs.
    intel/ibt-12-16.sfi and intel/ibt-12-16.ddc firmware files from
    linux-firmware repository.
    The QCA4019 firmware 10.4-3.2.1-00050 reports only HT MCS rates between
    The firmware encodes the higher MCS rates using the NSS field. The actual
    Bluetooth: hci_ll: Fix download_firmware() return when __hci_cmd_sync fails
    When __hci_cmd_sync() fails, download_firmware() should also fail, and
    Without this fix, download_firmware() will return a success when it actually
    Currently when firmware command gets stuck or it takes long time to
    freed and can be used for new commands, and if the firmware receive new
    but we don't free the command slot and we wait for the firmware to
    Once all the entries are busy we will stop processing new firmware
    firmware: dmi: Add DMI_PRODUCT_FAMILY identification string
    wrong firmware file if FW app requires different firmwares per media
    vNIC is a PCIe-side abstraction NFP firmwares supported by this
    firmware side. The IBSS mode should be set when cfg80211 changes the
    Some firmware entries were forgotten to be added via MODULE_FIRMWARE(), which
    cxgb4 : retrieve port information from firmware
    issue get port information command to firmware to retrieve port
    firmware port types FW_PORT_TYPE_SFP28, FW_PORT_TYPE_KR_SFP28,
    The management firmware HSI contains masks which are already
    When management firmware declares that the device is WoL-capable,
    the default driver behavior would be to allow the management firmware
      firmware: Google VPD: Fix memory allocation error handling
      firmware: ti_sci: fix strncat length check
    DT specific calls to read firmware data (of_property*) so for
    firmware: ti_sci: fix strncat length check
    drivers/firmware/ti_sci.c: In function 'ti_sci_probe':
    drivers/firmware/ti_sci.c:204:32: error: specified bound 50 equals the size of the destination [-Werror=stringop-overflow=]
    Fixes: aa276781a64a ("firmware: Add basic support for TI System Control Interface (TI-SCI) protocol")
    Fixes: 541c571fa2fd ("csiostor:Use firmware version from cxgb4/t4fw_version.h")
      cxgb4: update latest firmware version supported
      bnxt_en: Check status of firmware DCBX agent before setting DCB_CAP_DCBX_HOST.
      bnxt_en: Call bnxt_dcb_init() after getting firmware DCBX configuration.
    firmware. The changes are mostly contained in qed with minor changes
    Content-wise, the firmware contains fixes to various issues exposed
    since the release of the previous firmware, including:
    In addition, the new firmware would allow us to later add iWARP support
    firmware: Google VPD: Fix memory allocation error handling
    firmware: google: memconsole: Adapt to new coreboot ring buffer format
    firmware: google: memconsole: Make memconsole interface more flexible
    to include lines that were added by runtime firmware after the driver
    this means that the /sys/firmware/log file has to become unseekable.
    cxgb4: update latest firmware version supported
    Change t4fw_version.h to update latest firmware version
    OpenPOWER host firmware doesn't like it when the host-side of the
    rtlwifi: btcoex: 21a 2ant: settings before wifi firmware is ready
    Before firmware is ready, set GNT_BT to high to let bt transmit.
    Routine ex_btc8821a2ant_pre_load_firmware() restored.
    is overwritten whenever the driver sends firmware to the card reader
    sending firmware to the device.
    brcmfmac: add firmware feature detection for gscan feature
    Detect gscan support in firmware by doing pfn_gscan_cfg iovar with
    as Jefferson Peak (JfP). The firmware downloading mechanism is same as
    2 bug fixes for the case where the NIC's firmware DCBX agent is enabled.
    bnxt_en: Check status of firmware DCBX agent before setting DCB_CAP_DCBX_HOST.
    firmware DCBX agent is running.
    bnxt_en: Call bnxt_dcb_init() after getting firmware DCBX configuration.
    determine if the firmware DCBX agent is running or not.  As a result,
    vfidx argument before proceeding to tell the firmware to set the VF MAC
    cards that implement rate control in firmware. Drivers that don't use
    how many SGLs it will allocate for NVMET (based on what the firmware
    Fixes: 9d896f3e41a6 ("drm/nouveau/secboot: abstract LS firmware loading functions")
    metadata chaining precludes firmware that advertises new capabilities which
    The LSO2 capability supported by alternative device firmware requires
      net: irda: irda-usb: fix firmware name on big-endian hosts
    ARM: dts: bcm283x: Reserve first page for firmware
    Resuming from that mode needs support in the firmware/bootloader.
    at the base as a zero divisor value also appears to crash the firmware.
    Fixes: 3eff682d765b ("ALSA: usb-audio: Support both DSD LE/BE Amanero firmware versions")
    Query the operational pause from firmware (PFCC register) instead of
    sst.c:261:1: warning: symbol 'dev_attr_firmware_version' was not declared. Should it be static?
         on future firmwares.
    net: irda: irda-usb: fix firmware name on big-endian hosts
    bcdDevice field to construct a firmware file name.
    On newer hardware with updated firmware the debug mode was disabled, so the
    This patch adds the missing PDC firmware calls and the logic to read the PDT
    from firmware, report all current PDT entries and exclude the reported bad
      drm/amdgpu/soc15: use atomfirmware for setting bios scratch for reset
      drm/amdgpu/atomfirmware: add function to update engine hang status
    But HWP-mode may also be enabled by firmware before the OS boots,
    GuC firmware/hardware changes. While around, change cmd len
         the TEE implementation in hardware or firmware, but uses a generic
    drm/amdgpu/soc15: use atomfirmware for setting bios scratch for reset
    Need to use the atomfirmware interface rather than atombios since
    soc15 is atomfirmware based.
    drm/amdgpu/atomfirmware: add function to update engine hang status
    firmwares that provide the binding.
    kbl firmwares support the debug registers. So
    XIVE directly rather than going through a XICS emulation in firmware.
    removes dependency on CONFIG_KEXEC for firmware-assisted dump (fadump)
    firmware/Makefile: force recompilation if makefile changes
    of the firmware files.  The target asm is in the firmware/Makefile, peg
    this file as a dependency to require re-compilation of firmware targets
    Recent Chelsio firmware started using few port capablity bits to
    Avoid zeroing those bits and default to whatever the firmware
    Vega10 atomfirmware do not have ASIC_InternalSS_Info table
    (here I mean axs103 with firmware v1.2) and 1 Gb of DDR mapped to
      There's lots of new drivers added this time around, new firmware
      firmware: google memconsole: Fix return value check in platform_memconsole_init()
      firmware: Google VPD: Fix return value check in vpd_platform_init()
      firmware: Google VPD sysfs driver
      firmware: Google VPD: import lib_vpd source files
    possible to boot the firmware, but it's still not possible to connect or
    firmware from the PCIe and AHB chipsets, the fw file name
    The new firmware names are:
    firmware-<api_version>.bin (same as before)
    firmware-sdio-<api_version>.bin
       - Rearchitecture of code handling proprietary signed firmware
      ACPI / property: Add possiblity to retrieve parent firmware node
    A recent firmware change fixed an issue to acquire the PHY semaphore before
    drm/amd/powerplay: complete disable_smc_firmware_ctf_tasks.
    drm/amd/powerplay: add error message to remind user updating firmware
            - Check firmware load type, if it is not PSP, we should do
    drm/amdgpu: Fix firmware UCODE_ID_STORAGE issue (v2)
    In Tonga's virtualization environment, for firmware UCODE_ID_STORAGE,
    there is no actual firmware data, but we still need alloc a BO and
    drm/amdgpu: add hw_start and non-psp firmware loading into resume
    drm/amdgpu: use private memory to store psp firmware data
    drm/amdgpu: add psp firmware private memory
    backing a given interleave-set are described by platform firmware. In
    When changing keyboard backlight state on new Dell laptops, firmware
    firmware has completed processing of the state_complete
      PCI: thunder-pem: Fix legacy firmware PEM-specific resources
      PCI: thunder-pem: Add legacy firmware support for Cavium ThunderX host controller
    firmware.
    directly, rather than via a XICS emulation in firmware.
    * the firmware for 7265D and 3168 NICs is frozen at version 29
    Reading an ACPI table through the /sys/firmware/acpi/tables interface
    firmware: google memconsole: Fix return value check in platform_memconsole_init()
    Fixes: d384d6f43d1e ("firmware: google memconsole: Add coreboot support")
    firmware: Google VPD: Fix return value check in vpd_platform_init()
    Fixes: 049a59db34eb ("firmware: Google VPD sysfs driver")
         - released wrong resources when firmware timeout happens
    base firmware library manifest is loaded using load library IPC. This is
    request firmware, strip extended manifest and release library changes
     * The firmware for 7265D and 3168 NICs is frozen at version 29;
    In a000 devices we will get all nvm data from the firmware,
    pieces of the firmware file, we leak the whole firmware
    attempt to work around a firmware problem.  Living with a firmware
      digest IDs already assigned by TCG, but if firmware authors
    Fixes: 4d23cc323cdb ("tpm: add securityfs support for TPM 2.0 firmware event log")
    firmware.
    contains versions of firmware subcomponents.
    Miscellaneous updates include passing DCBX RoCE VLAN priority to firmware,
    checking one more new firmware flag before allowing DCBX to run on the host,
    level PHY configuration.  The settings are controlled by firmware in
    bnxt_en: Pass DCB RoCE app priority to firmware.
    the driver will send the information to the firmware to set up the
    whether the system firmware performs a VLAN header stripping on all VLAN
    * bump up FW API to 6 for a new QCA6174 firmware branch
    In the older firmware there was no distinction between RoCE and RoCEv2
    whereas the newer firmware (8.15.3.0) allows us to configure each
    caused the the firmware to overwrite the lun indentifier in the FCP header.
    LPFC_NVMET_XBUSY  - this flag indicates the IO completed but the firmware
    system firmware.
    firmware on the first problematic SSD that was reported, disable
    the case that all Samsung devices with firmware BXW75D0Q are broken
    The first case occurs when the firmware describes the bus master and
    * bump up FW API to 6 for a new QCA6174 firmware branch
    Do this when halting the machine as well, in case a firmware-level reboot
    Use h2c to tell the firmware if the number of AP is more than 10 or
    cause problems if, e.g., we begin to queue a new firmware dump or card
    firmware context will have been lost by then.
    (a) force a firmware dump (cat /sys/kernel/debug/mwifiex/mlan0/device_dump)
    (d) the command timeout triggers another firmware dump and a reset [*]
    (e) the 2nd firmware dump flag persists across the reset
        firmware dump
        firmware dump; return to (d)
    mwifiex: pcie: extract wifi part from combo firmware during function level reset
    A separate wifi-only firmware was download during pcie function level
    reset. It is in fact the tail part of wifi/bt combo firmware. Per
    combo firmware.
    After that, the mrvl/pcie8997_wlan_v4.bin image in linux-firmware repo
    otherwise let the firmware handle the vbus path control.
    In a000 CDB firmware, we cannot update phy context to a
    will come up from the firmware and to run a special handler
    that was received from the firmware. This means that the
    When we load firmware in extended mode (as we do by default for
    passes it to the firmware with GEO_TX_POWER_LIMIT cmd.
    The firmware will use this table to enhance tx power with
    In the end, the firmware doesn't want the SP len as present
    Fixes: bd3c6cf901a8 ("iwlwifi: mvm: tell the firmware about the U-APSD parameters")
    In TVQM firmware returns the value of the queue ID and code
    where firmware will assign the actual queue number on demand.
    iwlwifi: mvm: tell the firmware about the U-APSD parameters
    Newer firmware versions will be able to handle all the
    Tell the firmware about the WMM-PS parameters of earch peer
    This API change is backward compatible since older firmware
    by the firmware and not by the driver.
    Do not move yet to 32 stations until firmware do it though.
    While this works for pre-a000 firmware, the a000 fw requires
    the firmware in resume timing. Otherwise, if the controller's power
    is down in suspend timing, the firmware in the controller goes away,
    configuration data is provided by firmware through the ACPI GTDT
    The clocksource architected timer kernel driver requires a firmware
    describe the MMIO timers indepedent of the firmware interface.
    firmware/bootloader.
    So bump the fw api version to differentiate the latest firmware support.
    Fixes: ab5c4f71d8c7 ("ath9k: allow to load EEPROM content via firmware API")
      firmware: qcom_scm: add two scm calls for iommu secure page table
      firmware/qcom: add qcom_scm_restore_sec_cfg()
      firmware: arm_scpi: reinit completion instead of full init_completion()
    firmware: Google VPD sysfs driver
    creates the corresponding sysfs entries under /sys/firmware/vpd to
     /sys/firmware/vpd
    firmware: Google VPD: import lib_vpd source files
    packet metadata prepended by the firmware away for making headroom.
    ... results in a crash in the firmware, regardless of whether KASLR
    is in effect or not and whether the firmware implements EFI_RNG_PROTOCOL
    has been correctly configured by the firmware. Rename the macro to
    will not respond to chip revision requests. It also needs a firmware
    The polled firmware update proved unreliable when testing on S7817. Use
    platform firmware will send notifications when there is new SMART health
         platform firmware), which was the previous behavior expected by
       - Revert a recent ACPICA commit targeted at catching firmware bugs
    The TI-ST adds firmware loading, GPIO control, and shared access for
    The firmware loading is greatly simplified by using existing
    likely doing firmware load at 115.2kbps.
    rtlwifi: btcoex: 23b 2ant: before firmware ready settings
    Before firmware is ready, set GNT_BT to high to let bt transmit
    done by Icenowy Zheng using Ondrej's test firmware shows this
      drm/i915/gvt: Fix firmware loading interface for GVT-g golden HW state
    be mapped to support the /sys/firmware/acpi/tables/NFIT attribute in
    provided by new firmware and tools without changing the kernel.  We also
    buggy firmware.  This patch provides a module parameter that overrides
    /sys/firmware/acpi/hotplug/force_remove was presumably added to support
      drm/i915/gvt: Fix firmware loading interface for GVT-g golden HW state
    backlight controlled by the keyboard firmware.
    The firmware implements at least 3 different commands:
    Bluetooth: hci_intel: Fix firmware file name to use hw_variant
    The format of Intel Bluetooth firmware for bootloader product is
    runtime to form the firmware filenames instead of using a constant
    devices from Intel use the same firmware loading mechanism as previous
    Bluetooth: hci0: Minimum firmware build 1 week 10 2014
    * Inform userspace of firmware partition locations
    Function ks7010_upload_firmware() takes as parameters, two struct
    devices for firmware self init.
    The self init includes firmware self loading from DRAM by
    This means the TFH relevant firmware loading can be cleaned up.
    The firmware loading includes the paging memory as well, so op
    In order to simplify driver and firmware handling of this queue
    iwlwifi: pcie: print less data upon firmware crash
    useful for debugging, and they are now in the firmware dump
    iwlwifi: be more verbose about needed firmware
    If the supported firmware versions are not found, we currently only
    print "no suitable firmware found".  This is not very informative for
    printing the exact firmware name(s) the driver supports and pointing
    However, if the platform firmware has not configured or enabled a stop
    firmware, it may lead to further failures which should be avoided.
    only the stop states exposed by the firmware through the device
    firmware, fall back to the default busy-wait loop in the CPU-Hotplug
    platform firmware that lead to no stop states being configured or
    be requested if the platform firmware did not configure them most
      drm/rockchip: cdn-dp: Don't try to release firmware when not loaded
    Currently we use a set of firmware calls that simulate the old
    enabled as these rely on the firmware emulation code which is no
    * improve firmware download time for QCA6174 and QCA9377, especially
    eth_get_platform_mac_address() first before checking what the firmware
    firmware: google memconsole: Add ARM/ARM64 support
    This patch expands the Google firmware memory console driver to also
    firmware: Add coreboot device tree binding documentation
    coreboot firmware. It is meant to be dynamically added during boot and
    and run-time generated firmware parameters) and the CBMEM area (the
    firmware: google memconsole: Add coreboot support
    Coreboot (http://www.coreboot.org) allows to save the firmware console
    firmware: google memconsole: Move specific EBDA parts
    firmware: google memconsole: Remove useless submenu in Kconfig
    The driver loads FPGA firmware over SPI, using the "slave serial"
    For security reasons, NIC firmware does not allow VF to set its VLAN if PF
    After the VF instructs the firmware to set the VLAN, VF always indicates
    Put in a mechanism for the VF's set VLAN function to receive the firmware
    response code, then make that function return -EPERM if the firmware
    be interested in receiving the response code from the firmware.  That
    configuring the firmware.
    staging: wilc1000: Use new format for configuring firmware
    firmware versions 14.2 and up. This update ensures that the
    firmware is initialized correctly by the host and configured
    first before checking what the firmware provides. We already handle the
     - fix ThunderX legacy firmware resources
      PCI: thunder-pem: Fix legacy firmware PEM-specific resources
    drm/rockchip: cdn-dp: Don't try to release firmware when not loaded
    from the dev->fwnode pointer in a firmware agnostic way.
    firmware interface can be plugged into the gicv3 ITS driver.
    Introduce its_pmsi_init_one() to separate firmware dependent
    code (ie OF dependent code) and firmware agnostic code so
    that gic3-its code can be made to support other firmware
    other firmware interfaces.
    Load GuC 10.56 on GLK. Work on firmware is still
    firmware for HuC authentication
    the BMC firmware and other MT25QL512A (65536 Kbytes) for the host.
    Add the board id (PSID) to the firmware-version field
    firmware-version: 12.14.1101 (MT_2190110032)
    adding statistics information [both to driver & management firmware],
    Management firmware can query for some basic iSCSI-related statistics.
    Now that management firmware is capable of telling us the number of CQs
    but the management firmware already closes other per-port registers
    firmware that an Octeon core crashed; expand the meaning of the indication
    firmware; this is free of false alarms.
    message from the firmware that a VF driver was unloaded.  But in
    that particular message from the firmware might be unreliable.  That normal
      drm/nouveau/msgqueue: support for GP10B PMU firmware
      drm/nouveau/secboot: start LS firmware in post-run hook
      drm/nouveau/secboot: pass instance to LS firmware loaders
    drm/nouveau/msgqueue: support for GP10B PMU firmware
    The GP10B firmware is very close to GM20B's. The only difference is that
    source file as GM20B firmware.
    drm/nouveau/secboot: start LS firmware in post-run hook
    The LS firmware post-run hook is the right place to start said LS
    firmware. Moving it here also allows to remove special handling in the
    drm/nouveau/secboot: pass instance to LS firmware loaders
    Having access to the secboot instance loading a LS firmware can be
    useful to LS firmware handlers. At least more useful than just having an
    GP10B's firmware will also need to know the WPR address, which can be
    reset instead of a single falcon. The GP10B firmware interface requires
    FECS and GPCCS to be booted in a single firmware command.
    For firmwares that only support single falcon boot, it is trivial to
    the firmware. Instead of assuming, the firmware did the right things, let's
    sfc: don't insert mc_list on low-latency firmware if it's too long
    If we're in mc_promisc mode and the firmware doesn't support cascaded
    be allocated at higher addresses than firmware base for MFC v6+ hardware.
    pre-allocated buffer for firmware and contexts.
    firmware base like it was documented for MFC v5. This requirement is true
    firmware, device and per-context buffers can be fulfilled by the simple
    to focus on released firmwares to drive known units.
    the result to FFADO implementation, I can see these firmwares have
    resets. This is due to loading firmware from on-board flash memory and
    Three types of firmware have released by RME GmbH; for Fireface 400, for
    problem with MFC firmware, which failed to operate properly when placed
    case of MFC v6+ hardware and latest firmware, it turned out that there is
    than the firmware base. This requirement is true only for the device and
    by allocating firmware, device and per-context buffers from the probe-time
    [media] s5p-mfc: Reduce firmware buffer size for MFC v6+ variants
    [media] s5p-mfc: Allocate firmware with internal private buffer alloc function
    Once firmware buffer has been converted to use s5p_mfc_priv_buf structure,
    [media] s5p-mfc: Move firmware allocation to DMA configure function
    firmware buffer is needed, because some parameters are dependant on its base
    address. Till now, this has been handled in the s5p_mfc_alloc_firmware()
    s5p_mfc_alloc_firmware() is simplified and does what it name says. The
    other consequence of this change is moving s5p_mfc_alloc_firmware() call
    [media] s5p-mfc: Put firmware to private buffer structure
    Use s5p_mfc_priv_buf structure for keeping the firmware image. This will
    help handling of firmware buffer allocation in the next patches.
    IB/hfi1: Add a patch value to the firmware version string
    The HFI firmware now includes a patch level in its version.
    firmware string.
    failures. If loading firmware or creating of the hardware instance fails,
    Service process firmware provides us with information about media
    firmware will continue to report old configuration until
    required e.g. for loading client firmware when clients are attached
    must configure the memory region traps so that the firmware can
    Add the basic infrastructure and only firmware tests initially.
    bnxt_en: Update firmware interface spec to 1.7.6.2.
    When resetting the device, we take a synchronous firmware-loading code
    In brcmf_pcie_suspend() we inform the firmware on the device that
    USB firmware added support for sending command response/event through
    compatibility with older firmware.
    and if the UEFI firmware exposes an implementation of EFI_RNG_PROTOCOL.
    data structures in the runtime UEFI firmware, which increases robustness
    command line should supersede the one passed by the firmware.
    Now with open-source boot firmware (EDK2) supporting ACPI BGRT table
    directory and house it inside 'drivers/firmware/efi', so that this common
    On UEFI systems, the PCI subsystem is enumerated by the firmware,
    correctly if it's properly specified in firmware (ACPI or DT).
    provided by firmware.
    firmware fails").
    * improve firmware download time for QCA6174 and QCA9377, especially
      in order to provide the kernel with a firmware interface to map
    This relies on the firmware to actually take the section permission
    New versions of OPAL have a device node /ibm,opal/firmware/exports, each
    as the firmware will cap the RMA to the memory assigned to the LPAR.
    To access this functionality certain firmware calls are required to
    PCI: thunder-pem: Fix legacy firmware PEM-specific resources
    Fixes: 9abb27c7594a ("PCI: thunder-pem: Add legacy firmware support for Cavium ThunderX host controller")
    Secure Monitor service to communicate with TrustZone firmware
    provided by firmware.
    - Fix golden state firmware load (Zhi)
    Fixes: 3194c6870158 ("NFC: nfcmrvl: add firmware download support")
    drm/i915/gvt: Fix firmware loading interface for GVT-g golden HW state
    before. This patch fixes GVT-g firmware loading interface. A user should
    apply this patch if he wants to load GVT-g golden HW state from firmware
    Without this if firmware reports 1MB page size support we will crash
    firmware        : OPAL
    firmware: arm_scpi: reinit completion instead of full init_completion()
    Cleanups of uc firmware structs from GuC and Huc are the same for both.
     - fix ThunderX resource reservation on early firmware
      PCI: thunder-pem: Add legacy firmware support for Cavium ThunderX host controller
    - firmware: updates/fixes for meson-sm
      firmware: meson-sm: Allow 0 as valid return value
      firmware: meson-sm: Check for buffer output size
    1. security firmware loading has moved to sw init, so this code
    2. it seems that driver could not call request_firmware on
       kernel 2.6, when S3 resume. for request firmware depends on
    drm/amdgpu: add new atomfirmware based helpers for powerplay
    New helpers for fetching info out of atomfirmware.
    drm/amdgpu: add SMC firmware into global ucode list for psp loading
    drm/amdgpu: add psp firmware info into info query and debugfs
    PSP is responsible for firmware loading on SOC-15 asics.
    drm/amdgpu: add psp firmware header info
    Defines the header info for the psp firmware.
    drm/amdgpu: use atomfirmware interfaces for scratch reg save/restore
    If the board is atomfirmware based.
    drm/amdgpu: use new flag to handle different firmware loading method
    This patch introduces a new flag named "amdgpu_firmware_load_type" to
    handle different firmware loading method. Since Vega10, there are
    three ways to load firmware. It would be better to use a flag and a
    drm/amdgpu: add basic support for atomfirmware.h (v3)
    This adds basic support for asics that use atomfirmware.h
    There will be a slightly different version for atomfirmware.
    amdgpu: detect if we are using atomfirmware or atombios for vbios (v2)
    Supposedly atomfirmware rom header is 3.3 atombios is 1.1.
    drm/amdgpu: add the new atomfirmware interface header
    drm/amdgpu: add a ucode size member into firmware info
    where firmware detects the cpu, but it is not available to the OS.  When
    a failure, it is assumed it has not signaled the s-Par firmware of the
      request_firmware_work_func+0x135/0x280
    suitable for the card (10G or 25G) come from the NIC firmware via response
    Also bump up driver version to 1.5.1 to match newer NIC firmware version.
    and management firmware.
    Patch #1 makes sure unloading is done under management-firmware's
    Patches #5 - #6 let driver inform management-firmware on number of
    resources which are dependent on the non-management firmware used.
    As management firmware now treats BDQ as a resource and tells each PF
    Management firmware is used as an arbiter between the various PFs
    be divided are dependent on the non-management firmware used,
    so management firmware first needs to be told how many resources
    the management firmware of the available resources under
    The management firmware provides a generic infrastructure for
    by at most a single PF at any given time [or by management firmware].
    To overcome this, we now ask management firmware to initiate a PF-flr
    Management firmware is used as an arbiter between the various PFs
    Modern management firmware supports a more intricate loading flow,
    still be able to load properly on top of older management firmwares
    Management firmware is used as arbiter between different PFs
    management firmware commands.
    functionality underneath the management firmware protection.
    underlying firmware implementation.
    possible to reference another firmware node through a property called
    Now that ACPI has support for returning parent firmware node for both types
    parent firmware node.
    ACPI / property: Add possiblity to retrieve parent firmware node
    Sometimes it is useful to be able to navigate firmware node hierarchy
    ACPI firmware node types.
    CONFIG_QCOM_WCNSS_CTRL is required to load firmware/configuration data
    firmware: qcom_scm: add two scm calls for iommu secure page table
    firmware/qcom: add qcom_scm_restore_sec_cfg()
    resets. This is due to loading firmware from on-board flash memory and
    downloading firmware in boot mode.
    downloading firmware in boot mode.
    drm/i915: update the firmware download URL
    built-in firmware.
    capability 0x0C. However, the firmware keeps its I2C connection open
    mlxsw: Query resources from firmware
    from the firmware instead.
    mlxsw: spectrum: Query cell size from firmware
    devices, so query it from the firmware instead of hard coding it.
    from the firmware than hard coding it.
    mlxsw: spectrum_buffers: Query shared buffer size from firmware
    query it from the firmware, as it may change in future devices.
    mlxsw: Query maximum number of ports from firmware
    this may change in future devices, so query it from the firmware
    mlxsw: spectrum_router: Query number of LPM trees from firmware
    from the firmware, as it may change in future devices.
     - dvb-usb-firmware: don't do DMA on stack
      [media] dvb-usb-firmware: don't do DMA on stack
    liquidio: do not reset Octeon if NIC firmware was preloaded
    firmware to the NIC because Octeon is already running preloaded firmware.
    driver, conditionally send the RESET_PF command to the firmware who will
      ieee80211 phy0: rt2x00lib_request_firmware: Info -
         Loading firmware file 'rt2561s.bin'
      ieee80211 phy0: rt2x00lib_request_firmware: Info -
    Fixes: 65e254821cee ("iwlwifi: mvm: use firmware station PM notification for AP_LINK_PS")
    PCI: thunder-pem: Add legacy firmware support for Cavium ThunderX host controller
    During early days of PCI quirks support, ThunderX firmware did not provide
    firmware: meson-sm: Allow 0 as valid return value
    firmware: meson-sm: Check for buffer output size
    allows dimming), while the blue LED is managed by the firmware.
    management firmware, or changes logic relating to some values retrieved
    firmware and there completion, and is the most significant [at least
    compatibility with future management firmware versions.
    by the management firmware - first reserve L2 queues for
    Management firmware and driver are meant to be both backward and forward
    If a new mangement firmware would work with an older driver,
    to it. That's perfectly acceptible from the firmware part - so no need to
    The management firmware is running on a Big Endian processor,
    to memory shared between management firmware and driver on
    driver and management firmware are based on 32-bit variables.
    array when indicating to management firmware that primary MAC
    otherwise after the swap the management firmware would read
    The driver interaction with management firmware involves a union
    Interaction of driver -> management firmware is based
    two MSI-X vectors or less, the adapter firmware guarantees that
    muxing which is controlled in firmware on this model work properly.
    is known to the system firmware or hardware.
    is known to the system firmware or hardware.
    sysdev will represent the physical device, as seen from firmware
    * fix regression with QCA6174 during resume and firmware crash
    can be observed by a firmware crash during initialization phase of MFC
    VPU firmware has a bug and may return invalid buffer index for
    [media] coda: restore original firmware locations
    beginning of the array of firmware locations without changing the code
    to also look at the third element, thus pushing an old firmware location
    Fixes: 8af7779f3cbc ("[media] coda: add Freescale firmware compatibility location")
    With reordering enabled, the sequence init in CODA960 firmware requests an
    various firmware versions, sometimes blocking something related to the
    - Set the ID pin as the input direction if firmware has the bug
    provided by firmware.
    PF needs to validate the status of VF queues before asking firmware
    indication in firmware to allow further VF messages to arrive,
    again, causing the firmware to consider the VF as malicious.
    liquidio: fix for vf mac addr command sent to nic firmware
    Change to support host<->firmware command return value.
    1. Added support for firmware commands to return a value:
         (major/minor) now, firmware commands are grouped into their own
    for i40e where the firmware expected the port numbers for the offloaded
    The firmware for the Raspberry PI already supports simultanous output
    the firmware audio is represented as a single card.
    output(HDMI, Headphones, and Traditional ALSA).  The firmware has
    (.text+0x1da30): undefined reference to `rpi_firmware_get'
    (.text+0x27494): undefined reference to `rpi_firmware_property'
    The firmware expects the port numbers for offloaded UDP tunnels in
    cfg->scan_status and when we receive an abort event from the firmware
    brcmfmac: Do not print the firmware version as an error
    event means something went wrong and firmware / hardware usually can't
    rtlwifi: Add code to read new versions of firmware
    changes in the firmware. This new firmware has been accepted into the
    Linux firmware repo. To handle the case where the kernel has been
    updated before the firmware, the new versions have been given new names.
    a corner case firmware bug. It can lead to either a use-after-free +
    mwifiex: add qualifier to firmware structures
    This patch adds qualifier __packed to the required firmware
    cacheinfo support, which should instead be reintroduced when firmware has
    firmware (we're using v3.4.0.225) will fail and return
    Verified on QCA6174/hw3.0 with firmware WLAN.RM.4.4-00022-QCARMSWPZ-2.
    kvalo: this also seems to fix a regression with firmware restart.
    cycles) that contains the BIOS or other host firmware along with a
    MAINTAINERS: update firmware loader entry
    harmless, but scary warning. Instead check if the firmware supports HPT
    NIC firmware, and then assigning proper values to the
            send/receive control data from the NIC firmware; so the PF and VF
    effects on _DSD enabled firmware.
    effects on _DSD enabled firmware.
    This field is used to determine which kind of firmware the struct
    The driver still struggles with firmwares that do not replay to the OS
    is received and last the driver won't get stuck if the firmware won't
    DSP firmware sends notification every 1ms, which is disabled in runtime
    ASoC: Intel: bxtn: Reload the firmware in case of D3 failure
    If D3 IPC fails or times out, firmware needs to be reloaded as driver
    So set the fw_load flag to false to reload the firmware in D0.
    In system suspend, firmware needs to be re-downloaded as IMR is cleared.
    When firmware is downloaded in D0, core state is not set to running
    drm/i915/uc: Add params for specifying firmware
    `guc_firmware_path` and `huc_firmware_path` module parameters are added.
    Using the parameter disables version checks and loads desired firmware
    drm/i915/uc: Separate firmware selection and preparation
    intel_{h,g}uc_init_fw selects correct firmware and then triggers it's
    Then, during the init_fw(), we prepare the firmware if the firmware was
    drm/i915/uc: Simplify firmware path handling
     2) '\0' - device with the uC but have no firmware
     3) else - device with the uC and we have firmware
    firmware.
    Geminilake's DMC is not yet available in the linux-firmware repository.
    missing firmware, remove the MODULE_FIRMWARE() tag for now.
    firmware-generated filter and explicit addition of filter which
    request to enable OOO to firmware.
    doorbelling the higher CIDs would fail to reach the firmware and
    firmware path and that will be a performance issue.
    This patch advances the qed* drivers into using the newer firmware -
    This solves several firmware bugs, mostly related [but not limited to]
    It also introduces a major 4-Cached SGE change in firmware, which can be
    In addition, this firmware is required for supporting the new QL41xxx
    the firmware contains the necessary initialization & firmware logic to
    staging: sh_css_firmware: Remove parentheses from return arguments
    atomisp: tidy firmware loading code a little
    The FWNAME define is never used so can be removed. The option to skip firmware
    entries which depends on the firmware is often inconsistent with the
    firmware that needs to be accounted for during initialization, or
    issue that is more suited to firmware rather than this driver.
    for buffer overruns if the firmware sends too much data.  This
    The firmware never interperates the client_context, just passed it back.
    A delayed buffer field is passed between the firmware and the
    the firmware, a client_component field is passed.
    The struct struct mmal_es_format is passed between the firmware which has
    firmware agent is running or not, and an autoneg related improvement.
    bnxt_en: Ignore 0 value in autoneg supported speed from firmware.
    In some situations, the firmware will return 0 for autoneg supported
    speed.  This may happen if the firmware detects no SFP module, for
    is inserted, we'll get the updated settings from firmware at that time.
    bnxt_en: Check if firmware LLDP agent is running.
    Set DCB_CAP_DCBX_HOST capability flag only if the firmware LLDP agent
    The firmware call to do function reset is done too late.  It is causing
    the number of entries returned by the firmware does not match those
    Some firmware images may reuse CRC32 hardware to compute RXHASH.
    staging: greybus: firmware: Convert sscanf calls to strtoul
    staging: greybus: firmware: Change long long unsigned to unsigned long long
    staging: greybus: firmware: Remove extra braces from single line if
    staging: greybus: firmware: Remove trailing semicolon from FW_TIMEOUT_DEFAULT
    The camera driver passes messages back and forth between the firmware with
    The context field is used to pair reply messages from the firmware with
    would rely on the firmware always copying the pad field.
    The camera driver passes messages back and forth between the firmware with
    unmasked/needed by GuC firmware. For that, Driver maintains a bitmask of
    ath10k: improve the firmware download time for QCA9377
    to enable the hardware clock that could improve the firmware download time.
    ath10k: improve the firmware download time for QCA6174
    The reason of the 2 seconds is due to the firmware download time.
    firmware download to chip memory and advanced to the support higher speed
    clock to run the firmware after all. The default reference clock in the
    hardware is slow so that the firmware download time is taking up to 2
    seconds for a 600KB firmware file.
            [76796.349701] ath10k_pci : boot uploading firmware image len 688691
    supported before the firmware download at BMI stage, so that the hardware
    improve the firmware download time from 2 seconds to around 500ms for the
    same 600KB firmware file.
            [322858.577919] ath10k_pci boot uploading firmware image len 688691
    The overrun ignore bit isn't supported by the device's firmware and was
    [media] dvb-usb-firmware: don't do DMA on stack
    The buffer allocation for the firmware data was changed in
    commit 43fab9793c1f ("[media] dvb-usb: don't use stack for firmware load")
    Fixes: 43fab9793c1f ("[media] dvb-usb: don't use stack for firmware load")
      drm/nouveau/secboot: workaround bug when starting SEC2 firmware
      firmware (Imre)
    ibmvnic: Allocate number of rx/tx buffers agreed on by firmware
    is different from the amount agreed upon in negotiation with firmware.
    by firmware.
    ibmvnic: Fix overflowing firmware/hardware TX queue
    more completions from firmware, wake the queue once the counter reaches
    This patch prevents hardware/firmware TX queue from filling up and
    has reported that these firmware errors have stopped.
      by a late change to the firmware API, and we can't boot without it.
    increased the retries for firmware download.
    Store the DSP firmware/library at boot, so that for S3 to S0 transition
    use the stored ctx for downloading the firmware to DSP memory.
    We should not be writing acknowledge controls until the firmware is
    running, as in the case of preloaded firmwares the DSP memory may be
    Volatile controls should only be accessed when the firmware is active,
    will be lost, if the firmware is powered down. Update this behaviour such
    Add support for the msgqueue firmware used to process SEC2 commands
    These gp10x chips are supporting using (roughly) the same firmware.
    firmwares.
    r367 uses a different hsflcn_desc layout and LS firmware signature
    drm/nouveau/secboot: workaround bug when starting SEC2 firmware
    For some unknown reason the LS SEC2 firmware needs to be started twice
    drm/nouveau/secboot: add support for SEC LS firmware
    Support running a message queue firmware on SEC.
    ACR firmware from r364 on need a shadow region for the ACR to copy the
    mode. This makes communication with the firmware using DMEM impossible.
    drm/nouveau/secboot/gm20b: enable PMU firmware
    Enable the PMU firmware in gm20b, managed by secure boot.
    gm20b PMU firmware is driven by a msgqueue, so connect relevant PMU
    The ACR firmware may return no error but fail nonetheless. Such cases
    firmware should still not be run.
    produce a fatal error if their firmware is not loaded. Also change the
    if it turns out the boot falcon's LS firmware cannot be loaded.
    drm/nouveau/secboot: support PMU LS firmware
    Adapt secboot's behavior if a PMU firmware is present, in particular
    the way LS falcons are reset. Without PMU firmware, secboot needs to be
    firmware, we can ask the PMU's ACR unit to reset a specific falcon
    drm/nouveau/secboot: support for loading LS PMU firmware
    Allow secboot to load a LS PMU firmware. LS PMU is one instance of
    firmwares based on the message queue mechanism, which is also used for
    other firmwares like SEC, so name its source file accordingly.
    NVIDIA-provided PMU firmware is controlled by a msgqueue. Add a member
    Add support for the msgqueue firmware used to process PMU commands for
    A message queue firmware implements a specific protocol allowing the
    Due to the way the firmware is developped internally at NVIDIA (where
    kernel driver and firmware evolve in lockstep), firmwares taken at
    drm/nouveau/secboot: add LS firmware post-run hooks
    Add the ability for LS firmwares to declare a post-run hook that is
    invoked right after the HS firmware is executed. This allows them to
    Check at contruction time that we have support for all the LS firmwares
    However, NVIDIA's FECS/GPCCS firmware touches registers that trigger
     * Custom user firmware commands
    # mxt-app -d i2c-dev:1-004a --save /lib/firmware/maxtouch.cfg
    The firmware for the droid 4 mxt224 comes with GPLv2 license in the
    Motorola Linux kernel sources. This firmware can be dumped out with
    "droid4-touchscreen-firmware" program at:
    https://github.com/tmlind/droid4-touchscreen-firmware
    configured only by firmware (typically UEFI), so the only way to
    a softkey, hardware/firmware still reports touch events no matter
    Geminilake's DMC is not yet available in the linux-firmware repository.
    missing firmware, remove the MODULE_FIRMWARE() tag for now.
    will also need the firmware files from your device (Android usually puts
    interface adding to the codebase *IFF* the firmware works on such devices.
    drivers need code to enable the firmware to monitor the thresholds.
    staging: comedi: jr3_pci: re-work firmware copyright display
    null-terminated copyright string embedded in the firmware, one character
    Prior to loading the firmware to all the DSPs, the initialization code
    whatever prior initialization has been done by boot loader or firmware
    differ by an original vendor firmware.
    Each bridge has a dedicated flash containing firmware for supporting the
    driver is for the bridges with the firmware which is specific for the GE
    sensor hardware/firmware.
    In some implementation, sensor hardware/firmware will do a power cycle
    hardware/firmware will be recovered to the last status. So change the
         platform firmware needs to comprehend for capabilities like booting
    is without the build_skb() headroom and tailroom.  Note: firmware
    [media] dvb-usb-firmware: don't do DMA on stack
    The buffer allocation for the firmware data was changed in
    commit 43fab9793c1f ("[media] dvb-usb: don't use stack for firmware load")
    Fixes: 43fab9793c1f ("[media] dvb-usb: don't use stack for firmware load")
    cxgb4: update latest firmware version supported
    Change t4fw_version.h to update latest firmware version
    that have a HuC but the firmware is absent.
    The newly refactored code that infers the firmware's Secure Boot state
      powerpc/pseries: Advertise Hot Plug Event support to firmware
     - First, if the firmware has put properties in the device-tree
    to be missing.  Since recent firmwares also require this property,
       - Inform firmware that RF Button Driver is active
      platform/x86: acer-wmi: Inform firmware that RF Button Driver is active
       - Tegra BPMP firmware
    New firmwares include a feature called 5 button array that supports
    (outside of kernel control) by hardware / firmware. This commit
                    may be changed autonomously by hardware/firmware. Only LEDs
    with the hardware set brightness when they detect a hardware / firmware
    Now that we have informed the firmware that the RF Button driver is
    platform/x86: acer-wmi: Inform firmware that RF Button Driver is active
    be added if some platform firmware choses to enumerate the device via PCI
    At least a ParadTech PS175 LSPCON chip/firmware uses long instead of
      firmware files installed for some GPUs.
       - SI DPM quirks removed due to firmware fixes
      firmware: arm_scpi: Add hardware dependencies
    A device may change capabilities after each reset, e.g. due to a firmware
      firmware files (MDT) is refactored and move to drivers/soc/qcom, to
      remoteproc: Reduce asynchronous request_firmware to auto-boot only
      remoteproc: qcom: mdt_loader: Don't overwrite firmware object
      remoteproc: Drop firmware_loading_complete
      RDMA/bnxt_re: fix for "bnxt_en: Update to firmware interface spec 1.7.0."
    Currently  the adapter firmware does not save outstanding I/O's log
    firmware before issuing an IOP reset.
    information in the cmd sent to the firmware and gets an invalid response.
    RDMA/bnxt_re: fix for "bnxt_en: Update to firmware interface spec 1.7.0."
    When the firmware interface spec was updated, a constant element was
    or controller firmware update changed the queue count, for example.
    and/or firmware revision.
      Not much here, some firmware documentation and self-test updates, a
      firmware: revamp firmware documentation
      selftests: firmware: send expected errors to /dev/null
      selftests: firmware: only modprobe if driver is missing
     - Qualcomm SMCCC firmware quirk
      tpm: add securityfs support for TPM 2.0 firmware event log
    firmware EDIDs.
    drm: move edid property update and add modes out of edid firmware loader
    Make the firmware loader more generic and generally useful.
    powerpc/pseries: Advertise Hot Plug Event support to firmware
         kernel control) by hardware / firmware. The attribute supports
    the management firmware, and re-reads the resulting link status
         on recent firmware versions. (Sai Praneeth)
    BPMP firmware.
    nfp: expose more firmware and hw debug info
    This series is mostly a result of flash firmware team requesting
    firmware problems.  Patch 1 adds a missing error message.  Patch 2
    Patches 6 and 7 provides a way of application firmwares to declare
    nfp: allow application firmware to limit number of SR-IOV VFs
    Some application firmware projects may choose to limit the number
    Check nfd_vf_cfg_max_vfs firmware symbol to see if application
    firmware is reporting how many VFs it supports.  This mechanism
    Some Cavium dev boards have firmware which doesn't supply a proper
    firmware instead of processing them in the interrupt handler. Note that
    have been added to the firmware in the first place, however we still
    * when trying older firmware versions don't confuse user with error messages
    PMU firmware will not be able to run.
    When the PMU firmware is present, the falcons it manages need to have
    drm/nouveau/secboot: abstract LS firmware loading functions
    Add a flag that can be set when declaring how a LS firmware should be
    Split the act of building the ACR blob from firmware files from the rest
    firmwares have been released for these versions. Some abstractions are
    firmware versions will be supported, this is a necessity to not get lost
    drm/nouveau/secboot: add low-secure firmware hooks
    Secure firmwares provided by NVIDIA will follow the same overall
    this as gracefully as possible, turn the LS firmware functions into
    The current hooks cover the external firmware loading as well as the
    use of internal firmware, the other for use of external firmware), but
    Error reports received from firmware were not being converted from
    * when trying older firmware versions don't confuse user with error messages
    firmware loaded with the VPE loader. I am not aware of any standard
    firmware has best judgement.
    firmware, which includes the ethernet header length, and net
    ath10k_pci 0000:02:00.0: firmware ver 10.2.4.70.9-2 api 5 features no-p2p,raw-mode crc32 b8d50af5
    ath10k: silence firmware file probing warnings
    driver instances to load unsupported firmware
    which attempts to load several firmware files.
    them to rename firmware files making things even
    Hence use request_firmware_direct() which does not
    rely on udev/hotplug helpers to load firmware
    unexistent firmware/calibration file with distros
    ath10k with firmware-2.bin this might end up
    This is needed when we switch to using request_firmware_direct() which doesn't
    ath10k: fetch firmware images in a loop
    To make it easier to handle minimum and maximum firmware API numbers convert
    the firmware fetch functionality to a loop. If no firmware image is found print
    an error with minimum and maximum API numbers and the name of firmware
    directory. This is needed when we switch to using request_firmware_direct()
    ath10k: fix napi crash during rmmod when probe firmware fails
    This fixes the below crash when ath10k probe firmware fails, NAPI polling tries
    reproduce this is easy to remove all the firmware files, load ath10k modules
    from firmware.
    supported by the firmware.
    Refactored how we add new filters to firmware to avoid a race condition
    to be.  Currently, this is happening in the VCE firmware, and although
    to flash and debug firmware of on-board Renesas RL78/G13 MCU.
    Also added support of the 153600 baud rate, since the stock firmware
    FIX - firmware wants non-RW SYS PD IOs to avoid FastPath for better
    that the firmware can support, instance->max_fw_cmds is already
    Issue is limited for Syncro firmware where pd_after_lb is not set but is
    from firmware.  This is to ensure that driver always has latest OCR
    >From firmware perspective,ld id 0xFF is invalid and even though current
    driver code forward such command, firmware fails with target not
    pm_suspend_via_firmware() will return false for platforms with ACPI
    Miscellaneous updates include update of the firmware spec, ethtool flash
    If it is a VF or an NPAR function, the firmware call to setup the PHY
    will fail.  Adding this check will prevent unnecessary firmware calls
    set, pass the information to the firmware to setup the NTUPLE filter
    bnxt_en: Update to firmware interface spec 1.7.0.
    Staging: rtl8192u: r819xU_firmware.c - style fix
    i40e: avoid race condition when sending filters to firmware for addition
    Refactor how we add new filters to firmware to avoid a race condition
    (11) sync the temporary lists to firmware
    firmware process. Unfortunately this does not work because adminq
    firmware commands take a mutex which results in a sleep while atomic
    finalized the addition to firmware, we will update the filter state
    I40E_FILTER_NEW when we finish the firmware sync.
    filters from the list regardless of the firmware status.
    Normally, we add filters to firmware by batching the additions into
       - Two more TSC-adjust fixes for interesting firmware interactions.
    for supporting more advanced firmware applications.
    various hardware and firmware information structures.
    methods for unloading and loading application firmware.
    in application firmware.  It will be used to retrieve the location
    the loaded application firmware.  Add code which will allow
    * add debugfs file peer_debug_trigger for debugging firmware
       . BMC firmware
       . BMC firmware
       . host firmware
    after the adjustemt on the starting CPUs. It's a firmware bug and should be
    fixed in firmware. The weird timestamps are collateral damage and just
      drm/amdgpu: add support for new smc firmware on polaris
    controllers. The driver does not support firmware loading, which is not
    drm/amdgpu: add support for new smc firmware on polaris
    Some polaris variants require new smc firmware.
    It also adds a new firmware feature flag to track the presence of the
    knowledge of target mode. This causes driver and firmware to go
       smu firmware may check uvd_status.
    "fixed" in device firmware, so we must fix them with a quirk.
    Changes dependeds on firmware to send correct info w.r.t
      ARM64: dts: meson-gx: Add firmware reserved memory zones
    Currently to establish whether GuC firmware has been loaded or
    It is better to log the fact GuC firmware has been loaded and/or
      * Future proof by reporting found firmware version. (Michal)
    * add debugfs file peer_debug_trigger for debugging firmware
    implemented by calling JPEG_DECODER_HW0 firmware
    DELTA coprocessor firmware using rpmsg kernel framework.
    The messages structures are duplicated on both host and firmware
    Each service is synchronous; service returns only when firmware
    events from the firmware that only tell it whether latest measurement
    For the benefit of drivers that rebuild IEs in firmware, parse the
     1) Load correct firmware in rtl8192ce wireless driver, from Jurij
    Get the firmware's secure-boot status in the kernel boot wrapper and stash
    drm/i915/gvt: use normal mmio read function for firmware exposure
    read function for initial firmware exposure if no available firmware
      state firmware is not available
    Fixes: 886039036c20 ("wcn36xx: Implement firmware assisted scan")
    configuration are causing the following errors when UTF firmware
    [ 598.015629] ath10k_pci 0001:01:00.0: failed to ping firmware: -110
      drm/rockchip: cdn-dp: Load firmware if no monitor connected
     "These add a quirk to intel_pstate to work around a firmware setting
       - Add an intel_pstate driver quirk to work around a firmware setting
    remoteproc: Reduce asynchronous request_firmware to auto-boot only
    The rproc_add_virtio_devices() requests firmware asynchronously and
    since the rproc_boot() would call request_firmware() anyways. Move
    _request_firmware can be avoided for non auto-boot case.
    layer should still report the IORT mappings as reported by firmware) but
    in order to load the correct firmware.
    remoteproc: qcom: mdt_loader: Don't overwrite firmware object
    The "fw" firmware object is passed from the remoteproc core and should
    of the the last firmware object.
    All shipping firmware versions have it wrong in the device-tree
    drm/rockchip: cdn-dp: Load firmware if no monitor connected
    If no monitor is connected, suspend/resume cycles result in firmware
    load errors because the driver attempts to load the firmware while
    Loading the firmware during boot fixes the problem. Note that we can not
    There is a uCPU in DP controller, it need a firmware to work,
    please put the firmware file to /lib/firmware/rockchip/dptx.bin. The
      firmware loader, that should fix the much-reported problem of crashes
      firmware: fix NULL pointer dereference in __fw_load_abort()
    firmware, by refactoring the macro INTRL_USEC_TO_REG into a static
    running in the chip. The On-Chip-Controller(OCC) firmware will control
    DMA by firmware, the DMA APIs on ARM and other DT-based platforms will
    This driver uses the services provided by the BPMP firmware driver to
    tpm: add securityfs support for TPM 2.0 firmware event log
    firmware event log.
    firmware: qcom: scm: Fix interrupted SCM calls
    [media] dvb-usb: don't use stack for firmware load
    As reported by Marc Duponcheel <marc@offline.be>, firmware load on
    [ 1025.958836] dvb-usb: found a 'WideView WT-220U PenType Receiver (based on ZL353)' in cold state, will try to load a firmware
    [ 1025.958853] dvb-usb: downloading firmware from file 'dvb-usb-wt220u-zl0353-01.fw'
    [ 1025.958856] dvb-usb: error while transferring firmware (transferred size: -11, block size: 3)
    [ 1025.958856] dvb-usb: firmware download failed at 8 with -22
    [    2.789902] dvb-usb: downloading firmware from file 'dvb-usb-wt220u-zl0353-01.fw'
    [    2.789972]  [<ffffffffa06791cf>] usb_cypress_load_firmware+0x4f/0x130 [dvb_usb]
    [    2.789977]  [<ffffffffa0679310>] dvb_usb_download_firmware+0x60/0xd0 [dvb_usb]
    [media] coda: add Freescale firmware compatibility location
    The Freescale provided imx-vpu looks for firmware files under /lib/firmware/vpu
    by default. Make coda look there for firmware files to ease the update path.
    scsi: aacraid: Added sa firmware support
    sa_firmware adds the capability to differentiate the new SmartIOC family
    configuration table that is accessible both by the firmware at boot time
    PE/COFF in the context of UEFI firmware.
    iwlwifi: mvm: set AID to firmware only for associated stations
    The firmware will soon actually look at the AID field, and
    the firmware, instead of the value. It's not clear how this could
    ever have worked, unless the firmware is ignoring this value.
    iwlwifi: mvm: synchronize firmware DMA paging memory
    * Driver load only RT firmware - meaning that the nvm access
      not completed init flow even though we are in RT firmware.
    firmware choose to pull frames with uAPSD trigger
    The LG Melfas touchscreen has a bad firmware where it declares the Contact ID
    generating an interrupt towards the firmware (HIG) when the device is in
    and firmware loading are the main issues.
    to the firmware.  If enabling interrupt rate limiting, a non-zero value
    for the rate limit must be used.  Otherwise the firmware sets the
      firmware versions"
    We no longer send payloads back to the s-Par firmware, we can get rid of
    firmware wasn't setting the DSP3 mux up when both the LCD and HDMI
    inadvertently created an issue with such firmware, by moving some
    * some work on our firmware debugging capabilities
    * dump Copy Engine registers during firmware crash
    EFI_PROPERTIES_TABLE even if it's published by the firmware. We consider
    published by firmware or not.
    The firmware or device, possibly under a heavy I/O load, can return on a
    and can observe 0x2100 firmware fault.  So to fix this, we have defined
    be freed and these entries will be available for firmware and we won't
    selecting the correct firmware to flash.
    The attribute returns the percentage complete. If the firmware update fails, it
    - Remove SI DPM quirks due to MC firmware issues
    cxgb4: update latest firmware version supported
    Change t4fw_version.h to update latest firmware version
    * dump Copy Engine registers during firmware crash
    device/firmware capabilities. So they can differ per device. So it
    brcmfmac: fix handling firmware results for wowl netdetect
    For old firmwares the memory wasn't allocated, resulting in panic.
    rtlwifi: rtl8192ce: Fix loading of incorrect firmware
    d86e64768859, an error in the edit results in the wrong firmware
    firmware: arm_scpi: Add hardware dependencies
    remoteproc: Drop firmware_loading_complete
    firmware_loading_complete is used to synchronize operations
    on rproc while asynchronous firmware loading is in progress.
    firmware_loading_complete. Hence drop this completion
    The request_firmware_nowait() will hold the reference to
    the firmware has the capability to communicate the psscr value and the
    The older firmware sets only the Requested Level (RL) field in the
    psscr and psscr-mask exposed in the device tree. For older firmware
    TR). For the new firmware, the patch will validate that the invariants
    firmware.
    This functionality is permitted providing that the firmware
    a firmware naming fix for iwlwifi and a revert of an older bcma patch.
    [media] gp8psk: fix spelling mistake: "firmare" -> "firmware"
    behavior is apparently not suitable for firmware that requires
       ? get_builtin_firmware
       on firmware for setting up pins.
      firmware: qcom_scm: Add set remote state API
      firmware: qcom: scm: Mask APQ8064 core clk dependency
      firmware: qcom: scm: Add empty functions to help compile testing
    capability before ets query command is sent to firmware.
    (outside of kernel control) by hardware / firmware. This commit
                    may be changed autonomously by hardware/firmware. Only LEDs
    with the hardware set brightness when they detect a hardware / firmware
      arch/x86/kernel/e820.c:       e820__update_table(e820_table_firmware);
      void e820__update_table_firmware(void);
    harmonize with the e820__update_table_firmware() function which
    around memblock_alloc() plus a hack to update the e820_table_firmware entries.
       * pre allocated 4k and reserved it in memblock and e820_table_firmware
       * range in the 'firmware' E820 table.
    x86/boot/e820: Rename e820_table_saved to e820_table_firmware and improve the description
    But that is not so, e820_table_saved is the original firmware version of the
    /sys/firmware/memmap file, and it's also used by the hibernation code to
    So rename it to 'e820_table_firmware' and update all the comments to better
      'initial_e820_table_saved'  =>  'e820_table_firmware_init'
      'e820_update_range_saved'   =>  'e820_update_range_firmware'
    as soon as firmware tries to make use of it, a triple fault occurs and the
    if firmware has written it through DMA. The problem is fixed by using
    pci_dma_sync_single* APIs while reading DMA buffer shared with firmware.
    command. Unmapping will be done when firmware completes writing sleep
    is unknown or not reported by firmware.
    driver on the primary PF has notified the firmware of relevant UDP ports,
     firmware of UDP ports to use, NVGRE will always be recognised, hence
    following firmware's request.
    drm/amd/powerplay: fix issue can't load another smu firmware.
    need to release failed smu firmware before load another
    firmware.
    firmware as they were not ready.
    drm/amd/powerplay: fix request smc_sk firmware case
    This patch fixes firmware request error on polaris protection mode.
    drm/amd/powerplay: add request_firmware/release_firmware for smu7
      instances supported by firmware. In addition to that,
    drm/amd/powerplay: move vi smu firmware declares to powerplay.
    drm/amd/powerplay: add callbacks to move smc firmware request into sw_init phase
    ARM64: dts: meson-gx: Add firmware reserved memory zones
     * Some work on our firmware debugging capabilities;
    firmware: fix NULL pointer dereference in __fw_load_abort()
    Since commit 5d47ec02c37ea6 ("firmware: Correct handling of
    lead us to a kernel crash. This happens only when the firmware fallback
    rule in place to *always* immediately cancel all firmware fallback
      $ cat /lib/udev/rules.d/50-firmware.rules
      # stub for immediately telling the kernel that userspace firmware loading
      SUBSYSTEM=="firmware", ACTION=="add", ATTR{loading}="-1
    mechanism could typically incur a crash: drivers/firmware/dell_rbu.c and
    The crash happens because after commit 5b029624948d ("firmware: do not
    5d47ec02c37ea6 ("firmware: Correct handling of fw_state_wait() return
    value") a race can happen between this cancelation and the firmware
    The firmware_class.c code is setting the buf to NULL to annotate an
    mcgrof@piggy ~/linux-next/tools/testing/selftests/firmware
    ./fw_fallback.sh: firmware comparison works
    test_firmware: loading 'nope-test-firmware.bin'
    misc test_firmware: Direct firmware load for nope-test-firmware.bin failed with error -2
    misc test_firmware: Falling back to user helper
    IP: _request_firmware+0xa27/0xad0
    Modules linked in: test_firmware(E) ... etc ...
    RIP: 0010:_request_firmware+0xa27/0xad0
     request_firmware+0x37/0x50
     trigger_request_store+0x79/0xd0 [test_firmware]
    RIP: _request_firmware+0xa27/0xad0 RSP: ffffbb15c0bcbd10
    Fixes: 5d47ec02c37e ("firmware: Correct handling of fw_state_wait() return value")
    can mislead software/firmware to belive the gdsc is already either on
    agnostic") (based on struct fwnode_handle as look-up token, so firmware
    that access the firmware directly may legally access them, which means
    drivers: firmware: psci: Use __pa_symbol for cpu_resume
    Fixes: 1a08e3d9e0ac4577 ("drivers: firmware: psci: Use __pa_symbol for kernel symbol")
    implemented in firmware.
    on firmware provided resources.
    The maximum number of firmware sections is now 32 instead of 16 for
    Due to some new features and changes, the firmware file will now
    net: thunderx: Leave serdes lane config on 81/83xx to firmware
    any way to identify board type/info and since firmware does,
    whatever has been programmed by low level firmware.
    test_firmware: add test custom fallback trigger
    tools: firmware: add fallback cancelation testing
    tools: firmware: rename fallback mechanism script
    tools: firmware: check for distro fallback udev cancel rule
    test_firmware: use device attribute groups
    test_firmware: move misc_device down
    (the topology is all described by firmware tables such as device-tree or
        o Added firmware version checking.
    where the max values are read from the firmware and the number of
    the firmware and not the size requested by the caller, fix that.
    is bigger from what is supported by the firmware.
    * Remove an extra hyphen from a string that was preventing the firmware to load
    * Avoid a crash when the firmware is restarted in certain scenarios with DQA
    CFE, it's just that other open firmwares don't trigger it because they
         that need different firmware.
    TPM access") Atmel 3203 TPM on ThinkPad X61S (TPM firmware version 13.9)
    When the firmware restarts in a situation in which any station
    Mistakenly, the driver is trying to load the 8000C firmware with an
      drm/sti: load XP70 firmware only once
    - Add support for new smc firmware on some new hainan variants
    - add support for SI chips that require special mc firmware
    - remove workarounds for issues fixed by new mc firmware
    A recent firmware change seems to have enabled thermal zones on the
      qla2xxx: Disable out-of-order processing by default in firmware
      qla2xxx: Reset reserved field in firmware options to 0
      qla2xxx: Include ATIO queue in firmware dump when in target mode
    HuC firmware is mapped at GuC accessible range. Let's add an assert to
    HuC authentication is called even if HuC firmware is not present in the
    Let's avoid trying to authenticate HuC if its firmware is not loaded
    These partitions are based on the official EV3 firmware from LEGO. It is
    an SD card while retaining the official firmware in the flash memory.
    Furthermore, the official firmware uses an ancient U-Boot (2009) that has
    their own firmware image with different partitioning, they can use a modern
    U-Boot in their own firmware image that modifies the device tree with the
    rtlwifi: Download firmware as bytes rather than as dwords
    The firmware is read from disk as a little-endian byte string. The code
    that loads the firmware into the device transfers it as 4-byte quantities.
    order required by the device. As a result, the firmware is transmitted
    number of I/O operations is increased, the firmware is not often loaded.
    download firmware. These routines have been moved into rtlwifi.
    Fixes: c56caa9db8ab ("brcmfmac: screening firmware event packet")
    need to handle, but on 8997 w/ firmware 16.68.1.p97, I see several of
    mwifiex: pcie: use posted write to wake up firmware
    read to wake up the Wifi firmware can take a long time. There is no
    don't have firmware like ACPI to turn these things on for us. And
    firmwares with lack of support.
    PCAM and MCAM registers will provide information regarding firmware
    combined with old firmware results in syndromes (for ex. PCIe counters
    net/mlx5: Add support to s-tag in mlx5 firmware interface
    Firmware representation of the firmware version on the health buffer has
    buffer firmware version as a raw hex number.
    In system suspend, the firmware pipelines will be deleted and there
    In system resume, the firmware pipelines will be created again and the
    need to fetch the non-played data again to firmware buffer. LPIB
    ath10k: dump Copy Engine registers during firmware crash
    This is useful information to debug firmware crashes, assertes or hangs over long run
    ath10k_pci 0000:02:00.0: simulating hard firmware crash
    ath10k_pci 0000:02:00.0: firmware crashed! (uuid 84901ff5-d33c-456e-93ee-0165dea643cf)
    ath10k_pci 0000:02:00.0: firmware ver 10.2.4.70.59-2 api 5 features no-p2p,raw-mode,mfp,allows-mesh-bcast crc32 4159f498
    ath10k_pci 0000:02:00.0: firmware register dump:
    Only peer-flow-control capable firmware was
    Version 1.7 of the HuC firmware.
    used for firmware upgrade.
    flash (for bootloader and NVRAM) and NAND flash (for firmware).
    two of them for 5 GHz band. Both seem the same and their firmwares
    using original vendor firmware (which has limitations hardcoded in UI).
      board. He also updates the reserved memory entry for the Nitro firmware,
      arm64: dts: NS2: reserve memory for Nitro firmware
    to load and boot modem firmware, this need compatible string based
    HuC firmware css header has almost exactly same definition as GuC
    firmware except for the sw_version. Also, add a new member fw_type
    New hainan parts require updated smc firmware.
    New hainan parts require updated smc firmware.
    mpt3sas has a firmware failure where it can only handle one pass through
    qla2xxx: Disable out-of-order processing by default in firmware
    qla2xxx: Reset reserved field in firmware options to 0
    fields in firmware options to Zero (BIT 15)
    qla2xxx: Include ATIO queue in firmware dump when in target mode
    Include ATIO queue for ISP27XX when firmware dump is collected
    with different codecs or firmwares. The API supports flavoring the DMI
    Make platforms, which are using a common SST firmware driver, to be
    During bands setup we disable all channels that firmware doesn't support
    default. If firmware reported channel we didn't predict this would
    Checking the firmware status from PCIe register only works
    firmware: qcom_scm: Add set remote state API
    firmware: qcom: scm: Mask APQ8064 core clk dependency
    firmware: qcom: scm: Add empty functions to help compile testing
    transition. Per the firmware spec, the flags in this byte are active
    cxgb4: Shutdown adapter if firmware times out or errors out
    host. This is typically used when the adapter and/or firmware
    Some machines, such as the Lenovo ThinkPad W541 with firmware GNET80WW
    Miscellaneous updates including firmware spec update, ethtool -p blinking
    bnxt_en: Update to firmware interface spec to 1.6.1.
     "The major fix is the bfa firmware, since the latest 10Gb cards fail
      probing with the current firmware.
      scsi: bfa: Increase requested firmware version to 3.2.5.1
      scsi: fnic: Avoid sending reset to firmware when another reset is in progress
    by the Riva firmware and the related memory reserve.
    The 10.4 firmware adds extended peer information to the
    firmware's statistics payload. This additional info is
    glitches like missing vht station flags (this may be firmware or mac80211
    values are loaded as firmware during gvt inititiation.
      ASoC: wm_adsp: Don't overrun firmware file buffer when reading region data
    fixed by the new 58 mc firmware.
    Fixed by the new 58 MC firmware.
    fixed by the new 58 mc firmware.
    Fixed by the new 58 MC firmware.
    ieee802154: atusb: fix driver to work with older firmware versions
    a ATUSB device with an older firmware version would now longer be able to bring
    We keep this functionality disabled now if the minimum firmware version for this
    In the unlikely case were the firmware is new enough but the actual USB command
    to fix a link-related bug.  For a while now, the NIC firmware has had a
      drivers: firmware: psci: Use __pa_symbol for kernel symbol
    the firmware only for module unload case.
    mwifiex: wait firmware dump complete during card remove process
    Wait for firmware dump complete in card remove function.
    card reset trigger sdio_work and firmware dump trigger sdio_work.
    mwifiex: do not free firmware dump memory in shutdown_drv
    mwifiex_upload_device_dump() already takes care of freeing firmware dump
    drm/i915/guc: Make sure vma containing firmware is GuC mappable
    by the GuC are mappable"), we're asserting that GuC firmware is in the
    Some firmware versions sends a "print register indication", handle this
    wcn36xx: Implement firmware assisted scan
    The Mayflash GameCube adapter has received a firmware update which, among other
    updated firmware no longer requires HID_QUIRK_MULTI_INPUT.
        tunnels properly, Ip fragment matching fixes, handling firmware
    the firmware setting up the simplefb.
    drivers: firmware: psci: Use __pa_symbol for kernel symbol
    firmware: revamp firmware documentation
    notes. Give the firmware_class driver a much needed documentation love,
    selftests: firmware: send expected errors to /dev/null
    selftests: firmware: only modprobe if driver is missing
    No need to load test_firmware if its already there.
    On older platforms the command should be just ignored by the firmware
    hardware directly (called fast path) bypassing firmware.
    firmware/driver design. When there is no stream detected the LRU stream
    When the firmware returns an error (common example is an attempt to
    So if the firmware has configured a different bias-current for either
    firmware has set bit 2 to indicate that the battery has no thermal sensor,
    the NIC firmware.
    deprecate loading firmware with comedi_config").
    staging: comedi: daqboard2000: check CPLD status before writing firmware data
    accept the next 16-bit word of FPGA firmware data, but that doesn't work
    newer CPLD in the `daqboard2000_load_firmware()`, and change the
    firmware word writing function `daqboard2000_write_cpld()` to wait for
    `-ETIMEDOUT` if it runs out of checks.  Call it from the firmware
    loading callback `daqboard2000_load_firmware()` after writing the
    firmware to the FPGA to check it is programmed successfully.
    not set within 50 tries.  The firmware loading callback
    `daqboard2000_load_firmware()` may return the error result from
    `daqboard2000_wait_cpld_init()` if it has used up all its firmware
    staging: comedi: daqboard2000: check firmware length
    Make the firmware loading callback function
    `daqboard2000_load_firmware()` return an error `-EINVAL` if the FPGA
    The firmware loading callback tries to program the FPGA up to 3 times
    searches for the FPGA start sequence in the firmware data each time
    The CPLD status and data registers used to load firmware are 16 bits
    register in a pre-programmed CPLD device to program the main firmware on
    Besides having the DMC firmware in place and loaded let's
    firmware image for all steppings on a GLK.
    contained within the BAR 0-1. Previous versions of the firmware and the driver
    firmware for a new capability that if published, means that the firmware can
    library/driver/firmware, the library has now means to notify the kernel driver
      drm/radeon: update smc firmware selection for SI
      drm/amdgpu: update si kicker smc firmware
    Activate 4K UAR support for firmware versions that support it.
      drm/radeon: update smc firmware selection for SI
      drm/amdgpu: update si kicker smc firmware
    depending on a value queried by firmware. Each UAR always has 4 blue
    monitor firmware [1] as of commit cf8b431e8b3b ("soc: Move load
    [1] git://git.ti.com/processor-firmware/ks2-boot-monitor.git
    monitor firmware [1] as of commit cf8b431e8b3b ("soc: Move load
    [1] git://git.ti.com/processor-firmware/ks2-boot-monitor.git
    monitor firmware [1] as of commit cf8b431e8b3b ("soc: Move load
    [1] git://git.ti.com/processor-firmware/ks2-boot-monitor.git
    monitor firmware [1] as of commit cf8b431e8b3b ("soc: Move load
    [1] git://git.ti.com/processor-firmware/ks2-boot-monitor.git
    drm/radeon: update smc firmware selection for SI
    Use the appropriate smc firmware for each chip revision.
    drm/amdgpu: update si kicker smc firmware
    Use the appropriate smc firmware for each chip revision.
    drm/amdgpu: remove unnecessary smc sk firmware for polaris12
    Chris Arges works around a firmware issue, which can cause probe of i210
    firmware, sometimes causing adverse effects in the firmware.  The right
    Saved firmware ctx was not never released, so release Firmware
    Use the optimized dsp_register_poll API to poll the DSP firmware
    ASoC: wm_adsp: Add mechanism to preload firmware on a core
    sometimes it is a reasonable trade off to download the firmware ahead of
    download the firmware currently selected in the "DSPx Firmware" control.
    Whilst the core is preloaded the current firmware can not be changed and
    firmware loading to parse the resource table before calling
    asynchronous firmware loading completion.  So, drop this.
    drm/sti: load XP70 firmware only once
    firmware again, but only register VTG again
    Several people have reported firmware leaving the I210/I211 PHY's page
    I210 devices using this firmware:
    igb: Workaround for igb i210 firmware issue
    Sometimes firmware may not properly initialize I347AT4_PAGE_SELECT causing
    Revert to the firmware-supplied core_id numbering and do not make
    The Merrifield firmware provides 3 descriptions of buttons connected to GPIO.
    scsi: bfa: Increase requested firmware version to 3.2.5.1
    bna & bfa firmware version 3.2.5.1 was submitted to linux-firmware on
    Feb 17 19:10:20 2015 -0500 in 0ab54ff1dc ("linux-firmware: Add QLogic BR
    bna was updated to use the newer firmware on Feb 19 16:02:32 2015 -0500 in
    [  249.610738] bfa 0000:04:00.0: Running firmware version is incompatible with the driver version
    [  249.841446] bfa 0000:04:00.1: Running firmware version is incompatible with the driver version
    Increase bfa's requested firmware version. Also increase the driver
    scsi: fnic: Avoid sending reset to firmware when another reset is in progress
      firmware: arm_scpi: fix reading sensor values on pre-1.0 SCPI firmwares
    checking that the firmware has initialized the fuel-gauge and
    back the charging current and charging voltage that the firmware has set
    If we failed to set up RSS on EF10 (e.g. because firmware declared
    firmwares so that upper 32-bit (garbage) value is discarded properly.
      firmware: arm_scpi: fix reading sensor values on pre-1.0 SCPI firmwares
    downloaded the firmware. The device will still disconnect and
    firmware: https://github.com/beagleboard/beaglebone-black-wireless/tree/master/firmware
    arm64: dts: NS2: reserve memory for Nitro firmware
    Nitro firmware is loaded into memory by the bootloader at a specific
    Tony updates the driver to report the driver version to the firmware using
    of the semaphore is slow.  Cleaned up firmware version method and
    functions which are no longer used.  Added new interfaces for firmware
    ixgbe: Implement support for firmware-controlled PHYs
    Implement support for devices that have firmware-controlled PHYs.
    ixgbe: Implement firmware interface to access some PHYs
    Implement new interface for firmware commands to access some PHYs.
    ixgbe: Remove unused firmware version functions and method
    The firmware version method and functions are not used anywhere, so
    response can be corrupted by other firmware accesses. The second
    ixgbe_hic_unlocked, to issue firmware commands that will assume
    ixgbe: Report driver version to firmware for x550 devices
    Some x550 devices require the driver version reported to its firmware; this
    patch sends the driver version string to the firmware through the host
    * fix issues for new QCA9377 firmware version
    * support dev_coredump() for firmware crash dump
    firmware: https://github.com/beagleboard/beaglebone-black-wireless/tree/master/firmware
    in firmware/hardware - let the RSS indirections use queue handles
    * fix issues for new QCA9377 firmware version
    * support dev_coredump() for firmware crash dump
    firmware: arm_scpi: fix reading sensor values on pre-1.0 SCPI firmwares
    The pre-1.0 SCPI firmwares are using single __le32 as sensor value,
    SCPI firmware gives garbage in the "hi_val" field.
    the failure for the firmware to run is logged, it is not necessary to
    log that the firmware has been started. In addition, extraneous braces are
    channel id"), it is no more possible for a firmware to register twice
    So the vdev2@txpower:21 will be set to firmware when vdev2 is created.
    Whenever firmware crashes, and both CONFIG_ATH10K_DEBUGFS and
    As until now we have provided the firmware crash dump file via fw_crash_dump
    might be systems which want to get the firmware crash dump but not enable
    Since the txpower configuration is firmware per physical interface.
    rings from the firmware is implemented for newer chips and firmware.  Plus
    allocating completion rings in any order.  The firmware does not know
    extra step to tell firmware the completion ring number for receiving
    NPAR functions, firmware needs better control over tx ring allocations.
    The driver will use the new scheme when the firmware interface spec is
    The former is the user setting while the latter is the firmware setting.
    be updated with the latest from the firmware yet.
    The cts protection vdev parameter, in new QCA9377 TF2.0 firmware,
    bss peer is being allocated by the firmware after vdev_start/_up commands.
    to prevent firmware asserts, like below:
    This is required for TF2.0 firmware. Previous FW revisions were
    QCA9377 firmware shall alloc 4 IRAM banks
    During the initial setup, the ets command is sent to firmware
    command error. Add the ets capiblity check before sending firmware
    Fixes: e207b7e99176 ("net/mlx5e: ConnectX-4 firmware support for DCBX")
    PCIe counters were introduced in a new firmware version, as a result users
    with old firmware encountered a syndrome every 200ms due to update stats
    by the firmware that serves RoCE traffic set on the PF NIC vport which
    mode, will signal to the firmware to remove their RoCE rule, and then the
    ALSA: usb-audio: Support both DSD LE/BE Amanero firmware versions
    (DSD_U32_BE) version of the Amanero firmware.
     # echo mask > /sys/firmware/acpi/interrupts/gpe00
     # echo unmask > /sys/firmware/acpi/interrupts/gpe00
      Input: i8042 - Trust firmware a bit more when probing on X86
    [  482.313144] ath10k_pci 0000:02:00.0: Direct firmware load for ath10k/pre-cal-pci-0000:02:00.0.bin failed with error -2
    [  482.313274] ath10k_pci 0000:02:00.0: Direct firmware load for ath10k/cal-pci-0000:02:00.0.bin failed with error -2
    [  482.313974] ath10k_pci 0000:02:00.0: firmware ver 10.2.4.70.59-2 api 5 features no-p2p,raw-mode,mfp,allows-mesh-bcast crc32 4159f498
    [  482.369858] ath10k_pci 0000:02:00.0: Direct firmware load for ath10k/QCA988X/hw2.0/board-2.bin failed with error -2
    The scheduled scan ssid configuration in firmware has a flags field that
    ASoC: wm_adsp: Don't overrun firmware file buffer when reading region data
    Protect against corrupt firmware files by ensuring that the length we
    get for the data in a region actually lies within the available firmware
      firmware: dmi_scan: Always show system identification string
    Input: i8042 - Trust firmware a bit more when probing on X86
    This happens because we historically do not trust firmware on X86 and,
    firmware (such as ACPI) reports that i8042 is absent from the device,
    (absence of both keyboard and mouse PNP devices) agrees with firmware data.
    firmware: dmi_scan: Always show system identification string
      x86/tsc: Annotate printouts as firmware bug
    x86/tsc: Annotate printouts as firmware bug
       SMBus controllers, firmware update support, sensor tuning, and PS/2
      Input: synaptics-rmi4 - remove mutex calls while updating the firmware
    handled exclusively by ACPI and/or firmware, so there is no clock driver.
    controllers and flashing firmware.
       - Support for the prerelease "SCPI" firmware protocol that ended up
         running on and cannot find out from DT, firmware or hardware.
         "SCPI" mentioned above) firmware interface.
       - Support for the Tegra firmware interfaces with their power
      firmware: qcom: scm: Return PTR_ERR when devm_clk_get fails
      firmware: qcom: scm: Remove core, iface and bus clocks dependency
      dt-bindings: firmware: scm: Add MSM8996 DT bindings
      dt-bindings: firmware: Allow child nodes inside the Tegra BPMP
      dt-bindings: Add power domains to Tegra BPMP firmware
      firmware: tegra: Add BPMP support
      firmware: tegra: Add IVC library
      dt-bindings: firmware: Add bindings for Tegra BPMP
      firmware: arm_scpi: add support for pre-v1.0 SCPI compatible
    "SM951 NVMe SAMSUNG 256GB" with firmware "BXW75D0Q".
      cleanups to the mess that is the firmware class code, and we have a
      firmware: Correct handling of fw_state_wait() return value
      firmware: remove warning at documentation generation time
      firmware: move fw_state_is_done() into UHM section
      firmware: do not use fw_lock for fw_state protection
      firmware: drop bit ops in favor of simple state machine
      firmware: refactor loading status
      firmware: fix usermode helper fallback loading
      driver core: firmware_class: convert to use class_groups
    According to the firmware spec, FLOW_STEERING_IB_UC_QP_RANGE command is
       specifying firmware to use by the instance. This allows user space to
       load and boot use case specific firmware on remote processors.
       - Increase MMC_IOC_MAX_BYTES to support bigger firmware binaries
       As a consequence those machines trigger the currently active firmware
    Fixes: d49597fd3bc7 ("x86/cpu: Deal with broken firmware (VMWare/XEN)")
    machines with PAT firmware.
    Port firmware update code from Samsung Galaxy S7 driver into
      PCI: Support INTx masking on ConnectX-4 with firmware x.14.1100+
    in the dmesg log because there's no clue about what the firmware bug is.
    8051 firmware does not know the details, so the driver
    needs to tell the firmware through a special setting.
    Some firmware offerings provide the MSS in the RX buffer.
    In the event that rproc_boot() is called before the firmware loaded
    obstructing the request_firmware_nowait() callback from completing the
    by the firmware and we need to detect that case late, after ACPI has
    firmware. Unfortunately there is no way to query this at early boot.
      drm/amdgpu/si: load the proper firmware on 0x87 oland boards
      drm/radeon/si: load the proper firmware on 0x87 oland boards
    firmware: Correct handling of fw_state_wait() return value
    When request_firmware() finds an already open firmware object it will
    truncated in _request_firmware_prepare() and interpreted as -EPERM.
    Prior to "firmware: do not use fw_lock for fw_state protection" the code
    _request_firmware_load() as well.
    Fixes: 5b029624948d ("firmware: do not use fw_lock for fw_state protection")
    From firmware version 0.3 onwards we use the TX_ARET mode allowing for automatic
    If the firmware version is to old print a warning and return with invalid value.
    With version 0.3 the atusb firmware offers an interface to read a permanent
    EUI64 address from the devices EEPROM. This patch checks if the firmware is
    ieee802154: atusb: store firmware version after retrieval for later use
    The firmware versions will be used to enable selective features based on the
    available firmware on the device. Make sure we do not need to fetch it for
    ieee802154: atusb: sync header file from firmware for new features
    This file is shared between the atusb firmware and the kernel driver. In this
    update it brings the new interfaces from version 0.3 of the firmware.
    4. The RDMA driver can call firmware APIs using the bnxt_send_fw_msg()
    bnxt_en: Refactor the driver registration function with firmware.
    The driver register function with firmware consists of passing version
    The firmware interface file was initially partially autogenerated, but
    >From now on any changes to the firmware interface will be managed by
    will be added to the firmware.
    Also notice that firmware does not update the per-filter response for
    that the firmware response memory is pre-set with I40E_AQC_MM_ERR_NO_RES.
    One tricky part here is that the firmware support for these
    firmware versions which was reported to not be necessary in production
    Without this patch, the mentioned NICs with current firmware exhibit
    default firmware for this device. Attempting to add a new VLAN filter on
    field of the ARS (Address Range Scrub) Status command, a firmware
    drm/amdgpu/si: load the proper firmware on 0x87 oland boards
    drm/radeon/si: load the proper firmware on 0x87 oland boards
    drm/amd/powerplay: fix firmware loading failure
    For virtualization, firmware loading need the firmware version info,
    and will load the right firmware. So, transfer fw_version to toc.
    required for PCIe systems unless there's a standard firmware interface for
    In the absence of a firmware interface, we use pci_generic_ecam_ops, and on
    don't have a legacy of firmware that has this consumer/producer confusion,
    - return "err" instead of 0 in slic_load_rcvseq_firmware() (reported by Rami Rosen)
    Therefore, in preparation for IORT firmware specific DMA masks set-up,
    a firmware assertion.
    callers of bnx2x_init_firmware() may be misled. This patch fixes the bug,
    v2: Updated to the latest firmware interface spec.
    bnxt_en: Update firmware header file to latest 1.6.0.
    After the boot of the SST FW the firmware version is send back
    Its firmware modules (widgets) may need multiple enum controls based on
    based on firmware version number. Newer hardware use lower firmware
    This change adds hardware type to the check for firmware version
    This patch is needed on HID devices because the firmware reads F03 data
    registers from the driver after the firmware read them will result in
    * show used tx bitrate with 10.4 firmware
    firmware: remove warning at documentation generation time
            ./drivers/base/firmware_class.c:1348: WARNING: Bullet list ends without a blank line; unexpected unindent.
    firmware download and due to that later probe's for warm chip were
    firmware download and due to that later probe's for warm chip were
    * show used tx bitrate with 10.4 firmware
    which is ticks per second. If HZ=100, firmware download often times out
    ath10k: fix soft lockup during firmware crash/hw-restart
    During firmware crash (or) user requested manual restart
    During user requested hardware restart / firmware crash
    firmware postcode event enum that are fixed.
    previously. This patch updates the s-Par firmware postcode values to
    Input: synaptics-rmi4 - remove mutex calls while updating the firmware
    firmware is happening. We can simply disable the irqs when we don't
      firmware: qcom: scm: Return PTR_ERR when devm_clk_get fails
      firmware: qcom: scm: Remove core, iface and bus clocks dependency
      dt-bindings: firmware: scm: Add MSM8996 DT bindings
    drm/i915: Remove dummy i915_kick_out_firmware_fb
    holding the first aggregation's buffer after it begins [as firmware might
    - Martin adds the DT binding and nodes for the Raspberry Pi firmware thermal block
    - Martin adds the DT binding and nodes for the Raspberry Pi firmware thermal block
      firmware: ti_sci: Add support for reboot core service
      firmware: ti_sci: Add support for Clock control
      firmware: ti_sci: Add support for Device control
      firmware: Add basic support for TI System Control Interface (TI-SCI) protocol
      firmware: arm_scpi: add support for pre-v1.0 SCPI compatible
      firmware: arm_scpi: allow firmware with get_capabilities not implemented
      firmware: arm_scpi: add alternative legacy structures, functions and macros
      firmware: arm_scpi: increase MAX_DVFS_OPPS to 16 entries
      firmware: arm_scpi: add command indirection to support legacy commands
    firmware.
    firmware to define various things, such as what processors we support
    that the clocks are managed by firmware.
    firmware: move fw_state_is_done() into UHM section
    firmware: do not use fw_lock for fw_state protection
    fw_lock is to use to protect 'corner cases' inside firmware_class. It
    firmware: drop bit ops in favor of simple state machine
    We track the state of the firmware loading with bit ops.  Since the
    firmware: refactor loading status
    The firmware loader tracks the current state of the loading process
    firmware_buf. Instead of open code tracking the state, introduce data
    firmware: fix usermode helper fallback loading
    When you use the firmware usermode helper fallback with a timeout value set to a
    regression was introduced through commit 68ff2a00dbf5 ("firmware_loader:
    The firmware_class drivers relies on the firmware usermode helper
    fallback as a mechanism to look for firmware if the direct filesystem
      the firmware is not found through an initial direct filesystem lookup:
      o request_firmware()
      o request_firmware_into_buf()
      o request_firmware_nowait()
      Then only callers using request_firmware_nowait() with the second
      argument set to false, this explicitly is requesting the UMH firmware
      explicitly requesting the UMH firmware fallback mechanism:
      - drivers/firmware/dell_rbu.c
    respective needed firmwares.
    commit 68ff2a00dbf5 ("firmware_loader: handle timeout via
    echo 2147483647 > /sys/class/firmware/timeout
    echo 2147483648 > /sys/class/firmware/timeout
    cat /sys/class/firmware/timeout
    echo 0> /sys/class/firmware/timeout
    cat /sys/class/firmware/timeout
    Lastly worth noting systemd had ripped out the UMH firmware fallback
    ("udev: remove userspace firmware loading support"), so as of systemd v217.
    Fixes: 68ff2a00dbf5 "firmware_loader: handle timeout via wait_for_completion_interruptible_timeout()"
    driver core: firmware_class: convert to use class_groups
    Convert the firmware core to use class_groups instead of class_attrs as
    firmwares than DT, this patch splits the ARM SMMU init functions into
    features. In order to allow probing the ARM SMMUv3 with other firmwares
    device look-up and iommu_ops retrieval firmware agnostic.
    device look-up and iommu_ops retrieval firmware agnostic.
    with the device and the struct it points at is firmware specific;
    with a struct device_node, that provides its DT firmware representation.
    The struct acpi_device, that represents firmware objects in the
    of static ACPI table entries to the respective firmware components
    and free the corresponding firmware nodes so that kernel subsystems
    firmware. Split it and have caller sort out what is needed.
    For scheduled scan we initiate an escan in firmware to obtain more
    info missing from the scheduled scan notification we get from firmware.
    into account when configuring in firmware. The hidden bit was set for
    the same firmware file as for 43340 chip.
    management when their firmware hasn't been loaded, particularly after
    request is issued to the firmware, before the response comes, user
      const struct firmware *fw;
    The GPMU firmware needs to be loaded into the GPMU at init time via a
    DCBX CEE API and DCBX firmware/host modes support.
          firmware rather than having a software shadow to it. The existing IEEE
          firmware commands to manipulate mlx5 DCBX mode.
        - 5th patch adds the driver support for the new DCBX firmware.  This ensures
          the backward compatibility versus the old and new firmware. With the new DCBX
          firmware, qos settings can be controlled by either firmware or software
            ("net/mlx5e: Read ETS settings directly from firmware")
            ("net/mlx5e: ConnectX-4 firmware support for DCBX")
            ("net/mlx5e: ConnectX-4 firmware support for DCBX")
    Use setdcbx interface to set the DCBX mode to firmware or os.
    is set to firmware.
    net/mlx5e: ConnectX-4 firmware support for DCBX
    DBCX by default is controlled by firmware where dcbx capability bit
    is set. In this mode, firmware is responsible for reading/sending the
    net/mlx5: Add DCBX firmware commands support
    net/mlx5e: Read ETS settings directly from firmware
    With the new DCBX firmware, the ETS settings can be changed
    by firmware when the DCBX is in firmware controlled mode. Therefore,
    1. Read the ETS settings directly from firmware.
    a temporary structure and are applied to the card's firmware when
    Make sure firmware supports qos before exposing the DCB API.
    by the pad firmware.
    The event log is an optional firmware feature, if the firmware
    config support by replying on what firmware configures the
    On arm and arm64, PSCI is one of the possible firmware interfaces
     "Fix for the firmware load logic of the tuner-xc2028 driver"
    [    0.000000] Determining PDC firmware type: System Map.
    mwifiex: Disable adhoc feature based on firmware capability
    We will read fw_cap_info filled by firmware to check whether to
    The UEFI stub executes in the context of the firmware, which identity
    control of the firmware and their powerdomains needs to be
    'ON' only when used by the firmware. So putting it into
    hw controlled mode lets this to happen, otherwise the firmware
            if (!firmware_name[0] && p->fname &&
                    free_firmware(priv);
    - Keep the copy of firmware file name in only priv->fname,
    - The allocation is done only when the firmware gets loaded;
    - The kfree() is called in free_firmware() commonly
    In order to make the transition to XIVE easier, OPAL firmware will
    firmware will configure appropriate rxfilters by default for mesh
    based on firmware IE
    PCI: Support INTx masking on ConnectX-4 with firmware x.14.1100+
    - ConnectX-4 and ConnectX4-LX firmware version is checked. If INTx
    This is considered a firmware task since it includes memory training,
    firmware: qcom: scm: Return PTR_ERR when devm_clk_get fails
    firmware: qcom: scm: Remove core, iface and bus clocks dependency
    dt-bindings: firmware: scm: Add MSM8996 DT bindings
    be synced with in firmware side.
    implementation for other firmware branches.
    null dereference crash with WMI-TLV based firmware
    The new WMI command is available in firmware
    firmware or vice versa shouldn't  be a problem since
    Indicate hardware (or firmware) supports that CQM packet-loss report
    firmware tracks them by missing ppdus (+ BAR tries). While firmware is
    Add support for updating firmware, triggered by a sysfs attribute.
    While issuing any ATA passthrough command to firmware the driver will
    We were adding firmware controls as card controls (using
    [media] media: ti-vpe: vpdma: Fix race condition for firmware loading
    when the VPDMA firmware is loaded.
        dev->vpdma = vpdma_create(pdev, firmware_load_callback);
    post. This informs the VPDMA firmware to load the list from the address
    ASoC: wm_adsp: Only write shutdown controls for active firmwares
    The control list may contain shutdown controls for firmwares that are
    Fixes: commit f4f0c4c60c39 ("ASoC: wm_adsp: Signal firmware shutdown
    drm/i915: Add more keywords to firmware loading message
    To find out what firmware we actually loaded (from dmesg) the explicit
    'dmc' and 'firmware' are missing from the info printout. Add them.
    The P3310 processor module comes ships with a firmware that implements
    Scenario: Driver initialization is failed due to incorrect firmware or
    Power save handshake with firmware might be blocked by on-going
    We may get SLEEP event from firmware even if TXDone interrupt
    provided by the BPMP firmware (via the MRQ_RESET request).
    Merge tag 'tegra-for-4.10-firmware' of git://git.kernel.org/pub/scm/linux/kernel/git/tegra/linux into next/drivers
    firmware: Add Tegra IVC and BPMP support
    * tag 'tegra-for-4.10-firmware' of git://git.kernel.org/pub/scm/linux/kernel/git/tegra/linux:
      dt-bindings: firmware: Allow child nodes inside the Tegra BPMP
      dt-bindings: Add power domains to Tegra BPMP firmware
      firmware: tegra: Add BPMP support
      firmware: tegra: Add IVC library
      dt-bindings: firmware: Add bindings for Tegra BPMP
    net/mlx5: Set driver version into firmware
    to firmware after the init HCA command, for display purposes.
    version command in mlx5_ifc firmware header.  The only purpose
    The firmware on 8000 series SFC NICs supports a new TSO API ("FATSOv2"), and
    As Falcon-architecture NICs don't support any firmware-assisted TSO,
     of TCP segmentation to the firmware, such that we now just pass a single
    This driver uses the services provided by the BPMP firmware driver to
    Merge branch 'for-4.10/firmware' into for-4.10/reset
    dt-bindings: firmware: Allow child nodes inside the Tegra BPMP
    dt-bindings: Add power domains to Tegra BPMP firmware
    firmware: tegra: Add BPMP support
    based rather than method-based. The BPMP firmware driver provides the
    be run when a corresponding event is received from the firmware.
    firmware: tegra: Add IVC library
    payload. Clients, such as the driver for the BPMP firmware, can use the
    dt-bindings: firmware: Add bindings for Tegra BPMP
    firmware, which implements the interprocessor communication (IPC)
    Merge branch 'for-4.10/mailbox' into for-4.10/firmware
    [media] RedRat3: Delete an unnecessary variable initialisation in redrat3_get_firmware_rev()
    to set the hardware / firmware parameters like dma.
    loaded firmware. Initial firmware returns 'FW Audiophile Bootloader',
    while functional firmware returns 'FW Audiophile'.
    With initial firmware:
    With functional firmware:
      firmware: qcom: scm: Use devm_reset_controller_register()
    by firmware on the rk3399, avoiding infite loops when powering on/off a
      firmware and things break if the OS puts the port into D3 behind the
      firmware's back:  E.g. Thunderbolt hotplug ports on non-Macs are handled
      by Intel's firmware in System Management Mode and the firmware is known
    firmware (which is the case for Thunderbolt on non-Macs), things would
    break if the OS put the ports into D3hot behind the firmware's back.
    firmware: arm_scpi: add support for pre-v1.0 SCPI compatible
      and vap update in firmware, hence new filed vap status is added.
      Otherwise it is considered as wrong frame for the same interface in firmware.
    When in AP mode, scans can be done without changing firmware to
    the multi-role firmware. Allow the interface to scan if forced
    firmware through the ACX_BA_SESSION_RX_SETUP command.
    whose location is retrieved from the firmware during probe time.
    New firmware spec. update, autoneg update, and UDP RSS support.
    bnxt_en: Update firmware interface spec to 1.5.4.
    Remove from the driver the limitation imposed by firmware check
    In order to avoid failures on old firmware, we only ask for change
    Validate that the requested size of RQT is supported by firmware.
    The Lenovo Yoga 300 laptop's firmware advertises that it provides the _BIX
    There are some differences between the schematics and the official firmware
    [1] - https://github.com/raspberrypi/firmware/blob/master/extra/dt-blob.dts
    firmware and results in freeze or crash. This patch changes the driver
    staging: vc04_services: clarify firmware dependency
    The raspberrypi-firmware driver may be built as a loadable module,
    vchiq_connected.c:(.text.vchiq_probe+0x2c): undefined reference to `rpi_firmware_get'
    vchiq_connected.c:(.text.vchiq_platform_init+0x1f0): undefined reference to `rpi_firmware_property'
    This extends the dependency list to ensure the firmware is either
    different Qualcomm platforms for loading firmware into and controlling
    This document defines the binding for a component that loads firmware
    This allows setting the MAC address and specifying that the firmware
    message or firmware filename.
    Some devices in STA mode will get firmware assert when trying to
      drivers/firmware/efi/apple-properties.c:149:9: error: implicit declaration of function ???efi_get_device_by_path??? [-Werror=implicit-function-declaration]
    ALSA: emu10k1: Simplify firmware loader code
    The EMU1010 support in emu10k1 driver has two request_firmware()
    The emu1010_firmware_thread() checks the previous dock status, but a
    endpoint device is already loaded with firmware and has started running
    firmware requesting code was moved from open stage to probe stage.
    However bnx2 chip resetting involves firmware requesting issue, that
    and load firmware because firmware is contained in initramfs and
       - fix a virtualization firmware bug by adding a check+quirk
      x86/cpu: Deal with broken firmware (VMWare/XEN)
    compatible with r8a7795 because using firmware version differs.
    Since the "V2" firmware can be used on both r8a7795 (es1.x) and r8a7796,
    usb: host: xhci: rcar: add a new firmware version for r8a7796
    This patch adds a new firmware version "V3" for r8a7796. This patch
    cable is attached, the firmware returns LINK_SIGNAL instead of
    Background information: The EFI firmware volume contains ROM files for
    an EFI firmware update on their website. Drivers do not access those
    https://reverse.put.as/2016/06/25/apple-efi-firmware-passwords-and-the-scbo-myth/
    automatically to the bitness of the EFI firmware:  efi_call_early().
    firmware: qcom: scm: Use devm_reset_controller_register()
    One some systems, the firmware does not allow certain PCI devices to be put
    These controls allow user-side to send events to the firmware and
    wait for the firmware to acknowledge it.
    host->firmware, and therefore they are write-only as seen from user-
    ASoC: wm_adsp: Add support for SYSTEM firmware controls
    Add support for firmware controls marked SYSTEM. These are
    internal to the driver-firmware interface and do not have
    ASoC: wm_adsp: Signal firmware shutdown through event control
    If the firmware has any system event signalling controls, signal
    them during DSP PRE_PMD to tell the firmware it is about to be stopped.
    Tonga SMC should not be started and SMU firmware should not be loaded
    starting SMC within SRIOV in FIJI, so the SMU firmware loading will be
    ARM64 enables both CONFIG_OF and CONFIG_ACPI and the firmware can pass
    hierarchy can be detected from the firmware(OF/DT/ACPI)
    Our per-device data consists of the M4U instance and firmware-provided
    Our per-device data consists of the M4U instance and firmware-provided
    - There is existing firmware or boot loaders with existing DT binaries
    x86/cpu: Deal with broken firmware (VMWare/XEN)
    physical package id does not match the firmware id. This causes system
    [Firmware Bug]: CPU1: Using firmware package id 1 instead of 2
      ASoC: Intel: haswell depends on sst-firmware
    Driver uses a union for copying data to & from management firmware
    2edbff8dcb5d ("qed: Learn resources from management firmware") is casting
    PF messages to the MFW [as management firmware enforces permissions so
    Fixes: 2edbff8dcb5d ("qed: Learn resources from management firmware")
    has downloaded to firmware, driver doesn't process it's response causing
    Following is mwifiex driver-firmware host sleep handshake.
    3) Response from firmware for HS_CFG
    5) SLEEP from firmware
    6) SLEEP confirm downloaded to firmware.
    7) SLEEP confirm response from firmware
    10) Read sleep cookie in loop and wait until it indicates firmware is
    is the last interrupt from firmware. No need to recheck for
    We have encountered some RMI4 firmwares where there are blank pages in
    scsi: megaraid_sas: Send SYNCHRONIZE_CACHE for VD to firmware
    The controller firmware has been responsible for taking care of flushing
    Older versions of MegaRaid firmware (Gen2 and Gen2.5) set the WCE bit
    for Virtual Disks but the firmware does not report correct completion
    controller. We use the canHandleSyncCache firmware flag in the scratch
            Driver sends SYNCHRONIZE_CACHE command to the firmware
            IF firmware supports new API bit called canHandleSyncCache
                    Driver sends SYNCHRONIZE_CACHE command to the firmware
                    Driver does not send SYNCHRONIZE_CACHE command to the firmware
    shutdown/detach path irrespective of firmware state.  Driver will now
    check whether firmware is in operational state or not before firing
    DCMDs. If firmware is in unrecoverable state or does not become
    This patch fixes the issue of wrong PhysArm was sent to firmware for R1
    scsi: megaraid_sas: For SRIOV enabled firmware, ensure VF driver waits for 30secs before reset
    For SRIOV enabled firmware, if there is a OCR(online controller reset)
    drivers/scsi/lpfc/lpfc_init.c: In function 'lpfc_write_firmware':
    Commit cc7cc02bada8 ("PCI: Query platform firmware for device power
    Fixes: cc7cc02bada8 ("PCI: Query platform firmware for device power state")
    firmware.  Changing the sizes of the data in this area would
    require a firmware change which is distributed independently
    VCHI messages between the CPU and firmware use 32-bit
      drm/nouveau/gr: fallback to legacy paths during firmware lookup
    drm/nouveau/gr: fallback to legacy paths during firmware lookup
    Look for firmware files using the legacy ("nouveau/nvxx_fucxxxx") path
    There are only 4 firmware files we may want to look up that way, so
    hardcode them into the lookup function. All new firmware files should
    Fixes: 8539b37acef7 ("drm/nouveau/gr: use NVIDIA-provided external firmwares")
    drivers/gpu/drm/nouveau/nvkm/core/firmware.c:34:1: warning: no previous prototype for 'nvkm_firmware_get' [-Wmissing-prototypes]
    drivers/gpu/drm/nouveau/nvkm/core/firmware.c:58:1: warning: no previous prototype for 'nvkm_firmware_put' [-Wmissing-prototypes]
    drivers/gpu/drm/nouveau/include/nvkm/core/firmware.h
      drm/amdgpu: add support for new smc firmware on iceland
      drm/amdgpu: add support for new smc firmware on tonga
      scsi: arcmsr: Send SYNCHRONIZE_CACHE command to firmware
    push/pop actions are emulated, we must not program them to the firmware.
    firmware: arm_scpi: allow firmware with get_capabilities not implemented
    firmware: arm_scpi: add alternative legacy structures, functions and macros
    firmware: arm_scpi: increase MAX_DVFS_OPPS to 16 entries
    using AVS firmware with DFS and DVFS support.
    firmware. The driver merely provides a standard CPUfreq interface to
    other kernel components and userland, and instructs the AVS firmware to
    remoteproc: Add a sysfs interface for firmware and state
    This patch adds a sysfs interface to rproc allowing the firmware name
    firmware file allows retrieval of the running firmware name, and a new
    management firmware, instead of equally sharing resources between
    qed: Learn resources from management firmware
    received directly from the management firmware [which has knowledge
    Today, RDMA capabilities are learned from management firmware
    Newer management firmware is capable of providing a per-device
    management firmware is too old to retain current functionality.
    qed*: Management firmware - notifications and defaults
    Management firmware is interested in various tidbits about
    on a highest possible common version of the driver and the firmware.
      - Introduce TSAR manipulation firmware commands
      - Use fte status to decide on firmware command
    the Subnet Management Agent (SMA) is managed by the SwitchX-2 firmware
    initialization only. The firmware running in the Silicon implements
    We recently discovered a bug in the firmware in which a field's length in
    one of the registers was incorrectly set. This caused the firmware to
    passed to the firmware, there are a handful of cases where this isn't
    When updating the action of an existing fte, we must tell the firmware
    net/mlx5: Use fte status to decide on firmware command
    what firmware command to use. If the status isn't FS_FTE_STATUS_EXISTING
    net/mlx5: Introduce TSAR manipulation firmware commands
      net/mlx4: Fix firmware command timeout during interrupt test
    net/mlx4: Fix firmware command timeout during interrupt test
    notification, by changing how often we update link info from firmware.
      drivers: cci: add missing CCI port availability firmware check
          PCI error handlers are not triggered for some internal firmware errors
        - Avoid passing dma address 0 to firmware when mapping system pages
          to the firmware
    net/mlx5: Avoid passing dma address 0 to firmware
    Currently the firmware can't work with a page with dma address 0.
    Passing such an address to the firmware will cause the give_pages
    a default MAC filter added by the firmware when the interface was brought
    drm/amdgpu: add support for new smc firmware on iceland
    Newer iceland parts require new smc firmware.
    drm/amdgpu: add support for new smc firmware on tonga
    Newer tonga parts require new smc firmware.
      drm/amdgpu/vce3: only enable 3 rings on new enough firmware (v2)
      drm/amdgpu: just not load smc firmware if smu is already running
    drm/amdgpu: just not load smc firmware if smu is already running
    When the vmalloc area gets fragmented, and because the firmware
    state, so that driver/firmware uses the updated parameters for
    staging: vchiq_arm: Make DT firmware node mandatory
    So we can make the firmware node mandatory.
    DPAA2 will not support MC firmware versions prior to MC v10.x.
    All MC firmware versions >= 10 will be supported going forward.
    firmware: ti_sci: Add support for reboot core service
    firmware: ti_sci: Add support for Clock control
    firmware: ti_sci: Add support for Device control
    firmware: Add basic support for TI System Control Interface (TI-SCI) protocol
    scsi: arcmsr: Send SYNCHRONIZE_CACHE command to firmware
    firmware. Depending on how drive caches are handled internally by
    controller firmware this could potentially lead to data integrity
    Input: melfas_mip4 - use product id for firmware name
    Use product id for firmware name to request compatible firmware.
    array for loading the firmware.
    On my APL the LSPCON firmware resumes in PCON mode as opposed to the
    the firmware won't recover and will stay in this broken state.
    As a workaround check if the firmware is in PCON state after resume and
    If the firmware was in the LS state, we skip the w/a and continue as
    New firmwares support dynamic queue allocation (DQA), which enables
    feature by default when running firmwares that support it.
    do the right thing here and wait for the firmware response, but
    drm/amdgpu/vce3: only enable 3 rings on new enough firmware (v2)
    Older firmware versions don't support 3 rings.
    case boot firmware hasn't set it up.
    but the GuC firmware is loaded much earlier in the sequence.
    As a result Driver could miss capturing the boot-time logs of GuC firmware
    on the fly enabling/disabling of logging in GuC firmware and controlling
    GuC firmware sends a flush interrupt to Host when the log buffer is half
    log buffer flush Host2GuC action supported by GuC firmware.
    GuC firmware sends an interrupt to flush the log buffer when it becomes
    GuC firmware sends an interrupt to flush the log buffer when it
    becomes half full. GuC firmware also tracks how many times the
    User to capture GuC firmware logs. Availed relay framework to implement
    The snapshot will be taken when GuC firmware sends a log buffer flush
    i915.guc_log_level. User would be given a provision to enable firmware
    init params, at firmware load time, so GuC has to be reset and firmware
    To avoid reset of GuC & reload of firmware, allocation of log buffer will
    due to using the interim "vc4 firmware KMS" mode while vc4 gets its
    manage a CMA area that the firmware gets to make allocations out of.
    I'm not clear on if this is useful (the firmware's need for memory
    It's being merged to support firmware communication on the Raspberry
    only explicitly managed by controller firmware when operating in RAID
    In the case of coda_firmware_request() failure, we should release the
    their boot firmware, rework of_gpiochip_set_names() to use device property
    firmware which is external to the kernel.  Convert the fields
    SwitchX2 firmware does not implement reset done yet. Moreover, when
    busy-polled for ready magic, that slows down firmware and reset takes
    [    3.811431] psmouse serio1: elantech: assuming hardware version 4 (with firmware version 0x361f0e)
    Configure the DMA bindings for the device tree based firmware.
       STUBCPY drivers/firmware/efi/libstub/lib-sort.stub.o
     drivers/firmware/efi/libstub/lib-sort.stub.o: absolute symbol references not allowed in the EFI stub
    the address at which the EFI firmware loads and invokes the stub.
    In DQA mode this causes firmware to assert later on when the actual
    iwlwifi: mvm: tell the firmware about the AID of the peer
    When a peer associates, the firmware will soon want to know
    In DQA, the firmware has all the information it needs to
    iwlwifi: mvm: use firmware station PM notification for AP_LINK_PS
    In order to still manage the powersave of stations, the firmware sends
    and losing the firmware state when the error occurred.
    remoteproc: Keep local copy of firmware name
    Storage of the firmware name was inconsistent, either storing a pointer
    In preparation for allowing the firmware of an already allocated struct
    the firmware name.
    ixgbevf: min_mtu 68, max_mtu dependent on hardware/firmware
    when the firmware was running. This enables us to render localized
    status strings during firmware updates using the data from the ACPI BGRT
      drivers/firmware/efi/test/efi_test.c:269:8-15: WARNING opportunity for memdup_user
    driver. The FDMA is a slim core CPU with a dedicated firmware.
    core once the firmware has been loaded. This has been tested
    drivers: cci: add missing CCI port availability firmware check
    only when booted in secure mode (or when firmware enables
    firmware reports the CCI ports availability through the device
    can be made visible to the kernel, but firmware can nonetheless
    firmware: arm_scpi: add command indirection to support legacy commands
    staging: vc04_services: fix up rpi firmware functions
    The raspberrypi-firmware.h file should provide empty functions if we
    * We couldn't rely on the firmware to set this up because really this
      wasn't the firmware's job--the kernel was the only one that really
    * fix a major regression introduced in 4.9 with firmware loading on
    You can enable and disable firmware debug mode by
    using ethtool -W, and also retrieve firmware
    qed: Fix possible race when reading firmware return code.
      - Misusing their fastpath logic and being blocked by firmware.
    On the first two items, firmware would indicate to driver that
        the malicious VF, as firmware isn't willing to serve such.
    However, in almost every configuration scenario the firmware
    state via kernel firmware interface.
     - support to upload the firmware on the ziirave_wdt
    baseband firmware generation. But USB3 is still an optional feature.
    The cal_data buffer is fixed size because during the first firmware probe we
    Tested with qca988x and firmware 10.2.4.70.56.
    able to update the firmware name based on the exact model of the card.
    update the firmware name.
    Johannes Berg and made the firmware file name pointers be local to
    drivers/gpu/drm/nouveau/nvkm/core/firmware.c:34:1: warning: no previous prototype for 'nvkm_firmware_get' [-Wmissing-prototypes]
    drivers/gpu/drm/nouveau/nvkm/core/firmware.c:58:1: warning: no previous prototype for 'nvkm_firmware_put' [-Wmissing-prototypes]
    drivers/gpu/drm/nouveau/include/nvkm/core/firmware.h,
    This enables memory reclocking on Maxwell. Sadly without a PMU firmware it
    we change acpi_data_get_property_reference() to take firmware node and
     5) Fix firmware download errors in btusb bluetooth driver, from Ethan
      Bluetooth: btusb: Fix atheros firmware download error
    ASoC: Intel: haswell depends on sst-firmware
       - Secure monitor firmware for Amlogic SoCs, and an NVMEM driver for
         the EFUSE based on that firmware interface.
      clocksource, firmware, pinctrl, reset, rtc and pmic drivers"
      firmware: Amlogic: Add secure monitor driver
    Query firmware for the FW_PARAMS_PARAM_DEV_RI_FR_NSMR_TPTE_WR parameter.
       - Query platform firmware for device power state (Lukas Wunner)
      PCI: Query platform firmware for device power state
    Bluetooth: btusb: Fix atheros firmware download error
    be tricky to get to (the firmware is constantly polling the expander
         they can be taken by BIOS/firmware, unrouted in silicon and
    Fixes: d776fc86b82f ("wlcore: sdio: Populate config firmware data")
    with the stock firmware and Qualcomm has so far refused to implement this
    are modified in place and need to be re-written every time the firmware sets
    from the firmware.
    segment where the firmware is located such that it can service
    arch/mips/lantiq/Kconfig:       bool "XRX200 PHY firmware loader"
      device firmware failed to init. Try updating your NVM image.
      MAINTAINERS: extend firmware_class maintainer list
      firmware-gsmi: Delete an unnecessary check before the function call "dma_pool_destroy"
      PCI: Query platform firmware for device power state
    service, which isn't present in the 'cutdown' firmware. The failure
    it as a failed LNI signal from the 8051 firmware.
    * new firmware version support (API 26)
    * Remove support for older firmwares (API older than -17 and -22)
       allows communication with platform and memory device firmware.  We
    of course may require reallocation if firmware has already assigned the
    firmware depends on the current BAR value, we can't change the alignment.
    reset by firmware") added a runtime resume for devices that were runtime
    We've just gained the ability to query the platform firmware for its
    PCI: Query platform firmware for device power state
    In both cases, we can alternatively query the platform firmware for its
    large allocations (e.g. POWER 6 LPAR partition firmware).
    range). It may take up to 5-10 secods for the firmware to recover and
    firmware problem and incorrect key update. Raising a WARNING however
    * Remove support for older firmwares;
    Changes to support new security states of the iLO5 firmware.
    MAINTAINERS: extend firmware_class maintainer list
    When this platform is suspended, firmware powers the entire SoC down,
    POWER7 machines which have firmware that allows them to run HV KVM,
    iwlwifi: mvm: initialise ADD_STA before sending it to the firmware
    The firmware has a new smart linker, and this table can now be
    Some devices need a while to boot their firmware after providing clks /
    our firmware only supports two, ie. Open System and Shared Key. Simplify
    802.11d is not always supported by firmware anymore. Currently the
    firmware interface (DT, ACPI or platform data) the driver can request GPIOs
    wlcore: wl18xx: Use chip specific configuration firmware
    Use the wl18xx specific config firmware we now have available.
    wlcore: Fix config firmware loading issues
    wlcore: ERROR firmware boot failed despite 3 retries
    Note that wl18xx uses a separate config firmware wl18xx-conf.bin
    we can just add it to the config firmware data for wl18xx.
    Let's fix the issue by using the chip specific config firmware
    wlcore: spi: Populate config firmware data
    Configure the config firmware names and make it available
    wlcore: sdio: Populate config firmware data
    Configure the config firmware names and make it available
    the firmware.
    firmware when deleting the filter.  The firmware reports an error back
    Without this patch, deleted filters remain in firmware and function as
    the firmware, and the DSP itself which is a snd_soc_dapm_out_drv and
    firmware download to be overlapped with the rest of the path bring up.
    the preloader widget to trigger firmware download to the core independently
    really the DSP that requires the clock here. As firmware download can be a
    would be desirable to download the firmware in advance of the path being
    To help facilitate this early firmware loading this patch attaches the
    As part of the work to download firmware before the audio path is brought
    up the DSP will be put into a low power state between downloading firmware
    to the core and starting it running. This will mean that the firmware ALSA
    flag is actually set in the firmware download thread after the firmware has
    This patch clearly separates out the concepts of booted (firmware is
    Driver needs to send unique module instance id to firmware while
     "Just a fix up for the firmware handling to the Silead driver (which is
      Input: silead_gsl1680 - use "silead/" prefix for firmware loading
      Input: silead_gsl1680 - document firmware-name, fix implementation
    watchdog: ziirave_wdt: Add support to upload the firmware.
    This patch adds and entry to the sysfs to start firmware upload process
    on the specified device with the requested firmware.
    The uploading of the firmware needs only to happen once per firmware
    upgrade, as the firmware is stored in persistent storage. If the
    firmware upload or the firmware verification fails then we print and
    match a bootloader/firmware config, but might also be used to get a better
    with NPAR enabled, the firmware reports back with invalid argument.
    the maximum reported by firmware. Thus the additional check for
    the firmware-defined polarities rather than hard-coding it into the
    for reply from firmware in order to allow for synchronization if needed.
    * fix to prevent firmware crash when sending off-channel frames
    which in presence of capable firmware can be used to offload
    capable firmware is loaded and use it to load the code JITed
    Some platform firmware may interfere with the RTC alarm over suspend,
    state but also potentially causing problems with firmware that assumes the
    The case we've seen is Intel Rapid Start, which is a firmware-mediated
    firmware regardless of kernel support.
    1. pxm (proximity domain) is provided by ACPI firmware in SRAT, and nodeid <-> pxm
    If platform firmware fails to populate unique / non-zero serial number
    the board's firmware ID.
    receiving the devices firmware ID. The device file registered
    local struct with data to be sent to management firmware is incorrectly
    without RTC_LIB.  Setting the firmware time is not critical to the
    successful completion of the firmware update process.
    bnxt_en: Call firmware to approve the random VF MAC address.
    After generating the random MAC address for VF, call the firmware to
    previous firmware response data has been copied.
    to call bnxt_approve_mac() to get the firmware to approve the random MAC
    verified and installed by the firmware using the newly introduced
    We also introduce use of the new firmware command FW_SET_TIME so that the
    bnxt_en: Update to firmware interface spec 1.5.1.
    rproc_alloc() will make sure that the "firmware" pointer is either a
    driver supplied value or pointing to a generated firmware filename, it
    POD, firmware and serial IDs are read and exported via sysfs.
    2,Don't load smu & mc firmware if using sr-iov bios
    UART (8897 for now). In order to send the final firmware at full speed,
    a helper firmware is firstly sent. Firmware download is driven by the
    controller which sends request firmware packets (including expected
    ID contained in the firmware matches the hardware. As the project IDs
    firmware info") introduced hci_set_hw_info() and hci_set_fw_info().
    firmware before version 2 is used:
    - firmware: add secure monitor driver
      firmware: Amlogic: Add secure monitor driver
    In order to access cached/paged memory, there are a couple of firmware
    and registers indirectly. Since this is done by the firmware on behalf
    retrieve the memory as the firmware sees it (paged out memory will get
    crash or hang the firmware. Writing to arbitrary memory also comes with
    Due to firmware design considerations, move to wide ID for
    the firmware will load again, when reloading the driver module.
    * new firmware version support
    * fix to prevent firmware crash when sending off-channel frames
    * add nl80211 testmode support for 10.4 firmware
    * extract firmware capabilities from the firmware file
    * enable firmware crash dumps on the AR6004
    been created under /sys/firmware/acpi/tables.
    will be created under /sys/firmware/acpi/tables/dynamic. Then running
     Could not read table header: /sysfs/firmware/acpi/tables/dynamic/OEM12
    legacy DT bindings, the driver simply gets to act as its own 'firmware'.
    Introduce a common structure to hold the per-device firmware data that
    much of that data from common firmware code, and consolidate a lot of
    If the firmware ever decides to send any new/more notifications
    The driver now support version 26 of the firmware APIs.
    - firmware: add secure monitor driver
    since it can cause races with firmware, which is also accessing
    the AUX queue or on the offchannel queue, otherwise the firmware will
    algorithm, offloaded to firmware for triggering station kickout. In case
    This flag will enable the driver to completely rely on firmware events
    Whilst we're some of the way towards a universal firmware property
      firmware: qcom_scm: make it explicitly non-modular
      firmware: Amlogic: Add secure monitor driver
    Enabling Linux AER support when the firmware doesn't want us to is a recipe
    for problems, e.g., the firmware might be handling AER itself.
    mwifiex: firmware name correction for usb8997 chipset
    Similar to pcie8997 chipset, first firmware submitted for usb8997
    rtl8xxxu: fix spelling mistake "firmare" -> "firmware"
    * add nl80211 testmode support for 10.4 firmware
    * extract firmware capabilities from the firmware file
    * enable firmware crash dumps on the AR6004
    added firmware reboot-flag support, one new board the Tronsmart Orion
    recently added firmware reboot-flag support and some housekeeping cleanups.
    on firmware. So in this patch move the firmware requesting code to earlier
    from firmware. As part of this process the kernel ELF ABI version is
    Therefore, store a reference to the firmware node handle in the PM
    firmware values being set correctly.  Hence, other approaches will
    resume on time due to firmware issues, and got a kernel
    address from MADT table and pass mandatory info to firmware-agnostic
    firmware agnostic handle which can be unpacked to either DT or ACPI node.
      nfp: drop support for old firmware ABIs
    including the case if a board has no DTB firmware.
    If the firmware request failed we were just returning but we missed
    Input: silead_gsl1680 - use "silead/" prefix for firmware loading
    The silead touch-controller ICs use a different firmware per digitizer /
    This commit prefixes the default firmware names with "silead/" just like
    we are already doing for devicetree specified firmware names.
    Input: silead_gsl1680 - document firmware-name, fix implementation
    The driver has supported touchscreen-fw-name to specify the firmware to
    "firmware-name" for this, which should be used.
    adds documentation of "firmware-name" to the dt-binding documentation
    firmware name from dt before calling request_firmware. That the
    firmware files are stored under /lib/firmware/silead under Linux
    ACPI firmware describes PCI legacy IRQs through entries
    runtime interfaces readiness of the firmware.
    firmware.
    runtime service interfaces provided by the firmware.
    firmware-gsmi: Delete an unnecessary check before the function call "dma_pool_destroy"
    the firmware. There is no need to use spinlocks here, as long as we ensure
    install memory maps from firmware data and for the virtual memory
    out into the common code under drivers/firmware/efi/.
    ath6kl: enable firmware crash dumps on the AR6004
    The firmware crash dumps on the 6004 are the same as the 6003. Remove the
    magic value and chip version registers to download appropriate firmware
    firmware is downloaded and software is re-initialised in
    This feature can be used as a recovery mechanism when firmware gets
    download necessary commands to firmware during manufacturing mode tests.
    nfp: drop support for old firmware ABIs
    with newer firmware.  New firmware will advertise the same capability
    specific speed when autoneg is off, while newer firmware will allow
    read the value, where it is preset by firmware, and save it to
    If the firmware had set up a clock to source from PLLC, go along with
    to PLLC because the firmware will force PLLC (and thus the AXI bus
    pllc_per, because the firmware had set it up to use that.
    there is a little loop running in the firmware that periodically turns
    is controlled from the arm-trusted-firmware and gets accessed through
    firmware calls from the kernel. This is the variant we currently
    going into suspend). For adapters with firmware version 2 or greater, the
    vring resource in firmware resource table owns only device address,
    firmware to the host bridge resource windows even if the
    firmware when the pci_remap_iospace() function call fails, fixing the
    destroying the PCI host bridge PCI IO resources retrieved through firmware
    destroying the PCI host bridge PCI IO resources retrieved through firmware
    destroying the PCI host bridge PCI IO resources retrieved through firmware
    destroying the PCI host bridge PCI IO resources retrieved through firmware
    destroying the PCI host bridge PCI IO resources retrieved through firmware
    firmware interface is necessary.
    the firmware to be issued on CPU 0 only. As Dom0 might have to use
    [  139.171589] Modules linked in: gb_vibrator(O) gb_usb(O) gb_uart(O) gb_spi(O) gb_sdio(O) gb_raw(O) gb_pwm(O) gb_power_supply(O) gb_loopback(O) gb_log(O) gb_light(O) gb_i2c(O) gb_hid(O) gb_gpio(O) gb_gbphy(O) gb_firmware(O) gb_spilib(O) gb_es2(O) gb_camera(O) gb_bootrom(O) gb_audio_module(O) gb_audio_manager(O) gb_audio_codec(O) gb_audio_gb(O) gb_audio_apbridgea(O) gb_arche(O) greybus(O)
    that will be provided to the VF by firmware, in case user doesn't
      mei: me: disable driver on SPT SPS firmware
    variables values when waiting for firmware ready event.
    zd1211rw: fix spelling mistake "firmeware" -> "firmware"
    received from firmware and enable them during wiphy registration.
    It's been observed that firmware sends RADAR detected event without
    region code is an EEPROM setting received from firmware. Let's display
    The driver sends and recives information to and from the firmware.
    Correct endianness should be ensured as firmware follows little
    Older firmware with HTT delivers incorrect tx status for null func
    frames to driver, but this fixed in 10.2 and 10.4 firmware versions.
    for 10.4. Fix this is by introducing a firmware feature flag for 10.4
    so queues don't get filled in and don't keep firmware/hardware busy
    This matches a corresponding firmware change to declare a single
    the driver no longer waits for the firmware to consume
    firmware: Amlogic: Add secure monitor driver
    * fix large amsdu packets causing firmware hang
    in the arm-trusted-firmware.
    SIP interface used to talk to ARM trusted firmware.
    into the upstream arm-trusted-firmware codebase.
    [0] https://github.com/ARM-software/arm-trusted-firmware/pull/684
    Management firmware requires the selection-field (SF) to be set for
    liquidio: CN23XX firmware download
    Add firmware download support for cn23xx device.
    This patch contains changes for firmware version management.
    drm/amdgpu/si: Add updated smc firmware for SI kickers
    v4: fix firmware paths
        add SI smc firmware versions for sysfs dump
    into the upstream arm-trusted-firmware codebase.
    [0] https://github.com/ARM-software/arm-trusted-firmware/pull/684
    v8: add gfx v6 firmware versions for sysfs dump
    v7: add gmc v6 firmware versions for sysfs dump
    wil6210: extract firmware version from file header
    wil6210: extract firmware capabilities from FW file
    properly by firmware during boot sequences. The
       firmware bootup sequences
    quickly reset again (i.e. during firmware probing)
    incorrect firmware state on boot (internal
    This could be fixed in firmware as well but having
    when thinking of users of older firmware such as
    ath10k: add testmode support for 10.4 firmware
    ath10k: handle testmode events for 10.2 and 10.4 based firmware
    Currently testmode events for 10.x firmware are processed from
    events in 10.2 and 10.4 based firmware.
    ath10k: move firmware_swap_code_seg_info to ath10k_fw_file
    Preparation to make use of firmware_swap_code_seg_info for UTF binary.
    3. The lid close event is always reliable, used by the platform firmware to
    which gets loaded as firmware to pass this info to the firmware.
    drm/amd/powerplay: Only load SDMA0/MEC firmware once on Stoney (v2)
    Only load the SDMA0/MEC1 firmware once in the Carrizo SMU manager
    drm/amd/powerplay:  Fix CZ SMU firmware load check (v4)
    internally and send them to the firmware after pending one has
    mei: me: disable driver on SPT SPS firmware
    and firmware configures the rest. No driver SCD accesses
    iwlwifi: mvm: consider P2p device type for firmware dump triggers
    [   10.066857]  [<c14af4d0>] ? firmware_map_add_entry.part.2+0xc/0xc
    re-initialised by firmware, whereas the driver's memory structures have
    Instead of asking the firmware to flush the SQ (Send Queue) via
    Instead of asking the firmware to flush the RQ (Receive Queue) via
    (/sys/firmware/opal/elog/0xXXXXXXXX) of such error logs. This is because,
    issue the suspend/resume operations to the firmware side at the right time.
    To add logics prevents AP from issuing the suspend request to the firmware
    the interrupt type when the interrupts are mapped via firmware (such as
      firmware: arm_scpi: add missing of_node_put after calling of_parse_phandle
    We use hw version to construct name of file holding touchscreen firmware,
    firmware supports reading product/hardware id even when device is in
      drm/amdgpu: use memcpy_toio for VCE firmware upload
    drm/amdgpu: use memcpy_toio for VCE firmware upload
    Also use the firmware size from the header instead of calculating it.
    interfaces (for which learning is disabled by the firmware) or bridge
    [   10.066857]  [<c14af4d0>] ? firmware_map_add_entry.part.2+0xc/0xc
    Propagate firmware node handle of the PCI device to the platform device.
    firmware: qcom_scm: make it explicitly non-modular
    drivers/firmware/Kconfig:config QCOM_SCM
    drivers/firmware/Kconfig:       bool
    From Saeed, ten patches that refactors old layouts of firmware commands which
    were manually generated before we introduced the mlx5_ifc, now all of the firmware
    from secure-only firmware that the Non-Secure PL1 state will look the
    The latest firmware now supports backward compatibility for the
    older VFs based on 8.7.x and 8.8.x firmware as well.
    will also need to supply a firmware-name and resolution info).
    firmware version.
    firmware version.
    "ibm,client-architecture-support" firmware call to communicate
    our capabilities to firmware.
    The format of the structure we pass to firmware is specified in
    with the firmware were being leaked.
    profile commands for x722 firmware.
    firmware.
    This new firmware for the qed* adpaters fixes several issues:
       pre-8.10.5.0 firmware].
    From Paul, Command interface message length check to speedup firmware
    net/mlx5e: Retrieve the switchdev id from the firmware only once
    Avoid firmware command execution each time the switchdev HW ID attr get
    resources. cxgb4 will read the hardware capability through firmware and
    The data member of structure firmware is const and this constness is
    These patches fix an oops in firmware downloading and an oops due
    kaweth: fix firmware download
    The intf member needs to be set before the firmware is downloaded.
    This introduces the peripheral image loader, for loading WCNSS firmware
    and boot the core on e.g. MSM8974. The firmware is verified and booted
    The document defines the binding for a component that loads firmware for
    On some firmwares we have to tell how exactly we want the command to be
    mwifiex: fix large amsdu packets causing firmware hang
    Sometimes host prepares and downloads a large amsdu packet to firmware
    which leads to a memory corruption in firmware.
    remote processors without vdevs to automatically boot once the firmware
    was introduced there were no firmware implementations(in particular PSCI)
    the user to do something about their firmware.
    - Flow control with the firmware
    modifies /sys/firmware/acpi/interrupts/gpexx to use this new facility.
    the interrupt type when the interrupts are mapped via firmware (such as
    SSP0 routing issues are solved without dedicated firmware
    from CSRs configured by low level firmware and figuring out the
    performance target to the firmware, ie higher throughput or lower latency.
    of a GPE via /sys/firmware/acpi/interrupts/gpexx. This is mainly for
    greybus: firmware: add comment to show size calculations
    The firmware file name's maximum length is set to 56 right now, but it
    greybus: firmware: s/should/must
    greybus: firmware: s/_LEN/_SIZE
    greybus: firmware: Remove extra parenthesis
    Long term we probably need to rethink all the logic to unload firmware
    Add the shared header describing the values firmware expects
    greybus: firmware: Fix typo in documentation
    greybus: firmware: use 'tag' instead of 'firmware_tag'
    virtual memory and firmware may consume the capsule immediately. To
    the entire capsule at the time it is made available to firmware.
    On my Dell XPS 13 9350 with firmware 1.4.4 and SGX on, if I boot
    drm/i915/guc: Consolidate firmware major-minor to one place
    Currently to change the firmware one has to update the exported
    module firmware string and the major-minor versions used for
    Once topology and firmware are loaded, we can parse the manifest. Use driver
    sequencer for communicating with the firmware on the other side of
    via drm_kms_helper.edid_firmware and verifying the 6 bpc + dithering
    be2net: Avoid unnecessary firmware updates of multicast list
    firmware loading and power task management. This patch adds SMU
    firmware: arm_scpi: add missing of_node_put after calling of_parse_phandle
    DSP fw can have additional firmwares as libs. These libs can be
    The firmware manifest contains UUIDs which needs to be passed only once.
    The firmware manifest contains UUIDs which needs to be passed only once.
    For additional library parsing, we need to pass firmware to be
    So add the additional arguments of firmware and library offset to
    The DSP instance creation also loads the firmware on DSPs. For library load
    the firmware names come from topology so can't be loaded at object creation.
    So split the firmware load and object creation. FW load is now called after
       - Add firmware version API for RDMA driver use
    Port counters are exposed only if the firmware supports per port counters.
    rq_num_dup and sq_num_to are only exposed if we have firmware support
    Add a function to query diagnostics counters from the firmware.
    Add a bit that indicates if the firmware supports per port
    mailbox with GFP_KERNEL and then sleeps on a firmware command, so we
    the maximum number of fingers supported and firmware name are
     - firmware
    firmware: support loading into a pre-allocated buffer
    firmwares.  The firmware subsystem allows drivers to request this
    firmware be loaded from the filesystem, but this requires that the
    entire firmware be loaded into kernel memory first before it's provided
    to the driver.  This can lead to a situation where we map the firmware
    twice, once to load the firmware into kernel memory and once to copy the
    firmware into the final resting place.
    request_firmware_into_buf() API that allows drivers to request firmware
    firmware image while it's read from the filesystem.  It also requires
    firmware and negates any benefits of firmware caching because the
    firmware layer doesn't manage the buffer lifetime.
      https://www.codeaurora.org/cgit/quic/la/kernel/msm-3.18/commit/drivers/base/firmware_class.c?h=rel/msm-3.18&id=0a328c5f6cd999f5c591f172216835636f39bcb5
    firmware: provide infrastructure to make fw caching optional
    the relatively large firmware images taking up valuable memory during
    firmware_class to disallow caching based on a configurable option.  In
    the near future, variants of request_firmware will take advantage of
    [stephen.boyd@linaro.org: Drop firmware_desc design and use flags]
    firmware: consolidate kmap/read/write logic
    firmwares.  The firmware subsystem allows drivers to request this
    firmware be loaded from the filesystem, but this requires that the
    entire firmware be loaded into kernel memory first before it's provided
    to the driver.  This can lead to a situation where we map the firmware
    twice, once to load the firmware into kernel memory and once to copy the
    firmware into the final resting place.
    adds support to the request firmware API to load the firmware directly
    alleviating memory pressure during firmware loading.  The drawback is
    that we can't use the firmware caching feature because the memory for
    the firmware cache is not managed by the firmware layer.
    We use similar structured code to read and write the kmapped firmware
       - Remove unicore32 pci=firmware command line parameter handling (Bjorn Helgaas)
    IB/hfi1: Read all firmware versions
    firmwares at driver load time.
            acceleration due to NVIDIA having not released firmware for them as of yet.
       - Qualcomm: SCM firmware driver cleanups, move to platform driver
      firmware: scpi: add CONFIG_OF dependency
      unicore32/PCI: Remove pci=firmware command line parameter handling
    what trigger configuration has been given us by the firmware.
      sound: oss: Use kernel_read_file_from_path() for mod_firmware_load()
      ASoC: Intel: Skylake: Delete an unnecessary check before the function call "release_firmware"
    Before requesting the firmware to start Rx queues,
    qede is requesting firmware to remove the vlan filter.
    For PFs this doesn't cause any issues as the firmware
     [1]: https://msdn.microsoft.com/windows/hardware/drivers/bringup/firmware-requirements-for-d3cold
    availability, it leads to an infinite loop on some firmware.
    possibility that ACPI data regions from the firmware will lie above the
    With 'efi=debug', we can see those ACPI regions loaded by firmware on
    drm/amdgpu: fix firmware info version checks
    drm/radeon: fix firmware info version checks
      drm/amdgpu: add ucode_start_address into cgs_firmware_info
    running firmware. If it is not present, the driver falls back to the
      drivers: firmware: psci: initialise idle states using ACPI LPI
    greybus: firmware: Update Documentation and sample application
    in backend version operation and new error types in backend firmware
    greybus: firmware: Add 'status' byte to backend fw version response
    The backend processor may not be ready to return the version of firmware
    greybus: firmware: Add new status types for backend updated request
    fail to suspend/resume the bundle for firmware management protocols.
    greybus: firmware: Add runtime PM support
    This patch implements runtime PM support for firmware management bundle.
    - firmware-download:
      AP has requested the module over firmware management CPort to download
      a firmware package over firmware download CPort.
      fw-management.c are sufficient to handle the firmware management CPort
    sound: oss: Use kernel_read_file_from_path() for mod_firmware_load()
    the same thing as our own home-baked mod_firmware_load().  Let's use
      drivers: firmware: psci: initialise idle states using ACPI LPI
    The firmware in several ZTE devices (at least the MF823/831/910
    (at least on all firmware revisions I have found) use the bogus MAC when
    ASoC: Intel: Skylake: Delete an unnecessary check before the function call "release_firmware"
    The release_firmware() function tests whether its argument is NULL and then
      specific-method) format that the platform firmware implements for
    greybus: bootrom: Rename download_firmware() as find_firmware()
    The download_firmware() function isn't downloading the firmware but just
    trying to cancel it from gb_bootrom_firmware_size_request().
    And with that, if the firmware package isn't available for the kernel to
    On failing to find a firmware image, we get these today:
    bootrom 1-3.3.1: gb_bootrom_firmware_size_request: failed to download firmware (-12)
    bootrom 1-3.3.1: failed to download ara_00000126_00001001_fffe0001_ffe5001a_s2l.tftf firmware (-12)
    gb_bootrom_firmware_size_request() is not correct, as it should have
    But, if an error occurs in gb_bootrom_firmware_size_request(), then the
    Remove all possible default MAC filters that the firmware may have set up so
    set_mac to the firmware as the LAA for wakeup purposes.
    greybus: firmware: Improve test application
    Usage: ./firmware <gb-fw-mgmt-X> <type: interface/backend> <firmware-tag> <timeout>
    The firmware now keeps the underlying hardware disabled until
    greybus: firmware.h: rename TFTF firmware filenames
    Replace prefix "ara_" with prefix "gmp_" for TFTF firmware filenames.
    drivers: firmware: psci: initialise idle states using ACPI LPI
    Test the virtual disk ranges that platform firmware like EDK2/OVMF might
    It's useful to work with the httpboot in EFI firmware to pull a remote
    drm/i915: Remove misleading CSR firmware loading docs
    I forgot to remove these when reworking the firmware loading sequence
    last year. The new sequence is that we load firmware, and if it's not
    We move it into early_mmu_init() based on firmware features. For PS3,
    We move the function itself to pseries/firmware.c and call it along
      its main purpose is to reserve all the firmware ROM typically between 640K and
      too should be about whether to reserve firmware areas in the paravirt case.
      *really* wants to reserve is firmware data and code areas! Once the thinking is
      inverted from a mixed 'ram' and 'reserved firmware area' notion to a pure
    greybus: move all firmware prefix strings to one place
    The firmware prefix is hard-coded in a few different places.  Put it all
    Testing: 'strings gb-firmware.ko gb-bootrom.ko | grep ara_' produced the
    stage and updated the SPI flash with the new S2 Loader firmware and
    wants to boot into the new S2 Loader firmware.
    An valid MAC address might have been provided by (uboot) firmware by
    The S3 firmware and S3-BFU firmware images will be named like this going
    request_firmware. ahb.c and pci.c on the other hand had some duplicate
    a WMI_DISCONNECT_EVENT from the firmware.  This caused cfg80211 to not know
    cfg80211 upon receiving WMI_DISCONNECT_EVENT from the firmware believing
    case because the firmware did not support HT)
    channel corresponding to the firmware capabilities.
    firmware supports smart pull-push tx scheduling).
    * bump firmware version to load newer firmwares
    Same skb is being reused for storing command response from firmware
    entered right after firmware download. This patch moves that transition
    5. Bumped the firmware version to support new Mesh functionality
    This firmware is made for Kabylake platform so it doesn't
    The Digianswer sniffer devices allow for reading a firmware specific
      # cat /sys/kernel/debug/bluetooth/hci0/firmware_info
    Bluetooth: Add debugfs fields for hardware and firmware info
    Some Bluetooth controllers allow for reading hardware and firmware
    [media] doc-rst: add opera-firmware.rst to DVB docs
    place where the get_dvb_firmware script is, we need to
    the radix MMU mode even if firmware indicates radix support via
    If the firmware encounters an error (internal or HW) during initialization
    driver on APB-A side, and legacy white camera module firmware
    module and APB-A with legacy firmware implementations
    qla2xxx: Properly reset firmware statistics.
    qla2xxx: Set FLOGI retry in additional firmware options for P2P (N2N) mode.
    drm/amdgpu: add ucode_start_address into cgs_firmware_info
    SDMA firmware will be loaded by SMU manager if powerplay is enabled.
    We always used updated firmware for amdgpu, so this actually should work fine.
    used instead of issuing thousands firmware commands per second to get statistics of all
    Currenly, the code that programs the flow actions into the firmware
    firmware commands per second to get statistics of all flows set to HW,
     - Before loading firmware mark boot flag as false
    B) It was argued that such a workaround beloned in firmware.
    the firmware doesn't stay resident in RAM and isn't involved at all in
    that the most the firmware could do would be to set the bit on "core
      firmware: qcom: scm: Change initcall to subsys
      firmware: qcom_scm: Add missing is_available API
    Jun 25 08:49:30 ns8 kernel: [  757.757017] megaraid_sas 0000:02:00.0: DCMD failed/not supported by firmware: megasas_get_pd_list 4115
    Jun 25 08:49:30 ns8 kernel: [  757.778017] megaraid_sas 0000:02:00.0: DCMD failed/not supported by firmware: megasas_get_pd_list 4115
    Jun 25 08:49:30 ns8 kernel: [  757.799017] megaraid_sas 0000:02:00.0: DCMD failed/not supported by firmware: megasas_get_pd_list 4115
    Jun 25 08:49:30 ns8 kernel: [  757.820018] megaraid_sas 0000:02:00.0: DCMD failed/not supported by firmware: megasas_get_pd_list 4115
    Jun 25 08:49:30 ns8 kernel: [  757.841018] megaraid_sas 0000:02:00.0: DCMD failed/not supported by firmware: megasas_get_pd_list 4115
    acceleration due to NVIDIA having not released firmware for them as of yet.
    we cannot provide CBC/ZBC support without signed PMU firmware to handle
    drm/nouveau/secboot: lazy-load firmware and be more resilient
    Defer the loading of firmware files to the chip-specific part of secure
    boot. This allows implementations to retry loading firmware if the first
    the firmware has become available.
    drm/nouveau/secboot/gm200: make firmware loading re-callable
    blobs. The function will now try to load firmware files that have
    firmare -> firmware
    firmare -> firmware
    We have assigned memory while requesting the firmware but if the sanity
    check fails then we are not releasing the firmware.
    It has been tested with firmware versions 4 and 5, but it should
    hopefully work fine with older firmwares as well.
    After a firmware activation procedure, the PCI_DEVICE(0x1c58, 0x0003)
    The nvdimm_has_flush() routine relies on platform firmware to describe
    does not have flush address" case from the "platform firmware is broken
    blacklisting broken firmwares if they are ever encountered.
      In addition, tested with a hacked firmware that cause error during
    sst-firmware when DW DMAC is built-in] introduced more strict kconfig
    sst_dsp_free() includes the firmware init / finish that call dw_*()
      snd-soc-sst-firmware.
    Fixes: a92ea59b74e2 ('ASoC: Intel: sst: only select sst-firmware when DW DMAC is built-in')
    iwlwifi: mvm: bump MAX firmware API for mvm devices
    The driver is now ready to load the new firmware versions.
    The EFI firmware on Macs contains a full-fledged network stack for
    ever supply a firmware fix for the older machines appear to be zero.
    [media] m88ds3103: refactor firmware download
    * change bad firmware error code from EFAULT to EINVAL
    [media] si2168: add support for newer firmwares
    Si2168-B40 firmware API has changed somewhere between 4.0-11 and
    4.0-19 so that sleep will lose firmware upgrade from the chip. Due
    to that firmware re-upload is needed when newer firmwares are used.
    Rewrote firmware handling logic partly at the same.
    The driver provides with VPU firmware download, memory management and
    opens a device node, vpu driver will download vpu firmware to the device.
    Sometimes the firmware sends a HAL_DEL_BA_IND, the prima driver silently
    versions of the firmware and support actually specifying the list of
    mwifiex: Change default firmware for PCIe8997 chipset
    firmware from PCIe-UART to PCIe-USB. So by default PCIe-USB firmware would
    are assigned directtly from firmware without endian conversion handling.
    New firmwares (e.g. 10.10.69.36 for BCM4366) support "interface_remove"
    case of older firmwares (e.g. 7.35.177.56 for BCM43602 as I tested) this
    will just result in firmware rejecting command and this won't change any
    So far when receiving event about in-firmware-interface removal our
    callback, right after receiving confirmation event from firmware. This
    Bluetooth: Replace constant hw_variant from Intel Bluetooth firmware filename
    The format of Intel Bluetooth firmware filename for bootloader product
    not found from firmware META data (IE). This should be sufficient to figure
    If WMI and/or firmware has issues removing the peer object,
    It is expected that all pktlog events for 10.4 firmware based solutions
    should come through CE8 where as in case of 10.2 firmware based solutions,
    While debugging OS crashes due to firmware crashes, I enabled
    No need to stall the pipe when we are using firmware with the
    drm/amdgpu: introduce a firmware debugfs to dump all current firmware versions
    This patch implements the debugfs to dump all currect firmware
    root@jenkins-All-Series:/home/jenkins# cat /sys/kernel/debug/dri/0/amdgpu_firmware_info
    VCE feature version: 0, firmware version: 0x34040300
    UVD feature version: 0, firmware version: 0x01451000
    MC feature version: 0, firmware version: 0x00000000
    ME feature version: 37, firmware version: 0x00000093
    PFP feature version: 37, firmware version: 0x000000da
    CE feature version: 37, firmware version: 0x00000080
    RLC feature version: 1, firmware version: 0x0000010e
    MEC feature version: 37, firmware version: 0x0000029e
    MEC2 feature version: 37, firmware version: 0x0000029e
    SMC feature version: 0, firmware version: 0x013353e6
    SDMA0 feature version: 31, firmware version: 0x00000036
    SDMA1 feature version: 0, firmware version: 0x00000036
    drm/amdgpu: factor out the AMDGPU_INFO_FW_VERSION case branch into amdgpu_firmware_info
    The new amdgpu_firmware_info function will be used on amdgpu firmware
    drm/radeon: load different smc firmware on some CI variants
    The power tables on some variants require different firmware.
    drm/radeon: load different smc firmware on some SI variants
    The power tables on some variants require different firmware.
    drm/amdgpu: load different smc firmware on some CI variants
    The power tables on some variants require different firmware.
    Ask firmware to put RAM in self-refresh mode and power system down.
    firmware: scpi: add CONFIG_OF dependency
    Fixes: 8bec4337ad40 ("firmware: scpi: add device power domain support using genpd")
    This hack is not necessary anymore since the firmware is now able to
    firmware-management bundle, on a separate CPort.
      cxgb4: update latest firmware version supported
    Update the firmware load flow for TFH hardware.
    iwlwifi: pcie: fix a race in firmware loading flow
    Upon firmware load interrupt (FH_TX), the ISR re-enables the
    firmware load interrupt only to avoid races with other
    flows as described in the commit below. When the firmware
    firmware will enable all the interrupts to make sure that
    the firmware is actually racing against the ISR and we can
            iwl_pcie_load_firmware_chunk
            /* start the firmware */
    Fixes: a6bd005fe92 ("iwlwifi: pcie: fix RF-Kill vs. firmware load race")
    by the firmware and convert it later, rather than storing it
    cpu_die() and cpu_kill() are implemented in firmware.
    DT so that the firmware can tell us its MAC address.
    firmware via REDUCE_TX_POWER_CMD.
    The NIC's CPU gets started after the firmware has been
    from the firmware.
    Fixes: a6bd005fe92 ("iwlwifi: pcie: fix RF-Kill vs. firmware load race")
    firmware: qcom: scm: Change initcall to subsys
    firmware: qcom_scm: Add missing is_available API
    cxgb4: update latest firmware version supported
    Change t4fw_version.h to update latest firmware version number
    packet and SLEEP event from firmware. We will disable MSIx interrupt
    the firmware and other nasty things.
    compatible with some 32 bit firmwares. BE support will be added at a
    When LD mode is supported firmware will supply the ibm,dec-bits property
    firmware call (not implemented in this patch) or some other platform
    This patch queries the antenna to the firmware so is properly reported to
    Workqueue: events request_firmware_work_func
    [<bf1a0018>] (mwifiex_fw_dpc [mwifiex]) from [<c040eb74>] (request_firmware_work_func+0x30/0x58)
    [<c040eb74>] (request_firmware_work_func) from [<c012fe90>] (process_one_work+0x124/0x338)
    firmware calls and returned an error even if the functions didn't fail.
      dts: qcom: apq8064: Add SCM firmware node
      dts: qcom: msm8974: Add SCM firmware node
      dts: qcom: apq8084: Add SCM firmware node
      dt/bindings: firmware: Add Qualcomm SCM binding
      firmware: qcom: scm: Expose PAS command 10 as reset-controller
      firmware: qcom: scm: Peripheral Authentication Service
      firmware: qcom: scm: Add support for ARM64 SoCs
      firmware: qcom: scm: Convert to streaming DMA APIS
      firmware: qcom: scm: Generalize shared error map
      firmware: qcom: scm: Use atomic SCM for cold boot
      firmware: qcom: scm: Convert SCM to platform driver
    * Add SCM firmware node on MSM8916
      arm64: dts: msm8916: Add SCM firmware node
      firmware: scpi: add device power domain support using genpd
      firmware: arm_scpi: add support for device power state management
      firmware: arm_scpi: make it depend on MAILBOX instead of ARM_MHU
      firmware: arm_scpi: mark scpi_get_sensor_value as static
      firmware: arm_scpi: remove dvfs_get packed structure
    with new firmware interface.
    baseband firmware.
    firmware timing bug during initialization. Adding a short sleep
    It loads a 9.14 firmware.
    MRU to firmware during vnic configuration.
    bnxt_en: Add support for firmware updates for additional processors.
    firmware types to cover all the on-chip processors.
    bnxt_en: Request firmware reset after successful firwmare update
    Upon successful mgmt processor firmware update, request a self
    "update" type to tell firmware to do that.
    Calling the firmware to do function reset on the PF will kill all the VFs.
    bnxt_en: Update firmware spec. to 1.3.0.
    The architecture + solution (software and firmware) work were done by a team consisting
    firmware will no longer send this notification for 9000
    permissions listed in the Memory Attributes firmware table.
    firmware events. All the others should be updated by mac80211.
    Usually when the firmware crashes we check for the value
    disabling the irq and dumping firmware 'crash dump'. Now
    was as treated a firmware crash and resulting in the below race
    Clearly even after the firmware board files related data structure
    But sometime, the situation is so bad, so that firmware may choose to
    firmware. On success firmware triggers an event and driver's handler
    The problem got resolved after sending appropriate commands to firmware
    firmware to fix the problem.
    On some platforms, driver is unable to wakeup firmware after system resume
    When an association command is sent to firmware but the process is
      Input: xpad - fix rumble on Xbox One controllers with 2015 firmware
    CPU notifications from the firmware coming in when cpufreq is
    from the platform firmware.  On some platforms the latter may occur
    Load specific firmware versions for the DMC instead of using symbolic
    have a tight dependency between firmware and driver. In order to be able
    a specific DMC firmware version.
    This document defines the binding for a component that loads firmware
    audio firmware.
    outside of drivers/firmware/efi/runtime-wrappers.c.
    drivers/firmware/efi/runtime-wrappers.c to wrap around the new
    firmare -> firmware
    control path and firmware.
    to firmware during unload time and only rx packets are allowed.
    This patch has firmware image related changes for: firmware
    release upon failure, support latest firmware version and
    firmware download in 4MB chunks.
    is to issue mailbox commands to ask the firmware for the VI Stats.
    firmware: qcom: scm: Expose PAS command 10 as reset-controller
    firmware: qcom: scm: Peripheral Authentication Service
    We need the signal from wcnss_ctrl indicating that the firmware is up
    firmware: qcom: scm: Add support for ARM64 SoCs
    firmware: qcom: scm: Convert to streaming DMA APIS
    firmware: qcom: scm: Generalize shared error map
    firmware: qcom: scm: Use atomic SCM for cold boot
    firmware: qcom: scm: Convert SCM to platform driver
    This patch converts the Qualcomm SCM firmware driver into a platform
    driver.  It also adds clock management for firmware calls which require
    unicore32/PCI: Remove pci=firmware command line parameter handling
    Remove support for the "pci=firmware" command line parameter, which was
    kernel: pci: remove pci=firmware command line parameter handling").
    firmware.  Previously we did not insert those resources into the resource
    firmware.  Previously we did not insert those resources into the resource
    * enable btcoex support without restarting firmware
    Export the firmware version through the core.
    firmware version rather than forcing a format.
    Allow for a common core function to get firmware version strings
    the value or address is determined by and shared with the GuC firmware;
    firmware: scpi: add device power domain support using genpd
    firmware: arm_scpi: add support for device power state management
    platform that runs on top of skiboot firmware. The firmware identifies
    "ibm,slot-pluggable" and "ibm,reset-by-firmware". The driver scans
    If the skiboot firmware doesn't support slot status retrieval, the PCI
    slot device node shouldn't have property "ibm,reset-by-firmware". In
    The skiboot firmware doesn't export the capability to access attention
    The (OPAL) firmware might provide the PCI slot reset capability
    which is identified by property "ibm,reset-by-firmware" on the
    This routes the reset request to firmware if "ibm,reset-by-firmware"
    The reset and poll functionality from (OPAL) firmware supports
    in newer management firmware images, so existing code would
    toward firmware - a regular pre-allocated set of entires and a
    internally by firmware; This isn't considered a valid mode and
    When no vlan filter is configured, firmware has a configurable
    * enable btcoex support without restarting firmware
    known firmware floating on the net, so, the name is fix and we can make
    Fixes: 65c71efe1c59 ("mwifiex: fix racing condition when downloading firmware")
    used when waiting for FPGA to become ready to accept firmware, and is
    firmware data is written.  Replace it with a fairly tight
    `usleep_range(10, 20)` to avoid slowing down firmware loading too much.
    The firmware is fairly short, so this would only slow it down firmware
    laptops (e.g. Dell Latitude E6440) ACPI/firmware send both event types (old
    is directly implemented in the firmware. We just need to export a
    greybus: firmware: prefix char-device with 'gb-'
    The workitem is involved in sending packets to firmware.
    for glomming in firmware side. It is not actually an error as the
    brcmfmac: don't remove interface on link down firmware event
    There are two firmware events we handle similarly in brcmfmac:
    BRCMF_E_LINK and BRCMF_E_IF. The difference from firmware point of view
    is that the first one means BSS remains present in the firmware. Trying
    interface for each of them. It works OK with e.g. BCM43602. Its firmware
    BSS was also removed in a firmware. The only downside of this is a
    Unfortunately BCM4366 firmware doesn't automatically remove BSS and so
    interface on BRCMF_E_LINK as BSS is still present in the firmware. It
    With this patch we don't remove Linux interface while firmware keeps
    device firmware.
    brcmfmac: fix setting AP channel with new firmwares
    firmware may randomly pick one of:
    It seems new firmwares require setting AP mode (BRCMF_C_SET_AP) before
    specifying a channel. Changing an order of firmware calls fixes the
    * fix crash related to printing firmware features in debug mode
    ARM trusted firmware. So atf provides a API for HDMI driver to call to
    greybus: firmware: Add license and copyright header to application
    Add license and copyright header to the firmware.c test application.
    vfs-vlan-restrict, in which case the firmware rejects filters not qualified
    sfc: VLAN filters must only be created if the firmware supports this.
    For the feature to work we need firmware filter support for
    The low-latency firmware can match on OUTER_VID + LOC_MAC but not on
    For the capture packet firmware it is the other way around.
    support for new firmware interface. These updates are divided
    This patch decoupled the firmware side ifidx and host side interface
    This patch is for new driver/firmware control command structure
    and queue mapping changes based on the mapping info provided by firmware.
    chip_num returned by firmware.  If the call to get the version and chip
    partitions.  The link parameters are set up by firmware.
    bnxt_en: Handle VF_CFG_CHANGE event from firmware.
    Only allow VF default VLAN to be set if the firmware spec is >= 1.2.1.
    This is important for brcmfmac as some of released firmwares (e.g.
    format used by firmware. Current implementation is quite misleading
    mwifiex: fix racing condition when downloading firmware
    The action 'check for winner' and 'download firmware' should be an
    cause firmware download to fail when the following senerio happens:
    2) btmrvl check winner status: true, and start downloading firmware
    3) mwfieix tries to download firmware, but failed because btmrvl is
    are loaded, etc -- the GuC firmware may be loaded and set running at
    image, and this resumed kernel will also try to reload the GuC firmware
    by the driver and/or the newly-loaded GuC firmware.
    and/or GuC firmware.
    Broxton needs to send Purge firmware IPC to DSP before downloading the
    firmware. The DMA id needs to be updated for that.
    ASoC: Intel: Skylake: Enable firmware reload in suspend
    download the firmware again.
    download the firmware.
    The audio trace firmware on wm5102 only supports 4 channels correct
    firmware, such as device-tree. The IRQ trigger type is typically read
    firmware: arm_scpi: make it depend on MAILBOX instead of ARM_MHU
    firmware: arm_scpi: mark scpi_get_sensor_value as static
    firmware: arm_scpi: remove dvfs_get packed structure
    firmware. It just contains a single byte that needs no packing making
    mention that we haven't loaded the GuC firmware.
    for 8916, so that we will be able to reference the firmware memory
    arm64: dts: msm8916: Add SCM firmware node
    This adds the devicetree node for the SCM firmware.
    dts: qcom: apq8064: Add SCM firmware node
    This patch adds the firmware node for the APQ8064
    dts: qcom: msm8974: Add SCM firmware node
    This patch adds the Qualcomm SCM firmware node.
    dts: qcom: apq8084: Add SCM firmware node
    This patch adds the firmware node for the SCM
    dt/bindings: firmware: Add Qualcomm SCM binding
    This patch adds the device tree support for the Qualcomm SCM firmware.
    The cm-fx6 module has an on-board spi-flash chip for its firmware, an
    greybus: firmware: Fix spelling mistake
      mlxsw: spectrum: Make split flow match firmware requirements
         Lots of memory leak and firmware leak fixes
      drm/amdgpu: add release firmware for cgs
    iwlwifi: mvm: fix a few firmware capability checks
    Mostly memory leak and firmware leak fixes for amdgpu.  A bit bigger than
      drm/amdgpu: add release firmware for cgs
    mlxsw: spectrum: Make split flow match firmware requirements
    row of the front panel by four, we get firmware errors.
    After evaluating this with the firmware team it was decided to alter the
    affected ports. Newer firmware versions will support both flows.
    drm/amdgpu: add release firmware for cgs
    Powerplay uses cgs to load the firmware so add a function
    We need to release the firmware on driver tear down.
    case.  Without this change, the firmware issues just a I2C read
    in file headers, add firmware information.
    The resulting firmware filename wasn't used anyway, but came from the
    working example. Needs to be copied to /lib/firmware in order to be
    staging: ks7010: remove custom firmware loader
    Testing done: tested along with required NuttX firmware changes, booted
    This means that on pseries machines we will misreport to firmware the
    qed: IOV series - relax firmware requirements
    requried storm firmware would be exactly the version that was loaded by
    the recently submitted firmware is intended to be forward/backward
      b. If VF were to send an additional message to PF, firmware would mark
    would pass to firmware without checking the validity first - specifically,
    firmware to assert.
    before passing it onward via ramrod to firmware.
    qed: Relax VF firmware requirements
    Current driver require an exact match between VF and PF storm firmware;
    firmare -> firmware
    firmare -> firmware
    for loading the firmware of DSP and retrieving the voice data from DSP
    features are supported by firmware:
    . 2335986 drm/i915/guc: Disable automatic GuC firmware loading
    (re)load and then recreated after, iff the firmware was successfully
    On suspend firmware is re-initialized so resources are reset inside
    firmware. Driver should also clear the firmware counters at this time.
    Add the hardware name, revision, firmware names and update the pci_id
    he firmware interface are currently unknown.
    spec, firmware (pHyp or QEMU) should accept "xxBBSSxx" format PCI config
    firmare -> firmware
    If done with a buggy firmware, brcm_chip_attach will fail on the
    toward the firmware. I.e., it contains register-setting logic, memory
    This adds the qed portion of the RoCE & iSCSI firmware HSI,
    This patch adds support for IOMMU to s5p-mfc device driver. MFC firmware
    total address space available has no other drawbacks (MFC firmware
    The New QED firmware contains several fixes, including:
    In addition, this firmware contains the necessary logic for
    [   56.709082] gb-firmware 1-3.3.1: Requested firmware package 'ara_00000126_00001002_fffe0001_ff980067_03.tftf'
    10.4 firmware has support to enable or disable btcoex functionality
    without reloading firmware via wmi pdev param. Add provision to send
    This feature flag will be used for firmware to support BT-Coex feature
    without reloading firmware via WMI pdev param. To support Bluetooth
    config should be enabled always. This firmware IE is used to configure
    Input: xpad - fix rumble on Xbox One controllers with 2015 firmware
    firmware discard the current rumble packets we send. This patch changes
    firmware will accept.
    2) Bigger NAND used mostly for storing firmware
    The firmware found in the touch screen of an SP3 is buggy and may miss
    To avoid polling the firmware for space, a credit based system
    sent to the firmware, and stop sending data when the quota
    The host will be informed that the firmware has more
    message from the firmware, and will continue to write data
    The firmware and the host may implement an algorithm to aggregate
    The firmware now buffers data instead of blocking while the transfer
    firmware.
    ASoC: Intel: Skylake: Add DSP firmware manifest parsing
    in the DSP Firmware. These are kept in the firmware manifest
    So, add support to parse the DSP firmware manifest and
    Future firmware updates may comes with extended manifest so invoke
    ASoC: Intel: Skylake: Don't use local pointer for firmware
    We have firmware pointer is driver context, so use that instead
    in firmware binary. This is not required to be downloaded to DSP.
    topology firmware config.
    firmware. Provide a means for the ADSP code to communicate back to the
    In some situations the voice control firmware will by used
    configuration found" if there was no firmware NUMA information.
    [ 2395.177031] s5p_mfc_init_hw:272: Failed to load firmware
    firmare -> firmware
    Now that firmware has made the switch to the new interface boot
    that would still need to be verified in bridge firmware anyway), so
    drm/i915/guc: Disable automatic GuC firmware loading
    load the firmware until this is resolved.
    go against the expectations of the DMC firmware, and we all know
    how fragile the DMC firmware is.
     control is preferred over "firmware" or "platform" backlight control.
    *fetching and loading* of the GuC firmware image. The existing
    submission once the firmware is loaded.
    load the GuC iff the device has a GuC that requires firmware,
        hypothetical firmware-free devices [Tvrtko Ursulin].
    firmware, so here we rename the three primary entry points to remove any
    default (or perhaps the firmware setting) to get the correct drive
      where the firmware didn't configure this properly then we'll get a
    eg. IEEE OUI, hardware and firmware revision, etc.
    * add debugfs file to configure firmware led functionality
       - remove pci=firmware command line argument handling
      ARM: 8554/1: kernel: pci: remove pci=firmware command line parameter handling
    This uses the new firmware independent VGIC probing to support both ACPI
    A few instances of "fimware" instead of "firmware" were found.  Fix
       - generic firmware probing layer for timer and GIC
       - BCM47xx: Move SPROM driver to drivers/firmware/
    with any firmwares as most values are encoded, but given that I only have
    access to my current device with its firmware and I don't have the
         of modules and firmware to be loaded from a specific device (this
    Before the new hotplug code was implemented in the firmware, the SVC
     "Introduce a synchronization point between the async firmware loading
      [media] c8sectpfe: Rework firmware loading mechanism
      drivers: firmware: psci: make two helper functions inline
        so that it's consistent between the firmware size-check
    most recent firmware.
    configure the device/firmware with the dcbx results. Management Firmware
      CPU frequency limits set by the platform firmware (or a BMC) and
       - leds-gpio: Support the "panic-indicator" firmware property
      leds: gpio: Support the "panic-indicator" firmware property
       - Add generic EFI support for detecting when firmware corrupts CPU
      efi/runtime-wrappers: Detect firmware IRQ flag corruption
      efi: Add misc char driver interface to update EFI firmware
    Implement the firmware commands to alloc, free and query flow counters.
    firmware or the system uefi/bios.  In the case of a hardware initiator this
      drivers: firmware: psci: use const and __initconst for psci_cpuidle_ops
    for telling firmware the PHY needs to be modified by the driver.
    that with the firmware supported PHY types.
      bnxt_en: Improve the delay logic for firmware response.
      bnxt_en: Fix length value in dmesg log firmware error message.
    bnxt_en: Fix length value in dmesg log firmware error message.
    bnxt_en: Improve the delay logic for firmware response.
    duration specified by the firmware.  It is calling usleep_range(600, 800)
    2. The granularity of the delay is too coarse.  Many simple firmware
    Add support to fetch the SFP EEPROM settings from the firmware
    greybus: Documentation: Document firmware-management interfaces
    This patch adds a new 'firmware' folder in Documentation, which contains
    - firmware-management: This describes the userspace interface for
      interacting with firmware-management bundle.
    - firmware.c: Sample application to test firmware load for Interface
      Firmware and firmware updates to Backend Interface Firmware.
    greybus: firmware: Add SPI protocol support
    This patch adds SPI Protocol support to firmware core, which allows the
    Once the interface firmware is loaded successfully to a module,
    userspace can ask it to mode switch to the newly loaded firmware.
    interface firmware successfully, otherwise the firmware core rejects it.
    greybus: fw-management: Add firmware-management protocol driver
    This patch adds Firmware Management Protocol support to firmware core,
    which allows the AP to manage firmware on an Interface.
    We will not have to traverse different firmware paths based on device
    Add flag to tell firmware to disable link on all ports.
    This patch changes the bits set for telling firmware the PHY needs
    to firmware.  But since HW sent an abort, FW correctly drops the RI_WR/INIT
    Requires these firmwares:
    Firmwares are available in linux-firmware.
    Add a temporary work-around until this has been resolved in firmware.
    MIPS: BCM47xx: Move SPROM driver to drivers/firmware/
    common place. We already have bcm47xx_nvram in firmware path and SPROM
    Testing done: along with matchine firmware change, verified that modules
    drm/i915/guc: Add Broxton GuC firmware loading support
    Load guc firmware from file with major_minor number
    This change is so that new firmwares can only be used
    with a new firmware, it won't be used by default without
    and thus AP_LINK_PS must be used; most likely with firmware keeping
    Adds a generic firmware probing layer for the timer and GIC so that KVM
    * add debugfs file to configure firmware led functionality
    In order to handle the firmware placing the ramoops buffer
    NPU devices are emulated in firmware and mainly used for NPU NVLink
    powerpc/mm/radix: Use firmware feature to enable Radix MMU
    Radix MMU mode. This means we default to hash mode unless firmware tells
    There are cases where the interrupt configuration read from firmware
    and maintain backward compatibility with firmware images that may have
    The firmware parameter that contains the IRQ sense bits may also contain
    This broke 7265D whose firmware does advertise
    The impact was a much longer recovery upon firmware assert.
    This Kconfig option allows to load a firmware for
    been used for a few years now and replacing the firmware
    only serves the firmware as a pipe to move the data from init
    iwlwifi: Fix firmware name maximum length definition
    Previous patch had changed firmware name convention for
    new generation product. The firmware name is now longer
    than the former convention. Adapt max firmware name length
    RX packets sent by the firmware (e.g. notifications) are not a reason
    The firmware will send frame release notification in order
    iwlwifi: mvm: add firmware API name comment
    Add the firmware API name to the struct iwl_wowlan_gtk_status.
    document of this chip[1]. This document is for firmware programmers to
    The demodulator needs firmware, available for example here:
    http://palosaari.fi/linux/v4l-dvb/firmware/Si2168/Si2168-B40/4.0.11/
    [media] c8sectpfe: Rework firmware loading mechanism
    for loading its xp70 firmware. A previous commit removed this Kconfig
    This patch reworks the firmware loading into the start_feed callback.
    NVIDIA Tegra SoCs. When loaded with a firmware (available via the linux-
    firmware repository), it provides an XHCI-compatible interface.
    The firmware of R-Car USB 3.0 host controller will control the reset.
    So, if the xhci driver doesn't do firmware downloading (e.g. kernel
    eg. IEEE OUI, hardware and firmware revision, etc.
    can: janz-ican3: error handling for CAL/CANopen firmware
    indications. With CAL/CANopen firmware the NMTS-SlaveEventIndication
    modules with firmware 1.48, my system also with firmware ICANOS 1.35)
    release-firmware request for example. This is tested with build
    firmware, or to jump into it and boot into the new personality.
    Also note that the '!bootrom->fw' check is moved to free_firmware()
    With upcoming firmware changes we will switch from an SVC-driven module
    Testing done: Tested together with "new" firmware boot sequence to
    Testing done: used "new" firmware boot sequence to verify that modules
    The M88RS6000 demod/tuner package needs firmware. You can download
    http://palosaari.fi/linux/v4l-dvb/firmware/M88RS6000/
     "drivers/firmware/efi/capsule.c:109 efi_capsule_supported()
      drivers/firmware/efi/efibc.c: In function 'efibc_set_variable':
      drivers/firmware/efi/efibc.c:53:1: error: the frame size of 2272 bytes is larger than 1024 bytes [-Werror=frame-larger-than=]
    During hw scan, firmware sends two channel information events (pre-
    To collect latest survey information from target, firmware provides WMI
    [media] si2157: detect if firmware is running
    Detect if firmware is running run-time and download / start it only
    Garbage value is returned by firmware when it is not running,
    leds: gpio: Support the "panic-indicator" firmware property
    firmware property, allowing to mark a given LED to blink on
    This firmware is made for Kabylake platform so it doesn't
    greybus: fw-download: Introduce timeouts for firmware downloads
    total size of the firmware.
    indefinitely fetch the same section of the firmware package. Both timed
    greybus: fw-download: Manage firmware requests with kref
    This patch updates the fw-download core to manage firmware requests with
    for firmware downloads.
    greybus: Revert "interface: Fetch and expose version of interface's firmware"
    The interface version is now managed as part of the firmware-management
      firmware: qemu_fw_cfg.c: potential unintialized variable
    drm/amd/powerplay: update baffin & ellesmere smc_sk firmware.
    drm/amd/powerplay: Add smc_sk firmware to baffin & ellesmere.
    drm/amd/amdgpu: Add smc_sk firmware in baffin & ellesmere.
    - Make firmware version check correctly. Firmware
    - The firmware can handle upto 40 UVD sessions.
    OPPs are obtained by other means like firmware(e.g. scpi-cpufreq.c)
    However the OPP entries are populated reading from the firmware or some
    i2c accesses unlocked. But add a mutex so that firmware commands are
    firmware, or to jump into it and boot into the new personality.
    Also note that the '!bootrom->fw' check is moved to free_firmware()
        - Adding Low level firmware commands support for creating ACLs
    This patch series checks for firmware errors when we are waiting for
    cxgb4: Check for firmware errors in the mailbox command loop
    Check for firmware errors in the mailbox command loop and report
    them differently rather than simply timing out when the firmware goes
    - tons of bxt rpm fixes (mostly around firmware interactions), from Imre
    The promise of pretty boot splashes from firmware via BGRT was at
    sure the BGRT data firmware gives it is valid, and dutifully warns
    us that firmware can and often is broken when the 'quiet' kernel
    my name does not appear when run on drivers/firmware/efi/libstub.
    greybus: fw-download: Create a macro for length of firmware file's name
    Create a macro representing the length of the firmware file's name and
    - Loopback over HCI may not be supported in future st-nci firmware
    firmware-agnostic manner.
    KVM: arm/arm64: vgic: Rely on the GIC driver to parse the firmware tables
    Currently, the firmware tables are parsed 2 times: once in the GIC
    firmware table (like ACPI).
    With this change, the virtual GIC becomes agnostic to the firmware
    KVM: arm/arm64: arch_timer: Rely on the arch timer to parse the firmware tables
    The firmware table is currently parsed by the virtual timer code in
    For now, the firmware tables are parsed 2 times: once in the GIC
    firmware table (like ACPI).
    Currently, the firmware table is parsed by the virtual timer code in
    * remove deprecated firmware API 1 support
    calibration data download to firmware, wakeup pin configured to firmware,
     1) MODULE_FIRMWARE firmware string not correct for iwlwifi 8000 chips,
    need not send the Set DMA Control IPC message to firmware.
    If request firmware fails at init, the code loader DMA allocation
    by firmware.
    the MAC address in ROM accessible via VC4 firmware.
    by firmware.
    the firmware placed the frame buffer.
    if the overall MC version discovered did not match the firmware version
    When KDUMP is triggered the driver first talks to the firmware in INTX
    mode, but the adapter firmware is still in MSIX mode. Therefore the first
    firmware gives a MSIX response. If when the OS is installed on a RAID
    Fixed by: Change the firmware to INTX mode if it is in MSIX mode before
    aacraid: Log firmware AIF messages
    As the firmware for series 6, 7, 8 cards does not support msi, remove it
    greybus: firmware: Add firmware-download protocol driver
    This patch adds Firmware Download Protocol support to firmware core,
    which allows an Interface to download a firmware package over Unipro.
    cxgb4vf: Add support to enable logging of firmware mailbox commands for VF
    Add new /sys/kernel/debug/ support to dump firmware mailbox commands
    cxgb4: Add support to enable logging of firmware mailbox commands
    Add new /sys/kernel/debug/ support to dump a firmware mailbox command
    controller, when loaded with external firmware, exposes an interface
    compliant with xHCI. This driver loads the firmware, starts the
    controller's firmware.
    The combination of booting with ovmf firmware when guest vcpus > 1 and kvm's
    same workaround as TMX320 for avoiding the firmware bug.  It fixes the
    There are many USB audio devices with buggy firmware that don't react
    improve most of error cases while we still can catch the firmware
    staging: wilc1000: add set to null after release firmware
    This patch add set to null after release firmware.
    This test code is support to old firmware.
    giving platform-firmware free reign to continue to diverge and compound
       and encourages firmware implementations to choose public over
    "_DSMs", the actual function numbers used in the firmware interface to
    between the kernel ioctl number space and the firmware specific function
    Versions of the 8051 firmware < 0.38 may report a link failure
    * fix a NULL pointer dereference when paging firmware asserts
    When certain firmware variants are selected (via the sfboot utility) the
    When the firmware reports RSS_LIMITED suppress allocating a default RSS
    for thawing the system will be whatever CPU firmware boots the system
    runtime wrapper code to detect when firmware erroneously modifies flags
    runtime wrapper code to detect when firmware erroneously modifies flags
    We check all allocated flags, barring those which firmware has
    runtime wrapper code to detect when firmware erroneously modifies flags
    efi/runtime-wrappers: Detect firmware IRQ flag corruption
    Unfortunately, some firmware has been seen to unmask IRQs (and
    up. This can be used to detect common firmware issues (e.g. bad irq mask
    efi: Add misc char driver interface to update EFI firmware
      cat firmware.bin > /dev/efi_capsule_loader
    If an EFI capsule has been sent to the firmware we must match the type
    firmware. A common use case is performing firmware updates. This patch
    firmware, and a driver that allows users to upload capsules will come
    Once a capsule has been passed to the firmware, the next reboot must
    firmware despite the fact that UpdateCapsule() takes a 'CapsuleCount'
    efi: Move efi_status_to_err() to drivers/firmware/efi/
    firmware via the GOP protocol.
    In preparation of moving this code to drivers/firmware/efi and reusing
    mapping firmware tables, and is not even allowed on ARM for mapping
    introduce support for new firmware tables that use the same descriptor
    One such example is in the libstub code where the firmware is queried
        The platform firmware is operating in secure boot mode if the value of
    greybus: firmware: Add firmware management bundle driver
    All firmware packages on the Modules or Interfaces are now managed by a
    functionality required to manage firmware packages.
    This patch adds the basic firmware-management bundle driver, which just
    creates a firmware-management connection. Support for individual
    mwifiex: disable channel filtering feature in firmware
    Currently firmware drops those scan entries, as current channel
    In cfg80211 resume handler, we query wakeup reason from firmware and
       - A correction of the psci firmware DT binding, to prevent users from
      drivers: firmware: psci: unify enable-method binding on ARM {64,32}-bit systems
    bandwidth update from the MFW [management firmware].
    or configuration notified by management firmware.
    or configuration notified by management firmware.
    is notified to the PF by the management firmware.
    firmware. Refactor port initialization and FW_PORT_CMD handling. Pass
    cxgb4: Decode link down reason code obtained from firmware
    The firmware can send a set of asynchronous replies through FW_PORT_CMD
    uarttx_pin (used for firmware debug). This corrects this situation.
    ath10k: add max_tx_power for QCA6174 WLAN.RM.2.0 firmware
    QCA6174 WLAN.RM.2.0 firmware uses max_tx_power instead of using max_reg_power
    * remove deprecated firmware API 1 support
    drivers: firmware: psci: unify enable-method binding on ARM {64,32}-bit systems
    because all MVM firmwares version 16 and above that we support don't
    calibration data dowoload to firmware, wakeup pin configured to firmware,
    handled firmware reset using the rescan barrier and was later redesigned
      drivers: firmware: psci: use const and __initconst for psci_cpuidle_ops
    drivers: firmware: psci: make two helper functions inline
    drivers/firmware/psci.c:103:13: error: 'psci_power_state_is_valid' defined but not used [-Werror=unused-function]
    drivers/firmware/psci.c:94:13: error: 'psci_power_state_loses_context' defined but not used [-Werror=unused-function]
    Fixes: 21e8868 ("drivers: firmware: psci: make two helper functions static")
    drivers: firmware: psci: make two helper functions static
    drivers: firmware: psci: drop duplicate const from psci_of_match
    drivers/firmware/psci.c:mmm:nn: warning: duplicate const
      the standard PSCI 1.0 firmware interface
    Needed for v2 of the device firmware, otherwise kernel will stuck for few
    For set/query MTU port firmware commands the MTU field
    of the functions wrapping those firmware commands to be u16.
    expects reset implementation in firmware.
      either, nor does preventing the DMC firmware from being loaded.
    along with additional PCI functions added on and is reported by firmware
      qede: Fix single MTU sized packet from firmware GRO flow
    qede: Fix single MTU sized packet from firmware GRO flow
    In firmware assisted GRO flow there could be a single MTU sized
    segment arriving due to firmware aggregation timeout/last segment
    firmware: qemu_fw_cfg.c: potential unintialized variable
    * fix a NULL pointer dereference when paging firmware asserts
    When we then receive a notification from firmware (about the function
    This LSM enforces that kernel-loaded files (modules, firmware, etc)
    filesystem to enforce module and firmware loading restrictions without
    ath10k: switch testmode to use ath10k_core_fetch_firmware_api_n()
    Now that all firmware-N.bin related are within struct ath10k_fw_file we can
    switch to use ath10k_core_fetch_firmware_api_n() and delete almost identical
    ath10k_tm_fetch_utf_firmware_api_2().
    ath10k: refactor firmware images to struct ath10k_fw_components
    refactor all firmware components to struct ath10k_fw_components. This structure
    will hold firmware related files, for example firmware-N.bin and board-N.bin.
    For firmware-N.bin create a new struct ath10k_fw_file which contains the actual
    firmware image as well as the parsed data from the image.
    ath10k: remove deprecated firmware API 1 support
    drivers: firmware: psci: use const and __initconst for psci_cpuidle_ops
    managing queues in the host memory and packet delivery to firmware.
    qca4019 wifi firmware has an option to stay in push mode for less
    host cpu consumption is reduced. qca4019 firmware supports this
    switch support availability in firmware.
    configured to the firmware.
    Upon firmware assert, restart work will be triggered so that mac80211
    drivers/firmware/efi/arm-init.c: In function 'reserve_regions':
    drivers/firmware/efi/arm-init.c:152:21: note: in expansion of macro 'ULLONG_MAX'
    drm/i915/gen9: Fix runtime PM refcounting in case DMC firmware isn't loaded
    the DMC firmware isn't loaded, we still want to disable power wells
    At the moment, if firmware reports TM is not available we turn off
    Unfortunately, pin configurations can changed based on firmware/BIOS
    versions of the machine/firmware anymore.
    (a) it's imprecise for static rx-offsets; (b) if firmware
    firmware FAULT initiated OCR and DCMD timeout initiated timeout, driver
    firmware) happens simultaneously since adapter reset function is
    application has fired command to firmware to do adapter reset and the
    same command is completed by firmware but since interrupts are disabled,
    from IO timeout thread after chip reset which will again FAULT firmware
      0x05e0,0000 - 0x05ef,ffff: For MCU firmware using at runtime;
      0x0740,f000 - 0x0740,ffff: For MCU firmware's section;
    Power well 1 is managed by the DMC firmware so don't toggle it on-demand
    firmware assistance where the target display power state is DC6. On
    Broxton on the other hand we don't use the firmware for this, but rely
    we don't exactly know how the firmware (both DMC and PCU) synchronizes
    request registers. This is somewhat unexpected since the firmware should
    On SKL there is another twist where the firmware also clears the power
    having this sanity check in place makes sense even for future firmware
    drm/i915/bxt: Reject DMC firmware versions with known bugs
    DMC version 1.06 has a known bug, where the firmware polls forever for a
    to any device affected by the firmware bug, while the impact
    processing on firmware side avoiding unused time in between EMADs.
    Host hang is observed if card is removed before firmware download
    gets completed. In this case, firmware will be failed to download and
    firmware download fails. This wait is not necessary and may result in
    mwifiex: add default setting for pcie firmware download
    This patch adds default setting for pcie firmware download name in
    mwifiex: add pcie usb/uart firmware download support
    This patch adds support for downloading usb/uart firmware for
    The code for ampdu-rx host reorder is related to the firmware signalling
    brcmfmac: screening firmware event packet
    but firmware requires this to be set. When not found in nvram then
    Newer firmwares require the usage of the wowl wakeind struct as size
    for the iovar to clear the wake indicators. Older firmwares do not
    [media] dw2102: fix unreleased firmware
    for a firmware but after processing it we missed releasing it.
    10.4 firmware has addeded set_tsf vdev parameter,
    Update 10.4 WMI vdev param to sync to current 10.4 firmware
    10.2.4.70.24 firmware introduces new feature to set TSF
    feature with the host-specified TX-rate option in 10.4 firmware.
     of FU volumes.  Although the firmware exposes the dB and the value
     fixed in the newer firmware, the devices are shipped with the old
     firmware, thus we need the workaround in the driver side.  -- tiwai]
    data is availablet to the firmware upon request, but it stored in the
    host's memory. During the firmware init flow, the driver configures the
    firmware so that the firwmare knows where is the data.
    driver fails to configure the paging in the firmware, but the memory is
    if the firmware does not have the new capabilities.
    - On posting an IO to the firmware, adapter generates an interrupt.
    the device. Also if the original I/O is not found in fnic firmware, we
    bnxt_en: Call firmware to approve VF MAC address change.
    firmware will simply check and approve the MAC address if the PF has not
    Let firmware know that the driver is giving up control of the link so that
    it can be shutdown if no management firmware is running.
    The 'size' member of a struct firmware is passed to snd_printk with a
                                       paca.o nvram_64.o firmware.o
    ieee802154/adf7242: fix memory leak of firmware
    If the firmware upload or the firmware verification fails then we
    firmware.
    firmware commands to use a void * instead of a u32 * which eliminates
    When firmware does not use _DSD properties that allow properly name GPIO
    the device, or firmware is. In the above case the lookup succeeds, we
    get the firmware token for each access.
      firmware: qemu_fw_cfg.c: hold ACPI global lock during device access
    MAC includes new firmware commands that need to be used to control
    ixgbe: Take manageability semaphore for firmware commands
    We need to take the manageability semaphore when issuing firmware
    ixgbe: Clean up interface for firmware commands
    Clean up the interface for issuing firmware commands to use a
    This patch prints pcie scratch registers during firmware dump. They
    will be useful for analysing firmware status.
    mwifiex: check revision id while choosing PCIe firmware
    selects appropriate firmware by checking revision id.
    Added driver functionality to offload GTK rekey to firmware. When
    AP sends new GTK, firmware will update it.
    In brcmf_sdio_download_firmware(), bcmerror is set by the call to
    firmware: qemu_fw_cfg.c: hold ACPI global lock during device access
    (i.e., firmware-triggered) access to the QEMU fw_cfg device,
    is firmware already takes care of it in our new feature scan
    * Improvements in firmware error dump (Golan)
    * Scan timeout to cope with buggy firmware (Luca)
    verification to reject perfectly valid modes while loading EDID firmware
    quickly. Additionally some versions of the DSP firmware are
    checking to see if the firmware responded. This change prevents double
    resets when the firmware is busy.
    ibmvnic: map L2/L3/L4 header descriptors to firmware
    L2/L3/L4 headers to firmware.  This feature is needed
    - VBT code refactor for a clean split between parsing&using of firmware
    Update to latest firmware interface, add EEE feature, unsupported SFP+
    Check that the forced speed is a valid speed supported by firmware.
    policy done in the firmware.
    bnxt_en: Set async event bits when registering with the firmware.
    1. Add bnxt_hwrm_set_eee() function to setup EEE firmware parameters based
    Get EEE capability and the initial EEE settings from firmware.
    drm/i915/guc: always reset GuC before loading firmware
    firmware, which will then cause this kernel's attempt to (re)load the
    firmware to fail (GuC program memory is write-once!). The symptoms
    (GuC firmware reload fails after hibernation) are further described
    So let's *always* reset the GuC just before (re)loading the firmware;
    drm/i915/guc: reset GuC and retry on firmware load failure
    firmware states.
    indicate the driver/firmware supports configuration of BSS
    greybus: firmware: Rename to bootrom protocol
    The function parse_platform_config in firmware.c calls crc32_le.
    Check and parse Rx MAC timestamp when firmware sets its flag
    10.4 firmware adds it in Rx beacon frame only at this moment.
    firmware advertises support for the service. This is also done to
    provide backward compatibility with older firmware. Also for clarity
    ARM: 8554/1: kernel: pci: remove pci=firmware command line parameter handling
    According to kernel documentation, the pci=firmware command line
    This patch removes the pci=firmware command line parameter handling
    abused in generic code to map things like firmware tables in memory.
      bnxt_en: Implement proper firmware message padding.
      Skylake that shipped with broken firmware where enabling
    firmware writes more data than we expect) add 16 padding bytes
    firmware and left at zero value. Which means that no sata ports are
    the firmware did not program it already.
    of these regions have significance to the firmware executable code itself,
    bnxt_en: Implement proper firmware message padding.
    The size of every padded firmware message is specified in the first
    We can have a race where firmware sends an asynchronous event to the host
    MAX. If a user had a firmware below _OK but above _MIN, the
    kernel log telling him to update his firmware.
    If something goes wrong with the firmware and we never get a scan
    let the firmware know by setting a bit in Tx command
    (TX_CMD_FLG_MH_PAD) which will instruct the firmware to drop those
    Until 9000, the firmware didn't check the TX_CMD_FLG_MH_PAD bit
    firmware code) added the pad.
    LQM stands for Link Quality Measurement. The firmware
    the medium is. The driver issues a request to the firmware
    that includes the duration of the measurement (the firmware
    timeout (in case the firmware has a lot of offchannel
    activities). If the timeout elapses, the firmware will
    firmware will reply with partial results.
    to 128 GB. The firmware on vulcan boards will use these ranges as well.
    firmware: fw_cfg register offsets on supported architectures only
    drivers/firmware/Kconfig, and provide default values for
    register offsets in drivers/firmware/qemu_fw_cfg.c at that
    ASoC: cs47l24: Add support for audio trace firmware
    cs47l24 supports the audio trace firmware, this streams of audio to be
    analysis/debugging of audio processing firmwares.
    staging: wilc1000: removes goto definitions from wilc_wlan_firmware_download
    This patch removes goto definitions from wilc_wlan_firmware_download function.
    HWP-capable systems CPPC is a firmware interface to HWP, setting
    this bit effectively tells the firmware that the OS will handle
      extend one of its quirks to a newer firmware version, and a few USB
      staging: wilc1000: fixed kernel panic when firmware is not started
    in an int value returned by firmware to get current block state: 0x200 <<
    this block to hardware firmware at least on my old nc6400 gets confused and
    Due to a recent fix in the firmware, the Punit verbosity control bits
    Overall qca4019's firmware download sequence would look like,
    staging: wilc1000: fixed kernel panic when firmware is not started
    This patch fixed the problems caused by if firmware is not started.
    If firmware is not started, this function(get_tx_power) does not work.
    reset by firmware") added a runtime resume for devices that were runtime
    Fixes: 58a1fbbb2ee8 (PM / PCI / ACPI: Kick devices that might have been reset by firmware)
    Fixes: ef25ba047601 (PM / sleep: Add flags to indicate platform firmware involvement)
    drivers/firmware/efi/efivars.c: use in_compat_syscall() to check for compat callers
      firmware support from NVidia, it's taken a long while to extract this
         - GuC firmware scheduler enhancements
    to firmware specifications, MAD_IFC commands must be used only if the
    compute crc before ar->firmware was ready causing
    Fixes: 3e58044b61a9 ("ath10k: print crc32 checksums for firmware and board files")
    supporting firmware defines per-txq thresholds or
       - Use separate EFI page tables when executing EFI firmware code.
       - Run regular UEFI firmware with interrupts enabled.  This is already
      firmware: arm_scpi: add support for 64-bit sensor values
      firmware: arm_scpi: decrease Tx timeout to 20ms
      firmware: arm_scpi: fix send_message and sensor_get_value for big-endian
      ARM: bcm2835_defconfig: Enable RPi firmware driver
         out of arch/arm into drivers/firmware/psci.c
       - Fixes for possible Oops by malformed firmware
    cached firmware file content when get board id operation fails.
    slots in firmware. This limitation is for the htt_mgmt_tx path itself,
    Whenever firmware is configuring operating channel during scan or
    drivers/firmware/broadcom/bcm47xx_nvram.c: fix incorrect __ioread32_copy
    Commit 1f330c327900 ("drivers/firmware/broadcom/bcm47xx_nvram.c: use
    Fixes: 1f330c327900 ("drivers/firmware/broadcom/bcm47xx_nvram.c: use __ioread32_copy() instead of open-coding")
      Largest is a new firmware driver, but there are some other updates to
      firmware: qemu config needs I/O ports
      firmware: qemu_fw_cfg.c: fix typo FW_CFG_DATA_OFF
      firmware: create directory hierarchy for sysfs fw_cfg entries
      firmware: introduce sysfs driver for QEMU's fw_cfg device
    External i2c firmware updates are done in multiple steps and
      firmware: change kernel read fail to dev_dbg()
     - coda driver now accepts NXP distributed firmware files
         platform firmware in the efi/e820 memory map.  Later when the NFIT
    from firmware.
    This version of GuC firmware fixes the engine reset issue where golden
    drm/i915/csr: Allow matching unknown HW steppings with generic firmware
    If the firmware is generic and has a run-anywhere mode, enable it rather
    boot firmware does not support ACPI at all) so we use build-in device
     - Fix for firmware activation in btmrvl_sdio
    The firmware on many Cavium Thunder systems configures the MDIO bus
    that the firmware will keep the contact tracking data for the previous
    With old firmware, we still wait until the timeout is reached.
    The Raspberry Pi Foundation's firmware updates are shipping device
    drm/nouveau/gr/gm200: switch over to using sw_nonctx from firmware
    drm/nouveau/gr/gm200: switch over to using sw_method_init from firmware
    drm/nouveau/gr/gm200: switch over to using sw_bundle_init from firmware
    drm/nouveau/gr/gm200: switch over to using sw_ctx from firmware
    In addition, the firmware bootloaders use a slightly different header
    drm/nouveau/gr/gm200: do not load firmware for secure falcons
    Secure falcons' firmware is managed by secboot. Do not load it in GR for
    On GM200 and later GPUs, firmware for some essential falcons (notably
    Secure Boot requires building a binary blob containing the firmwares
    a high-secure falcon running a signed loader firmware that copies the
    valid, and finally loads the verified firmware into the managed falcons
    drm/nouveau/gr/gm200: load external firmware and bundles
    Load firmware and bundles in GM200's constructor. The previously called
    NVIDIA-provided firmware. Export them.
    drm/nouveau/gr/gf100: load firmware in outer function
    The firmwares required by GR may vary from chip to chip, especially with
    the introduction of secure boot and NVIDIA-provided firmwares. Move the
    firmware loading outside of gf100_gr_ctor so other chips may still call
    it while managing their firmwares themselves.
    drm/nouveau/gr/gk20a: move firmware bundle release to gf100
    NVIDIA-provided firmware free these structures properly.
    to using the register lists provided by the firmware files, which will
    drm/nouveau/gr/gf100: use the nvkm_firmware functions
    Use the nvkm_firmware_* functions when loading external firmware to
    drm/nouveau/core: add firmware handling functions
    Add two functions nvkm_firmware_get() and nvkm_firmware_put() to load a
    firmware file and free its resources, respectively. Since firmware files
    * country code setting in firmware
    * length checks to validate firmware events
    * new firmware support (-21.ucode)
    * enable MU-MIMO and take care of firmware restart
    runtime, it's pretty much guaranteed the firmware will not have
    qed: Management firmware updates
    resources toward the goal of interacting with the management firmware.
    Driver interaction with the managemnt firmware is done via mailbox
    commands which the management firmware periodically sample, as well
    firmware might incorrectly notify interfaces of link changes while they
     the definition in firmware compiler.
    Certain 6004 firmware releases redefine the WMI_TXE_NOTIFY_EVENTID event
    tx-err-notify feature and thus this firmware capability flag isn't set on
    the firmware package. By guarding the processing of this event by the same
    request_firmware.
    staging/rdma/hfi1: Fix fabric serdes reset by re-downloading firmware
    by the sibling HFI when it downloads its fabric serdes firmware.
    firmware at reset time on Bx hardware.
    staging/rdma/hfi1: No firmware retry for simulation
    Simulation has no firmware, so it will never move firmware
    staging/rdma/hfi1: Make firmware failure messages warnings
    Make firmware validation failure and missing firmware messages
    staging/rdma/hfi1: Fix missing firmware NULL dereference
    The gen3 bump code must mark a firmware download failure as fatal.
    o Only do a firmware back-off for RTL.  There are no alternates for
    o Rearrange OS firmware request order to match what is actually
      in the case of missing firmware.
    functions- slave_alloc and slave_configure to allow firmware scan.
    Fixes: 26a8145390b3 ('net/mlx5_core: Introduce flow steering firmware commands')
    message from the firmware on the Asynchronous Firmware Event Queue before
    Bluetooth: btmrvl_sdio: fix firmware activation failure
    In some case, the btmrvl_sdio firmware would fail to active within the
    firmware.
    The H2C API for reporting connection to the firmware is different
    rtl8xxxu: Setup LLT before downloading firmware
    Newer generation chips require the firmware be notified before we
    The firmware command API differs slightly between new and old
    rtl8xxxu: Use 1024 byte writes for writing 8723bu firmware
    correct firmware image to load.
    rtl8xxxu: Init the LLT after we start the firmware
    firmware is started.
    rtl8xxxu: Init page boundaries before starting the firmware
    before starting the firmware. This matches the flow in the 8192eu
    rtl8xxxu: Use 1024 byte block loads for 8192eu firmware
    firmware for rtl8192eu.
    * adapt prints to new firmware API
    * infrastructure work for firmware notification (Chaya Rachel)
    firmware interfaces, e820, EFI, and ACPI NFIT table.  This EFI
    by the device. While at it, simplify the firmware support
    The firmware/hardware only supports checking AES-CMAC on RX, not
    iwlwifi: mvm: adapt the firmware assert log to new firmware
    Newer firmware versions put different data in the memory
    which is read by the driver upon firmware crash. Just
    On older firmware, there will be a mismatch between the
    We found this problem on a system where Secure Boot firmware assigned
    is triggered in bnxt_timer() every one second to request firmware to DMA
    Allow all autoneg speeds aupported by firmware to be advertised.  If
    definitions.  The same is true for the firmware bits.  So use the
    Check and set Rx MAC timestamp when firmware indicates it.
    My use case uses GPIOs to transfer a firmware update using a custom
    * free firmware paging memory when the module is unloaded or device removed
    * new firmware support (-21.ucode)
    * enable MU-MIMO and take care of firmware restart(Sara Sharon)
    * support unified uSniffer / regular firmware image (Golan Ben-Ami)
    drm/i915/gen9: Fix DMC firmware initialization
    In commit 1e657ad7 we moved the last step of firmware initialization to
    whenever we program the firmware fix this by moving the initialization
    at76c50x-usb: avoid double usb_put_dev() after downloading internal firmware in at76_probe()
    on entering suspend. However when firmwares support the wowl_cap
    hw. The division of this memory is done firmware compile time. As a
    This is done by reading the memory size from the firmware.
    firmware obtained through ipv6 address notification callback.
    brcmfmac: Add length checks on firmware events
    Add additional length checks on firmware events to create more
    In some cases wiphy->wowlan could be NULL if firmware doesn't have the
    carl9170: import 1.9.9 firmware headers
    Import new headers from my firmware branch:
    a "firmware not ready to run" message roughly once a minute. To
    wil6210: pass is_go flag to firmware
    When starting a PCP, pass the is_go flag to firmware in
    completed. This caused a crash in the firmware.
    Discovery mode is implicitly used by firmware during P2P search.
    ath10k: fix firmware assert in monitor mode
    creation is causing target assert in all qca9888x and qca6174 firmware.
    This issue is originally reported on qca9888 with 10.1 firmware.
    firmware specific and should not be placed in
    flow control firmware only and to my understanding
    there's no non-peer-flow-ctrl QCA4019 firmware.
    However QCA99X0 is planned to run firmware
    keeps it updated and firmware uses it for
    information firmware issues fetch requests to the
    firmware.
    The new firmware, which will be the only user of
    Older firmware hot paths will effectively not use
    The 10.4.3 firmware with congestion control
    The 1:1 mapping isn't the case for older firmwares
    can submit more frames to firmware before it
    Simulate platform-firmware-initiated and asynchronous scrub results.
    scrubs initiated by platform firmware at boot, or by the nfit driver.
    Platform firmware may have initiated a partial scrub prior to the driver
    synchronously waits for a platform-firmware initiated scrub to complete.
      One is a regression with ipr firmware loading caused by one of the
      from the file name string, so now the firmware loader no longer works
      ipr: Fix regression when loading firmware
    to be disabled due to some pending firmware updates.
    If firmware doesn't implement any of the ARS commands, take that to
    Add support for retrieving device resolution (pixels per mm) from firmware
    firmware to add these additional bytes.
    These are the new variables introduced in the firmware.
    To accommodate this firmware needs to reduce 10 peers.
    This fixes a firmware crash with firmware-5.bin_10.2.4.70.22-2.
    pktlog data is different between firmware variants (eg. 10.2 vs 10.4). To
    it is desirable to know which firmware variant has provided the events and
    to determine the firmware variant sending these trace events. So add hw_rev
    way with the existing firmware on a3xx, and if you are trying to do
    [media] coda: add support for firmware files named as distributed by NXP
    Try loading the firmware from firmware files named vpu_fw_imx*.bin, as
    [media] coda: add support for native order firmware files with Freescale header
    Freescale distribute their VPU firmware files with a 16 byte header
    and to reorder the firmware on the fly.
    In fact, future firmware would simply fail to initialize such chip.
    firmware, but older versions are not setting this register.
    If d0i3 is not supported by the firmware (or if it's disabled via
    check that the firmware is loaded before they interact with it.
    status of the firmware.
    management firmware indications [required for link notifications].
    firmware [required for link notifications].
    From Or, reduce the firmware command completion timeout.
    from the device tree - if the HPT size is determined by firmware - or
    and done by the device's firmware during init.
    Miscellaneous updates covering SRIOV, IRQ coalescing, firmware logging and
    bnxt_en: Add installed-package firmware version reporting via Ethtool GDRVINFO
    with the firmware package version in the fw_version string.
    bnxt_en: Fix dmesg log firmware error messages.
    Use appropriate firmware request header structure to prepare the
    firmware messages.  This avoids the unnecessary conversion of the
    bnxt_en: Use firmware provided message timeout value.
    value for firmware message response timeout.  For better portability with
    future hardware or debug platforms, use the value provided by firmware in
    from the firmware.  There are 2 cases:
    instead of MAD_IFC, as MAD_IFC is deprecated on new firmware
    The firmware ctls like "DSP1 Firmware" in wm_adsp codec driver are
    The RPi firmware-based clocks driver can actually disable
    firmware: change kernel read fail to dev_dbg()
    possible for firmware. Before using kernel_read_file_from_path()
    fw_get_filesystem_firmware() already has a check for failure
    "firmware: Be a bit more verbose about direct firmware loading failure"
    To ensure that the SNAP/TCP/IP headers are DW aligned, the firmware
    iwlwifi: mvm: forbid U-APSD for P2P Client if the firmware doesn't support it
    Older versions of the firmware don't support U-APSD for
    firmware is being used.
    MU-MIMO group id management frame. Instead, firmware will
    the VHT MU-MIMO owner before updating the firmware.
    The driver will send a message to the firmware, which will echo it to
    Add support for this messaging mechanism. As the firmware is agnostic to
    The reason for that is that TSF as indicated by the firmware
    on the device / firmware compilation mode, take the size
    of the FIFO dynamically from the what the firmware tells us.
    iwlwifi: mvm: update firmware of VHT MU-MIMO groups status on restart
    The firmware handles the VHT MU-MIMO group data on its own.
    shall update the firmware on the VHT MU-MIMO group membership
    iwlwifi: mvm: bump firmware API to 21
    The driver is now ready to handle this firmware.
    The firmware doesn't send match found notifications when no matchsets
    To handle this, we can use the firmware's ITERATION_COMPLETE
    * fix a race that users reported when we try to load the firmware
    * Luca fixes a very visible bug in scheduled scan: our firmware
    * firmware name update for 8265
    if the firmware had brought up the TV encoder and we were switching to
    If the firmware hadn't brought up HDMI for us, we need to do its
    - Stefan enables the Raspberry Pi firmware driver and power domain drivers
      ARM: bcm2835_defconfig: Enable RPi firmware driver
    ipr: Fix regression when loading firmware
    Module is using a binary firmware file and so should be marked as such.
    frame frame are already enabled. Whilst it's the firmware's job to give
    New generation devices have firmware which has more than 256 flowrings.
    pass on to the firmware so that it knows what it needs to use to receive IPIs
    In rtl8xxxu_load_firmware() check the return value of kmemdup() and
    rtl8xxxu: rtl8xxxu_download_firmware(): Cosmetic cleanups
    rtl8xxxu: Minor cleanup to rtl8xxxu_download_firmware()
       firmware.c, pm.c.
    issue when using firmware with LS2085a compatible property.
      firmware: arm_scpi: add support for 64-bit sensor values
      firmware: arm_scpi: decrease Tx timeout to 20ms
      firmware: arm_scpi: fix send_message and sensor_get_value for big-endian
    the driver/firmware API. Both QoS and VxLAN patches depend on the NDO changes,
    This exposes the firmware's implementation of EFI_RNG_PROTOCOL via a new
    firmware.
    powerpc/powernv: Add powernv firmware interface drivers to powernv_defconfig
    There are a few firmware-provided interfaces for OpenPOWER platforms:
    message due to which firmware unable to post the Reply Data in the host
    This patch will add capability in driver to tell firmware that it can
    (online firmware upgrade). This feature will ensure firmware can be
    tries to send more IOs than post OFU firmware's queue depth.
    1. For iMR controllers, firmware will report two queue depths:
    enabled by default if the firmware supports it. Only specific firmware
    1K max. To enable a queue depth of more than 1K driver requires firmware
    When RDPQ is used, downgrading to an older firmware release should not
    be permitted. This may cause firmware fault and is not supported.
    LDIO to region lock bypass FIFO. With this change in driver, firmware
    controllers (prior to Invader series) as firmware support is not
    3. Task management capable firmware will set is_tm_capable flag in
    firmware API.
    megaraid_sas: Syncing request flags macro names with firmware
    Set bit 12 of additional firmware options 3 to let firmware
    In addition when freeing the firmware's paging download
    ar3k/ramps_0x31010100_40.dfu firmware files that are not in
    linux-firmware yet.
    Bluetooth: btbcm: Fix handling of firmware not found
    If the call to request_firmware() fails in btbcm_setup_patchram(),
    the BCM chip will be operating with its default firmware.
    drivers/firmware/efi/arm-runtime.c: In function 'efi_virtmap_init':
    drivers/firmware/efi/arm-runtime.c:47:2: note: in expansion of macro 'init_new_context'
    Try to work around this issue as we don't have firmware fix
    v2: Write after firmware has been successfully loaded (Ville)
    Try to work around this issue as we don't have firmware fix
    mappings if it's present (to allow us to ignore buggy firmware that sets
    Instead of assuming that firmware would set appropriate attributes in
    data, we can expect some firmware out there which might only set *type*
    The phy's firmware version isn't being parsed properly as it's
    ima: remove firmware and module specific cached status info
    preserve the status information, this patch replaces the firmware and
    firmware: replace call to fw_read_file_contents() with kernel version
    IMA is called by the security function to prevent unsigned firmware from
    being loaded and to measure/appraise signed firmware, based on policy.
    Instead of reading the firmware twice, once for measuring/appraising the
    firmware and again for reading the firmware contents into memory, the
    the in memory file buffer.  The firmware is read once.
    - reordered and squashed firmware patches
    - fix MAX firmware size (Kees Cook)
    Intel TH implements a scratchpad register to indicate to the firmware
    will use "brcm,vulcan" as the compatible property. The firmware
    In the case where the firmware does not tell us the access flags for the
    As long as I tested, DM1000/DM1100/DM1500 and BeBoB firmware can allow
    * fix firmware initialisation regression on wl1271
    * fix a race that users reported when we try to load the firmware
    * fix a very visible bug in scheduled scan: the firmware
    * firmware name update for 8265
    Shannon adds the new opcodes and structures used for asking the firmware
    Add the new opcodes and struct used for asking the firmware to update Rx
    The firmware will take extra steps to be sure the register accesses
    firmware: clean up filesystem load exit path
    load firmware from the filesystem.
    firmware: move completing fw into a helper
    firmware: simplify dev_*() print messages for generic helpers
    0) Historically firmware_class code was added to help
       get device driver firmware binaries but these days
       request_firmware*() helpers are being repurposed for
       later in the future in consideration for a new extensible firmware
    Neerav updates the DCB firmware version related checkes specific to X710
    With the latest firmware, statistics gathering can now be enabled and
    Older drivers working with the newer firmware and newer drivers working
    with older firmware will not run into problems with these bits as the
    i40e: Make the DCB firmware checks for X710/XL710 only
    Make the DCB firmware version related checks specific to
    Moved the firmware version related checks in i40e_sw_init()
    Anjali enables GENEVE capability for XL710/X710 devices with firmware API
    After enabling the Raspberry Pi firmware driver which allow us to handle
    ARM: bcm2835_defconfig: Enable RPi firmware driver
    Note that only codes in mlx4_core that deal with firmware know that uar
    firmware.
    only pre-programmed (firmware, ucode, rtl) parse graphs will be
    firmware/hardware/driver/something is having problems. But normally
    * firmware dump support for w8997 chipset
    * use the regular firmware image of WoWLAN
    * more firmware debug hooks
    flow - Changing this behvaior would require a firmware update.
    On 4-port devices, up-to-date management firmware can support DCBx on
    firmware returned setting can be misleading if autoneg is changed and
    there hasn't been a phy update from the firmware.
    the mess w.r.t reserved field names in the driver/firmware auto-generated file.
    the driver to the firmware and hardware. This file is used from
    * fix a race that users reported when we try to load the firmware
    * Luca fixes a very visible bug in scheduled scan: our firmware
    * firmware name update for 8265
      Please see "drivers/firmware/efi/efi-pstore.c".
    [media] siano: firmware buffer is too small
    The problem is that the Siano driver uses a header to store the firmware,
    firmware: arm_scpi: add support for 64-bit sensor values
    firmware: arm_scpi: decrease Tx timeout to 20ms
    firmware: arm_scpi: fix send_message and sensor_get_value for big-endian
    user space to flash/upgrade SVC firmware.
    drm/i915/guc: Do not wait for firmware load atomically
    iwlwifi: pcie: fix RF-Kill vs. firmware load race
    When we load the firmware, we hold trans_pcie->mutex to
    we load the firmware while the RF-Kill switch is enabled
    (which will happen when we load the INIT firmware to read
    currently loading the firmware. At this stage, the ISR
    wake up the thread that load the firmware. We are in a
    the firmware fails on timeout and releases the mutex.
    interrupt and proceed with firmware load. Make sure to
    The firmware can perform a scheduled scan with not matchsets passed,
    userspace then cannot know when we got new results and the firmware
    ALSA: dice: old firmware optimization for Dice notification
    ensure_phase_lock(). On the other hand, with upgraded firmwares, it
    firmwares.
    Tested on DB3.5 with the generic bridge firmware on APB2.
    Tested on DB3.5 with the generic bridge firmware on APB2.
    Tested on DB3.5 with the generic bridge firmware on APB2.
    firmware: qemu config needs I/O ports
    build error with the newly added qemu firmware code:
    drivers/firmware/built-in.o: In function `fw_cfg_io_cleanup':
    drivers/firmware/built-in.o: In function `fw_cfg_sysfs_probe':
    Fixes: 75f3e8e47f38 ("firmware: introduce sysfs driver for QEMU's fw_cfg device")
    staging: rtl8188eu: add release_firmware() between request_firmware and function error exit
    staging: rtl8188eu: remove pfirmware and fwsize of the hal_data_8188e structure
    The pfirmware is used only in rtl88eu_download_fw function
    (except the kfree(rtlhal->pfirmware) in netdev_close).
    firmware: qemu_fw_cfg.c: fix typo FW_CFG_DATA_OFF
    net: thunderx: bgx: Use standard firmware node infrastructure.
    In the case of OF device tree, the firmware information is attached to
    the BGX device structure in the standard manner, so use the firmware
    ARM: 8511/1: ARM64: kernel: PSCI: move PSCI idle management code to drivers/firmware
    code to drivers/firmware, so that the interface to initialize and
    The padding depends on the firmware version and we need that for BO moves as
    used to store non-reinitializable firmware driver data that's required
    firmware: create directory hierarchy for sysfs fw_cfg entries
    names, under /sys/firmware/qemu_fw_cfg/by_name.
    /sys/firmware/qemu_fw_cfg/by_key entry. If a file name is not
    firmware: introduce sysfs driver for QEMU's fw_cfg device
    are listed under /sys/firmware/qemu_fw_cfg/by_key, in folders
    does not increment the current result pointer and firmware could post the
      drm/i915: Demote user facing DMC firmware load failure message
    firmware: Change the page arrary alloc to vmalloc
    firmware: simplify dev_*() print messages for generic helpers
    0) Historically firmware_class code was added to help
       get device driver firmware binaries but these days
       request_firmware*() helpers are being repurposed for
       later in the future in consideration for a new extensible firmware
          '__UNIQUE_ID_firmware615'
    Instead of calling release_firmware() on every error and then jumping
    lets have a common release_firmware() in the error path.
    This patch also fixes a memory leak where we missed release_firmware()
    If request_firmware() succeeds then rc becomes 0. After that if the test
     - wilc_wlan_get_firmware() warn: variable dereferenced before check 'vif'
    mwifiex: firmware dump support for w8997 chipset
    Current firmware dump solution support w8897 chipset, this
    Trigger firmware dump using,
    mwifiex: increase the priority of firmware dump message
    important to notify user in dmesg that firmware dump
    mwifiex: dynamically increase preallocated firmware dump memory size
    This patch increase firmware dump memory 4K each time, until
    mwifiex: use an extensible framework for firmware dump solution
    This patch apply an extensible firmware dump framework,
    mwifiex: skip firmware dump when read_regs() fails
    firmware dump in this case.
    Also the API has changed for BDW and SKL but firmware haven't updated
      brcmf_sdio_firmware_callback: dongle is not responding
    * Use the regular firmware image of WoWLAN (Matti)
    * more firmware debug hooks (Golan)
    which MAC and firmware version require the workaround to be applied.
    Greg cleans up the driver to limit the firmware revision checks to
    properly handle DCB configurations from the firmware to the older
    firmware with ls2085a compatible property, otherwise the PCI bus won't be
      drm/amdgpu: no need to load MC firmware on fiji
    staging: wilc1000: change_virtual_intf: change codes for unified firmware
    In previous patch, we use unified firmware on wilc, which means we do not need
    to download firmware again to change virtual interfaces.
    firmware. Instead, wilc_set_operation_mode is called when wilc_mac_open to
    let the wilc use the proper firmware. Remove wilc_set_machw_change_vir_if
    staging: wilc1000: use unified firmware
    Use a unified firmware for all mode of operations which are station, ap and
    p2p. Two firmware are introduced for 1002 and 1003 chipset.
    menu. Because it is unclear if all firmwares will provide a
    between the UEFI firmware and the kernel drivers that use it
    qcache active peer count, etc goes via wmi init cmd to qca4019 firmware
    among different firmware revisions.
    For instance, 10.2 and 10.4 firmware has different
    Update 10.4 WMI service map to sync to the latest 10.4 firmware
    greybus: firmware: convert to bundle driver
    Convert the legacy firmware protocol driver to a bundle driver.
    Note that the firmware protocol needs to support the version request
    Note that there is no MODULE_DEVICE_TABLE defined for firmware as we
    The driver does not load firmware for unknown steppings, so these new
    the command to the firmware.
    Change it to return the actual value based on the firmware
    The firmware will return the baid for BA session in the
    Currently firmware is configured to filter out beacons. In case
    Instead, firmware will store the latest beacon and upon exiting
    firmware assert. Make it easier to disable it for those
    iwlwifi: mvm: add trigger for firmware dump upon TX response status
    This will allow to collect the data when the firmware
    If the firmware supports the consolidation of the D0 & D3 images there is
    Do not switch images on suspend / resume, for firmwares that support
    amount of data is written sequentially eg. firmware download.
    If struct xc2028_config is passed without a firmware name,
    In order to avoid it, let's set the cached value of the firmware
      * firmware file name
    down at firmware.
    Use completion ring for ring free response from firmware.  The response
    firmware, powering up the remoteproc fails silently. Add a message
    indicating that the resource table is missing in the firmware.
    This clock is required for loading the qdsp firmware.
      drm/amd/powerplay: Update SMU firmware loading for Stoney
    drm/amdgpu: no need to load MC firmware on fiji
    This patch adds firmware compressed stream capture support
    and DAI hookups for voice control firmware (based on the wm5110
    ASoC: wm5102: Add support for the audio trace firmware
    wm5102 also supports the audio trace firmware, this patch adds support
    ASoC: wm5110: Add support for audio trace firmware
    this function if more compressed firmwares are added in the future.
    of sync with firmware in some corner cases. When this
    happens, driver tries to download the data to firmware
    get detailed chip specific information from our firmware.
    mwifiex: firmware download enhancements
    if firmware is already active or it needs to be freshly
    firmware, other finds the winner flag as false.
    mwifiex_check_fw_status() checks firmware status and also
    check if WLAN is the winner for firmware downloading.
    the firmware, we call this routine again with max
    poll count to wait until firmware is ready.
    the firmware files required by the dgap driver into the linux-
    firmware tree. The dgap driver is rendered useless without this
    firmware and hence this product is considered obsolete by DIGI.
    - SMU firmware loading fix for Stoney
      drm/amd/powerplay: Update SMU firmware loading for Stoney
      drm/radeon: properly byte swap vce firmware setup
    ASoC: wm_adsp: Add debug audio trace firmware
    The audio trace firmware allows the capture of arbitrary streams of
    audio from the DSP and commonly used for debugging other firmwares. This
    The region definition will be shared by most firmwares so give this a
    firmware:
    and for version 2 firmware also:
    problems may occur when using firmware release 1. There is also a
    firmware release. All problems are fixed in the soon te be released
    firmware version 2.
    ath10k: implement basic support for new tx path firmware
    This allows to use the new firmware which
    patch firmware supporting new tx path stops
    logic available in the new firmware. This will be
    This feature flag will be used for firmware which
    software queue state with firmware and firmware
    i.MX7D uboot support psci firmware.
    drm/amd/powerplay: Update SMU firmware loading for Stoney
    Fix firmware init on Stoney when powerplay is enabled.
            + firmware file name
    power measurements, and let the firmware developers not go crazy
    from serial one and stores firmware on NAND. Other than that we define
    interrupt (typically when creating it based on some firmware
    from the firmware periodically, since firmware will reset this to zero
    for various firmware and chipsets. Hence allow periodic update only
    ath10k: rename few function names of firmware stats
    iwlwifi: update support for 3168 series firmware and NVM
    Now it will search for a firmware of this format:
    We receive special notifications from firmware when an error was detected
    and that'll be a more noticed problem for firmwares parsing it, so it'll
    This phone needs to be handled by a specialised firmware tool
    This is not readily apparent, as firmware or bootloader code
    product_id and so we have hacked bootrom earlier using firmware
    protocol, so that VID/PID can be received for fetching firmware
    using firmware protocol and later reusing them while the module switches
    its identity from bootrom to firmware.
    and returned the error code but we missed releasing the firmware.
    drm/radeon: properly byte swap vce firmware setup
    greybus: firmware: abort if AP_READY fails
    greybus: firmware: log the name of the firmware being requested
    People are getting confused as to what the firmware file name is for
    vid/pid values and let people know what to name their firmware files.
    firmware request into an error message if something fails.
    older 10.2.4 firmware incase PEER_STATS service is not enabled
      ARM: bcm2835: Define two new packets from the latest firmware.
    drivers/firmware/broadcom/bcm47xx_nvram.c: use __ioread32_copy() instead of open-coding
    samples from SSRAM and configuring firmware trace verbosity.
    PM and performance related parameters like PM counters, firmware
    The heart of the P-Unit is the Foxton microcontroller and its firmware,
    Query the RoCE support from firmware using the appropriate firmware
    greybus: firmware: remove skip-disconnected flag
    drm/i915: Demote user facing DMC firmware load failure message
    This is an expected error given the lack of the firmware so emit it at
    KERN_NOTICE and not KERN_ERROR. Also include the firmware URL in the
    The complete failure message, including the first line from the firmware
    i915 0000:00:02.0: Direct firmware load for i915/skl_dmc_ver1.bin failed with error -2
    i915 0000:00:02.0: Failed to load DMC firmware [https://01.org/linuxgraphics/intel-linux-graphics-firmwares], disabling runtime power management.
    for the nvram file. This file is not in linux-firmware repo so it may
       - adds empty string and async test cases to firmware class tests
      selftests: firmware: add empty string and async tests
      firmware: actually return NULL on failed request_firmware_nowait()
      test: firmware_class: add asynchronous request trigger
      test: firmware_class: use kstrndup() where appropriate
      test: firmware_class: report errors properly on failure
      firmware: dmi_scan: Save SMBIOS Type 9 System Slots
      firmware: dmi_scan: Fix dmi_find_device description
      firmware: dmi_scan: Clarify dmi_save_extended_devices
      firmware: dmi_scan: Optimize dmi_save_extended_devices
    greybus: firmware: replace colons with underscore in firmware file request
    the firmware file request.  Replacing them with underscores.
    Specifically, we copy firmware into the Android build using a line
        source-repo/ara:00000126:00001000:00000001:00000001:02.tftf:system/etc/firmware/ara:00000126:00001000:00000001:00000001:02.tftf
    firmware: dmi_scan: Save SMBIOS Type 9 System Slots
    firmware: dmi_scan: Fix dmi_find_device description
    firmware: dmi_scan: Clarify dmi_save_extended_devices
    firmware: dmi_scan: Optimize dmi_save_extended_devices
    firmware bug on my laptop, but the message made me think that the
       (e.g., AER), except with VMD, system errors (i.e., firmware first) are
       - added a helper function to retrieve timing parameters from firmware
      Input: rohm_bu21023 - fix handling of retrying firmware update
      USB: mxu11x0: fix memory leak on firmware download
      provide default properties to be used in case the plaform firmware
         the platform firmware fails to provide the properties as expected
      crypto: qat - Rename dh895xcc mmp firmware
    rather denotes a new firmware version that can be found on all new
     - PSCI firmware interface using new arm-smc calling convention from
      ARM: 8481/2: drivers: psci: replace psci firmware calls
         drivers/firmware/efi/ so that it can be reused by arch/arm/.
    Patch #3 introduces a firmware command for updating the root flow table.
    Patch #4 introduces modify flow table firmware command, this command is used
    Patch #9 re-factors ipv4/ipv6 match fields in the mlx5 firmware interface
    Change the mlx5 firmware interface header to make it
    This is generally due to some internal hardware or firmware limitation,
    This is generally due to some internal hardware or firmware limitation,
    piece of hardware/firmware/software that executes a function.
    * query features through firmware command
    * bug fixes and improvements for firmware debug system
    2 patches related to firmware for net-next.
    bnxt_en: Reset embedded processor after applying firmware upgrade
    processor(s) after successfully applying a firmware update. For boot
    bnxt_en: Zero pad firmware messages to 128 bytes.
    to the firmware to 128 bytes.  If these messages are extended in the
    the required firmware files for the module.
    for the firmwares related to the Tegra K1 generation.
      drm/amd/powerplay: Reload and initialize the smc firmware on powerplay resume.
    firmware. Add a new data structure 'nd_poison' which is used as a list
    especially useful if a firmwares network state is changed, and the BLA
    greybus: firmware/bootrom: debug output from bootrom protocol
    successfully.  Use dev_dbg() to fix that by issuing kernel logs when firmware
    drm/amd/powerplay: Reload and initialize the smc firmware on powerplay resume.
      firmware: dmi_scan: Fix UUID endianness for SMBIOS >= 2.6
      firmware handling"
    with the patch that fixes DMC firmware loading, but I
    is possible. Ignore the firmware generated link down events in
    firmware: dmi_scan: Fix UUID endianness for SMBIOS >= 2.6
    Fixes: 9f9c9cbb6057 ("drivers/firmware/dmi_scan.c: fetch dmi version from SMBIOS if it exists")
    4. While DPC is resetting the chip and initializing the firmware, we get
       async events from the firmware about P2P mode, LOOP UP and PORT UPDATE.
    This will alow ISP firmware to store exchange data structures
    used by firmware to host memory provided by driver. ISP firmware
    This will alow ISP firmware to store port database structure
    by driver. ISP firmware supports upto 16k total logins.
    selftests: firmware: add empty string and async tests
    request_firmware_nowait() API, let's use it. Also add tests for the
    * bug fixes and improvements for firmware debug system (Golan and myself)
    firmware: actually return NULL on failed request_firmware_nowait()
    The kerneldoc for request_firmware_nowait() says that it may call the
    provided cont() callback with @fw == NULL, if the firmware request
    introduced in commit 471b095dfe0d ("firmware_class: make sure fw requests
    contain a name"), so _request_firmware() never gets to set the fw to
        # printf '\x00' > /sys/devices/virtual/misc/test_firmware/trigger_async_request
        [10553.726178] test_firmware: loading ''
        [10553.729859] test_firmware: loaded: 995209091
        # printf '\x00' > /sys/devices/virtual/misc/test_firmware/trigger_async_request
        [10733.676184] test_firmware: loading ''
        [10733.959388] [<c02fec60>] (fw_free_buf) from [<c02fed08>] (release_firmware+0x68/0x74)
        [10733.967207] [<c02fed08>] (release_firmware) from [<c0253828>] (trigger_async_request_store+0x60/0x124)
        # printf '\x00' > /sys/devices/virtual/misc/test_firmware/trigger_async_request
        [   32.126322] test_firmware: loading ''
        [   32.129995] test_firmware: failed to async load firmware
    Fixes: 471b095dfe0d ("firmware_class: make sure fw requests contain a name")
    test: firmware_class: add asynchronous request trigger
    ("firmware: fix possible use after free on name on asynchronous
    test: firmware_class: use kstrndup() where appropriate
    request_firmware() doesn't care about that.
    test: firmware_class: report errors properly on failure
    request_firmware() failures currently won't get reported at all (the
        # echo -n notafile > /sys/devices/virtual/misc/test_firmware/trigger_request
        [ 8280.311856] test_firmware: loading 'notafile'
        [ 8280.317042] test_firmware: load of 'notafile' failed: -2
        [ 8280.322445] test_firmware: loaded: 0
    Input: rohm_bu21023 - fix handling of retrying firmware update
    Because of the wrong condition we'd never retry firmware update.
    iwlwifi: mvm: dump the radio registers when the firmware crashes
    iwlwifi: set max firmware version of 7265 to 17
    Just like 7260, 7265 will not have firmware releases newer
    latest firmware releases.
    Fixes: 628a2918afe4 ("iwlwifi: separate firmware version for 7260 devices")
    iwlwifi: mvm: reset mvm->scan_type when firmware is started
    If we don't reset the scan type when the firmware is
    started, we will think the firmware is still configured
    in firmware and it will crash with the following assert:
    iwlwifi: mvm: let the firmware choose the antenna for beacons
    The firmware knows better what antenna to choose.
    Old firmware still need the setting, so use a flag to know
    if the driver should choose the antenna or if the firmware
    now: iwldvm calls stop_device and then starts the firmware
    When firmware crashes, wil driver can notify the platform
    from the wil driver as well as control when firmware
    firmware crash. It is only available when select CONFIG_BRCMDBG.
    brcmfmac: obtain feature info using 'cap' firmware command
    Several features in the driver directly map to a firmware feature
    listed in response of the 'cap' firmware command. For those features
    firmware commands.
    until TX_STATUS event is received from firmware.
    In order to allow user to flash the firmware to,
    Bluetooth: btmrvl: don't send data to firmware while processing suspend
    Usually when driver sends data to firmware it receives TX_DONE
    (DN_LD_HOST_INT_STATUS) interrupt from firmware right away.
    firmware during suspend processing and the TX_DONE interrupt is
    graphics firmware may have programmed the watermarks in a creative way
    shouldn't trust the firmware's watermark programming, but should rather
    interactions of boot loader (RedBoot), firmwares (eCos) and vendor's
    the firmware after bootstrap. Just after loaded, the driver can get
    Between bootstrap, firmware loading and post configuration, some bus resets
    New firmware versions check this value is set correctly, which causes
    This provide the fix for firmware memory by freeing the pointer in driver
    The GuC firmware uses this for various purposes. The ADS itself is
    Commit f06147f9fbf1 (ACPICA: Hardware: Enable firmware waking vector
    present in upstream ACPICA, acpi_hw_set_firmware_waking_vectors(),
    acpi_set_firmware_waking_vectors() and acpi_set_firmware_waking_vector64(),
    platform firmware waking vector.
    activate the firmware, below hung task warning dump is
    [   56.517264] Bluetooth: Downloading firmware failed!
    [  240.277825] Workqueue: events request_firmware_work_func
    [  240.334741] [<ffffffc000596780>] request_firmware_work_func+0x44/0x80
    [  240.415867] Workqueue: events request_firmware_work_func
    [  240.472705] [<ffffffc000596780>] request_firmware_work_func+0x44/0x80
    Fixes: 4863e4cc31d647e1 ("Bluetooth: btmrvl: release sdio bus after firmware is up")
    ARM: 8481/2: drivers: psci: replace psci firmware calls
    around a couple of firmware bugs, and generic wait-until-sent support
    the firmware claims Win8 compatible while the acpi_video interface
    firmware implementatinon, the reported events are wrong. E.g. they lag
    The firmware driver can be a loadable module, but the power domain
    :(.text+0x17e59c): undefined reference to `rpi_firmware_property'
    :(.text+0x17e51c): undefined reference to `rpi_firmware_get'
    :(.text+0x17e244): undefined reference to `rpi_firmware_property'
    to be enabled when the firmware driver is built-in. Other users
    of the firmware driver may still be loadable modules and not
    everyone needs the power domains, so we don't change the firmware
      ARM: bcm2835: Define two new packets from the latest firmware.
    [   23.468123] Workqueue: events request_firmware_work_func
    (request_firmware_work_func+0x30/0x58)
    [   23.685784] [<c04387ec>] (request_firmware_work_func) from
    * don't load firmware that won't exist for 7260
    greybus: interface: Fetch and expose version of interface's firmware
    The version of the currently running firmware on the module is useful
    Default gpio and gap is downloaded to firmware while
    It will be used to change the firmware without actually
    pattern to firmware. As packet offset is not adjusted
    accordingly firmware end up matching the pattern at wrong
    maintain backward compatibility with old firmware.
    USB: mxu11x0: fix memory leak on firmware download
    having downloaded the firmware during first probe.
    The firmware sets the secondaries spinning waiting for a non-NULL
    the card's internal firmware to be ready. From a CPU perspective this
    Mainly clean-ups, optimizations, and updating to the latest firmware
    Newer firmware will return the ring group resource when we call
    hwrm_func_qcaps().  To be compatible with older firmware, use the
    number of tx rings as the number of ring groups if the older firmware
    bnxt_en: Add support for upgrading APE/NC-SI firmware via Ethtool FLASHDEV
    NC-SI firmware of type apeFW (10) is now supported.
    command to inform firmware that this function has been unloaded.
    This is to let firmware keep track of driver present/absent state
    On BMC machines, console output is controlled by the OPAL firmware and is
    crypto: qat - Rename dh895xcc mmp firmware
    Fixes: 51f1dc421b1f ("firmware and svc: detect the difference between ES2 and ES3 chips")
    the DSP if the firmware supported compressed data capture. The buffer
    capabilities per firmware and check these match the stream being opened.
    greybus: firmware and svc: detect the difference between ES2 and ES3 chips
    allowed proper detection of parameters even if the firmware had already
    In that case, the firmware will never enable MTRRs and it is obviously
    running in non-secure mode and that the secure firmware has
    inside of the Raspberry Pi firmware driver, and wrote the non-USB
    work out from the firmware driver).
    ARM: bcm2835: Define two new packets from the latest firmware.
    These packets give us direct access to the firmware's power management
    Revise to now pass service params with the values to the firmware and
    staging/rdma/hfi1: Support alternate firmware names
    Add support for an automatic fallback for firmware names to support
    debug-signed and production-signed firmware images.
    drm/amd/amdgpu: enable powerplay and smc firmware loading for Fiji.
    firmware loading for other IP blocks (GFX, SDMA, etc.).
    The SMU manager handles firmware loading for other IP
    This implements the SMU firmware manager interface for CZ.
        add load_mec_firmware function
    The SMUMGR is one sub-component of powerplay for SMU firmware support.
    The SMU handles firmware loading for other IP blocks (GFX, SDMA, etc.)
    drm/amdgpu: disable legacy path of firmware check if powerplay is enabled
    It seems it has been flashed with the wrong firmware and needs to have
    alternative firmware uploaded at boot to make the touchscreen work
    phase, dump the periphery registers only if the firmware
    iwlwifi: mvm: small update in the firmware API
    Small change in firmware API, no functional change.
    Older firmware is not affected as it does not look into
    bitmask more closely tied to the actual firmware programming.
    * don't load firmware that won't exist for 7260
    reading the same hardware (e.g. mainboard firmware) must use the same
    DSP firmware supports 24-bit data, expose functionality to
    This patch fixes rmmod failure. wilc->firmware needs to be set to NULL because
    it is used again to check firmware is released when module exit.
    Fixes: 8b8ad7bc90bc ("staging: wilc1000: rename wilc_firmware in the struct wilc")
    Driver requested device firmware version string during probe using
    only 24 byte long buffer. That buffer is too small for newer firmware
    versions, which causes device firmware hang - device stops responding
    * don't load firmware that won't exist for 7260
    init. The configuration data is read with request_firmware from
    Before writing the firmware, it is necessary to reset the device. If
    reset), writing the firmware will not be available for these devices.
    Older firmwares don't specify access flags for the controls,
    unfortunately the usage of some of these firmware relies on being able
    powerpc/powernv: Remove OPALv2 firmware define and references
    The OpenPower Abstraction Layer firmware went through a couple
    When running on newer OPAL firmware that supports sending extra
    For iwlwifi, this fixes a firmware crash when reprogramming with an
      drm: Allow override_edid to override the firmware EDID
    QCA988X firmware, 10.2.4.70.14-2 and above, is the only one
    firmware without an actual EPOW event being reset. This patch avoids these
    shim between the EFI firmware and the normal zImage entry point, and
    the ME firmware on a platform, so increase the timeout to 300ms.  Added
      fpga manager: Fix firmware resource leak on error
    iwlwifi: separate firmware version for 7260 devices
    firmware versions any more (only bugfixes), and haven't been
    firmware configuration state (i.e. D0, D3 or D0i3) is abstracted from
    This invalidates the number of frames we tell the firmware
    the SP and to send an EOSP so that the firmware can be in
    an intermediate add or delete push to the firmware.
    Due to timing changes to the ME firmware in Skylake, this timer
    We send an ADD_STA to instruct the firmware to release
    we need to block the Tx queues until the firmware replies
    the firmware. The same callback will be called for all the
    add or delete push to the firmware.  The code had evolved from using
    ASoC: wm_adsp: Add locking to DSP firmware controls
    Locking is currently missing from the DSP firmware controls, which can
    ASoC: wm_adsp: Add power lock for firmware change control
    We should hold the DSP power lock whilst changing the firmware since we
    Patch #1 add flow steering API firmware commands.
    net/mlx5_core: Introduce flow steering firmware commands
    Introduce new Flow Steering (FS) firmware commands,
    A specific request from the firmware people is the ability to back-off from
    ath6kl: add log messages for firmware failure cases.
    This gives a user a chance to know why a firmware load
    wlcore/wl12xx: spi: fix oops on firmware load
    Oops 5 (page fault) is generated during current wl1271 firmware load
    [<bf21c694>] (wlcore_boot_upload_firmware+0x1ec/0x458 [wlcore])
    [  294.914038] [<bf21c694>] (wlcore_boot_upload_firmware [wlcore]) from
    firmware. We will also set regulatory flags to disable beacon
    It's been observed that even if firmware returns an error
    are returned with success status by firmware. Actual connection
    The ADF7242 requires an add-on firmware for the automatic IEEE 802.15.4
    operating modes. The firmware file is currently made available on the
    drm: Allow override_edid to override the firmware EDID
    vfunc or via the firmware EDID mechanism.
    about hardware and firmware version/revision of Intel Bluetooth
    like QEMU to describe the VM layout to a TrustZone aware firmware
    we don't have the proper GuC firmware for Kabylake.
    firmware to a newly booted WCNSS chip.
    firmware topology.
    * unified handling of firmware files
    * add thermal throttling support for 10.4 firmware
    * use firmware's native mesh interface type instead of raw mode
    * firmware debugging infra improvements
    default value as part of 'ath10k_core_init_firmware_features'
    A particular ask from the firmware people for some time now has been the
    this firmware bug.  We've been lucky so far, but we should
    If the boot firmware does not support ACPI we need a way to pass device
    If multiple devices share single firmware node like it is case with MFD
    devices, the same firmware node (ACPI) is assigned to all of them. The
    function also modifies the shared firmware node in order to preserve
    secondary firmware node of the device in question.
    If the new device which is sharing the firmware node does not have
    of the shared firmware node losing all built-in properties.
    Prevent this by setting the secondary firmware node only if the replacement
    drivers. This is useful if the system does not have any firmware interface
    firmware node is a copy of the original. This allows passing property set
    as fallback if the primary firmware interface (DT, ACPI) does not have the
    will be based on the same firmware and will need this quirk
    With v4.7+ MCFW, the boot count in firmware doesn't change as that is
    to already supported devices, using the same chipset and firmware
    The 802.3 framing has provided a steady supply of firmware bugs for
       honest representation of the hardware/firmware interface.
       We have so far required userspace to configure the firmware for
    IP packets over the USB link.  This firmware feature used to be
    Traditionally there was no way to verify the firmware mode
    without attempting to change it.  And the firmware would often
    established.  In some cases, this could be a hidden firmware
    But newer generations of QMI hardware and firmware have moved
    increasing number of bugs in the already buggy "802.3" firmware
    firmware mode without trying to modify it.
    Following this development, the latest QMI hardware and firmware
    The firmware setup is fully delegated to the QMI userspace
    "negotiated" between firmware and userspace. Allowing userspace
    clean delegation of firmware management to userspace.
    resetting (some of) the firmware state.
    on firmware state while both the netdev and the character
    To make sure the MDM9x30 keeps firmware state, we need to
    future, change the http://linuxtv.org references at firmware/WHENCE
    Both PF and VF use the same driver and submit commands directly to the firmware.
    * add thermal throttling support for 10.4 firmware
    * use firmware's native mesh interface type instead of raw mode
    Non-disk devices might support ALUA, but the firmware
    commit actually masked 2 firmware bugs that are annihilating each other:
    However, the firmware presents an other bugs which allowed 6d4f5440
    of the feature 5, the firmware answers "03 03 00". The fields are correct
    To sum up: 2 bugs in the firmware were hiding that we were accessing the
    requesting resources, that's fatal. Either the firmware or NVM is badly,
    because firmware configured the PWM and Linux doesn't touch it.
    required by the DSP firmware sequence.
    iwlwifi: mvm: use firmware station lookup, combine code
    In most cases, the firmware will already match the station that
    Also change the fallback case (no station info from the firmware)
    setting, and need a new firmware.
    usb: host: xhci-plat: add firmware_name in xhci_plat_priv
    This patch adds a member "firmware_name" in struct xhci_plat_priv
    to simplify the code to match specific firmware name.
      ibm,firmware-allocs-memory@1000000000 (0x0000001000000000--0x0000001000dc0200)
    greybus: firmware: Fetch es2 VID/PID to distinguish module vendors
    need to hack that up to distinguish different modules and their firmware
    This fetches VID/PID (over firmware protocol) for es2 chip only, when
    Since only the bootrom contains a firmware protocol cport, this only
    When debugging firmware problems it's useful to check checksums of each
    firmware-N.bin          cc3fb466
    ath10k: print crc32 checksums for firmware and board files
    ath10k_pci 0000:02:00.0: firmware ver 10.4.1.00030-1 api 5 features no-p2p crc32 d2901e01
    initialisation and firmware boot, but that's problematic if something goes
    wrong and there's no easy way to know what firmware version was used and so on.
    ath10k: reorganise hardware and firmware info messages
    QCA988X firmware starting from 10.2.4.70.12-2 has capability to support
    The firmware and this patch together make native Wi-Fi mode comply to
    IEEE802.11s Mesh frame in open mode, but the firmware doesn't yet
    QCA988X firmware starting from 10.2.4.70.12-2 supports new
    Update WMI 10.x service map to sync with firmware 10.2.4.70.12-2
    released on 11/11/2015 which is the latest QCA988X firmware as of
    brcmfmac: Unify methods to define and map firmware files.
    All bus drivers (sdio, usb and pcie) require firmware files which
    of device id and revision to firmware and nvram file is done by
    to simplify and unify the definition of these firmware and nvram
    firmware and not really an error. The code is not treating it as
    On wcn3620, firmware response to remove_bsskey uses the new, larger
    On wcn3620, firmware response to trigger_ba uses the new, larger
    WCN3620 firmware introduces a new async indication, we need to
      The nouveau fixes look large as the firmware context files are
    regions due to the way the firmware toolchains mix code and
    broken firmware that accesses those addresses.
    The firmware can support PSCI-1.0 in fact. This change also enables
            fix the optional PDSP firmware loading
      soc: ti: use request_firmware_direct() as acc firmware is optional
         coordination information provided by the platform firmware
    ASoC: wm_adsp: Expand the list of available firmwares
    Expand the list of available firmware names to include a good selection
    and sysplex name through the /sys/firmware/cpi interface.  In
    firmware capability flag.
    iwlwifi: mvm: add trigger for firmware dump upon TDLS events
    firmware data when they occur.
    The firmware debug trigger ID is always a compile-time constant,
    If the firmware sends LMAC scan notifications while a UMAC scan is
    so selectively enable this on specific hw - as signaled by the firmware.
    brcm80211: Delete an unnecessary check before the function call "release_firmware"
    The release_firmware() function tests whether its argument is NULL and then
    driver should support a firmware feature called RSDB, which stands
    firmware except for AP config. When the device supports RSDB then
            - Fix the optional PDSP firmware loading
      soc: ti: use request_firmware_direct() as acc firmware is optional
    ASoC: Intel: sst: only select sst-firmware when DW DMAC is built-in
    sst-firmware when DW DMAC is available") does not fix the 0day
    Here we fallback to select sst-firmware only when DW DMAC
    fpga manager: Fix firmware resource leak on error
    If fpga_mgr_buf_load() fails, the firmware resource previously allocated
    by request_firmware() is leaked. Fix it by calling release_firmware()
    Whenever DMC firmware put the HW into DC State a bunch
    soc: ti: use request_firmware_direct() as acc firmware is optional
    When firmware image for PDSP firmware is absent in the file system
    the default timeout. request_firmware_direct() is to take care of
    such optional firmware loading and hence replace the call in the
    During suspend-to-idle we need to keep the DMC firmware active and DC6
    We have requested the firmware but missed releasing it.
    firmware of the modem. However, that isn't possible when the cdc-acm
    * bump API to firmware 19 - not released yet.
    linux-firmware; This patch incorporates the FW in the bnx2x driver.
      drm/amdgpu: fix typo in firmware name
    greybus: firmware: break long lines
    greybus: firmware: fix information leak
    Add missing sanity checks on get_firmware-request offset and size
    currently controls both the 32-bit firmware-image offset and the amount
    loopback driver in the firmware drop invalid packages.
    firmware dvb-demod-si2168-b40-01.fw.
    In case the request to locate the firmware file part 2 fails, the error
    path releases the already freed firmware memory location again. Thus
    reset the firmware pointer to NULL after releasing firmware file part 1.
    [media] si2157: return -EINVAL if firmware blob is too big
    A previous patch added a check if the firmware is too big, but it didn't
     the Laura's "si2157: Bounds check firmware" patch]
    Apparently the firmware of the Chromebook in question enables the panel
      drm/amdgpu: fix typo in firmware name
    When downloading the firmware/module, if the ring buffer boundary
    Sometimes firmware D3 IPC fails causing firmware to be in invalid
    On D0, firmware will be redownloaded and DSP will be back in
    During firmware download, dma buffers are allocated in prepare
    qla2xxx: Remove unavailable firmware files
    Remove firmware binary names for the ISPs, which are not submitted to
    linux-firmware.
      support recent firmware, and fix an uninitialized variable warning in
    drm/amdgpu: fix typo in firmware name
    firmware. It is not needed any more since we uninit CDCLK now with the
    With the DMC firmware installed we don't need to handle HW resources
    that are handled automatically by the firmware. Besides being redundant
    this can also interfere with the firmware, possibly getting it into a
    As part of the init sequence we also have to reprogram the DMC firmware
    - don't try to re-program the DMC firmware if it failed to load
    * bump API to firmware 19 - not released yet.
    state the firmware (or previous kernel in the case of kexec)
    or just reserved by the firmware) is inadvertently mapped into the end of
    in order to deal with firmware that gives the OS bad information
    Currently it's assumed that firmware exports only the class of sensors
    supported by the driver. However with newer firmware or SCPI protocol
    class of sensor is encountered in the firmware.
    devices based on Qualcomm chipsets and firmware use the static USB
    Huawei firmwares will dynamically assign interface numbers. Functions
    are renumbered when the firmware is reconfigured.
    The firmware name is hard coded which doesnt allow to load
    firmware. In these case when module has to bind, then the
    Use the one-shot LCB write implemented in the 8051 firmware.
    firmwares.
    staging/rdma/hfi1: Always download SBus firmware
    B0 dual port parts require the SBus firmware to always be
    since the SBus firmware download already does that.
    staging: wilc1000: remove goto from linux_wlan_firmware_download
    This patch remove goto feature from linux_wlan_firmware_download function.
    staging: wilc1000: remove goto from linux_wlan_start_firmware
    This patch remove goto feature from linux_wlan_start_firmware function.
    staging: wilc1000: rename firmwareIPAddress of fuction Handle_set_IPAddress
    This patch renames firmwareIPAddress of fuction Handle_set_IPAddress to
    firmware_ip_addr to avoid CamelCase naming convention.
    staging: wilc1000: linux_wlan_get_firmware: change argument p_nic with dev
    staging: wilc1000: linux_wlan_start_firmware: change argument with dev
    staging: wilc1000: linux_wlan_firmware_download: change argument
    firmware requires that.  To do so, we are overwriting the HW key index
    all the non-PTK keys with index 1, because the firmware only allows
    iwlwifi: bump firmware API to 19
    This firmware will be the first firmware to support
      drm/sti: load HQVDP firmware the first time HQVDP's plane is used
      arch     certs    CREDITS  Documentation  firmware  include
    Add better support for firmware loading
      drm/sti: load HQVDP firmware the first time HQVDP's plane is used
         firmware interface agnostic way (Suravee Suthikulpanit, Jeremy
    Of a word in struct htt_data_tx_desc htt version >= 3.4 firmware uses
    and MSB 16-bit is for peerid. But other firmwares using version 2.X
    (home channel) is being always passed with those firmwares. There may be
    issues when non-zero freq is passed with firmware using < 3.4 htt version.
    firmware does not cause any real issues because this new member is not
    used in 10.4 firmwares so far (10.4.1.00030-1). This difference in WMI
    with the current 10.4 firmwares, but the WMI interface has to be
    fixed to work with future 10.4 firmwares which may be using this new
    As during disabling dc6 no need to check for csr firmware
    make sure that the firmware loading is complete.
    least the firmware program is lost during S3 and we need to reprogram it
    flush_work added to complete firmware loading task.
    power well refernece and rpm count during firmware loading
    ensure rpm will be blocked if firmware is not loaded.
    drm/i915: Use request_firmware and our own async work
    As all csr firmware related opertion are not using any
    drm/i915/gen9: Don't try to load garbage dmc firmware on resume
    We need to make sure we don't put garbage into the hw if dmc firmware
    Before enabling/disabling DC6 check if the firmware is loaded
    firmware may not be loaded yet, that's addressed in an upcoming patch.
    [imre: added code and note about checking if the firmware loaded ok,
    prevent device D3. But dmc firmware is required even earlier (namely
    much, but since the firmware loading task should completely fairly
    This requires a trigger from rpm. To ensure the dmc firmware
    by not releasing the rpm reference if firmware loading is
    This was observed on a new firmware change, which was subsequently
    to pass a millseconds timestamp to the firmware. This change maintains
    The structure used to pass the timestamp to firmware is 48 bits and
    The alternative change would pass all the bits to the firmware:
    _firmware_event_work() concurrently deletes items from the list.
    MIPS: Lantiq: Add support for gphy firmware loading for ar10 and grx390
       - A driver to talk to the firmware on Raspberry Pi"
      ARM: bcm2835: Add the Raspberry Pi firmware driver
      firmware: qcom-scm: build for correct architecture level
      soc: ti: add firmware file name as part of the driver
            Skylake GuC firmware fixes
      drm/i915: Fix locking around GuC firmware load
    * aac_release_resources() initiates firmware shutdown
    entry, but if the firmware changes from one format to the other, it will
    When external target arrays are present, disable the firmware's
    drm/i915: Add dmc firmware load state and version to error state
    We have had one case where buggy csr/dmc firmware version influenced
    gt side and caused a hang. Add dmc firmware loading state and
    We check these to determine firmware loading status. Include
    them to help to debug causes of firmware loading fails.
    For bxt CSR firmware exposes a count of dc5 entries. Expose
    The CSR firmware expose two counters, handy to check if we are indeed
    drm/i915/skl: Print the DMC firmware status in debugfs
    drm/i915/skl: Refuse to load outdated dmc firmware
    firmwares <1.21. There is a suspicion that this causes
    as upgrading the firmware to 1.21 makes these problems
    firmware packages is very like to be 1.19. Play it safe and
    refuse to load a firmware version that may affect gpu
    drm/i915/skl: Store and print the DMC firmware version we load
    That can be handy later on to tell which DMC firmware version the user
    The DELL PERC5 controller firmware does not list tape drives in response
    - A few fixes for the firmware download implementation for the nfcmrvl
    A similar thing is present in the Surface 3 firmware - see
      Input: edt-ft5x06 - work around FT5506 firmware bug
       - Clear IORESOURCE_UNSET when reverting to firmware-assigned address (Bjorn Helgaas)
    firmware not being loaded during power well toggling. It also removes a
      ACPI platform firmware uses that extension to organize device
      firmware support) and suspend-to-idle (or other variants of system
      suspend the platform firmware is not involved in) and possibly
         platform firmware this way) automatically and make them available
         firmware node types, and support for the "dma-names" device
         entries in the order expected by platform firmware (and mandated by
         platform firmware is going to be involved in the upcoming system
         to vary depending on platform firmware settings (Srinivas
    BT coex feature in firmware will have side effects if the radio's GPIO are
    firmware BT coex logic and set the feature as disable by default to avoid that
    The firmware support this feature since 10.2.4.54 on 2G-only board, dual band
    and the btcoex file is not created if firmware doesn't support it.
    pdev params that 10.4 firmware defines.
    defines to be in sync with 10.4 firmware.
    10.4 firmware to be sync with 10.4 firmware.
    ath10k: add thermal throttling support for 10.4 firmware
    This patch enables thermal throttling support for 10.4 firmware.
    and a firmware feature flag ATH10K_FW_FEATURE_MFP_SUPPORT. This is because
    only firmwares 10.1.561 and above have support for MFP.
    parts of the firmware.
    drm/i915: Fix locking around GuC firmware load
    The GuC firmware load requires struct_mutex to create a GEM object,
    but this collides badly with request_firmware. Move struct_mutex
    entire load process, including request_firmware.
    [   20.452014]        [<ffffffff8157e1e7>] _request_firmware+0x277/0x880
    [   20.452038]        [<ffffffff8157e9e4>] request_firmware_work_func+0x34/0x80
    [   20.452221]        [<ffffffff8157e147>] _request_firmware+0x1d7/0x880
    [   20.452242]        [<ffffffff8157e821>] request_firmware+0x31/0x50
      drivers/firmware: Make efi/esrt.c driver explicitly non-modular
         new firmware independent irqdomain core
    drm/sti: load HQVDP firmware the first time HQVDP's plane is used
    The way to load the HQVDP firmware has been updated.
    HQVDP firmware is now loaded the first time an HQVDP plane is used and
    available so request_firmware function will match.
    SPCv may not process them and the firmware may get into an unrecoverable
    ATTO adapters do not support this feature.  If the firmware fails to be
      PCI: Clear IORESOURCE_UNSET when reverting to firmware-assigned address
    already been brought up by firmware, we need not call dw_pcie_setup_rc(),
    The firmware of ESPRIMO Mobile M9410 has two video output devices that
      PM / PCI / ACPI: Kick devices that might have been reset by firmware
      PM / sleep: Add flags to indicate platform firmware involvement
    Quoting Sudeep Holla: "the firmware assumes the flash is
    * fw_stats support for 10.4 firmware
      firmware download support for this driver's core.
    * fw_stats support for 10.4 firmware
    ath6kl: fix firmware version assignment
    firmware version string.  Fix this by paying attention to the
    WMI call to the firmware may fail. In this case, need to
    ath10k: add fw_stats support to 10.4 firmware
    This patch adds support for getting firmware debug stats in 10.4 fw.
    to communicate UTF firmware.
    the CNEX Labs Westlake SSD implements a LightNVM compatible firmware and
    megaraid_sas: Indicate online firmware upgrade support for Secure JBOD feature
    strictly in firmware. These include (i) the Flash Translation Layer
    instance.requestorId. Check for plasma firmware 1.11 are now
    Syncro firmware supports round robin I/O switching on dual path. Driver
    megaraid_sas: Print critical firmware event messages
    Print firmware events in human-readable form. This will help users track
    any critical firmware events without special application support.
    Try to do chip reset at driver load time. If firmware fails to reach
    Driver will expose max sge = 256 (earlier it was 64) if firmware
    error handling, if JBOD map is failed/not supported by firmware, driver
    megaraid_sas: Synchronize driver headers with firmware APIs
              explanation: No firmware available yet.
    The patch includes code for enabling adaptive CCA for 10.2.4 firmware on
      drivers/firmware/efi/fake_mem.c:186:20: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
    memory map has been allocated by the firmware (which only uses
    * use devcoredump when triggered by firmware event
    * firmware crashdump using devcoredump
    (output high = high voltage, output low = low voltage).  The firmware
       (the reset is de-asserted by default or by a firmware, for example)
    staging/rdma/hfi1: Load SBus firmware once per ASIC
    Using fw_sbus_load to control SBus firmware load doesn't scale across multiple
    HFI1 cards in a single system. This patch ensures that the SBus firmware is
    staging/rdma/hfi1: Fix port bounce issues with 0.22 DC firmware
    The DC firmware overwrites the enable_lane_tx register and does not update it
    staging/rdma/hfi1: Reset firmware instead of reloading Sbus
    Reset firmware instead of reloading Sbus firmware if it's already done for this
    ASIC.  To work around thermal polling problem in firmware, don't reload Sbus
    firmware, instead, reset the firmware on the initialization of the second HFI.
    The latest version of the 8051 firmware will wait longer
    SPI transfer clock (e.g. during firmware download).
    NFC: nfcmrvl: add firmware download support
    Implement firmware download protocol for Marvell NFC controllers.
    firmware download phase.
    - HCI_DM_LOAD: Allow to load a firmware into the CLF. A complete
    firmware bug. It could be transparent for the user but we should
    So far, in early development firmware, because
    After several trials on commercial and qualified firmware it appears
    firmware bug. It could be transparent for the user but we need to
    - HCI_DM_DIRECT_LOAD: Allow to load a firmware into the CLF.
    - HCI_DM_FWUPD_START: Allow to put CLF into firmware update mode.
    - HCI_DM_FWUPD_END:  Allow to complete firmware update.
    SoCs in general have small SRAM, on which a tiny firmware or a boot
    firmware that initialises the XpressRICH3 controller one can
    about hardware or firmware version.
    For example after a firmware update CLF pipes are cleared. Changing
    For example after a firmware update CLF pipes are cleared. Changing
    for example after a firmware update.
    This pull request contains the Raspberry Pi firmware driver, for communicating
    Eric adds the actual firmware driver and Alexander fixes the header file which
      ARM: bcm2835: Add the Raspberry Pi firmware driver
    FDP driver needs to send the firmware as regular packets
    For the firmware update the driver may use nci_send_data.
    staging: rtl8192e: Swap firmware endian in _rtl92e_fw_prepare()
    Add function to request and prepare firmware image.
    Add function waiting for firmware load/boot;
    staging: rtl8192e: Rename rt_firmware::firmware_status to status
    rt_fw_blob contains single firmware blob and its size.
    Update firmware loading code accordingly.
    This makes rt_firmware::cmdpacket_frag_thresold and
    be sent to the firmware, which are the SA and the BSSID. For this case, both
    staging: wilc1000: rename wilc_firmware in the struct wilc
    This patch renames wilc_firmware in the struct wilc to the firmware. In
    addition, null assignments to the wl->firmware after release_firmware
    This patch adds mutual inclusion protection for the rpi firmware header.
    The Marvell WiFi-Ex driver tries to load a firmware on probe. So if the
    driver is built-in and probed before a firmware is available, this is
    requiring an initramfs or to have the firmware built into the kernel.
    buffer that's been initialized by firmware before the kernel boots.
    PSCI firmware version, since, if the PSCI_FEATURES function id is not
    To solve this issue, this patch adds code that checks the PSCI firmware
    OS makes sure that it is calling 1.0 functions only if the firmware
    to non-compliant PSCI firmware implementations.
    firmware is loaded.
    DSP firmware has interface change for SSP node index structure.
    the DSP firmware structure.
       - si2157 and si2158: check for array boundary when uploading firmware
      [media] si2168: Bounds check firmware
      [media] si2157: Bounds check firmware
      [media] c8sectpfe: fix ininitialized error return on firmware load failure
    range, but it turns out the firmware needed to change to running it at
    Included are also some clean ups of the io_ti firmware handling.
    be removed once the firmware has caught up and uses the new number.
    [media] si2168: Bounds check firmware
    When reading the firmware and sending commands, the length must
    buffer and smashing the stack if the firmware is not in the expected
    si2168 11-0064: downloading firmware from file 'dvb-demod-si2168-b40-01.fw'
    si2168 11-0064: firmware download failed -95
    [media] si2157: Bounds check firmware
    When reading the firmware and sending commands, the length
    buffer and smashing the stack if the firmware is not in the
    the firmware file then also we have been returning the garbage.
    [media] c8sectpfe: fix ininitialized error return on firmware load failure
    return the error return from the call of request_firmware_nowait
    Merge tag 'firmware/psci-1.0' of git://git.kernel.org/pub/scm/linux/kernel/git/lpieralisi/linux into next/drivers
    This pull request contains patches that enable PSCI 1.0 firmware
    * tag 'firmware/psci-1.0' of git://git.kernel.org/pub/scm/linux/kernel/git/lpieralisi/linux:
      drivers: firmware: psci: add system suspend support
      drivers: firmware: psci: define more generic PSCI_FN_NATIVE macro
      drivers: firmware: psci: add PSCI v1.0 DT bindings
      drivers: firmware: psci: add extended stateid power_state support
      drivers: firmware: psci: add PSCI_FEATURES call
      drivers: firmware: psci: move power_state handling to generic code
      drivers: firmware: psci: add INVALID_ADDRESS return value
    firmware info., returns error for setup_rss error case, restores L1
    firmware string version print to display N/A in case FW isn't present
    Configuration in case the firmware rejects the request and then restore
    ASoC: Intel: sst: only use sst-firmware when DW DMAC is available
    baytrail/haswell/broadwell ADSP firmware loading, but for
    skylake, we don't use it, compiling sst-firmware.c may
    Here we only compile sst-firmware when CONFIG_DW_DMAC_CORE
    RSS QPs), when the firmware supports this feature. In addition, all rx
    The size / offset information of all firmware ingredients are
    * firmware crashdump using devcoredump
    brcmfmac: rename firmware_path to alternative_fw_path
    In brcmfmac the module parameter "firmware_path" is used as an
    alternative relative path under the search path used by firmware_class
    Upon PSM watchdog event received from firmware the driver will obtain
    This adapter works with the existing linux-firmware.
    To work around the issue, I got the firmware
    in /lib/firmware/brcm/BCM.hcd. After that:
    bluetooth hci0: firmware: direct-loading firmware brcm/BCM.hcd
    Bluetooth: btbcm: Fix firmware version number calculation
    The calculation for the firmware version number is off by one bit.
    loading the firmware. So for debugging purposes, print them out.
    For Intel controllers with firmware that allows tracing of baseband
    This catches any pending imprecise abort that the firmware/bootloader
    ath10k: make fw stats prints specific to firmware version
    in wmi_ops. That way it's easier to add fw_stats support to 10.4 firmware.
    versions of the firmware.
    Not zeroing EFER means that a 32-bit firmware cannot enter paging mode
    * fix firmware filename for 3160
    * mvm: fix D3 firmware PN programming
    * dvm: fix D3 firmware PN programming
    Input: edt-ft5x06 - work around FT5506 firmware bug
    This doesn't cover things like firmware-defined topologies like
    With respect to a firmware change, the Switch Multicast ID (SMID)
      firmware: qcom-scm: build for correct architecture level
            firmware necessary for accumulator operation.
      soc: ti: add firmware file name as part of the driver
    greybus: loopback: capture and present firmware supplied latencies
    2. GPBridge's view of internal firmware-only latency
    - gpbridge_firmware_latency_avg_con
    - gpbridge_firmware_latency_max_con
    - gpbridge_firmware_latency_min_con
    - gpbridge_firmware_latency_avg_dev
    - gpbridge_firmware_latency_max_dev
    - gpbridge_firmware_latency_min_dev
    greybus: loopback: add tracker variables to hold firmware timestamps
    This patch adds tracker variables to hold the incoming firmware derived
    greybus network including HSIC, UniPro and firmware incurred latencies a
    greybus: firmware: use the bundle struct device instead of the connector
    This patch moves the firmware driver to use the bundle pointer instead
    from the firmware in terms of performance. Now that the driver is in use
    and we know how well firmware responds to our requests, we can shorten
    This version check only applies to very, very old firmware,
    greybus: loopback: add reserved fields to track firmware latencies
    fields, which the implementation is using to track internal firmware
    On device initialization, wait till firmware indicates that that it is done
    Also update initialization segment layout to match driver/firmware
    firmware version which indicates that the device is not accessible.
    ARM: bcm2835: Add the Raspberry Pi firmware driver
    of the firmware, which is most notable in that it will let us get and
    firmware: qcom-scm: build for correct architecture level
    make[4]: *** [drivers/firmware/qcom_scm-32.o] Error 1
      firmware side"
    It adds support for the following features provided by SCP firmware
      firmware: arm_scpi: Extend to support sensors
      firmware: add support for ARM System Control and Power Interface(SCPI) protocol
        in the firmware and set an efi.flags bit so the kernel knows when
        the EFI_MEMORY_MORE_RELIABLE memmap bit even if your firmware
    in some circumstances where the firmware may fail to allocate a VSI for
    firmware.
    redundant BSS_STOP and SYS_RESET firmware commands before
    the primary plane is enabled by the firmware, but inheriting
    In some circumstances, the firmware may fail to allocate a VSI for a VF.
    OTP data after parsing firmware-N.bin.
    for the board file, just like we for firmware files) in /lib/firmware/*, for
    /lib/firmware/ath10k/QCA99X0/hw2.0/board-2.bin
    platform firmware, like in the suspend-to-idle case, it is not
    started by the platform firmware, like in the suspend-to-idle case,
    not been started by the platform firmware.
    PM / PCI / ACPI: Kick devices that might have been reset by firmware
    There is a concern that if the platform firmware was involved in
    flags set and the platform firmware was involved in the resume
    PM / sleep: Add flags to indicate platform firmware involvement
    the platform firmware will be involved in the upcoming system power
    running in the SoC. As this requires firmware and user may not have
    firmware in the file system, make the accumulator queue support
    to add firmware to the file system and boot up kernel.
    soc: ti: add firmware file name as part of the driver
    Currently firmware file name is included in the DTS. This is not scalable
    as user has to change the DTS if they need upgrade to a new firmware.
    Instead, add the firmware file name in the driver itself. As long as there
    is no API change, new firmware upgrade is easy and require no driver
    change. User is expected to copy the firmware image to the file system
    and add a sym link to the new firmware for doing an upgrade. Driver add
    a array of firmware file names to search for the available firmware blobs.
    accommodate the new firmware and new firmware file name will get added to
    Also update the DT document to remove the firmware attribute and add
    description about firmware in the driver documentation.
    the in-progress work on SMM support in the firmware.
    - Via a firmware interface, which mandates a hierarchical domain,
    irqdomain: Introduce a firmware-specific IRQ specifier structure
    of_phandle_args for OF, but also for other firmware implementations
    and firmware downloads for the latest platforms.
    frame might have been buffered in the device (e.g. firmware.)
    negotiations to firmware. In such scenario, the PMF configuration of
    * deprecate firmwares version -12
    * fix WoWLAN with new firmware versions
    * allow logging firmware console using debug level
    also improve compatibility with user changes to the firmware's
    The firmware also has support for configuring the clocks through the
    mailbox channel, but the pixel clock setup by the firmware doesn't
    should have with the firmware would be if we made firmware calls that
    result in clock management (like opening firmware V3D or ISP access,
    under-voltage (when the firmware would rewrite PLLB to take the ARM
    Add arch timer node to enable arch-timer support. MT8127 firmware
    Add arch timer node to enable arch-timer support. MT8135 firmware
    at an unknown offset in the 1:1 mapping provided by the UEFI firmware, we
    is specified, the original (firmware provided) EFI memmap will be
    Still, it is possible to build firmware that uses a full 64-bit GOP
    drivers/firmware: Make efi/esrt.c driver explicitly non-modular
    Additionally, vendor released several versions of firmware for this
    - arm64 changes to deal with firmware limitations that forces a GICv3
    Warn if the firmware (or the hypervisor) has been lazy.
    As the firmware (or the hypervisor) may have disabled SRE access,
    Contrary to what was originally expected, EL3 firmware can (for whatever
    abort the GICv3 setup, and pray that the firmware has passed a DT that
    unipro, i.e. interfaces required to download firmware.
    Some optimization features, which are enabled by the device firmware,
    firmware version as a string for readability and also use dev_err to have
    a need to get the CEE DesiredCfg Tx by firmware and DCB configuration
    On runtime pm resume, we need to download the firmware, also on
    Also since we download the firmware on resume, we don't need to do
    USB: io_ti: Move request_firmware from edge_startup to download_fw
    Move request_firmware from edge_startup to download_fw.
    firmware: arm_scpi: Extend to support sensors
    The SCP firmware on Juno provides access to SoC sensors via the
    wil6210: Do no schedule firmware recovery during reset flow
    During reset flow, ignore firmware errors detected prior
    wil6210: dump firmware memory when firmware crashes
    When firmware crashes, just before firmware recovery,
    dump the firmware memory to a devcoredump device.
    It used to be control only or data only PHY due to firmware
    wil6210: log firmware crash information
    Print firmware and ucode assert codes when firmware crashed.
    the CEE DesiredCfg Tx by firmware and DCB configuration Rx from peer; for
    - Early in boot during htab initialisation if firmware assisted dump is
    This opcode is not required. VFs that program RSS through the firmware
    do it by interacting directly with the firmware, and do not need to use
    The firmware has added additional status information to allow software
    Also, in some unlikely scenarios, the firmware can become slow to respond
    We never want this to happen as the firmware will actually attempt
    * fpga_mgr_firmware_load
       Request firmware and load it to the FPGA.
    within firmware and send IPCs for that module to DSP firmware
    as per firmware format.
    The Skylake driver topology model tries to model the firmware
    * fix firmware name for 3160 devices;
    ROM firmware or later in the patchram firmware. For debugging purposes
    stage and only once before loading the firmware and once after loading
    the firmware.
    as it just returns a 64-bit word from the firmware to userspace.
    The Rx decap mode sent to firmware during WMI initialization should
    * add spectral scan support for 10.4 firmware
    * implement mesh support using firmware raw mode
    Since the new multi-queue capability depends on a new firmware API,
    iwlwifi: size firmware flags memory correctly
    As the 3165 device uses the same firmware as 7265-D and currently
    back if firmware support ever splits, but in that case might also
    The firmware has always treated these two bits to mean that
    * fix DMA related firmware crashes on multiple devices
    iwlwifi: fix firmware filename for 3160
    is implemented in firmware. Hang reset takes more firmware resources than
    iwlwifi: mvm: fix D3 firmware PN programming
    The code to send the RX PN data (for each TID) to the firmware
    allow replays to actually be accepted by the firmware, which
    iwlwifi: dvm: fix D3 firmware PN programming
    The code to send the RX PN data (for each TID) to the firmware
    allow replays to actually be accepted by the firmware, which
    When we get garbage from the firmware with weird Port Speeds,
    firmware Port Information message
    The firmware team added a new Device Log Facility FW_DEVLOG_FACILITY_CF,
    and restored from the firmware respectively. The restore was broken
    Sending the PN to the firmware still worked since we now use the
    Also need to add 1 since the firmware needs 3 to skip 2, etc.
    command header to the new PHY command group for firmware
    The vendor had released no updated firmware, thus we can judge that this
    $ cat /proc/asound/card3/firewire/firmware
      can trigger under newer EFI firmware"
    ALSA: firewire-tascam: add proc node to show firmware information
    TASCAM FireWire series has certain registers for firmware information.
    drivers: firmware: psci: add system suspend support
    firmware and registers a psci system suspend operation to implement the
    drivers: firmware: psci: define more generic PSCI_FN_NATIVE macro
    drivers: firmware: psci: add PSCI v1.0 DT bindings
    compatible string that allows firmware to specify 1.0 only
    drivers: firmware: psci: add extended stateid power_state support
    to the information provided through firmware.
    drivers: firmware: psci: add PSCI_FEATURES call
    This patch adds PSCI_FEATURES support to the PSCI firmware layer.
    drivers: firmware: psci: move power_state handling to generic code
    to generic PSCI firmware layer code.
    drivers: firmware: psci: add INVALID_ADDRESS return value
    staging: wilc1000: remove function pointer wlan_firmware_download
    This patch removes function pointer wlan_firmware_download and just call
    the function wilc_wlan_firmware_download. Remove static from the function also.
    assumptions about how the firmware sets up the clocks, but this
    that signals that the firmware PE/COFF loader supports splitting
    Here 0xfffffffefe6086dd refers to an address the firmware
    addresses to other regions which were emitted by the firmware
    have no way of asking the firmware not to split the code/data
    PCIe function ID. This lessens the impact on the firmware when a
    the primary plane is enabled by the firmware, but inheriting
    drm/i915/skl: Block disable call for pw1 if dmc firmware is present.
    So berfore we disable power-well 1, added check if dmc firmware is
    if firmware is not present of failed to load we can shut off the
    drm/i915/skl: Do not disable cdclk PLL if csr firmware is present
    cdclk pll as CSR firmware of dmc will take care. If pll is already
    enabled firmware execution sequence will be blocked. This is one
    This patch remove the function call to set the firmware
    Dmc firmware will restore the firmware in normal suspend. In previous
    the firmware if got reset during resume from suspend-hibernation.
    intel_csr_load_program() function is used to load the firmware
    the first byte of csr program is always a non-zero if firmware
    firmware.
    Without this condition check if we overwrite the firmware data the
    firmware survives (it's like runtime pm), but it doesn't for
    - Added a check to know hardware status and load the firmware if not loaded.
    We have requested the firmware and it was loaded but we missed releasing
    re-connection the limit configured through firmware becomes active again
    out not always being properly detected for all devices/firmwares.
    brcmfmac: Fix p2p bug for older firmwares.
    Some devices with older firmwares are reporting new p2p device
    p2p device iface in the firmware, but it is doing that by checking
    Once multi channel event is received from firmware,
    Driver receives firmware multi channel event only in case that new
    events. Physical address of the buffer is shared with firmware
    submitting the buffer to firmware.
    Fixes the output of 'modinfo --field firmware'.
    brcmfmac: add dedicated debug level for firmware console logging
    Both PCIe and SDIO devices have the possibility to log the firmware
    bit more consistent. The firmware console output is only logged when
    Because the P2P Device interface in firmware uses the same interface
    The p2pdev interface is setup in firmware resulting in a interface
      brcmf_sdio_firmware_callback: dongle is not responding
      Workqueue: events request_firmware_work_func
       [<ffffffffa0754bc8>] brcmf_sdio_firmware_callback+0x2a8/0x5d0 [brcmfmac]
       [<ffffffff8140f400>] request_firmware_work_func+0x30/0x60
    In rx path the firmware provide an interface index which is used to
    Some errors did not result with notifying firmware that the page request
    MC firmware. This change is needed because the dpcon
    with 8.0 MC firmware interface. Updated MC version
    staging: wlan-ng fix buffer overflow in firmware handling
    staging: rtl8192e: Rename firmware_check_ready
    Rename firmware_check_ready to _rtl92e_fw_check_ready.
    staging: rtl8192e: Rename CPUcheck_firmware_ready
    Rename CPUcheck_firmware_ready to _rtl92e_is_fw_ready.
    firmware upload process.  Replace them with `usleep_range()` with a
    firmware: add support for ARM System Control and Power Interface(SCPI) protocol
    The firmware uses the RSTS register to know which partiton to
    the firmware to indicate halt.
    The firmware made this change in 19 Aug 2013 and was matched
    rate performance comparison. Since firmware is considering ldpc vdev
         QCOM SCM firmware drivers
      firmware: qcom: scm: Add function stubs for ARM64
    latter is what the android mod community is doing with firmware images.
    * deprecate firmwares version -12;
    * fix WoWLAN with new firmware versions;
    ath10k: fix DMA related firmware crashes on multiple devices
    causes the firmware to crash when sending beacons.
    Also, changing this based on the firmware version does not seem to make
    After checking if the problem lies with my burner or firmware, i grep-ed
      firmware: qcom: scm: Add function stubs for ARM64
    greybus: firmware: Don't send control-disconnected event for firmware protocol
    After downloading the firmware for the next boot stage, module's
    firmware (for current boot stage) jumps into it and the new firmware and
    firmware protocol, for the firmware used in previous stage, as the new
    firmware wouldn't be aware about it.
    Set flags for firmware protocol to skip control-disconnected operations.
    greybus: firmware: drop 'stage' from ready-to-boot request
    - bootrom loading the firmware image and booting into that, which
    - Or the firmware on the module crashed and sent hotplug request again
    firmware untouched.
    PCI: Clear IORESOURCE_UNSET when reverting to firmware-assigned address
    the BAR to whatever firmware left there at boot-time (this depends on
      pci 0000:01:00.0: BAR 0: trying firmware assignment [mem size 0x10000000 pref]
    firmware-assigned resource fails, mark it IORESOURCE_UNSET again.
    firmware: qcom: scm: Add function stubs for ARM64
    the primary plane is enabled by the firmware, but inheriting
    specific firmware from packaged dmc firmware.
    drm/i915/bxt: Path added of dmc firmware ver1 for BXT.
    Path of the firmware added in intel_csr.c.
    Commit 3adeb2566b9b ("MIPS: Loongson: Improve LEFI firmware interface")
    Fixes: 3adeb2566b9b ("MIPS: Loongson: Improve LEFI firmware interface")
    Bluetooth: btmrvl: fix firmware dump issue
    First firmware dump attempt from user works fine, but firmware goes
    As required by the firmware dump implementation, this change writes
    needed if the user decides to upload new firmware.
    unexpected IAP version, but rather warn user that firmware update feature
    with older firmware API that didn't have the RX energy API,
    will always be reported as 0 by the firmware. Even if this was
    This flag is set in all supported firmwares.
    This flag is set in all supported firmwares.
    All the supported firmwares have this flag set.
    All the supported firmwares use the new API.
    tools to interact with the firmware and do special commands needed for
    We have requested for the firmware but we have missed releasing it both
    While checking the code it turned out that the requested firmware is not
    even used. More over the same firmware is being loaded by
    fw version located in “firmware/htc_[9271|7010].fw”. Which is ok so far we
    compatibility problem which was decided to solve by firmware name and
    - new firmware is located now in
            firmware/ath9k_htc/htc_[9271|7010]-1.4.0.fw
    firmware/ath9k_htc/htc_[9271|7010]-1.dev.0.fw first and if it fails, use
      quirk.  Workaround a few platform specific firmware items.  One
    trust the firmware to be correctly written, and assumes that there is a
    It is conceivable that the firmware could not be that perfect, and it could
    from this problem and ignore the property if the firmware couldn't make up
    Unfortunately, this is not always the case, and some firmware expose this
    ignored, so firmware usually clears them before the OS enumerates devices.
    However, firmware is not involved when devices are added via hotplug, so
    There appears to be no way to get the firmware files required
    by the dgap driver into the linux-firmware tree. The dgap
    driver is useless wihtout this firmware. This product is
    to an inquiry concerning it or its firmware.
    SCO packet (#1-#2-#1-#2-#3...). This is a firmware bug and this
    in the firmware in order to enable beaconing without TSF adoption, and
    Due to firmware limitations, the firmware must operate in raw
    (non-native 802.11) mode.  As this is configured at firmware init time,
    only if rawmode=true.  The firmware must advertise support for rawmode;
    tested successfully with firmware 10.2.4.70.6-2.
    The commit [b67893206fc0: leds:lp55xx: fix firmware loading error]
    tries to address the firmware file handling with user helper, but it
    from the unexpected long delays for non-present firmware files.
    Fixes: b67893206fc0 ('leds:lp55xx: fix firmware loading error')
    If a mux clock is initialised (by hardware or firmware) with an
    firmware programmed a 16MB window (size 0x01000000) in 00:00.0, and since
    I think this is a defect in the PCI core: we shouldn't rely on the firmware
    some HW is already out there, and the firmware makes sure that
    said firmware source code is not available, despite being based
    If the size of the firmware is not as expected then we are jumping to the
    error path but we missed releasing the firmware.
    greybus: firmware: Send AP-ready operation
    greybus: firmware: firmware image name has .tftf instead of .fw
    greybus: firmware: Fix incorrect firmware file's name
    greybus: firmware: firmware's file name is 32 characters long
    allow the subsequent change of the generic firmware node properties
    systems (that platform firmware generally needs to work with) that
    If the ACPI APEI firmware handles hardware error first (called
    "firmware first handling"), the firmware updates the GHES memory
    error record"). Essentially the firmware writes hardware error
    GHES region (PAGE_KERNEL) and how the firmware maps it
    drm/i915: make CSR firmware messages less verbose
    staging: wilc1000: remove firmware definition
    This patch removes the firmware definitions, STA_FIRMWARE, AP_FIRMWARE, and
    We were successfully requesting the firmware but on error it was not
    If the size of the firmware is less than expected size then we are
    exiting with the error code but we missed releasing the firmware.
      cxgb4: changes for new firmware 1.14.4.0
    Fixes: eb805623d8b1 ('drm/i915/skl: Add support to load SKL CSR firmware.')
    cxgb4: changes for new firmware 1.14.4.0
    Incorporate fw_ldst_cmd structure change for new firmware and also
    Similarly to the VHT STS, this is supposed to be propagated by firmware.
    The VHT STS CAP shall be reported by firmware to host, like in case of
    the firmware reports.
    memory of size > 512KB chunks as requested by firmware in WMI_SERVICE_EVENTID.
    To fix this issue, allocate the DMA memory requested by firmware during
      available due to secure firmware denying access to it"
    Allow comma separated filenames in the edid_firmware parameter.
    edid_firmware=eDP-1:edid/1280x480.bin,DP-2:edid/1920x1080.bin
    (in drivers/firmware/efi/efi.c:efi_md_typeattr_format())
    _firmware_event_work() concurrently deletes items from the list.
      Input: elan_i2c - use iap_version to get firmware information
      Input: elants_i2c - disable idle mode before updating firmware
     - Move our PSCI implementation out into drivers/firmware/, where it can
    around it until the firmware is fixed.
    Input: elan_i2c - use iap_version to get firmware information
    of the firmware that the controller is supposed to accept.
    greybus: greybus_protocols: Pack structure as required by the module firmware
    These structures are expected to be packed by the module firmware code,
    The firmware layout changes that now it only has css header +
    Don adds support in ixgbe that indicates the presence of management firmware.
    breaks old non firmware-driven platforms, as the driver only
    greybus: firmware: fix potential stack corruption
    Use snprintf when generating the firmware name to avoid stack corruption
      selftests: firmware: skip timeout checks for kernels without user mode helper
      firmware: fix wrong memory deallocation in fw_add_devm_name()
    firmware files from linux-firmware repository.
    speed once chip has booted on patched firmware.
    We don't support firmwares that don't use the new API.
    versions of the firmware.
    iwlwifi: mvm: add debugfs hook to send ECHO_CMD to the firmware
    firmware just to check that it is alive.
    platform firmware code use of MTRRs based on the obituary
    (OPAL) firmware. eeh_ops->restore_config() produces PCI config
    to us from firmware with these left enabled.
    firmware files, again similarly to what is done with nvgpu.
    drm/nouveau/gr: use NVIDIA-provided external firmwares
    NVIDIA will officially start providing GR firmwares through
    linux-firmware for GPUs that require it. Change the GR firmware lookup
      11) In sfc driver, don't fetch statistics firmware isn't capable of,
      sfc: only use vadaptor stats if firmware is capable
      less than cautious firmware engineer implementing the polarity the
      NFIT sysfs representation, and this is likely a kernel that firmware
    The HW-SW contract requires mailboxes passed to the firmware to be 4KB
    if there is a suitable firmware interface to read the configuration.
    a suitable firmware interface.
    sfc: only use vadaptor stats if firmware is capable
    and SRIOV support is only available if full-featured firmware is
    Do not use vadaptor stats if firmware mode is not set to
    * new Tx power firmware API
    * bump max firmware API to 17
    * fix command list on newest firmware
    the works from firmware Work-queue sequentially instead of
    With this log info value, firmware informs the driver to retry the
    firmware to discover the reinserted drive successfully instated of
    time for firmware to complete the drive discovery) and failing the
    - When firmware returns device error or device not ready status for the end
    firmware will meet an unrecoverable data conrruption occasionally
    if performing trim due to a firmware bug confirmed by vendor. We
    to worry about breaking obscure setups with ancient firmware.
    Fix for memory leak when command is not found by firmware due to
    Aovid crashing the system in the scenario where firmware
    The CISS firmware specification (available on sourceforge)
    i40e/i40evf: Cache the CEE TLV status returned from firmware
    Store the CEE TLV status returned by firmware to allow drivers to dump that
    Fixes: 2b0a2e0d7c2f ("ath10k: handle 10.4 firmware phyerr event")
    while trying to boot firmware. The register dump
     ath10k_pci 0000:02:00.0: firmware register dump:
    To enable/configure spectral scan parameters in 10.4 firmware, existing
    at the end. The changes are validated in qca99x0 using 10.4 firmware.
    posted_index is RO in firmware. We need not do ioread everytime to get
    via SPI. For example, this allows us to load an ELF DSP firmware
    rsi: Fix possible leak when loading firmware
    Commit 5d5cd85ff441 ("rsi: Fix failure to load firmware after memory
    already allocated firmware data is leaked. Make sure the data is
    Fixes: 5d5cd85ff441 ("rsi: Fix failure to load firmware after memory leak fix and fix the leak")
    brcmfmac: bump highest event number for 4339 firmware
    firmware expects setting event mask will fail and device becomes
    pretty useless. This issue was reported with bcm4339 firmware that
    the combinations supported by driver and/or firmware.
    * new Tx power firmware API
    * bump max firmware API to 17
    * fix command list on newest firmware
    iwlwifi: mvm: bump firmware API to 17
    TX power limits) but makes the code compatible with newer firmware
    must have 256 entries (0-255), not just 255. A recent firmware change
      firmwares since we are getting close to the u8 limit.
    * add more options to the firmware debug system
    after updating firmware in setup() of post_setup() callback. This
    disable cmd is passed from ath10k_debug_stop() to firmware
    trip up some buggy firmware in at least one drive, causing
    facilitate testing on the firmware side minus the necessity to recompile
    firmware to support unicast (v) multicast (v) bitmask.
    * add more options to the firmware debug system
    sequence number we use might conflict with the firmware's
    iwlwifi: bump mvm firmware API to 16
    done in firmware memory rather than on the host. Firmware memory is a
    done in firmware memory rather than on the host. Firmware memory is a
    restore it. The firmware should take care about it and does not allow
    I have tested this on the latest available firmware (10.6.144.21).
    drm/amdgpu: add cgs_get_firmware_info interface v2
    firmware information from the core driver.
    Management firmware tells driver in case bandwidth configuration for
    Adding support for newer Edgeport devices and firmware required changes
    current firmware handling.
    ath10k: handle 10.4 firmware phyerr event
    Header format of 10.4 firmware phyerr event is not alligned
    with pre 10.4 firmware. Introduce new wmi handlers to parse
    10.4 firmware specific phyerror event header.
    qca9x0 hw 2.0 which uses 10.4 firmware.
    exactly on how firmware packs it. This is the problem in 10.4 fw
    firmware specific header format in the code. So that firmware specific
    in QCA99X0 firmware. First one is a notification at the begining
    3.  GuC firmware uses the one page before Ring Context as shared data.
        firmware requires the ring-tail-offset to be represented as an
            the GuC firmware source, matching what the autogenerated
    drm/i915: Enable GuC firmware log
    driver and the GuC firmware.
    drm/i915: GuC-specific firmware loader
    This fetches the required firmware image from the filesystem,
        Removed 'wait' parameter to intel_guc_ucode_load() as firmware
            prefetch is no longer supported in the common firmware loader,
            if GuC firmware loading fails [Daniel Vetter]
            allocate GEM objects, and have it fetch the firmware; then
    mwifiex: claim sdio bus while downloading the firmware
    Our 8887 A2 chip can have separate firmware images for
    This patch claims sdio bus before starting of the firmware
    mwifiex: add firmware dump support for SD8997
    This patch adds firmware dump feature for SD8997 chipset.
    to save all firmware information. Device dump information
    The corresponding firmware image files are located in:
    rtlwifi: rtl8192ee: Fix firmware header endian issues
    This driver is converted to use the common firmware header struct.
    rtlwifi: rtl888ee: Fix firmware header endian issues
    This driver is converted to use the common firmware header struct.
    rtlwifi: rtl8192de: Fix firmware header endian issues
    This driver is converted to use the common firmware header struct.
    rtlwifi: rtl8821ae: Fix firmware endian issues
    This driver is converted to use the common firmware header struct.
    rtlwifi: rtl8723ae: rtl8723be: rtl8723com: Fix firmware header endian issues
    The drivers are converted to use the common firmware header struct.
    note that the variable in the firmware header is little-endian. The
    nearly identical copies of the firmware header struct, and that only the one
    firmware vdev structures. This was not accounted
    for and could lead firmware to crash due to asking
    eventually lead to firmware crash because host
    firmware then there really were.
    If firmware did not have any feature flags set the
    before passing the wmi command to enable the same in the firmware.
    threshold no known firmware actually implements
    fragmentation to mac80211 because firmware clears
    configuration. No known firmware supports the
      dt/bindings: Add binding for the Raspberry Pi firmware driver
      ARM: bcm2835: Add the firmware driver information to the RPi DT
    According to firmware engineers, the firmware has never required
             holding the target firmware name in addition to the minimal set.
         firmware blob (1 being VERIFYING_FIRMWARE_SIGNATURE).
    Its role is now filled by the core clock in the firmware driver.
    This drags in the firmware driver, and the start of some loopback
    greybus: connection: Send protocol version for firmware protocol
    As per greybus specs, we need to send the protocol version for firmware
    For now, add a FIXME for that and a special case for firmware protocol.
    greybus: Add firmware protocol driver
    This adds firmware protocol driver based on the latest specs available
    on mailing lists. This uses the firmware framework present in kernel.
    Refer Documentation/firmware_class/README on how it works.
    This shall be used later to find a firmware blob for the interface, lets
    firmware people instrumenting the performance of the system.
    greybus: svc: Remove FIXME for firmware download
    Its handled by the firmware driver now, drop the FIXME comment from svc
    Currently there is no way to get the MAC address in a firmware
          FPGA firmware
    firmware: qcom_scm-32: replace open-coded call to __cpuc_flush_dcache_area()
    dt/bindings: Add binding for the Raspberry Pi firmware driver
    This driver will provide support for calls into the firmware that will
    ARM: bcm2835: Add the firmware driver information to the RPi DT
    [media] tda10071: protect firmware command exec with mutex
    There should be clearly some lock in order to make sure firmware
    by platform firmware) and "mixed" ranges (where the parameters describe
    download the firmware first and flash that on the module.
    during which time management firmware cannot acces the nvram for its
    management firmware, as the nvram might not be accessible for a long time.
    the completion of each page, allowing the management firmware time to
        the size of firmware dump of iSCSI function which is being collected
      o Print buffer address which is holding a firmware dump.
    qlcnic: Print firmware minidump buffer and template header addresses
    as part of default minidump collection process. To enable this, firmware
    With this feature, firmware can provide additional iSCSI function's
    so as a supporting firmware binary.
    Bluetooth: btmrvl: release sdio bus after firmware is up
    We will not release sdio bus until firmware is completely
    separate firmware images for WLAN and bluetooth. This
    simultaneously try to download respective firmwares.
    to inform firmware about number of processed completions (packets).
    As these packets are never acked the firmware fires IRQs for them again
    firmware place it at a correctly aligned address.
    No one else has complained and I'm not aware of any firmware
    It's totally legitimate, per the ACPI spec, for the firmware to
    firmware violates this it really *is* an error.
      ALSA: fireworks/firewire-lib: add support for recent firmware quirk
      fixup code that needs firmware doing something i915 wouldn't do)"
    "staging: comedi: me4000: fix firmware downloading"
    firmware upload process.  Replace them with `usleep_range()` with a
    firmware usually does this, but on ARM it is usually left to the kernel.
    config options and opens it to use by the firmware loader.
    This will be useful when firmware signature support is added
    upstream as firmware will be left intact, and we'll only require
    * fix firmware load DMA regression
     "Just a few amdgpu fixes to make sure we report the proper firmware
            firmwares since we are getting close to the u8 limit.
    Their physical addresses are shared with firmware so that
    firmware can write data into them.
    default while submitting it to firmware.
    firmware dump, meanwhile driver initialisation error paths have
    Firmware hasn't yet completely initialized. So collecting firmware
    Boot loader structure v1 has RF status; ignore RF error if firmware
    selftests: firmware: skip timeout checks for kernels without user mode helper
    This patch does the firmware API update to support the new X722 device.
    Fixes: 16ba08d5c9ec (device property: Introduce firmware node type for platform data)
    firmware: fix wrong memory deallocation in fw_add_devm_name()
    VM's firmware (BIOS or UEFI) that offer regions of memory-mapped I/O space for
    firmwares are loaded by SMU on Tonga/Carrzio/Iceland
    Input: elants_i2c - disable idle mode before updating firmware
    time interval and firmware update may fail. Let's bring the device out of
    Move our PSCI implementation out into drivers/firmware/ where it can be
    drm/i915/gen9: Removed byte swapping for csr firmware
    swapping logic introduced with old dmc firmware.
    with latest dmc firmware version 1.18 without byte
    v2: Corrected firmware size during memcpy(). (Suggested by Sunil)
    [danvet: Add note that this only holds for released dmc firmware.]
    ALSA: fireworks/firewire-lib: add support for recent firmware quirk
    This chip includes ARM7 core, and loads and runs program. The firmware
    Echo Audio ships several versions of firmwares for each model. These
    firmwares have each quirk and the quirk changes a sequence of packets.
    ALSA Fireworks driver to detect discontinuity. In this case, firmware
    (AudioFire2 with firmware version 5.7.)
    Pack series uses the same ARM binary as their firmware. Thus, this
    There reported an GPS firmware download failure issue, and we
    firmware memory is not wanted and can cause unwanted behavior
    Our firmware scheduler used to suffer from false wake-up on 500 time units.
    Now that our firmware is fixed, we can go back to our old policy.
    iwlwifi: mvm: add wide firmware command support for debug triggers
    iwlwifi: mvm: add wide firmware command infrastructure for RX
    Add support for extended firmware event header that contains
    iwlwifi: add wide firmware command support for notifications
    a PN assigned, the firmware assigns the PN in that case.
    The firmware debug infrastructure allows the user to
    provide a firmware that will toggle a few registers to
    Existing firmware ignores the group_id field (it's reserved) and
    the first firmware that really supports long command headers can
    iwlwifi: add wide firmware command infrastructure for TX
    As the firmware is slowly running out of command IDs and grouping of
    commands is desirable anyway, the firmware is extending the command
    All the supported firmwares support this API.
    The 'flags' field really has been reserved in the firmware API for a
    In iwlmvm firmwares, the Byte count written in the scheduler
    depending on the firmware. Check the value after the
    iwlwifi: pcie: cancel Tx timer upon firmware crash
    When the firmware crashes, we can't expect the Tx queues to
    firmware will change to take the key material for TX from the key
    staging: rtl8192u: r819xU_firmware: fix coding style
    drivers/firmware, and made safe for 32-bit use, move the 32-bit ARM code
    drivers/firmware. This results in a minor gain in lines of code, but
    (See driver.of_match_table and open firmware functions)
      ASoC: Intel: Get correct usage_count value to load firmware
    staging: rtl8192u: Fix checkpatch issue with comma in r819xU_firmware.c
    * initial work to support qca99x0 and the corresponding 10.4 firmware branch
    When using Edgeport/416 models with newer firmware (sometime after
    firmware version 4.80.0), idle ports are automatically bounced
    models now ship from the factory with firmware that expects periodic
    on Edgeports running the newer firmware (that require it) and benign on
    Edgeport devices running older firmware.  Since we know that Edgeport
    firmware version 4.80 (the version distributed in /lib/firmware/down3.bin
    have no onboard non-volatile firmware image) does not require heartbeat
    and only if they are running firmware versions newer than 4.80.
    USB: io_ti: Add firmware image sanity checks
    Do what we can to verify that the driver's firmware image is valid
    E2PROM) may be able to function even if the on-disk firmware image is
    capability and they always rely on the on-disk firmware image.
    an error if the firmware image is bad or missing, it saves the result
    error whenever edge_startup() fails to load an on-disk firmware image, or
    USB: io_ti: Fix firmware version handling
    The io_ti driver fails to download firmware to Edgeport
    devices such as the EP/416, even when the on-disk firmware image
    (/lib/firmware/edgeport/down3.bin) is more current than the version
    replaces the redundant calls to request_firmware()/release_firmware()
    in download_fw() with a single call pair in edge_startup(); the firmware
    USB: io_ti: Increase insufficient timeout for firmware downloads
    The io_ti driver fails to download firmware to Edgeport devices such as
    detect if SDBG has been enabled by the firmware and if it has
    rsi: Fix failure to load firmware after memory leak fix and fix the leak
    that cannot be used for DMA. Hence the firmware was first copied to a
    On systems that delegate task of powering up regulators to firmware we
    properly so that firmware configures TSO in wrong way.
    to indicate firmware there is no TSO is enabled, otherwise it
    will help to clear uncertainty of firmware could bring on as it
    Host memory required for firmware is allocated while handling
    flag (GFP_ATOMIC) to allocate memory in host needed for firmware.
    Add lmp_subver and firmware name for BCM4330B1 controller.
    includes firmware initialization, async queues manipulation and command
    the kernel, and may be used by the firmware provided that it is marked
    The firmware for the svc changes isn't quite ready, so revert the whole
    other firmware developers.  The svc patches will be added back in a
          encapsulation to the firmware. This is the default mode.
          encapsulation to the firmware.
    firmware to driver is concerned. Spectral scan events take no part in
    - Query ARS Capabilities - Queries the firmware to check if a given
    the booting firmware still needs to handle decompression before launching the
    This chip includes ARM7 core, and loads and runs program. The firmware
    Echo Audio ships several versions of firmwares for each model. These
    firmwares have each quirk and the quirk changes a sequence of packets.
    As long as I investigated, firmware 5.7, 5.7.6 and 5.8 have this quirk.
    AudioFire2's firmwares.
    cxgb4: Allow firmware flash, only if cxgb4 is the master driver
    upgrade the firmware. So add a check for the same before flashing
    firmware using ethtool.
        firmware was already releasing the N_Port handle but we want the
         4.2 can show the same problem with problematic firmware on Intel
    HTT_H2T_MSG_TYPE_MGMT_TX msg in 10.4 firmware carries additional
    4 byte in htt_mgmt_tx_desc where it tells to firmware that at what
    setting this field to zero will force firmware to choose auto rate
    Those 4 byte info is missed out in the current code and 10.4 firmware
    Fix it by adding 4 byte in struct htt_mgmt_tx_desc. Non 10.4 firmware
    the ROM firmware for the SDMA controller as well as when loading Freescale
    provided SDMA firmware versions 1.1 or 3.1.
    The Intel Lightning Peak devices do not come with Bluetooth firmware
    firmware when the device is attached via the Bluetooth line discipline.
    to identify the hardware and select the right firmware to load.
    of the dependency upon firmware for that file.
    staging: rtl8192e: Rename init_firmware
    Rename init_firmware to rtl92e_init_fw.
    staging: rtl8192e: Rename firmware_init_param
    Rename firmware_init_param to rtl92e_init_fw_param.
    of the interval which is now transmitted to the firmware.
    The firmware transmits either zero length packets or none every (u)frame.
    This moves bnx2x into using 7.12.30 FW. Said firmware fixes the following:
    context. By default, we read sge context's via firmware. In case of FW
    Recent versions of firmware for SFC9100 adapters add support for filter
    If the firmware does not support filter chaining, the driver will fall back to
    GET_WORKAROUNDS was only introduced in May 2014, not all firmware
     implemented in any firmware that doesn't have GET_WORKAROUNDS.
      vpd r/w failed.  This is likely a firmware bug on this device.
    0xfe is basically a magic number used to ask firmware match
    provided string in a SSID. In this case, firmware will
    We are setting BSS mode as ANY so that firmware will provide
    Broadcom's firmware requires every BSS to use MAC address with unique
    last few bits. The amount of bits may depend on a particular firmware,
    If this condition won't be fulfilled firmware will reject such MAC:
    which will be parsed by our firmware. Later while informing
    * initial work to support qca99x0 and the corresponding 10.4 firmware branch
    tools cgdcbxd and cgrulesengd and improves firmware support for
    to firmware.
    cxgb4 : Allow firmware DCB info to be queried in host state
    Since finally DCB traffic management is still handled by firmware,
    allow firmware to be fully programmed and queried even in host
    cxgb4 : Only pass app selector of 0 or 3 to firmware
    This keeps app format passed to firmware the same irrespective
    be kept in sync with the definitions used by the GuC firmware, and
    source files used to build the firmware. Editing this file is
    We will need this for the microcontroller firmware loading support code.
    two different places: firmware.c and suspend.c. Move it to one common
    early MC73xx firmware versions like 01.08.x as the device does not
    skiboot firmware isn't converted to LE format properly as following
    Just in case the firmware did not enable data and instruction prefetch in
    firmware has this requirement, for example).
    Add code that loads the MMP firmware
    Load Modular Math Processor(MMP) firmware into QAT devices to support
    A firmware bug in some touchpads causes the F01 interrupt enable register
    It also requests firmware and uses code loader dma to load it.
    This patch adds support for a new method of signalling the firmware
    ASoC: Intel: Get correct usage_count value to load firmware
    value, due to which the firmware load was failing. Because of this
    IPC messages sent to the firmware were timing out causing a delay
    and the firmware load is successful and all the IPC messages are
    from firmware over the specified size will not be accepted.
    firmware to load. Before we do so, we need to prepare the
    The original wait time was 200ms which was enough for the firmware to
    finish loading and boot. After that the firmware will perform
    isn't really supported well by the firmware so
    unless firmware advertises otherwise.
    Probe Requests for hw scan and ath10k firmware was
    Fix firmware loader uevent buffer NULL pointer dereference
    The firmware class uevent function accessed the "fw_priv->buf" buffer
    (looks like it goes back to 2012 and commit 1244691c73b2: "firmware
    loader: introduce firmware_buf"), but for some reason it's triggering
    Some touchpads are configured with firmware which continues to scan for
    slice of the L2T from the firmware and then throwing those away and
    sfc: compat for lack of VADAPTOR_SET_MAC in adaptor_firmware <= 4.1.1.1023
    firmware due to the lack of MC_CMD_VADAPTOR_SET_MAC in
    adaptor_firmware <= 4.1.1.1023
    firmware.
    The firmware only reports hover condition while the very first contact is
    opal-prd driver will mmap() firmware code/data area as private
    no longer being converted from firmware Big-Endian to local CPU-Endian
    It is normal that firmware presents GICC entry or entries (processors)
    ACPI firmware may present 8 ebabled first with another 8 cpus disabled
    cpus to make the firmware code scalable.
      ACPICA: acpidump: Convert the default behavior to dump from /sys/firmware/acpi/tables
    The platform firmware on some systems expects Linux to return "5" as
    covered in this patch. It just allocates memory and hand over to firmware.
    If we don't do it at init time, qca99X0 will stall when firmware tries
    stream to 4 for 10.4 firmware and to 3 for non 10.4 firmware.
    New htt event table is added for 10.4 firmware. Following new htt
    Existing non 10.4 firmware scan related events and commands are
    matching with 10.4 firmware (except chan info event). Link general
    10.4 firmware has extra scan completion reason
    WMI_SCAN_EVENT_FOREIGN_CHANNEL_EXIT compared to previous firmware
    are reusable for 10.4 firmware. Link those general vdev and peer
    applicable in 10.4 firmware, have it under not implemented print.
    ath10k: handle 10.4 firmware wmi swba event
    10.4 firmware swba event payload has space to accommodate upto
    non 10.4 firmware. Non 10.4 firmware swba event format is designed
    10.4 firmware swba event,
    Due to 512 client support in 10.4 firmware, size of tim ie is going
    to be slightly higher than non 10.4 firmware. So, size of tim_bitmap
    what is carried in swba event from 10.4 firmware is bit higher.
      leds:lp55xx: fix firmware loading error
    have bigger problems then getting a response back to firmware.
    Moreover, this request is not served by the firmware or gbsim today and
    ACPICA: acpidump: Convert the default behavior to dump from /sys/firmware/acpi/tables
    from /sys/firmware/acpi/tables. Reported by Al Stone, Fixed by Lv Zheng.
    work with "-c" option as tables can be found in /sys/firmware/acpi/tables.
    Note that 64-bit FACS favor and 64-bit firmware waking vector favor are
    ACPICA: Hardware: Enable firmware waking vector for both 32-bit and 64-bit FACS
    1. BIOS may favor the 64-bit firmware waking vector address when the
       resuming from the real mode, so the 64-bit firmware waking vector has
       FADT while the commit doesn't set the firmware waking vector address of
    be used by BIOS and the 0 value of the 32-bit firmware waking vector might
    This patch enables the firmware waking vectors for both 32bit/64bit FACS
    1. BIOS may favor the 64-bit firmware waking vector address when the
       resuming from the real mode, so the 64-bit firmware waking vector has
       FADT while the commit doesn't set the firmware waking vector address of
    be used by BIOS and the 0 value of the 32-bit firmware waking vector might
    are loaded so that further commit can set firmware waking vector in the
    ACPICA: Hardware: Enable 64-bit firmware waking vector for selected FACS
    1. BIOS may favor the 64-bit firmware waking vector address when the
       resuming from the real mode, so the 64-bit firmware waking vector has
       FADT while the commit doesn't set the firmware waking vector address of
       Physical memory address of the FACS, where OSPM and firmware exchange
    Thus the 32bit and 64bit firmware waking vector should indicate completely
    This patch enables 64-bit firmware waking vector for selected FACS via new
    acpi_set_firmware_waking_vectors() API so that it's up to OSPMs to
    The ifc6410 firmware always enters the kernel in ARM state from
    platform's firmware always enters the kernel in ARM mode from
    /sys/firmware/efi/efivars/  efivarfs
    10.4 firmware supports upto 512 clients when qcache feature is enabled.
    10.4 firmware wmi mgmt rx event format differs from non 10.4
    firmware and changing existing wmi mgmt rx event parsing function
    10.4 firmware and also introduce new function to parse wmi mgmt
    which goes as part of wmi init cmd to 10.4 firmware.
    Include 10.4 firmware wmi pdev cmd id and prepare wmi vdev map
    table wmi_10_4_pdev_param_map and update non 10.4 firmware
    10.4 firmware as unsupported.
    Include 10.4 firmware wmi vdev cmd id and make up wmi vdev map
    table wmi_10_4_vdev_param_map and also update non 10.4 firmware
    10.4 firmware as unsupported.
    in non 10.4 firmware wmi mapping table as unsupported for wmi cmd
    which are exclusively available only in 10.4 firmware.
    10.4 firmware wmi cmd and event id values are not exactly aligned
    with previous firmware versions (main, 10.x, 10.2, etc). Add new
    enum to define wmi cmd & event definitions for 10.4 firmware and
    prepare wmi_10_4_cmd_map based on 10.4 firmware wmi cmd definitions.
    exclusively available in 10.4 firmware.
    10.4 firmware and a function wmi_10_4_svc_map() to remap 10.4
    firmware wmi service bitmap definitions to ath10k generic wmi
    qca99X0 chip uses firmware version 10.4. Define a new macro
    ATH10K_FW_WMI_OP_VERSION_10_4 for 10.4 firmware and include
    This patch adds code swap support for firmware binary.
    Code swap binary for firmware bin is available in
       drivers/input/touchscreen/wdt87xx_i2c.c: In function 'wdt87xx_validate_firmware':
    leds:lp55xx: fix firmware loading error
    LP55xx driver uses not firmware file but raw data to load program through
    the firmware interface.(Documents/leds/leds-lp55xx.txt)
      echo 1 > /sys/class/firmware/lp5562/loading
      echo "4000600040FF6000" > /sys/class/firmware/lp5562/data
      echo 0 > /sys/class/firmware/lp5562/loading
    However, '/sys/class/firmware/<device name>' is not created after the
    firmware loader user helper was introduced.
      As soon as the firmware download is requested by the driver, firmware
      /sys/class/firmware/.
      2. Set option, 'FW_OPT_USERHELPER' on requesting the firmware data.
         request_firmware_nowait().
         This option enables to load firmware data manually by calling
    The newer firmware on MS Surface 2 tablets causes the type and touch cover keyboards to timeout when waiting for reports.
    The functions kfree() and release_firmware() test whether their argument
      MIPS: BCM47xx: Move NVRAM driver to the drivers/firmware/
     "Here is the driver core / firmware changes for 4.2-rc1.
      in the firmware subsystem.  Nothing really major, full details in the
      firmware: add missing kfree for work on async call
      firmware: use const for remaining firmware names
      firmware: fix possible use after free on name on asynchronous request
      firmware: check for file truncation on direct firmware loading
      firmware: fix __getname() missing failure check
      firmware: qcom: scm: Add HDCP Support
      ARM: 8389/1: Add cpu_resume_arm() for firmwares that resume in ARM state
    "unarmed" via flags passed by platform firmware (NFIT).
    firmware indicates that the contents of the device may be corrupted.
    This firmware is not supported anymore - stop loading this firmware.
    do we need to check them for firmware dump triggers, nor could they
       - Support for loading ASoC topology maps from firmware, intended to
         be used to allow self-describing DSP firmware images to be built
         kernel needing to know about individual DSP firmwares
      firmware: dmi: struct dmi_header should be packed
      firmware: dmi_scan: Coding style cleanups
      Documentation: ABI: sysfs-firmware-dmi: add -entries suffix to file name
      firmware: dmi_scan: add SBMIOS entry and DMI tables
      firmware: dmi_scan: Trim DMI table length before exporting it
      firmware: dmi_scan: Rename dmi_table to dmi_decode_table
      firmware: dmi: List my quilt tree
      firmware: dmi_scan: Only honor end-of-table for 64-bit tables
    drivers/firmware/memmap.c: fix kernel-doc format
    Due to newly changed firmware behavior the reset may be delayed, based
    firmware: dmi: struct dmi_header should be packed
    firmware: dmi_scan: Coding style cleanups
    Documentation: ABI: sysfs-firmware-dmi: add -entries suffix to file name
    /sys/firmware/dmi/entries only, so rename documentation file to
    sysfs-firmware-dmi-entries as more appropriate. Without renaming it's
    confusing to differ this from sysfs-firmware-dmi-tables that adds raw
    firmware: dmi_scan: add SBMIOS entry and DMI tables
    firmware: dmi_scan: Trim DMI table length before exporting it
    firmware: dmi_scan: Rename dmi_table to dmi_decode_table
    firmware: dmi: List my quilt tree
    firmware: dmi_scan: Only honor end-of-table for 64-bit tables
    On platforms that have firmware support for reading/writing per-dimm
    Many harddisks (mostly WD ones) have firmware problems and take too
         Last stages of CPU power down/up are handled by firmware already
    drivers: net: xgene: Implement the backward compatibility with the old and new firmware w.r.t Tx completion IRQ interrupt.
    This patch implements the backward compatibility with the old firmware where
    the Tx completion IRQ interrupt was absent whereas incase of new firmware
      crypto: nx - Check for bogus firmware properties
         sysfs, which provides information for performing firmware updates
       - Align the order of SMBIOS tables in /sys/firmware/efi/systab to
     - Support for loading ASoC topology maps from firmware, intended to be
       used to allow self-describing DSP firmware images to be built which
       needing to know about individual DSP firmwares.
     - Support for loading ASoC topology maps from firmware, intended to be
       used to allow self-describing DSP firmware images to be built which
       needing to know about individual DSP firmwares.
    MIPS: BCM47xx: Move NVRAM driver to the drivers/firmware/
    data that is passed to the kernel in flash from the bootloader firmware
    drivers/firmware/.
    cxgb3: avoid needless buffer copy for firmware
    There's no reason to perform a buffer copy for the firmware name. This
    if there was no matching firmware.
    crypto: nx - Check for bogus firmware properties
    The nx driver reads two crucial paramters from the firmware for
    This patch adds checks to report any firmware entries which are
    is not registered because of this as there may have been no firmware
    This device requires new firmware files
    /lib/firmware/ar3k/ that are not included in linux-firmware yet.
    This patch makes fields in struct rt_8723a_firmware_hdr use
    The size of field Rsvd1 in struct rt_8723a_firmware_hdr should be u8
    Add a remoteproc driver to load the firmware and boot a small
    loader code to properly translate and load the firmware segments
    HTT version given firmware blob uses. Hence print
    Due to firmware bug, under VPI configuration when port1 = IB and
    It is reported that on several platforms, EC firmware will not respond
    cleared by the firmware, thus the original implementation queued up second
    behavior is also based on the assumption that the firmware should be able
    drm/i915/skl: Add debug messages at the start/end of DMC firmware loading
    firmware sources and add power domain and passthru commands.
    $ cat /proc/asound/FCA610/firewire/firmware
    basic information about its firmware. A register has its protocol
    it easier to announce what the firmware actually supports. This fixes
    the case where brcmfmac announces p2p but the firmware doesn't
    brcmfmac: Check if firmware supports p2p
    Add a feature flag to reflect the firmware's p2p capability.
    firmware will give host an event to reduce Rx AMPDU BA window size.
    allows the firmware to add more data quicker. This will result in
      ARM: 8389/1: Add cpu_resume_arm() for firmwares that resume in ARM state
    Commit 32e55a777f83 ("ARM: 8389/1: Add cpu_resume_arm() for firmwares
    ARM: 8389/1: Add cpu_resume_arm() for firmwares that resume in ARM state
    kernel because the platform's firmware always enters the kernel in
    firmware name fix
      drm/i915/skl: Fix DMC API version in firmware file name
    firmware loading failure.
    the firmware to drive some GPIOs for external RF coexistency.
    firmware uses this mailbox channel to implement firmware calls, while
    Roku 2 (despite being derived from the same firmware tree) doesn't.
    notion of multiple channels (since that is a firmware-dependent
    concept) and instead the raspberrypi-firmware driver will do that
    about the currently running firmware.
    The firmware is having a hard time with 4k buffers and memory
     - Support for loading ASoC topology maps from firmware, intended to be
       used to allow self-describing DSP firmware images to be built which
       needing to know about individual DSP firmwares.
    of sw_fini), but we need the firmware sizes from the other IPs
    for firmware loading so we have to wait until sw init is done
    of sw_fini), but we need the firmware sizes from the other IPs
    for firmware loading so we have to wait until sw init is done
    of sw_fini), but we need the firmware sizes from the other IPs
    for firmware loading so we have to wait until sw init is done
    >> drivers/media/common/b2c2/flexcop-fe-tuner.c:31:12: warning: 'flexcop_fe_request_firmware' defined but not used [-Wunused-function]
        static int flexcop_fe_request_firmware(struct dvb_frontend *fe,
        (auth fails because ath10k firmware isn't able
    Export to sysfs (through the input subsystem) the product id and firmware
    2.0 with firmware 3.1.1.149, and another client tries to connect, the
    The length of parameters in the firmware downloading command must be
    with extra parameters, zeros, at the end, and the firmware file is
    For example, if the data from the firmware file looks like this:
    Previously the elan_i2c touchpad driver would simply request the firmware
    "/lib/firmware/elan_i2c.bin", which does not work well if there are
    the form "/lib/firmware/elan_i2c_72.0.bin", allowing you to support
    type command and use this data when checking firmware page count and
    staging: rtl8192u: r819xU_firmware.h: fix line over 80 characters
    checkpatch.pl in r819xU_firmware.h
    staging: drivers: rtl8192u: r819xU_firmware.h: removed commented macro
     - Support for loading ASoC topology maps from firmware, intended to be
       used to allow self-describing DSP firmware images to be built which
       needing to know about individual DSP firmwares.
    data pointer without the extra struct firmware layer. This will allow
     > drivers/firmware/efi/esrt.c:28:31: fatal error: asm/early_ioremap.h: No such file or directory
    mwifiex: add sta_list firmware command
    This patch add sta_list firmware command, which can be used
    This device requires new firmware files
    /lib/firmware/ar3k/ that are not included in linux-firmware yet.
    This device requires new firmware files
    /lib/firmware/ar3k/ that are not included in linux-firmware yet.
    btbcm_finalize(). This may be need because firmware loading may have
    - btbcm_initialize() resets the controller and returns the firmware
      firmware name as parameter, requests the firmware and loads it to
    Remove firmware name retrieval for UART controllers from
    Add lmp_subver and firmware name for BCM4324B3 controller.
    Bluetooth: btbcm: Move request/release_firmware()
    Move request/release_firmware() out of btbcm_patchram().
    This allows a better error management, if request_firmware() returns an
    error then the controller will be used without firmware loading and 0 is
    This will imply to change btbcm_patchram() to accept a firmware instead
    of firmware name.
    mac addr from when we can't contact firmware for debug purpose, set pcie
    The TP_PIO_{ADDR,DATA} registers are are in conflict with the firmware's
    is alive. If firmware is dead, than fall back to indirect access.
    cxgb4: Set mac addr from vpd, when we can't contact firmware
    network interface when either we can't contact the firmware
    process is started automatically by the firmware when the number of
    firmware will never drop the physical link to the peer.
    - add call_firmware_op(cpu_boot, 1) to exynos_cpu0_enter_aftr()
    Add get_cpu_boot_addr() firmware operation and then
    I2C message interrupts firmware command sequence.
    drm/i915/skl: Fix DMC API version in firmware file name
      drm/amdgpu: stop loading firmware with pm.mutex locked
    interface between the driver to the firmware and is incremented by
    firmware releases that don't support ISSI.
    firmware releases support the feature since the very basic ISSI level.
    sets the actual issi value informing the firmware on which ISSI level to run,
    diagnostics) channel to OPAL firmware.
    firmware topology data as use case require.
    * improve firmware debug functionality
    generally in order to simulate firmware. Move UART defines into this
    drm/amdgpu: stop loading firmware with pm.mutex locked
    Loading firmware is a rather complicated process, in the end we add a
    share the same firmware, but have their own stacks and heaps.
    drm/amdgpu: recalculate VCE firmware BO size
    drm/amdgpu: switch to amdgpu folder for firmware files v2
     required to define any DSP firmware audio topology and control objects from
    firmware framebuffer.
    The firmwares that used these commands is not supported
    Currently, loading the firmware fails when it has higher API or CAPA
    Since the firmware is responsible for duration calculation, the
    Since the firmware is responsible for duration calculation, the
    bnx2i: Fixed firmware assert, during target logout.
    Fix the firmware assert, during target logout in
    firmware dump API. We will call it as device dump and
    dump driver and firmware data separately.
    mwifiex: fix SDIO firmware dump problem
    It's been observed that firmware doesn't go back to normal
    state when all firmware memories are dumped. As a result,
    setup, so that a vadaptor has not been created yet, firmware
    sucessfully in all cases, firmware then got an issue when talking to an
    It needs free pcm runtime modules before unloading firmware, here
    suspends firmware ==> frees runtime modules ==> unloads firmware.
    suspends firmware ==> frees runtime modules ==> unloads firmware.
        which provides information for performing firmware updates. (Peter Jones)
      - Align the order of SMBIOS tables in /sys/firmware/efi/systab to match
     5) Fix BNA driver firmware loading on big-endian systems, from Ivan
      bna: fix soft lock-up during firmware initialization failure
      bna: fix firmware loading on big-endian machines
    megaraid_sas : Modify return value of megasas_issue_blocked_cmd() and wait_and_poll() to consider command status returned by firmware
    based on MFI_STAT returned by firmware for that command. Earlier driver always
    that command), so even if command is failed by firmware still driver will
    firmware) but with this linked list corruption fix patch, DCMD status will not
    must be done by the SoC's firmware before _any_ CPU gets to the Linux
    enabling is a no-op.  However, the RPi firmware-based clocks driver
    downloading firmware and letting the SoC run on REF_CLK is fixing
    the problem. Corresponding firmware change is also needed to set
    firmware is having this ROM patch, applying skip_clock_init only
    for 10.2.4 firmware versions.
    firmware: add missing kfree for work on async call
    allow the controller firmware to queue up commands when the ioaccel device
    bna: fix soft lock-up during firmware initialization failure
    Bug in the driver initialization causes soft-lockup if firmware
    send timeout event for iocpf and the same should be done if firmware
    bna: fix firmware loading on big-endian machines
    of LE32 integers. After loading by request_firmware() they need to be
      firmware: qcom: scm: Add HDCP Support
      firmware: qcom: scm: Split out 32-bit specific SCM code
    ath10k: add missing firmware declarations
    built without necessary firmware files included
    count info or this is an artefact of firmware scan
    The SCRATCH registers are used by firmwares to hold diagnostic
    of firmwares.
      drm/radeon: allow some more VCE firmware versions
    firmware: qcom: scm: Add HDCP Support
    common scenario do not prevent the driver from collecting stats if firmware
    The commit below fixed this for the old firmware API only.
    Since the new firmware API hasn't been released yet, this
    doesn't fix anything on currently existing firmwares.
    After the scan refactor, the order of the SSIDs passed to the firmware
    regular runtime firmware (after having run the INIT firmware),
    the firmware, then certainly this will still be sufficient for
    firmware-supported entries are simple values, we shouldn't reject these
    secondary firmware nodes) uncovered a bug in the x86 (and ia64) PCI
    Fixes: 97badf873ab6 (device property: Make it possible to use secondary firmware nodes)
        firmware crash.
    in /sys/firmware/efi/systab actually forms an ABI that userspace tools
    or MIGRATE, and so these need to be provided when using firmware
    firmware even on the codecs that don't specify it.  It'll also save a
    interrupt with the current firmware.
    (firmware) always masks and acks an interrupt before sending an event to
    been handled. By having the firmware ack an edge interrupt before
    Initial support for VCE 1.0 using newest firmware.
    drm/radeon: allow some more VCE firmware versions
    sound: sound_firmware: Fix invalid use of vfs_read()
    It should use kernel_read() instead of vfs_read() to load a firmware
    PCIe full dongle firmware can support a dma indices feature with which
    firmware can update/fetch the read/write indices of message buffer
    announced by firmware through shared flags.
    the updated firmware is quietly lost - the USB hub doesn't notice any
    Set the reset_resume flag to trigger probe and upload the new firmware
    [    8.102901] Bluetooth: hci0: don't support firmware rome 0x200
    verified on Samsung with the firmware provided by Kim, Ben Young Tae
    * fix firmware name and other things to enable 3165
    * fix firmware debugging triggers (MLME)
    1) Host will send system's Unique ID based on DMI_PRODUCT_UUID to firmware.
    initialising adapter earlier is: by that time firmware is operational and can
    DCMD to firmware instead of using polling method, since MFI frames' pool size
    and card firmware becomes out of sync
    cxgb4: Add PHY firmware support for T420-BT cards
    Updating of the PHY firmware must happen before the INITIALIZE_CMD.
    * enable Bluetooth Coexistance whenever firmware supports it
    * add more versatile way to set bitrates used by the firmware
    Since all the VF interaction with the firmware passes through the PF
    by the VF to the physical port before calling into the firmware.
    firmware (which does this job today already) and let the kernel just
    firmware: use const for remaining firmware names
    end for the remaining internal firmware name uses.
    We wish to later extend some firmware data structures
    firmware: fix possible use after free on name on asynchronous request
    Asynchronous firmware loading copies the pointer to the
    [  283.512445] firmware name: test_module_stuff.bin
    [  287.514020] firmware name: test_module_stuff.bin
    [  287.532489] firmware found
    [  135.624216] firmware name: \xffffff80BJ
    [  135.624249] platform fake-dev.0: Direct firmware load for \xffffff80Bi failed with error -2
    [  135.624252] No firmware found
    [  135.624252] firmware found
    when applied to next-20150505 only the firmware_class
    [0] https://github.com/mcgrof/fake-firmware-test.git
    firmware name: test_module_stuff.bin
    firmware name:
    firmware found
    Workqueue: events request_firmware_work_func
     [<ffffffff814a58f8>] release_firmware+0x58/0x80
     [<ffffffff814a65fe>] request_firmware_work_func+0x5e/0x80
     [<ffffffff814a58f8>] release_firmware+0x58/0x80
     [<ffffffff814a65fe>] request_firmware_work_func+0x5e/0x80
    firmware: check for file truncation on direct firmware loading
    When direct firmware loading is used we iterate over a list
    of possible firmware paths and concatenate the desired firmware
    passed firmware name be too long we end up truncating the
    truncated firmware filename.
    firmware: fix __getname() missing failure check
    The request_firmware*() APIs uses __getname() to iterate
    over the list of paths possible for firmware to be found,
    this is abb139e7 ("firmware: teach the kernel to load
    firmware files directly from the filesystem").
    mcgrof@ergon ~/linux (git::firmware-fixes) $ git describe --contains abb139e7
    firmware by checking if its is linked on the me clients list
    response from the firmware and second actually setting of disconnected
    state.  Book keeping data are needed for processing and after firmware
    This device is based on DM1000E, and BeBoB version 1 firmware is
    $ cat /proc/asound/Pro/firewire/firmware
    "insider knowledge" of the firmware).
    I've been using when creating the DT file. Verified with the firmware
    Some firmware revisions pad 4th hw address in
    firmware images.
    padding isn't present so firmware images can
    behave as it was before with old firmware blobs
    updated firmware blob.
    Contrary to QCA61X4 the QCA988X firmware doesn't
    * fix firmware name and other things to enable 3165
    * fix firmware debugging triggers (MLME)
    opal events. As older firmware versions may not have device tree
         touchpad turns out to be causing regressions due to firmware
    Since firmware version 0.2 we use AACK handling directly in the firmware.
    ieee802154/atusb: Warn about outdated device firmware.
    of the device firmware. This is version 0.2. With this change we warn users
    who run outdated versions of the firmware. While we have not seen problems
    released and tested firmware. You can find released versions here:
    with firmware.
    drm/i915/skl: Documentation for CSR firmware
    firmware support added from gen9 onwards to drive newly added
    Totally untested, given that we have no raw firmware or gbsim code yet.
    features need a firmware update like AACK and ARET handling.
    expected by the firmware is different from the Windows one, but that's
    to make EC firmware working for bug 12011 without root causing any EC
    to make EC firmware working for bug 20242, there is no requirement to
    to make EC firmware working for bug 77431, there is no requirement to
    Fixes: d42f53503406 ("iwlwifi: mvm: add trigger for firmware dump upon MLME failures")
    iwlwifi: 7000: modify the firmware name for 3165
         spec too) in order to prevent the firmware people from using it to
      firmware: dmi_scan: Fix ordering of product_uuid
      firmware: dmi_scan: Simplified displayed version
    firmware: dmi_scan: Fix ordering of product_uuid
    Fixes: 9f9c9cbb6057 ("drivers/firmware/dmi_scan.c: fetch dmi version from SMBIOS if it exists")
    firmware: dmi_scan: Simplified displayed version
    Fixes: 95be58df74a5 ("firmware: dmi_scan: Use full dmi version for SMBIOS3")
    closed firmware), which maps from the ARM's physical addresses to bus
    The 2835 firmware always configures the MMU to turn ARM physical
    firmware property request).  By setting dma-ranges, all of the devices
    diagram tuning. On some platforms the system firmware has
    Commit 307e95c92257 ("[media] mn88472: implement firmware parity check")
    firmware data in case the parity handling fails. Go through the correct
    The demodulator and the tuner will need firmwares. The Si2148 uses Si2158
    firmware. Antti has the firmwares available for download:
    http://palosaari.fi/linux/v4l-dvb/firmware/
    request_irq(), it means use the pin as the hardware/firmware has
    http://palosaari.fi/linux/v4l-dvb/firmware/M88DS3103/
    firmware.
    acpi firmware or using platform data. Userspace can also change the
    (See driver.of_match_table and open firmware functions)
    delay to bnx2x's probe function in the kdump case to let the firmware
    Detect thoses devices and forbid MIMO otherwise the firmware
    is added, the second patch adds support for another module/firmware
    sfc: Cope with permissions enforcement added to firmware for SR-IOV
    sfc: create VEB vswitch and vport above default firmware setup
    if the firmware supports it, so a check that full-featured firmware
    vswitches and vports are created on top of the default firmware
    dependent on the firmware variant.
    To simplify the checking of the firmware variant, record
    brcmfmac: check result of USB firmware request
    is similar to BCM43241 from driver and firmware perspective. It
    The scheduled scan support depends on firmware supporting the PNO
    With recent hardware/firmware there don't appear to be any glitches
    3] Ensure CSR firmware is loaded after resume from DC6 as corresponding memory contents won't
    1] Load CSR on system resume too as firmware may be lost on system suspend preventing
    4] Enable DC5, only when CSR firmware is verified to be loaded. Create new structure
    firmware loading.
    drm/i915/skl: Add support to load SKL CSR firmware.
    Here we are using request_firmware based design.
    Finally this firmware should end up in linux-firmware tree.
    request firmware method followed.
    Used kmemdup to allocate and duplicate firmware content.
    - Changed name for functions and firmware.
    v10: Enabled support for dmc firmware ver 1.0.
    According to ver 1.0 in a single binary package all the firmware's that are
    firmwares. Package header contains the firmware/stepping mapping table and
    the corresponding firmware offsets to the individual binaries, within the
    - Disabled BXT firmware loading, will be enabled with dmc 1.0 support.
    - Used cpu_to_be32 instead of cpu_to_be64 as firmware binary in dword aligned.
    - Added sanity check for mmio address got from firmware binary.
    - kmalloc done separately for dmc header and dmc firmware. (Animesh)
    v13: clarify firmware load error message.
    The reason for a firmware loading failure can be obscure if the driver
    - add fw_path to the firmware object instead of using a static ptr (Jani)
    1) Changed the firmware name as dmc_gen9.bin, everytime for a new firmware version a symbolic link
    - Changed the firmware name as skl_dmc_ver1.bin, followed naming convention <platform>_dmc_<api-version>.bin (Animesh)
    Open firmware is already using the serial-number property for passing the
    like firmware/chip-specific.
    marked as unused by the firmware. Handle this case to match.
    usb: Prefer firmware values when determining whether a port is removable
    configuration, so prefer the firmware's opinion on whether a port is
    firmware: Update information in linux.git about adding firmware
    Kyle McMartin joined the linux-firmware maintainers, and we now
    have an alias <linux-firmware@kernel.org> which reaches all of us.
    README in linux-firmware.git added by Xose Vazquez Perez
    The Logitech TK820 seems to be affected by a firmware bug which
    (See driver.of_match_table and open firmware functions)
    relative to the toplevel firmware directory (the same like the late
      CONFIG_EXTRA_FIRMWARE_DIR="/lib/firmware/"
     * Avoid garbage names in efivarfs due to buggy firmware by zeroing
    can: janz-ican3: add support for CAL/CANopen firmware
    * The old ICAN3-modules with firmware 1.28 need more then 250ms for the restart
    * The janz_ican3 module uses the raw can services of the Janz-firmware, this
      means firmware must be ICANOS/2. Our ICAN3-modules are equipped with
      CAL/CANopen-firmware, so I must use the appropriate commands for the layer
    Te driver detects the firmware after module reset and selects the commands
    matching the firmware. This affects the bus on/off-command
    (ican3_set_bittiming). For better diagnostics the detected firmware string is
    * fix firmware API for -13.ucode
    * fix firmware debug
    According to the firmware spec, the max value is limited to be 1024
    Manager values of the new RX Ethernet Queue is done by firmware now.
    done by firmware now.
    /sys/firmware/efi/systab. This allows user-space utilities which
    We have started seeing SSD firmware updates introduce support for queued
    having 'sme->privacy' and no RSN IE. Inform firmware about WSC
    while firmware need all IE's, most notable is RSN that is not
    Sometimes it takes for the firmware more than 20ms to
    calibration succeeded. Add a firmware feature flag to detect if the firmware
    firmware issue it's best to handle this via a firmware feature flag so that it
    The queued TRIM problems appear to be generic to Samsung's firmware and
    not tied to a particular model. A recent update to the 840 EVO firmware
    * fix firmware API for -13.ucode
    * fix firmware debug
    +                "\n\t\tName of DSP firmware file in /lib/firmware"
    the MacBook firmware to expose the SBS, resulting in intermittent
    /sys/firmware/efi/esrt and for each EFI System Resource Entry under
    system components for which the system accepts firmware upgrades via
    to evaluate what firmware updates can be applied to this system, and
    http://download.microsoft.com/download/5/F/5/5F5D16CD-2530-4289-8019-94C6A20BED3C/windows-uefi-firmware-update-platform.docx
    but firmware hasn't used that bit consistently, so we can't rely on it.
    Bluetooth: btusb: off by one in rtl8723b_parse_firmware()
    posted a firmware update that makes these devices comply with
    normal btusb protocols. The firmware needs to be uploaded on each boot.
    There is no change to the USB descriptor after firmware update,
    When a firmware restart is done, don't try to reprogram the keys to new
    iwlwifi: allow to limit the size of the external buffer for firmware debugging
    The firmware inverts the order of the SSIDs sent out in probe requests
    iwlwifi: clarify the device / firmware mapping in Kconfig
    firmwares was incomplete. Point to
    https://wireless.wiki.kernel.org/en/users/drivers/iwlwifi#firmware
    iwlwifi: mvm: allow scheduled scan for all the firmwares
    We don't support -9.ucode so, all the released firmwares
    firmware.
    firmware: qcom: scm: Split out 32-bit specific SCM code
    During firmware restart, the quota command isn't calculated multiple
    times, but after the firmware restart it has to be sent, so force it.
    Otherwise the firmware crashes.
    iwlwifi: mvm: don't power off the device between INIT and OPER firmwares
    Our device needs two different firmwares: the INIT firmware
    and the operational (OPER) firmware. The first one is run
    to low power state: no firmware will be running. When the
    interface is brought up, we would run the OPER firmware
    only and reuse the results of the run of the INIT firmware
    We now run the INIT firmware every time mac80211 calls
    between the INIT and OPER firmware on certains buses.
    firmware and need the device to be powered up in order to
    OPER firmware would stop these components and prevent them
    firmware only.
    * enable Bluetooth Coexistance whenever firmware supports it
    * add more versatile way to set bitrates used by the firmware
    crypto: qat - do not duplicate string containing firmware name
    when referring to the DH895xCC firmware.
    ASoC: wm_adsp: Warn that firmware file format 0 is depreciated
    There are very few version 0 firmwares in the wild and at some point in
    ASoC: wm_adsp: Add support for rev 2 firmware file format
    Version 2 of the firmware file format includes length fields for the
    firmware files. This version of the file format is commonly used to
    name in this case.. Note that the naming scheme for older firmware
    ASoC: wm_adsp: Add basic support for rev 1 firmware file format
    by the firmware. This patch updates the processing to handle this
    adds support for specifying a name for the control through the firmware
    deployments no changes to the firmware control naming are made by this
    ASoC: wm_adsp: Limit firmware control name to ALSA control name size
    The algorithm region information in the firmware doesn't contain a
    existing firmware interfaces and only the
    Depending on firmware revisions some combinations
    may crash firmware so use with care, please.
    The A80 SoC has the architected timer, but the existing firmware from
    The A23 SoC has the architected timer, but the existing firmware from
    Cc: sfi-devel@simplefirmware.org
    Cc: sfi-devel@simplefirmware.org
       - Qualcomm SCM driver has been moved to drivers/firmware.  It's used
    bridge window that is marked as "consumer".  This is a firmware defect:
    a functionality regression, and firmware has not used the producer/consumer
      Input: elants_i2c - zero-extend hardware ID in firmware name
      Input: elan_i2c - adjust for newer firmware pressure reporting
    During initialization firmware does some sort of
    The new value prevents firmware 11.0.0.302 (and
      /lib/firmware/ath10k/QCA6174/hw2.1/board-pci-168c:003e:1a56:1525.bin
    the firmware used on KVM guests, which runs entirely in real mode, but
    According to Elan's firmware engineers we should not be subtracting 1 form
    Input: elants_i2c - zero-extend hardware ID in firmware name
    Let's zero-extend hardware id number when forming firmware file name,
    to avoid kernel requesting firmware like "elants_i2c_   0.bin", which
    can cause firmware crashes.
    Fixes: c2d202017da1 ("iwlwifi: pcie: add firmware monitor capabilities")
    If for some reason statistics notification received from the firmware
    iwlwifi: mvm: fix Tx Power firmware API
    The firmware doesn't relate the scan to a vif. The scan is
         versions of Windows since NT and the firmware people started to use
         offsets provided by the firmware may lead to address overflows (Lv
    32 bit kernel on 64 bit firmware case does not need to be handled.
    Some buggy firmware implementations update VariableNameSize on success
    The buggy firmware is:
    firmware/ihex2fw.c: restore missing default in switch statement
    Regarding the channel activity time data, it is reported from firmware
    reason. This may be a firmware quirk or ath10k is
    QCA6174 firmware doesn't seem to be able to Tx
    firmware without any additional changes. Hence no
    corrupted traffic on 10.1 firmware.
    Apparently firmware requires both pairwise and
    mapping tx/rx keys in firmware properly which
    firmware requires them to be installed twice as
      qla2xxx: Prevent multiple firmware dump collection for ISP27XX.
      qla2xxx: Add support to load firmware from file for ISP 26XX/27XX.
      qla2xxx: Increase the wait time for firmware to be ready for P3P.
       flashing your firmware when it wasn't.
    features a CPU register (CNTFRQ) which firmware is intended to
    The firmware of early SoCs featuring the timer did not correctly
    (including guests running under a hypervisor). The firmware and DTs for
    powerpc/powernv: reboot when requested by firmware
    Fixes: bf0bf77f6519 ('mlx5: Support communicating arbitrary host page size to firmware')
    Without scan burst it was possible for firmware to
    It is not guaranteed firmware will switch to
      platform initialization code in addition to firmware-provided data.
      device property: Introduce firmware node type for platform data
      device property: Make it possible to use secondary firmware nodes
    without signed firmware, but the "security" restrictions on the
    protect the host from malicious firmware.  This newer nvidia hw is
    Input: elan_i2c - adjust for newer firmware pressure reporting
    Get pressure format flag from firmware to check if we need to normalize
      si2168, tda10071, m88ds3103: Fix firmware wording
     - quite a few firmware fixes for RMI driver by Andrew Duggan
      HID: logitech-hidpp: add a module parameter to keep firmware gestures
    left behind by firmware (*cough* coreboot *cough*) can keep the gpu in
    status via /sys/firmware/interrupts/. This is implemented using
      firmware: Avoid manual device_create_file() calls
      firmware_class: Fix whitespace and indentation
        - Make a shareable UUID for PCI firmware ACPI _DSM (Aaron Lu)
      PCI: Make a shareable UUID for PCI firmware ACPI _DSM
      firmware: dmi_scan: Use direct access to static vars
      firmware: dmi_scan: Use full dmi version for SMBIOS3
      device property: Introduce firmware node type for platform data
      device property: Make it possible to use secondary firmware nodes
    for the flash devices exported by firmware.
    qla2xxx: Prevent multiple firmware dump collection for ISP27XX.
    For ISP27XX, driver will capture new firmware dump even if there is
    o Added message indicating firmware dump was sucessfully collected
    o Improve logging to help debug firmware dump process for ISP27XX.
    qla2xxx: Add support to load firmware from file for ISP 26XX/27XX.
    qla2xxx: Increase the wait time for firmware to be ready for P3P.
      PCI: Make a shareable UUID for PCI firmware ACPI _DSM
    firmware, driver was getting configuration IOCTL request from the upper layers
    and it sends down to firmware. This causes firmware assert issue.
    This patch fixes the firmware assert issue. During the shutdown, if driver
    for only 10 sec instead of 5 minutes in case of firmware does not response
    SG list to firmware when receiving SG list count =0 on pass-through command.
    devices which are members of RAID arrays when enabled in the firmware.
    The Intel vendors events indicating firmware loading result and the
    bootup of the operational firmware are currently hardcoded byte
    Link: https://www.pcisig.com/specifications/conventional/pci_firmware/ECN_fw_latency_optimization_final.pdf
      This driver also includes support for user space triggered firmware
    PCI: Make a shareable UUID for PCI firmware ACPI _DSM
    Change 'firmare' to 'firmware'
    release_firmware() was always being called, it would work fine as expected
    release_firmware() twice.
    In the case of a cpu core sensor, the firmware exposes the physical
    way preserving compatibility with older OPAL firmwares.
    [media] si2165: Fix possible leak in si2165_upload_firmware()
    In case of an error function si2165_upload_firmware() releases the already
    requested firmware in the exit path. However, there is one deviation where
    the function directly returns. Use the correct cleanup so that the firmware
    eDP that makes the driver cope with firmware that already initialized
    the display (such as the firmware on the Tegra-based Chromebooks).
    (See driver.of_match_table and open firmware functions)
    Bluetooth: btbcm: Add firmware table for UART based devices
    enable firmware and patchram download procedure. It is a pretty
    turn support for firmware and patchram download into an optional
    not necessarily Greybus. As long as the firmware clears the pad bytes
    crypto: qat - fix double release_firmware on error path
    release_firmware was called twice on error path causing an Oops.
    machines that have no OPAL firmware, but provide RTAS.
    In order to fix this, we will verify the firmware version, and if it
    Also the ASUS TP500LN and X750JN firmware version, capabilities, and
    register. But it is return IC specific firmware version. So other maxim chip
    NFC: nxp-nci: Release firmware when switching to FW mode fails
    In that case, the firmware work will never be scheduled, will
    never complete and thus the firmware will never be released.
    It request_firmware returns 0, the request succeeded and the
    firmware pointer is valid. No need to check for it.
    device property: Introduce firmware node type for platform data
    by the device_property_* API if no proper firmware node (neither DT
    property_set that can be added as a firmware node to a struct
    device property: Make it possible to use secondary firmware nodes
    possible for a device to have two firmware nodes associated with
    from the primary firmware node to the secondary one if the given
    firmware node to the given device in such a way that
     (1) If there's only one firmware node for that device, it will be
         pointed to by the device's firmware node pointer.
     (2) If both the primary and secondary firmware nodes are present,
         the primary one will be pointed to by the device's firmware
    Make ACPI use set_primary_fwnode() for attaching its firmware nodes
      firmware: dmi_scan: Prevent dmi_num integer overflow
    by the platform firmware before the state is entered).
    downgraded functionality if the MC firmware object has older minor version
    MC firmware object may decide to run even though it cannot use newer
    to match the latest MC firmware version.
    The demodulator needs a firmware. Antti posted a firmware when releasing
    http://palosaari.fi/linux/v4l-dvb/firmware/M88DS3103/
    [media] mn88472: check if firmware is already running before loading it
    [media] mn88473: check if firmware is already running before loading it
    [media] mn88473: implement firmware parity check
    [media] mn88472: implement firmware parity check
      drm/edid: set ELD for firmware and debugfs override EDIDs
      drm/edid: set ELD for firmware and debugfs override EDIDs
    net/mlx5_core: Allocate firmware pages from device's NUMA node
    Allocate firmware pages from the NUMA node which is close to the device.
    net/mlx4: New file for QoS related firmware commands
    It gathers all relevant QoS firmware related commands etc, thus improving
    As there isn't a way for the firmware on the Nyan Chromebooks to hand
    HID: logitech-hidpp: add a module parameter to keep firmware gestures
    firmware gesture and some users may rely on it.
    Allow users to revert the raw reporting mode and keep going with the firmware
    the firmware. This can be very useful to debug various
    iwlwifi: mvm: add trigger for firmware dump upon MLME failures
    firmware data when this happens.
    net-detect mode before the device wakes up.  The firmware already
    * Moved Qualcomm SCM code into drivers/firmware
      firmware: qcom: scm: Support cpu power down through SCM
      firmware: qcom: scm: Add qcom_scm_set_warm_boot_addr function
      firmware: qcom: scm: Clean cold boot entry to export only the API
      firmware: qcom: scm: Move the scm driver to drivers/firmware
      ARM: qcom: Prep scm code for move to drivers/firmware
    WLAN.RM.2.0-00073 firmware requires self-peer to
    this wmi-tlv with qca6174 firmware crashes after
    Fix to dump device log even in the case of firmware crash. Also
    parameters from PCIE_FW_PF[7]. The firmware initializes its Device Log very
    Device Log even when the firmware crashes very early on or we're not
    attached to the firmware
    * update to the BT Coex firmware API
    (See driver.of_match_table and open firmware functions)
    newer firmware release for qca6174).
    initializes firmware channel scheduler.
    qca6174 wmi-tlv firmware defines a new wmi event
    multi-channel scheduler in firmware.
    firmware configuration combination.
    iwlwifi: check the size of the trigger struct from the firmware file
    data we expect was actually provided by the firmware file.
    Check this when we decode the triggers from the firmware
    management firmware the first PCI function to probe and reach the previous
    firmware did not set it up correctly.
    MIPS: BMIPS: Document the firmware->kernel DTB interface
    Upgrading to the most current mainboard firmware of the ASRock
    The release_firmware() function was called in three cases by the mn88472_init()
    [media] mn88472: Deletion of an unnecessary check before the function call "release_firmware"
    The release_firmware() function tests whether its argument is NULL and then
    It currently does not implement any support for the programmable firmware
    Kernel send a ping request and firmware should respond with a ping.
    Kernel can send data from 0 to 4k and the firmware must send back the data to kernel.
    firmware, so that kernel would re-assign all resources of pci devices.
    because it consumes peer in firmware. Only not tdls
    Currently number of tdls vdevs supported by firmware
    firmware and frame itself.
    firmware with HTT >= 3.4 (when freq param was
    compatibility code which sets HTT op version if it's not set by the firmware
    reduce usb load by moving this command to firmware.
    Seems H/W report correctly firmware Autorun value only at initialization
    we try to load firmware what kills the device. To fix clear
    REQUIRE_FIRMWARE firmware flag, to do not load firmware again, once we
    about these events to dump firmware data upon failures, or
    board has an old firmware. The patch prevents a crash and changes the default
    firmware revisions. By maintaining separate HTT T2H tables for each
    firmware revisions (main, 10x and tlv) similar to WMI abstraction,
    solves the conflicts. Add ATH10K_FW_IE_HTT_OP_VERSION so that the firmware can
    ATH10K_FW_FEATURE_HAS_WMI_MGMT_TX disabled) working with 10.2.4.48-2 firmware.
    If the firmware does not have ATH10K_FW_IE_HTT_OP_VERSION use the main HTT
    interface. That way old firmware images will still work.
    ARM: 8307/1: psci: move psci firmware calls out of line
    been stopped.  Also adds firmware version information to ethtool
    certain circumstances the firmware can take longer to be ready after
    QIDs (egress/ingress) from firmware in FW_*_CMD.alloc command
    (See driver.of_match_table and open firmware functions)
    Micron has released an updated firmware (MU02) for M510/M550/MX100
    Otherwise the VCE firmware needs to be in the first 256MB of VRAM.
    drm/edid: set ELD for firmware and debugfs override EDIDs
    If the user supplies EDID through firmware or debugfs override, the
    updated, and audio fails. Set ELD for firmware and debugfs EDIDs too.
    firmware: dmi_scan: Prevent dmi_num integer overflow
    Customers reported that the firmware version information from i40evf
    In some circumstances the firmware can take longer to be ready after a reset than
    (See driver.of_match_table and open firmware functions)
    (See driver.of_match_table and open firmware functions)
      drm/i915: Fix atomic state when reusing the firmware fb
    (See driver.of_match_table and open firmware functions)
    (See driver.of_match_table and open firmware functions)
      drm/i915: Fix atomic state when reusing the firmware fb
    - different secure firmware calls are used
    bootloader or firmware.
    PSCI v0.2+ allows the kernel to probe the PSCI firmware version.
    functions with code that allows probing PSCI firmware version
    the firmware by Linux very explicitly (or as explicitly as I can, for
    If the firmware is not using hardware reduced ACPI mode, we
    (See driver.of_match_table and open firmware functions)
    firmware: dmi_scan: Use direct access to static vars
    firmware: dmi_scan: Use full dmi version for SMBIOS3
    drm/i915: Fix atomic state when reusing the firmware fb
    Right now, we get a warning when taking over the firmware fb:
    That's because we update the plane state with the fb from the firmware, but we
    NFC: nci: Add firmware download support
    A simple forward for firmware download (i.e. sending a new firmware
    This feature is required to update the firmware of NXP-NCI NFC
    used (vendor config, firmware download). Add possibility for a
    When using the user mode helper to load firmwares the function _request_firmware
    the firmware buffer is not assigned. This happens only when the return value
    is zero. This patch fixes this problem in _request_firmware_load. When the
    firmware: Avoid manual device_create_file() calls
    firmware_class: Fix whitespace and indentation
    the former signals to the OS that the firmware is PSCI compliant.
    If firmware provides ACPI tables with ACPI version less than 5.1,
    (See driver.of_match_table and open firmware functions)
    (See driver.of_match_table and open firmware functions)
    "Flashing new firmware" message.. which may confuse end user.
    causing the firmware to fail the rule attachment.
    post-mobility firmware activation and device tree update.
      cx82310_eth: wait for firmware to become ready
    reries (Default sw count in firmware is 16), increasing the threshold
    By default rts protection is enabled in firmware for the second
    (See driver.of_match_table and open firmware functions)
    firmware device tree access functions are available. Since all the
    (See driver.of_match_table and open firmware functions)
    (See driver.of_match_table and open firmware functions)
    (See driver.of_match_table and open firmware functions)
    (See driver.of_match_table and open firmware functions)
    (See driver.of_match_table and open firmware functions)
    (See driver.of_match_table and open firmware functions)
    The PCAN USB (pro) FD adapters with firmware versions > 2.x support the
    The setting for the 2.x firmware adapters can be modified with the 'ip' tool
    can: kvaser_usb: Comply with firmware max tx URBs value
    firmware provides its actual maximum inside its reply to the
    increases above the limit reported by firmware, the firmware
    On the other hand, in certain models, the firmware can support
    to firmware replies.
    cx82310_eth: wait for firmware to become ready
    When the device is powered up, some (older) firmware versions fail to work
    when the device is hot-plugged). The firmware indicates its ready status by
    Newer firmwares delay the first command so they don't suffer from this problem.
    Wait for firmware to become ready (link up) before sending any commands and/or
    Tested with 4.1.0.9 (old) and 4.1.0.30 (new) firmware versions.
    The BCM43362 firmware falsely reports it is capable of providing
    before patching the firmware. This makes it show up in dmesg and
    firmware functions.
    In particular they have new experimental firmware that can better
    firmware on the device can reasonably do a better job of palm detection
    firmware can characterize what a palm looks like in much finer-grained
    The current OPAL firmware exposes the different sensors of an IBM Power
    (See driver.of_match_table and open firmware functions)
    (See driver.of_match_table and open firmware functions)
    - Fix number of available compute pipelines according to new firmware
    firmwares needed by this device.
    Sync with the wmi definitions from the firmware team
    "echo" used to be called when no firmware loaded to the NIC,
    Probe firmware with "echo" only after it returned "ready" event.
      Input: synaptics - do not retrieve the board id on old firmwares
    and open firmware functions).
    (See driver.of_match_table and open firmware functions)
    Some firmware revisions (tested with qca6174
    The firmware frequently manages to trigger this, and there's
    iwlwifi: mvm: don't wait for firmware verification
    The firmware has a race in the flow that indicates the
    good rates with such peers anyway since the firmware cannot do
    iwlwifi: dvm: run INIT firmware again upon .start()
    run again the INIT firmware after the system booted. The
    INIT firmware runs calibrations which impact the physical
    (See driver.of_match_table and open firmware functions)
    firmware.
    To support per tx queue maxrate limit, we use the update-qp firmware
        update-qp firmware command
      ASoC: Intel: remove conflicts when load/unload multiple firmware images
    (See driver.of_match_table and open firmware functions)
    (See driver.of_match_table and open firmware functions)
    ueagle-atm: Delete unnecessary checks before the function call "release_firmware"
    The release_firmware() function tests whether its argument is NULL and then
    ASoC: Intel: Remove vague commit about slave DMA config from firmware loader
    ASoC: Intel: Remove support for Intel MID DMA from firmware loader
    dmaengine: imx-sdma: Add support for version 3 firmware
    Currently when version 3.1 of the mx6q SDMA firmware is used we get:
    [    0.392169] imx-sdma 20ec000.sdma: unknown firmware version
    firmware flushes all the frames that are *currently* on the
    firmware is possible, but then, we have to run the Tx
    response path on frames that didn't reach the firmware
    firmware, but make sure the firmware will not transmit them
    (See driver.of_match_table and open firmware functions)
    (See driver.of_match_table and open firmware functions)
    (See driver.of_match_table and open firmware functions)
    (See driver.of_match_table and open firmware functions)
    (See driver.of_match_table and open firmware functions)
    (See driver.of_match_table and open firmware functions)
    (See driver.of_match_table and open firmware functions)
    (See driver.of_match_table and open firmware functions)
    (See driver.of_match_table and open firmware functions)
    (See driver.of_match_table and open firmware functions)
    (See driver.of_match_table and open firmware functions)
    (See driver.of_match_table and open firmware functions)
    (See driver.of_match_table and open firmware functions)
    (See driver.of_match_table and open firmware functions)
    (See driver.of_match_table and open firmware functions)
    (See driver.of_match_table and open firmware functions)
    drivers/firmware/efi/Makefile
    libs-$(CONFIG_EFI_STUB) += drivers/firmware/efi/libstub/
    fixdep: error opening depfile: drivers/firmware/efi/libstub/.efi-stub-helper.o.d: No such file or directory
    scripts/Makefile.build:257: recipe for target 'drivers/firmware/efi/libstub/efi-stub-helper.o' failed
    make[1]: *** [drivers/firmware/efi/libstub/efi-stub-helper.o] Error 2
    Makefile:939: recipe for target 'drivers/firmware/efi/libstub' failed
    make: *** [drivers/firmware/efi/libstub] Error 2
    firmware/bootloader is buggy and should be fixed.
    (See driver.of_match_table and open firmware functions)
    (See driver.of_match_table and open firmware functions)
    firmware device tree access functions are available. Since all the
    firmware device tree access functions are available. Since all the
    firmware device tree access functions are available. Since all the
    to other (non-ACPI) firmware device node types.
    The current CP firmware can handle Usermode Queues only on MEC1.
    To reflect this firmware change, this commit reduces number of compute pipelines
    (See driver.of_match_table and open firmware functions)
    (See driver.of_match_table and open firmware functions)
    (See driver.of_match_table and open firmware functions)
    firmware support") in 2007.
    powerpc/powernv: only call OPAL_RESEND_DUMP if firmware supports it
    that current firmware supports it first. Otherwise we get firmware
    powerpc/powernv: only call OPAL_ELOG_RESEND if firmware supports it
    Otherwise firmware complains: "OPAL: Called with bad token 74 !"
    The firmware provides pointer to SDIO shared information at end of
    RAM during firmware initialization. End of RAM is obviously determined
    device in a state where it is accessible for firmware download.
    used for firmware download so rename these more appropriate.
    * Update to the BT Coex firmware API
    higher than ath10k firmware could handle key_index (WMI_MAX_KEY_INDEX == 3).
    Some firmware revisions (e.g. qca6174 with fw73)
    All available firmware revisions seem to support
    in-firmware BSS roaming in the future.
    The firmware was not using the new API, so we don't need to
    When we load the firmware for the 8000 B step device, it'll
    hardware, there can be a race between the WiFi firmware
    being loaded and the Bluetooth firmware being loaded.
    firmware will be authenticated.
    The functions related to firmware error dump moved. No need
    space. This will determine what firmware file will be
    Enable this feature only if the firmware advertises support
    All the supported firmwares support this API.
    This new firmware will come out soon.
    firmware: qcom: scm: Support cpu power down through SCM
    firmware: qcom: scm: Add qcom_scm_set_warm_boot_addr function
    the firmware, if the address is different than the previously set
    firmware: qcom: scm: Clean cold boot entry to export only the API
    firmware: qcom: scm: Move the scm driver to drivers/firmware
    drivers/firmware and the scm header to include/linux to support that
    ARM: qcom: Prep scm code for move to drivers/firmware
    /lib/firmware/elants_i2c.bin when it gets firmware updates.  This is a
    touchscreens have different firmwares, you would need to move the files
    of the touchscreen he or she intends to update onto the end of the firmware
    The firmware filenames it looks for now are of the form:
    Try to load module waves and allocate runtime blocks for it if the firmware
    ASoC: Intel: add function to load firmware image
    Add a general method to load firmware image, and apply to base firmware
    * fix ROC removal - avoids a firmware crash
    Commit 16e47624e76b43db ("cxgb4: Add new scheme to update T4/T5 firmware")
    if there is an EC transaction broken because of firmware/driver bugs.
    The Kvaser firmware can only read and write messages that are
    firmware puts a zero-length placeholder command in its place
    Fortunately, the firmware advertises such behavior in the extended
    Input: synaptics - do not retrieve the board id on old firmwares
    The board id capability has been added in firmware 7.5.
    The firmware of the X240 (LEN0035, 2013/12) exposes the same values
    firmware version 8.1 is safe.
      staging: comedi: vmk80xx: remove "firmware version" kernel messages
    Fixes: 9d761fd8a583 ("iwlwifi: mvm: add trigger for firmware dump upon missed beacons")
    Since new wmi-tlv firmware doesn't have SWBA event
    NoA when appropriate on the new firmware.
    As in the last time, without advertising the firmware files
    qca6174 with wmi-tlv firmware uses offloaded
    programs the firmware according to the admin directives.
    Add device capability, firmware command opcode and etc prior elements
    APIs to check the MC firmware version and to manipulate
    Staging: rtl9182u: r819xU_firmware: Replaced C99 comments with C89
    Staging: rtl8192u: r819xU_firmware: removed commented out assert
    Staging: rtl8192u: r819xU_firmware: removed commented out variable
    staging: vt6656: Fix possible leak in vnt_download_firmware()
    When failing to allocate buffer memory, function vnt_download_firmware() goes
    firmware. Thus use the correct cleanup. Detected by Coverity CID 1269128.
    si2168, tda10071, m88ds3103: Fix firmware wording
    Change 'firmare' to 'firmware'
    ASoC: Intel: remove conflicts when load/unload multiple firmware images
    scratch blocks for each firmware image it parses. Move the allocate function
    be allocated only after all firmware images be parsed.
    * add triggers for firmware dump collection
    staging: rtl8723au: rates are always set via the firmware interface
    The only case where fw_ractrl = false was when the firmware failed to
    * fix ROC removal - avoids a firmware crash
    where the firmware doe not set the operational status bit of the
    the application TLV status until a firmware fix is provided.
    Catherine provides a fix where some firmware versions are incorrectly
    firmware. In that case, I get:
      firmware: dmi_scan: Fix dmi_len type
      firmware: dmi_scan: Fix dmi scan to handle "End of Table" structure
    The current SKID length configuration causes firmware
    In CEE mode the firmware does not set the operational status bit of
    of the application TLV status till a firmware fix is provided.
    drivers: net: xgene: Fix backward compatibility of newer firmware with older kernel
    newer firmware by making the binding unique so that the older driver won't
    drivers: net: xgene: fix new firmware backward compatibility with older driver
    newer firmware by making the binding unique so that the older driver won't
    dtb: change binding name to match with newer firmware DT
    newer firmware by making the binding unique so that the older driver won't
    The new bindings are in sync with the newer firmware.
    Not all firmware revisions have a proper
    other chips/firmwares.
    qca6174 WLAN.RM.2.0-00073 firmware uses full rx
    in firmware and becomes overly long (with trailing
    ath10k: delete unnecessary checks before the function call "release_firmware"
    The release_firmware() function tests whether its argument is NULL and then
    negotiations to firmware. In such scenario, the PMF configuration of
    Shannon updates i40e/i40evf to include the firmware build number in the
    formatted firmware version string.
    num_online_cpus().  Adds a firmware check to ensure that DCB is disabled for
    firmware versions older than 4.33.  Updates i40e/i40evf to add missing
    * add triggers for firmware dump collection
    New chipset have similar firmware downloading sequences to previous
    after downloading the patch so that firmware needs to be handled by
    iwlwifi: mvm: add trigger for firmware dump upon low RSSI
    ability to collect the firmware data at that point.
    iwlwifi: mvm: add trigger for firmware dump upon statistics
    a firmware dump when a certain value hits a certain offset.
    iwlwifi: mvm: restart firmware recording when no configuration is set
    Sometimes the firmware will have a hard coded configuration.
    in the firmware file, and it will have to re-start
    iwlwifi: mvm: add trigger for firmware dump upon command response
    This will allow to collect the data as soon the firmware
    iwlwifi: mvm: add trigger for firmware dump upon channel switch
    iwlwifi: mvm: add trigger for firmware dump upon missed beacons
    wrong in the firmware. Add a trigger to be able to collect
    iwlwifi: mvm: add the cause of the firmware dump in the dump
    Now that the firmware dump can be triggered by events in
    the code and not only the user or an firmware ASSERT, we
    need a way to know why the firmware dump was triggered.
    firmware dump mechanism are transient. It is then very
    the firmware - prepare for that.
    measured by the firmware.
    Since the firmware just counts, and doesn't reset the counter at all,
    clear it in the firmware whenever we associate. However, accumulate it
    over firmware restart.
    Since clearing the statistics in the firmware will also clear the ones
    higher firmware versions.  Since we deprecated firmware version 9, we
    This firmware is not supported anymore.  Stop loading this firmware.
    firmware also has the capability to fill these statistics) using
    New firmware versions will report statistics using a new version 10
    This allows to use the firmware debugging system even when
    the configuration values are set hard coded in the firmware.
    staging: comedi: vmk80xx: remove "firmware version" kernel messages
    with usb_bulk_msg() to read the firmware version information. This information
      arm64: psci: move psci firmware calls out of line
    before this driver gets control, through use by firmware, for example.
    Recent firmware does not support it either.
    Introduce boot loader. Instead of the operational firmware,
    Driver loads firmware only when bringing up interface. All information
    The firmware composed of 2 files:
    - wil6210.fw - firmware itself (compiled code + data)
    The wireless and the wired version have slightly different firmwares, but
            const struct firmware  *   fw;                   /* 14392     8*/
            const struct firmware  *   fw;                   /* 14392     8*/
            const struct firmware  *   fw;                   /* 14392     8*/
    arm64: psci: move psci firmware calls out of line
    assertions in the PSCI firmware calling code firing due to mcount
    last speeds we requested from the firmware and use the advertised speed
    A touchpad may have firmware based palm detection code enabled which
    suppresses 2D data from being reported when the firmware believes a palm is
    operating in rmi mode then the firmware will not properly clear the palm detect
    When a finger is lifted from a Synaptics touchpad the firmware will continue
    last speeds we requested from the firmware (the speeds the FW will be
    the firmware remembers as the last requested speeds.
    r8169: Fix trivial typo in rtl_check_firmware
    Change 'firwmare' to 'firmware'
    firmware: dmi_scan: Fix dmi_len type
    the completed notification from the firmware.  The scan abort can also
    The updated firmware expects the MMX ID to be used as 3, so update the
    The updated firmware expects the MMX ID to be used as 3, so update the
    driver version to 3.2.25.1 and firmware version to 3.2.5.1.
    This patch updates the BNA driver version to 3.2.25.1 and the firmware version
         platform firmware which then may casuse fatal controller driver
    Quark firmware sets up a series of locked IMRs around pieces of
    memory that firmware owns such as ACPI runtime data. During boot
    Move PD allocation and deallocation from firmware to driver.  At
    driver load time all the PDs will be requested from firmware and their
    firmware: dmi_scan: Fix dmi scan to handle "End of Table" structure
    compatibility with the older firmware code which does not expose residency
    HID: rmi: Print the firmware id of the touchpad
    Knowing the firmware id is extremely useful when debugging issues related to
    the touchpad. It can be used to determine the hardware, firmware version,
    and configuation of the touchpad. This patch queries the firmware id and
      firmware_loader: handle timeout via wait_for_completion_interruptible_timeout()
      firmware_loader: abort request if wait_for_completion is interrupted
      firmware: Correct function name in comment
    functions. Resume path should be handled by the firmware, i.e.
    If firmware advertises support for TxBF then the
    driver has to instruct the firmware accordingly
    firmware binaries.
    New qca6174 wmi-tlv firmware revisions support
    New qca6174 wmi-tlv firmware supports vdev stats.
    Some firmware revisions don't notify host about
    WLAN.RM.2.0-00073 firmware.
    affect on any upstream firmware, but should be fixed anyway
    In case firmware fails to start the scan, then complete
    Bluetooth: btusb: Use matching names for Broadcom firmware files
    The Broadcom firmware files are named with firmware version information
    actual firmware names, provide an internal table that does the mapping
    and request the firmware file by name.
    into the name and firmware version information from the firmware files.
    contains any matching entry to the actual hardware or firmware files
    that the device can load the ath3k firmware and re-enumerate itself as an
    To fix this issue, recently Intel Bluetooth firmware patch had been submitted
    For backward compatibility of this command  with old firmware, this command was
    the problem even if the system doesn't have the latest firmware patch.
    A vendor specific command is sent to firmware during
    drm/i915: Fix atomic state when reusing the firmware fb
    Right now, we get a warning when taking over the firmware fb:
    That's because we update the plane state with the fb from the firmware, but we
    firmware services, and run in compatibility mode. This way, if an
    then the firmware "owns" the machine and expects for its 32-bit IDT
    GDT that the firmware expects to be present. We can only jump to the
      Input: elan_i2c - verify firmware signature applying it
      ALSA: line6: toneport: Use explicit type for firmware version
    ALSA: line6: toneport: Use explicit type for firmware version
    The firmware version is a single byte so have the variable type agree.
    The BDW audio firmware DSP manages the DMA and the DMA cannot be
       - Expose firmware platform size in sysfs
      firmware: efi: Remove unneeded guid unparse
      efi: Expose underlying UEFI firmware platform size to userland
    * minor fixes and exposing firmware revision information to
    so we avoided them. But with production hardware and firmware, and the
    ASoC: Intel: sst: Fix firmware name size handling
    Function sst_acpi_probe() uses plain strcpy for setting member firmware_name
    of a struct intel_sst_drv from member firmware of a struct sst_machines.
    hold 32 byte. Since eg. commit 64b9c90b8600 ("ASoC: Intel: Fix BYTCR firmware
      ASoC: Intel: fix sst firmware path for cht-bsw-rt5672
    cw1200: Less function calls in cw1200_load_firmware_cw1200() after error detection
    The functions kfree() and release_firmware() were called in a few cases
    by the cw1200_load_firmware_cw1200() function during error handling even if
    cw1200: Delete an unnecessary check before the function call "release_firmware"
    The release_firmware() function tests whether its argument is NULL and then
    The hardware and firmware for the RTL8192EE utilize a FIFO list of
    firmware device tree access functions are available. Since all the
    ASoC: Fix for Intel firmware name
    ASoC: Intel: fix sst firmware path for cht-bsw-rt5672
    All sst firmware is provided under the intel directory of the linux-firmware
    system. Change the path to expect a default linux-firmware installation.
    ASoC: Intel: fix sst firmware path
    All sst firmware is provided under the intel directory of the linux-firmware
    system. Change the path to expect a default linux-firmware installation.
       complete the platform firmware provided functionailities using ec_poll()
    cxgb4: Delete an unnecessary check before the function call "release_firmware"
    The release_firmware() function tests whether its argument is NULL and then
    csiostor:Use firmware version from cxgb4/t4fw_version.h
    This patch is to use firmware version macros from t4fw_version.h
    in spurious BUS_ERROR events from the USBCan-II firmware directly
    firmware device tree access functions are available. Since all the
    allows users to configure the desired log level for firmware dbglog messages.
    driver tries to send broadcast frame. This causes firmware
    Some AMD CS553x devices have read-only BARs because of a firmware or
    firmware_loader: handle timeout via wait_for_completion_interruptible_timeout()
    firmware_loader: abort request if wait_for_completion is interrupted
    firmware: Correct function name in comment
    firmware device tree access functions are available. Since all the
    a firmware bug (eg. when _CST returns a different set of states for
    A quirk of some older firmwares that report endpoint pipe type as PIPE_BULK
    to be used. This is no more necessary, as firmware supports
    When AP is started, firmware exits power save mode. This
    packets until AWAKE event from firmware. Data path is
    The firmware supplies two kinds of packets via the RX mechanism. Besides the
    BCM43142A0-04ca-2007.hcd, then move to /lib/firmware/brcm/.
    firmware more frequently.
    * Convert pfc enabled info from firmware format to what dcbnl expects before
    Some st21nfcb firmware does not support the nci command
    firmwares embedded on an NCI capable chipset, like e.g. the
    iwlwifi: mvm: don't send a command the firmware doesn't know
    regardless of the order. The added support for firmware version 6 and
    register and the alive notification from the firmware.
    When we resume from WoWLAN, the firmware may have crashed
    had when we loaded the WoWLAN firmware upon suspend) and
    know. Once the op_mode is informed that the WowLAN firmware
    contexts, because they're not used anywhere.  In fact, the firmware
    If we don't want to restart the firmware, don't reprobe either in case
    [media] si2157: change firmware variable name and type
    Rename firmware variable from fw_file to fw_name and change its
    type from u8 to const char as request_firmware() input is.
    [media] si2157: print firmware version
    [media] si2157: change firmware download error handling
    Rename firmare download error path goto label. Remove firmware NULL
    started using goto labels for firmware error handling.
    Remove if () from firmware command error path as there should not be
    [media] si2168: change firmware variable name and type
    Rename firmware variable from fw_file to fw_name and change its type
    from u8 to const char as request_firmware() input defines.
    si2168 6-0064: downloading firmware from file 'dvb-demod-si2168-b40-01.fw'
    si2168 6-0064: firmware version: 4.0.11
    si2168 6-0064: downloading firmware from file 'dvb-demod-si2168-b40-01.fw'
    si2168 6-0064: firmware version: 4.0.11
    That commit added goto label for error path to release firmware,
    [media] si2168: enhance firmware download routine
    All known old firmware firmware formats are downloaded using 8 byte
    chunks. Reject firmware if it could not be divided to 8 byte chunks
    supported firmware download routines are rather similar.
    [media] si2168: change firmware version print from debug to info
    Even firmware version is not needed to know, it is still interesting
    Remove if () from firmware command error path as there should not be
      - Expose firmware platform size in sysfs for the benefit of EFI boot
        versions) and querying the firmware instead of guessing about the
    ath3k devices fail to load firmwares on xHCI buses, but work well on
    and disables the function that uses SPI for firmware download if SPI
    New wmi-tlv firmware for qca6174 has STA keepalive
    New wmi-tlv firmware for qca6174 supports this.
    New wmi-tlv firmware for qca6174 supports this.
    mac80211 already requests WMM per vif but firmware
    wmi-tlv firmware for qca6174 is capable of this.
    completely ignored as firmware does not need it.
    When revinfo retrieval fails we can not show the firmware version
    brcmfmac: show firmware release info in ethtool driver info
    The ethtool driver info already contained the unique firmware
    identifier. This patch adds the firmware release version.
       firmware-version: 01-32bd010f
    layer will ask the firmware for this information.
    brcmfmac: do not load firmware when device is already running
    it is already running firmware. However, when no firmware download
    is needed it still continues to request the firmware files. This
    set to zero, ie. unknown. However, firmware does provide a valid
    firmware implements keep alive checks and will disconnect
    wil6210: ignore firmware failure to gracefully stop AP
    upon cfg80211_stop_ap, a graceful AP shutdown is requested from firmware
    followed by firmware reset.
    The change is to return success in this scenario, because firmware
    wil6210: sync WMI with firmware
    Incorporate changes from firmware.
    However newer chips have a bootloader stage and require firmware to
    Bluetooth: btusb: Handle out of order firmware loading complete event
    When loading the Intel firmware it can happen that the firmware loading
    last firmware fragment.
    firmware loading complete event however is send over the interrupt
    receiving firmware loading complete event quickly, but not for receiving
    Introduce an extra flag that tracks when the firmware sending has
    the firmware loading procedure with a different flag. That way the
    Bluetooth: btusb: Add firmware loading for Intel Snowfield Peak devices
    The Intel Snowfield Peak devices do not come with Bluetooth firmware
    firmware when the device is connected via USB.
    to identify the hardware and select the right firmware to load.
    firmware loading makes heavy use of these new internal callbacks.
    feedback about the firmware loading procedure.
    This is useful for firmware upgrades.
    Operating System perspective, the firmware of both families behave
    On PowerNV platform, the OPAL interrupts are exported by firmware
    In commit c8742f85125d "powerpc/powernv: Expose OPAL firmware symbol
    cxgb4: Move firmware version MACRO to t4fw_version.h
    Move firmware version MACRO to a new t4fw_version.h file so that csiostor driver
    This patch fix is to use default firmware configuration files
    /lib/firmware/* dir. Additional cleanup is done to reuse flash
    firmware event called recoverable error events.
    The firmware might change the hca core clock frequency after the driver
    firmware and the driver. Align the array that holds the capability
    net/mlx4_core: Fix HW2SW_EQ to conform to the firmware spec
    net/mlx4_core: Adjust command timeouts to conform to the firmware spec
    The firmware spec states that the timeout for all commands should be 60 seconds.
    If the firmware can detect a bad cable, allow it to generate an
                    - 2 firmware pin
    After rtl8192cu download firmware routine, set fw_ready flag.
    New wmi-tlv firmware uses HTT 3.0 protocol which
    New wmi-tlv firmware for qca6174 has u-UAPSD
    autotrigger service. If it is enabled firmware
    Both 10.2 firmware binaries 10.2-00082-4 and
    parsing for firmware 10.2.
    The QCA6174 in combination with new wmi-tlv firmware is capable of
    New firmware and firmware (qca6174 hw3.0+ and fw
    Some firmware revisions may report this event as
    Some firmware revisions may report this event as
    firmware update before operation.
    The latest known working firmware is BCM20702B0_002.001.014.0527.0557.hex
    as /lib/firmware/brcm/BCM20702A0-19ff-0239.hcd to make this device fully
    Bluetooth: hci0: BCM: firmware hci_ver=06 hci_rev=222d lmp_ver=06 lmp_subver=410e
    With this firmware the device reports support for connectionless slave
    unplug makes the firmware always ignore the very first command.
    [media] Si2168: increase timeout to fix firmware loading
    Increase si2168 cmd execute timeout to prevent firmware load failures. Tests
    shows it takes up to 52ms to load the 'dvb-demod-si2168-a30-01.fw' firmware.
    read_local_version() is called from download_firmware() where
    download_firmware() is called from st_kim_start() which is
    Fixes: 0294d9eece86 ("iwlwifi: mvm: let the firmware configure the scheduler")
    * A fix for scan that fixes a firmware assertion
    by the rest of the firmware. Since commit 7914a7c5651a5161 now lets us
    Note that EC event handling is sequential. We fetch one event from firmware
    the very first QR_EC command issued after SCI_EVT is set. EC firmware on
    handle the EC firmware indications. And this check will happen for both IRQ
    reading the event, SCI_EVT might be cleared by the firmware, thus it may
    Input: elan_i2c - verify firmware signature applying it
    To allow for different firmware sizes let's replace the original size check
    with with checking the signature in the firmware data.
    setup firmware command: it should be saving or updating the ssn in the
    a firmware bug. This patch fixes corner case system crash
    abrupt shutdown initiated by the platform firmware. This patch fixes the
    Input: cyapa - fix endianness issues in gen5 firmware update support
    Also fix firmware validation checks and misspelled field in
    the firmware know to start the authentication of the
    If the firmware sends spontaneous DTS notfications with the
    iwlwifi: mvm: sync statistics firmware API
    The firmware API structs are split differently, synchronize
    the struct splits with the current firmware definitions.
    bit 7 and not bit 0. However, older firmwares don't register
    the correct interrupt will be issued hoping that the firmware
    firmware didn't register to the proper interrupt.
    As this functionality relies on getting a firmware notification
    iwlwifi: mvm: let the firmware configure the scheduler
    firmware.
    The driver doesn't support the firmwares that don't have
    When scanning on passive channels the firmware uses frag_passive_dwell
    used by the firmware to define the maximum time allowed out of the
    - Set max_out_time and suspend_time if the firmware doesn't support
    the firmware. Most of the firmware interaction is done in
    firmware which includes the last iteration's status and the scanned
    features like firmware loading and communication with PMU firmware, we
    the PMU firmware's jobs on dGPUs, in this patch. This refers to the
    utility and then moved to /lib/firmware/brcm/.
       Windows these are handled by firmware on the device and not exposed
    firmware: efi: Remove unneeded guid unparse
    firmware and only then perform the allocation, using desc_size rather
    Input: cyapa - add gen5 trackpad firmware update support
    Add firmware image update support for gen5 trackpad device, it can be used
    Input: cyapa - add gen3 trackpad device firmware update support
    Add support for firmware image update for gen3 trackpad devices; the
    firmware update is initiated by writing to update_fw sysfs attribute.
    production, for trackpad device state checking, managing and firmware image
    updating.  These interfaces include mode, firmware_version and product_id
    interfaces for reading firmware version and trackpad device product id
    values, and update_fw interface to command firmware image update process.
    Shannon provides tweaks to i40e and i40evf to keep the firmware, software
    Neerav updates the driver to disable firmware LLDP agent for NICs with
    a firmware version lower than v4.3 and added a message when this happens.
    upstream window from firmware, clip them to fit and update the bridge
    upstream window from firmware, clip them to fit and update the bridge
    upstream window from firmware, clip them to fit and update the bridge
    upstream window from firmware, clip them to fit and update the bridge
    upstream window from firmware, clip them to fit and update the bridge
    upstream window from firmware, clip them to fit and update the bridge
    upstream window from firmware, clip them to fit and update the bridge
    upstream window from firmware, clip them to fit and update the bridge
    upstream window from firmware, clip them to fit and update the bridge
    secure firmware require certain registers of aforementioned IP to be
    from firmware initialization which is happenning in .init_early callback
    L2C driver to ask the firmware to configure the hardware according to
    i40e: Issue "Stop LLDP" command for firmware older than v4.3
    Disable firmware LLDP agent for NICs with firmware version lower than
    v4.3. Added a message when driver disables the firmware LLDP agent on
    Recent Leaf firmware versions (>= 3.1.557) do not allow to send
    non-existing channel, the firmware crashes.
    from the firmware on one of our earlier-sent frames.
    to the firmware, effectively closing all further communication.  In
    firmware/hardware documentation.
    send EAPOL frames using normal ACK because of firmware considerations.
    Rx side (recipient) firmware informs driver about ADDBA with
    by firmware with WMI_ADDBA_RESP_SENT_EVENTID. In case of success,
    firmware informs driver with WMI_DELBA_EVENTID,
    * A fix for scan that fixes a firmware assertion
    New firmware revisions support beacon and probe
    are no longer delivered for these firmware
    New firmware revisions with beacon templates need
    This is required for new firmware to work with
    New firmware revisions may support setting beacon
    This event is delivered to host by firmware if it
      firmware works in all cases.
    This .c file isn't needed by the kernel driver, it's there for firmware
    with the PF fail during shutdown.  On some versions of the firmware, the
    solution is to place another descriptor on the queue and the firmware
    The QEMU open source machine emulator and virtualizer presents firmware
    On some versions of the firmware, the VF admin send queue may become
    descriptor on the queue; the firmware will then process both requests.
    value, firmware informs the driver to retry the failed IO command
    infinite times, so to provide some time for the firmware to discover
    command for five times( doesn't giving enough time for firmware to
       firmware, then print the sensor number, the maximum threshold number it
    MIPS: ARC: Add declarations for a few missing ARC firmware functions.
    buffer and the index of rx buffer in rx ring to the firmware.
    This led to a corruption in the firmware. The visible
    state of the UEFI firmware after SetVirtualAddressMap() has been called.
    only for the 10.2 firmware.
    the 10.2 firmware.
    efi: Expose underlying UEFI firmware platform size to userland
    run in 64-bit even if the underlying UEFI firmware platform is
    The kernel already knows about the size of the firmware via
    /sys/firmware/efi/fw_platform_size to expose that information to
     *Update the EFI firmware Kconfig help with the URL of efibootmgr. - Peter Jones
    * new firmware API for iwlmvm supported devices
    Because the scheduling of the user-mode queues is done by the CP firmware,
    * Add WMI TLV interface in preparation for new firmware interface support
    * Support new firmware branch 10.2.4
    non existing VD. ldTgtIdtoLd[] array has size 256 for Extended VD firmware
    and 128 for legacy firmware. Accessing indices beyond array size (OS will
    For legacy firmware (64 VD firmware), invalidates LD (by setting LD value
    1) If the firmware supports SED JBOD, all non read/write commands to JBODs
       will be sent via firmware path, and read/write commands to JBODs will
    2) If the firmware does not support SED JBOD, driver will fall back to the
    Check firmware status in ses_set_* before sending control pages to
    firmware.
    The name provided by firmware is in a vendor specific format, publish
    across firmware implementations.  If the enclosure does not provide a
    csiostor:firmware upgrade fix
        - MCP7[789A] hang fix where firmware hasn't already setup NISO pollers
    mwifiex: Increase priority of firmware download message
    If host fails to wakeup the firmware, we will trigger card reset
    For v1 key material API firmwares, there is no need to send
    perspective. As such they use the same firmware image.
    mwifiex: save sdio register values before firmware dump
    This patch saves sdio registers value before firmware dump,
    mwifiex: save driver information to file when firmware dump
    when firmware dump happens. This information can be used to
    mwifiex_debug_info also need be save to file when firmware dump happens.
    can be reused in firmware dump function.
    brcmfmac: enable 802.11d support in firmware
    to firmware. This allows FW to take appropriate actions.
    the firmware to use the same.
    During configuration a down command is given to the firmware which
    * enhancements to the firmware debugging infrastructure
    bluetooth: btmrvl: increase the priority of firmware download message
    The firmwares on the omap5 and dra7xx unfortunately do not take care
    ASoC: Intel: Delete an unnecessary check before the function call "release_firmware"
    The release_firmware() function tests whether its argument is NULL and then
    * new firmware API for iwlmvm supported devices
    iwlwifi: bump firmware API for mvm devices to 12
    use the latest version of the firmware.
    iwlwifi: 7000: fix reported firmware name for 7265D
    Some buggy firmwares export an incorrect MAC address (00:a0:c6:00:00:00). This
    address of devices with this firmware bug to a random address. I tested the
    patch with two devices that has this firmware bug (Huawei E398 and E392), and
    * rsi: fix memory leak related to firmware image
      ASoC: Intel: Fix BYTCR firmware name
    the I/O, which could lead to inconsistent driver and firmware states.
    In this case firmware reset would clear the inconsistent state.
    so probably a firmware bug. either way, it makes it hard to track BTN_TOUCH
    The driver and the firmware now support 2 different channels
    The firmware is able to compensate the rssi when we hear
    This allows to collect the logs even if the firmware hasn't
    crashed. Of course, crashing the firmware is an option, but
      issue with the firmware debugging infrastructure. While working on
      torture scenarios of firmware restarts, Eliad found an issue which
      drm/msm: Deletion of unnecessary checks before the function call "release_firmware"
    rtlwifi: rtl8821ae: Simplify loading of WOWLAN firmware
    The existing method for loading both normal and WOWLAN firmware for the
    But duplication of firmware data here is useless,
    also send (re) assoc peer command to be sure firmware
    command is currently supported in 10.2 firmware alone.
    ath10k: add 10.2.4 firmware support
    10.2.4 firmware uses bitmask in wmi_resource_config to configure
    10.2 firmware features like airtime fairness and rx batch mode instead
    The internal firmware version doesn't tell much to the user, it's more
    To make it easier to manage firmware differences, we should not use
    ATH10K_FW_FEATURE_WMI_10X outside ath10k_core_init_firmware_features(). To
      drm/msm: Deletion of unnecessary checks before the function call "release_firmware"
    ASoC: Intel: Fix BYTCR firmware name
    BYTCR DSP firmware is in intel/ subdirectory. See linux-firmware.git
    commit d562a3b63632 ("linux-firmware: add sst audio firmware for baytrail
    Liad fixes an issue with the firmware debugging infrastructure.
    While working on torture scenarios of firmware restarts, Eliad found an
       - fixes for new ASIHPI firmware,
      ALSA: asihpi: relax firmware version check
      A patch from Ben to export the symbol map of our OPAL firmware as a
      powerpc/powernv: Expose OPAL firmware symbol map
    access mixer / control interface of the card, the firmware "locks up"
    This corresponds with updated asihpi firmware in alsa-firmware repo
    ALSA: asihpi: relax firmware version check
    Some products firmware is no longer being updated
    Avoid regression by allowing this firmware to be loaded as
    drm/msm: Deletion of unnecessary checks before the function call "release_firmware"
    The release_firmware() function tests whether its argument is NULL
    CNTVOFF is initialised by the kernel to 0), we want to spot firmware
    The only way to make sure firmware doesn't use CCK
    Setting 0 ps timeout to firmware yields very poor
    To make this work correctly firmware needs to be
    Some firmware revisions need peer phymode to be
    any of firmware versions, hence unregister the callback and
      firmware create_mkey command.
    If the firmware has declared more than 8 video output devices, and the
    case the firmware that has 8+ output devices in that if we see such a
    firmware, we do not test if the device is in _DOD list. The creation of
    the backlight device will also enable the firmware to emit events on
    powerpc/powernv: Expose OPAL firmware symbol map
    firmware space.
      firmware class: Deletion of an unnecessary check before the function call "vunmap"
      firmware loader: fix hung task warning dump
    In the very unlikely case in which no firmware could be,
    fs sound include net Documentation firmware kernel tools)
      cxgb4/cxgb4i: set the max. pdu length in firmware
      dma: imx-sdma: clarify about firmware not found error
    cxgb4/cxgb4i: set the max. pdu length in firmware
    Programs the firmware of the maximum outgoing iscsi pdu length per connection.
    that made iwlwifi's firmware unhappy.
       - Cleanups and fixes to the firmware library.
       - Switch ATH79 platform to use the firmware library.
    / firmware when we do that, which will happen sometime in the next
    This change adds an initial IPMI driver for powerpc OPAL firmware. The
    interface is exposed entirely through firmware: we have two functions to
    firmware to signify that a message is available.
      [media] mn88473: Remove uneeded check before release_firmware()
      [media] tuners: remove uneeded checks before release_firmware()
      [media] si2168: add support for firmware files in new format
      [media] si2168: debug printout for firmware version
    Add the required firmware commands for A0 steering and a way to enable
    that. The firmware support focuses on INIT_HCA, QUERY_HCA, QUERY_PORT,
    Currently QUERY_PORT is done as a part of QUERY_DEV_CAP firmware command.
    The number of reserved QPs is affected both from the firmware and
    FW_HELLO_CMD_MASTERFORCE being set. The firmware doesn't support this and of
      firmware.  It works with Device Trees and ACPI in a uniform way and
      as long as the platform firmware (either DT or ACPI) makes them
      Next is support for a platform firmware interface based on ACPI
         device drivers to be written in a platform firmware (DT or ACPI)
       - Support for firmware interface based on ACPI operation regions used
    Other changes that the pull request contains are firmware dump support
    to the btmrvl driver, firmware download support for Broadcom BCM20702A0
    firmware API for scan and a few rate control improvements.
    a infrastructure for firmware debugging. This will allow to
    have configurable probes insides the firmware.
    o new debugfs interface for runtime firmware debugging (Yanbo)
    i40e: let firmware catch the NVM busy error
    firmware didn't handle this well, so the code had to track the busy state.
    The released firmware handles the busy state correctly, returning
    patch which updates the FW version displayed by ethtool after firmware flash.
    cxgb4: Update firmware version after flashing it via ethtool
    After successfully loading new firmware, reload the new firmware's version
    Don't let T4 firmware flash on a T5 adapter and vice-versa
      wd719x: Add firmware documentation
    available uuids. The uuid change is communicated to firmware, only
    firmware dix with VSI loopback mode.  All VSIs on a VEB should either
    Cmac engine is the bridge between driver and dash firmware.
      Driver core: Unified interface for firmware node properties
      Driver core: Unified device properties interface for platform firmware
    period via debugfs as firmware has introduced it on v10.2.
    New pdev paramters have been added to firmware 10.2,
    Latest main firmware branch introduced a new WMI
    ath10k: set max_num_pending_tx in ath10k_core_init_firmware_features()
    Better to have this in same place as other firmware interface handling.
    WMI versions. This makes it firmware interface tests a bit less convoluted,
    It's easier to manage firmware version differences when we configure them in
    ath10k_core_init_firmware_features() and start moving most of the firmware
    ath10k_init_firmware_features() function in the next patch.
    When multiple VFs attempt to initialize simultaneously, the firmware may
    situations by a) reinitializing the admin queue if the firmware fails to
    all firmwares.
    dma: imx-sdma: clarify about firmware not found error
    When a firmware cannot be found for the SDMA engine then we can
    continue with the internal ROM firmware.
    that the driver still works with the internal ROM firmware and reduce
    These are a pre-req to get rk3288 SMP to work with some firmwares, so merge
    * The firmware doesn't know and doesn't care about hypervisor mode and
    * The firmware isn't involved in SMP bringup or resume.
    situation, and firmware is free to remove the property if it is going
    that the firmware has never entered HYP mode.
    Note that it's been said that on ARMv8 systems the firmware and
    * The firmware doesn't know and doesn't care about hypervisor mode and
    * The firmware isn't involved in SMP bringup or resume.
    The release_firmware() function was called by the mn88473_init() function even
    if a previous function call "request_firmware" failed.
    [media] mn88473: Remove uneeded check before release_firmware()
    The release_firmware() function tests whether its argument is NULL and then
    The release_firmware() function was called in some cases by the si2157_init()
    [media] tuners: remove uneeded checks before release_firmware()
    The release_firmware() function tests whether its argument is NULL
    multiple BSS firmware needs to support it.
    [media] si2168: add support for firmware files in new format
    This patch adds support for new type of firmware versions of Si2168 chip.
    firmware for Si2168-B40 that is in the new format. It can be extracted
    [media] si2168: debug printout for firmware version
    A debug printout for firmware version.
    Bluetooth: Add support for Broadcom BCM20702A0 variants firmware download
    The firmware was extracted from a Windows 7 32-bit installation
    The firmware is named "BCM20702A0_001.001.024.0156.0204.hex"
    The firmware file is also available as a download at
    inside the firmware directory (e.g. "/lib/firmware")
    Bluetooth: btmrvl add firmware dump support
    This patch adds firmware dump support for marvell
        radeon 0000:0b:01.0: Direct firmware load for radeon/R100_cp.bin failed with error -2
        radeon_cp: Failed to load firmware "radeon/R100_cp.bin"
        [drm:r100_cp_init] *ERROR* Failed to load firmware!
    infrastructure for firmware debugging. This will allow to
    have configurable probes insides the firmware.
    Debug information can be appended to the firmware file. This
    debugging features in the firmware.
    iwlwifi: dvm: fix flush support for old firmware
    the firmware. All the devices that use iwldvm have a
    firmware that expects the _v3 version of this command,
    5150's latest available firmware still expects a _v2 version
    Loaded firmware version: 8.24.2.2
    (or unsigned PMU firmware).
    If card reset with firmware download executed, followed by reset
    with use of firmware from build in flash, firmware download indication
    When running firmware download flow,
    by pci.h in the firmware download code.
    Scan timeout treated as indication for firmware error;
    - report to cfg80211 reason as reported by the firmware
    - provide to the firmware reason as requested by cfg80211
    which then has to parse firmware tables or probe buses to identify the
    (at least 0x0c11). The firmware has issues with older
    by the firmware.  The firmware reports the channels as indices to the
    the matched profiles from the firmware in order to find the correct
    All the supported firmwares have this TLV flag set.
    All the supported firmwares have this TLV flag set.
    This TLV flag is set for all the supported firmwares.
    This firmware is not supported anymore.
    Stop loading this firmware - and remove the code that
    Query the firmware for scan offload matches when waking up in order to
    iwlwifi: move firmware file format definitions to correct header
    The firmware file-format is described in iwl-fw-file.h, while the
    firmware capabilities.
    framebuffer the firmware might have set up.
      not try to decode the data as trackpoint if firmware told us it is not
      Input: elantech - trust firmware about trackpoint presence
    firmware class: Deletion of an unnecessary check before the function call "vunmap"
    firmware loader: fix hung task warning dump
    When using request_firmware_nowait() with FW_ACTION_NOHOTPLUG param to
    [ 3000.812765] Workqueue: events request_firmware_work_func
    [ 3000.894219]  [<c13cb600>] _request_firmware+0x750/0x9f0
    [ 3000.905200]  [<c13cba02>] request_firmware_work_func+0x22/0x50
    Since device/firmware coredumps can contain private data, it can
    If firmware starts returning an HMI event with version > 1, this check
    The Baytrail-T-CR platform firmware has defined two customized operation
    The Baytrail-T platform firmware has defined two customized operation
    "Not all the firmware know how to handle the HOT_SPOT_CMD.
    Make sure that the firmware will know this command before
    sending it. This avoids a firmware crash."
    - Secure firmware for Exynos3250 secondary cpu boot
    If pre-filled framebuffer nodes are used, the firmware may need extra
    the firmware needs to be able to find a specific node it should use a
    mode for 10.x and main firmware branches
    Add mem_val debugfs file for dumping the firmware (target) memory and also for
    writing to the memory. The firmware memory is accessed through one file which
    uses position of the file as the firmware memory address. For example, with dd
    firmware (target) registers. reg_addr contains the address to be accessed,
    To read a value from the firmware register 0x100000:
    Some firmware revisions don't seem to deilver
    time can be very small. Some firmware revisions
    New firmware revisions don't need peer creation
    This prevent new firmware revisions from stopping
    helps the firmware's rate-control algorithm work properly.
    drivers/media/usb/dvb-usb-v2/lmedm04.c:828 lme_firmware_switch() warn: missing break? reassigning 'st->dvb_usb_lme2510_firmware'
    drivers/media/usb/dvb-usb-v2/lmedm04.c:850 lme_firmware_switch() warn: missing break? reassigning 'st->dvb_usb_lme2510_firmware'
    st->dvb_usb_lme2510_firmware.
    When the driver has sent a join iovar to the firmware it waits
    The functions i2c_put_adapter() and release_firmware() test whether their
    wd719x: Add firmware documentation
    Add documentation and script to obtain required firmware.
    The release_firmware() function was called in some cases by the
    The release_firmware() function was called in some cases by the
    [media] DVB-frontends: Deletion of unnecessary checks before the function call "release_firmware"
    The release_firmware() function tests whether its argument is NULL
    drivers/media/usb/dvb-usb-v2/lmedm04.c:828 lme_firmware_switch() warn: missing break? reassigning 'st->dvb_usb_lme2510_firmware'
    drivers/media/usb/dvb-usb-v2/lmedm04.c:849 lme_firmware_switch() warn: missing break? reassigning 'st->dvb_usb_lme2510_firmware'
    In some cases firmware brings up plls with different parameters than the ones
    noted in the rate table for the specific frequency. These firmware-selected
    Input: elantech - trust firmware about trackpoint presence
    Only try to parse data as coming from trackpoint if firmware told us that
    firmware API for scan and a few rate control improvements.
    "Not all the firmware know how to handle the HOT_SPOT_CMD.
    Make sure that the firmware will know this command before
    sending it. This avoids a firmware crash."
    firmware, but they are generally fairly useful, so make it easy to print them
    MIPS: ath79: Read the initrd address from the firmware environment
    Allow loading an initrd passed by the firmware.
    MIPS: ath79: Use the firmware lib to parse the kernel command line
    No need to duplicate code that is available in the firmware library.
    It also give us access to the firmware environment which is needed
    MIPS: lantiq: add support for xrx200 firmware depending on soc type
    VR9 needs different firmware files for the various phy/soc revisions. Some
    image on all versions we need to define both firmware files inside the
    which is used to run the voice firmware. This driver allows us to register
    MIPS: BMIPS: Align secondary boot sequence with latest firmware releases
    MIPS: Loongson: Improve LEFI firmware interface
    firmware, we can extract 2bit Node ID (bit 44~47, only bit 44~45 used
    things from the firmware than when it wakes up with a normal WoWLAN.
    that gets the firmware status from the part that sets up the WoWLAN
    calling post_channel_switch, the reconfiguration of the firmware
    doing it in unassign_vif().  This is done so that the firmware queues
    offload because of a quirk with the firmware API - it allows setting
    the differences (currently only the firmware image) into account.
    iwlwifi: mvm: check TLV flag before trying to use hotspot firmware commands
    Older firmwares do not provide support for the HOT_SPOT_CMD command.
    the firmware to prevent a firmware assertion failure that can be
    Unfortunately, the firmware right now doesn't support randomising
    firmware supports randomising the address for each scan iteration
    firmwares. It allows to reach better overall WiFi and BT
    Our firmware scheduler suffers from false wake-up on 500 time units.
    load separate firmware images for some reason.
    filter, port, VI, queue, RSS, LDST, firmware, etc that are defined in t4fw_api.h
    Stock firmware on rk3288 does not initizalize the CNTVOFF registers
    o firmware restart is now faster and more reliable (Michal)
      crashing the firmware using hw-restart parameter with
    Make sure to always convert the firmware data to local endianness before
    drm/edid: Deletion of an unnecessary check before the function call "release_firmware"
    The release_firmware() function tests whether its argument is NULL and then
    TX buffer size is set to driver default (2K), as we do not know the firmware
    The functions brcmu_pkt_buf_free_skb() and release_firmware() test whether
    to map and use BAR 0. If the device is hosed (or firmware is), then
    This patch adds support for the v2 version of the SigmaDSP firmware file
    describing the firmware. This metadata includes the set of supported
    supported with v2 require the driver to keep state around for the firmware.
    This requires a bit of restructuring of both the firmware loader itself and
    the drivers making use of the firmware loader.
    Instead of loading and executing the firmware in place when the DSP is
    configured the firmware is now loaded at driver probe time. This is required
    since the new firmware format will in addition to the firmware data itself
    contain meta information describing the firmware and its requirements and
    supported for the firmware.
    The official firmware generation tool never emitted any SIGMA_ACTION_DELAY
    ASoC: sigmadsp: Refuse to load firmware files with a non-supported version
    Make sure to check the version field of the firmware header to make sure to
    not accidentally try to parse a firmware file with a different layout.
    Trying to do so can result in loading invalid firmware code to the device.
    correct character down to it, to have the firmware in the device set up
    This allows drivers with a firmware or chip-based rate lookup table to
    sent by the firmware based on a template. This template should be
    of/fdt: export fdt blob as /sys/firmware/fdt
    Create a new /sys entry '/sys/firmware/fdt' to export the FDT blob
    The fact that this node does not reside under /sys/firmware/device-tree
    gives platform firmware a means of describing the idle state and export
    there are DCB configuration changes based on DCBx, the firmware suspends
    configuration from firmware when firmware DCBx agent is in CEE mode.
    Many firmwares do not wait for the start bit before they begin
    processing audio, whilst this is a bug on the firmware side there are
    too many such firmwares in the wild to ignore the situation. This patch
    moves the core enable to happen at same time as the start, the firmware
    up but we ensure that all firmwares behave.
    When DCB TC configuration changes the firmware suspends the port's Tx.
    firmware AQC "Resume PF Traffic" the driver checks the Tx queues requested
    the DCBX status to disabled as well; and would not query firmware for
    i40e: Add support to firmware CEE DCBX mode
    firmware when firmware DCBX agent is in CEE mode.
    When there are DCB configuration changes based on DCBX the firmware suspends
    The firmware was extracted from a Windows 8.1 64-bit installation
    but the firmware is named "BCM20702A1_001.002.014.1315.1356.hex"
    The same firmware file is also available as a download at
    inside the firmware directory (e.g. "/lib/firmware")
    This patch "ath9k_htc_firmware: fix the offset of CCMP header
    for mesh data frame" applied to open-ath9k-htc-firmware allows
    o firmware restart is now faster and more reliable (Michal)
      crashing the firmware using hw-restart parameter with
    Fix to use v10.2 wmi call for firmware v10.2.
    v10.1 wmi call for v10.2 firmware during code review.
    ALSA: hdsp: Deletion of an unnecessary check before the function call "release_firmware"
    The release_firmware() function tests whether its argument is NULL and then
    The functions kfree() and release_firmware() test whether their argument
    Solves possible lockup issues that can be seen from firmware DCB agents calling
    DCB firmware event queues can be tied in with NAPI so that dcb events are
    This code was not originally written with firmware agents in mind, hence
    logic up to the firmware, if it wants/needs it.
    Liad fixes a small bug in the firmware dump."
    ASoC: wm_adsp: Use vmalloc to allocate firmware download buffer
    Use vmalloc to allocate the buffer for firmware/coefficient download and
    Last add some advice on how to fill and use simplefb nodes from a firmware
    A simple-framebuffer node represents a framebuffer setup by the firmware /
    OPAL firmware we have.
    powerpc: Disable CPU_FTR_TM if TM is disabled by firmware
    touchpad firmware...
    The 1st two patches fix small bugs w.r.t firmware spec. Next
    and a patch that adds support for the QUERY_FUNC firmware command,
    patch (#6) we change the order of talking/querying the firmware
    supports > 64 VFs over a firmware that allows for that.
    We now allow up to 126 VFs. Note though that certain firmware
    Previously, the driver queried the firmware in order to get the number
    notified the firmware how many VFs it actually needs, the firmware had
    Now, when the firmware supports the asymmetric allocation scheme, denoted
    QUERY_FUNC command to query the firmware before enabling SRIOV. Thus we
    Moreover, when running in the new firmware/driver mode, the limitation
    net/mlx4_core: Add QUERY_FUNC firmware command
    QUERY_FUNC firmware command could be used in order to query the
    newer firmware that required init_hca to be done before
    enable_sriov and legacy firmwares that requires things to
    It's been observed that wrong firmware version (ex. 66.14.96.p9
    so if host platform is slow, we would hit a case where firmware
    Kamil updated the i40e and i40evf driver to poll the firmware slower
    since we were polling faster than the firmware could respond.
    Liad fixes a small bug in the firmware dump."
    In some rare cases, the firmware can put the device to
    propagated to the firmware.
    since the firmware hasn't put the device to sleep yet, but
    right after the driver's check, the firmware might put the
    Warn when this happens by allowing the firmware to finish
    Currently, the firmware only sends temperature notificaitions inside
    temperature notifications in those cases.  To solve that, the firmware
    firmware versions that do not send the notifications.
    iwlwifi: mvm: don't capture firmware coredump for D3->D0 reconfig
    The code to capture firmware errors works during the reconfiguration
    get the D0 image reconfigured, this triggered and caused a firmware
    i40e: poll firmware slower
    The code was polling the firmware tail register for completion every
    10 microseconds, which is way faster than the firmware can respond.
    iwlwifi: mvm: use correct type for firmware status
    o debugfs file to read calibration data from the firmware verification
    o firmware crash counters via debugfs (Ben&me)
    o various tracing points to debug firmware (Rajkumar)
    o make it possible to provide firmware calibration data via a file (me)
    firmware to wake up the platform when a specific network
    ASoC: wm8958: Move DSP firmware lock to driver level
    firmware pointers from concurrent assignment. This patch moves this lock to
    mmc: core: Report firmware version for eMMC 5.0 devices.
    For eMMC 5.0 compliant device, firmware version is stored in ext_csd.
    Report firmware as a 64bit hexa decimal. Vendor can use hexa or ascii
    string to report firmware version.
    This patch displays the firmware version of the microcode that is currently
    The new interface function retrieves the firmware version that is currently
    in use by a specific engine. The firmware was uploaded to the engine by the
    The new interface function retrieves the firmware version that is currently in
    use by the MEC engine. The firmware was uploaded to the MEC engine by the kgd
      : introduce suspend() and resume() firmware operations
    - Fix AFTR mode on boards with secure firmware enabled and
      ARM: EXYNOS: add secure firmware support to AFTR mode code
      ARM: firmware: add AFTR mode support to firmware do_idle method
      ARM: EXYNOS: Add support for firmware-assisted suspend/resume
      ARM: firmware: Introduce suspend and resume operations
    crc_enabled bit in the firmware version indicated it would. When switching
    "I fix here two issues that are related to the firmware
    - Secure firmware for Exynos3250 secondary cpu boot
    firmware updates.  It also taints the kernel with TAINT_FIRMWARE_WORKAROUND
    o Poll for the link events only if firmware doesn't have capability
    reported to cause occasional firmware crashes on Simtec Electronics
    firmware version etc. as dump stack arch description, so that oopses
    Since the firmware can legally provide both entry points, store
    perfectly legal for the firmware not to request a virtual mapping for
    on chv. At least that's the case with the current punit firmware. So
    in the current punit firmware. So leave them disabled in the code.
    Patch 1,2 : Adds backward compatibility with the older firmware (<= 1.13.28).
               that are not shared with the firmware
    This was due to hardware resource sharing conflict with the firmware. This
    drivers: net: xgene: Backward compatibility with older firmware
    This patch adds support when used with older firmware (<= 1.13.28).
    dtb: xgene: fix: Backward compatibility with older firmware
    The following kernel crash was reported when using older firmware (<= 1.13.28).
    The issue was that the older firmware does not support 10GbE and
    Some drivers need to deal with only firmware representation of its
    is described as a separate firmware node in device tree. Typically these
    In order to help device drivers to handle such firmware child nodes we
    add dev[m]_get_named_gpiod_from_child() that takes a child firmware
    itself), finds the GPIO using whatever is the underlying firmware
    Driver core: Unified interface for firmware node properties
    device description objects in the platform firmware in case there are
    (depending on what platform firmware interface is in use) to be
    reason that there is no common mechanism to fetch name of the firmware
    Driver core: Unified device properties interface for platform firmware
    properties from the platform firmware by providing a property name
    firmware interface.
    "I fix here two issues that are related to the firmware
    Previous patch changes used signal strength firmware register from
    when device was opened. Message is aimed to point out firmware is
    downloaded, up and running. So print it only in case firmware download
      powerpc/fadump: Fix endianess issues in firmware assisted dump handling
    Without this, we may receive truncated messages due to the firmware
    The demod of M88RS6000 need the firmware: dvb-demod-m88rs6000.fw
    firmware download link:
            http://www.dvbsky.net/download/linux/dvbsky-firmware.tar.gz
    Add code to issue CONFIG_DEV "get" firmware command.
    This patch works with all XC5000 firmware versions.
    The functions kfree(), release_firmware() and snd_util_memhdr_free() test
    make the firmware fail and the driver wasn't able to recover.
    Change the flow so that the driver will kill the firmware
    added reference of struct echoaudio to free_firmware function.
    firmware which can be less than what the PCI architecture allows.
    Replace dprintk(0, ...) by pr_err since firmware load errors should just be
    messages due to the firmware thinking we have insufficient buffer size.
      ACPI / EC: Fix regression due to conflicting firmware behavior between Samsung and Acer.
      ACPI / EC: Fix regression due to conflicting firmware behavior between Samsung and Acer.
    ASoC: Intel: use correct firmware name
    The firmware name was used worngly, so fix it up
    ASoC: Intel: sst: load firmware using async callback
    We would like the DSP firmware to be available in driver as soon as possible. So
    use the async callback in driver to probe to load the firmware as soon as
    firmware indication register.
    firmware, and one of these registrations fail, we leaked the
    or from event reported by the firmware.
    In case of firmware event, driver need to release resources for the station but
    be issued for the firmware to perform disconnect on the MAC layer. Eventually,
    firmware event and release station resources immediately. FW may fail to
    As communicated with the firmware & hardware teams
    brcmfmac: do not use firmware error code in driver
    Passing the firmware error codes up the driver may be mapped to
    firmware error code in FIL debug message.
    brcmfmac: show firmware error as string in debug message
    Showing the firmware error allows to quickly give a clue what
    went wrong and directly look in the firmware code that gave us
    firmware to wake up the platform when a specific network
    rtlwifi: rtl8192se: Fix firmware loading
    An error in the code makes the allocated space for firmware to be too
    routine for deferred firmware loading was not removed.
    The demodulator and tuner need firmware. They're the same as used with TT CT2-4650 CI:
        firmware says that there are more CPUs than are really present.
    powerpc/fadump: Fix endianess issues in firmware assisted dump handling
    sound/soc/intel/sst-firmware.c:172:29: sparse: symbol 'dw_pdata' was not declared. Should it be static?
    ACPI / EC: Fix regression due to conflicting firmware behavior between Samsung and Acer.
    The behaviors of the 2 vendor firmwares are conflict:
     1. Acer: OSPM shouldn't issue QR_EC unless SCI_EVT is set, firmware
     2. Samsung: OSPM should issue QR_EC whatever SCI_EVT is set, firmware
    behavior only effective for Acer EC firmware so that the breakages on
    Samsung EC firmware can be avoided.
    binary data which is helpful to debug the firmware.
    firmware. This caused issues when we boot in RFKILL since
    any firmware.
    (i.e. we let the firmware do this for us), so we don't need to include
    firmware is switched), switch_to_d3 (which handles the rebooting of
    the hardware with the D3 firmware) and config (which configures the D3
    firmware for WoWLAN operation).  This is necessary to prepare for the
    struct firmware::data has type const u8*, as does *ppmappedfw, so the
    staging: comedi: me4000: fix firmware downloading
    Convert this driver to use comedi_load_firmware() to download the firmware
    ASoC: Intel: Add DMA firmware loading support
    Add support for DMA to load firmware modules to the DSP memory blocks.
    fixes a bug in many instances of firmware: Instead of lying about their
    people suffering from this problem to fix their broken firmware, but
    otherwise rcu_barrier() will hang on systems having firmware that lies
    before reloading firmware and re-intializing it again.
    firmware load complete status from risc.
    just WARN in those cases for now. We should not explode, as firmware will
    Since the firmware newer writes to FRAME_MEM_CTRL, we can initialize it once
    "ARM: EXYNOS: Add support for firmware-assisted suspend/resume" patch
    added to arch/arm/mach-exynos/firmware.c new references to functions
    checks to arch/arm/mach-exynos/firmware.c.
    Disabling DCBx in firmware would automatically set DCBx state to host-managed
    Disabling DCBx in firmware automatically enables DCBx for control via host
    VirtualGuestFirmwareImageBase => virtual_guest_firmware_image_base
    VirtualGuestFirmwareEntryPoint => virtual_guest_firmware_entry_point
    VirtualGuestFirmwareImageSize => virtual_guest_firmware_image_size
    VirtualGuestFirmwareBootBase => virtual_guest_firmware_boot_base
    Jesse modifies the i40e driver to only notify the firmware on link up/down
    we have a TLB miss path into the firmware that is deep enough to
    1) Stop using the firmware stack for client interface calls into
       the firmware.  Just use the kernel's stack.
       to put a one-register-window buffer between the firmware's
    Keep in mind available firmware binaries don't
    refuse to rx even after firmware is restarted.
    "priv->firmware" dereference.
    fmdrv_common.c: In function 'fm_download_firmware':
    Tell the firmware what kind of link related events the driver is
    https://bugs.launchpad.net/ubuntu/+source/linux-firmware/+bug/1270808
    load firmware callback to the rtl_pci_probe only.
    The sst-firmware was also using own method to do 32bit copy, turns out we have a
      for old firmware, more endian fixes for firmware interfaces, more EEH
      powerpc/powernv: Fallback to old HMI handling behavior for old firmware
    /lib/firmware/ath10k/cal-pci-0000:02:00.0.bin
    1. Check with request_firmware() if there's a calibration file
    ath10k: refactor ath10k_init_download_firmware()
    on the firmware status.  Let the function simply returning in such a
    with secure firmware enabled) by ~12% when EXYNOS cpuidle driver is
    This change is a preparation for adding secure firmware support to
    ARM: EXYNOS: add secure firmware support to AFTR mode code
      additional helper usage to do_idle firmware method.
    * Use resume firmware method instead of exynos_cpu_restore_register()
      and skip exynos_cpu_save_register() on boards with secure firmware
      firmware enabled.
    * Use do_idle firmware method instead of cpu_do_idle() on boards with
      secure firmware enabled.
    ARM: firmware: add AFTR mode support to firmware do_idle method
    available and we need to distinguish them in firmware do_idle method.
    Add mode parameter to do_idle firmware method and AFTR mode support
    This change is a preparation for adding secure firmware support to
    ARM: EXYNOS: Add support for firmware-assisted suspend/resume
    mode under a secure firmware. This means that certain operations need to
    be handled in special way, with firmware assistance. System-wide
    This patch adds support for firmware-assisted suspend/resume by
    leveraging recently introduced suspend and resume firmware operations
    secure firmware.
    ARM: firmware: Introduce suspend and resume operations
    This patch extends the firmware_ops structure with two new callbacks:
    .suspend() and .resume(). The former is intended to ask the firmware to
    firmware: drop owner assignment from platform_drivers
    firmware loading. Therefore, the patch includes a SPI driver for writing the DSP
    firmware. The VAD(Voice Activaty Detection) has be implemented and use the DSP to
    This patch contains all dsp controlling functions like firmware download,
      iommu/vt-d: Work around broken RMRR firmware entries
    Use t4_fw_upgrade instead of t4_load_fw to write firmware into FLASH, since
    t4_load_fw doesn't co-ordinate with the firmware and the adapter can get hosed
    powerpc/powernv: Fallback to old HMI handling behavior for old firmware
    for HMI recovery which was introduced in newer firmware. While this new
    change works fine with latest OPAL firmware, we broke the HMI handling
    if we run newer kernel on old OPAL firmware that results in system hang.
    OPAL firmware.
    if we are running on newer firmware or old firmware. On newer firmware
    old firmware and fallback to old HMI behavior.
    Old firmware: POWER8 System Firmware Release as of today <= SV810_087
    Newer firmware: in development/yet to be released.
         need a lot quirks over time due to the lack of any firmware
    drivers/firmware/memmap.c: don't create memmap sysfs of same firmware_map_entry
    By the following commits, we prevented from allocating firmware_map_entry
      f0093ede: drivers/firmware/memmap.c: don't allocate firmware_map_entry
      49c8b24d: drivers/firmware/memmap.c: pass the correct argument to
                firmware_map_find_entry_bootmem()
    memmap sysfses of same firmware_map_entry are created twice as follows:
      # cat /sys/firmware/memmap/*/start
      1. e820_reserve_resources() allocates firmware_map_entrys of all
         memory ranges defined in e820. And, these firmware_map_entrys
         added the memory device. In this case, firmware_map_add_hotplug()
         allocates firmware_map_entry and creates memmap sysfs.
      3. firmware_memmap_init() creates memmap sysfses of firmware_map_entrys
    firmware_map_entry has been created, and does not create memmap
    sysfs of same firmware_map_entry.
    Right now, RTL8168EP phy mcu did not need firmware code patch, so I did not
    add firmware code for it.
    so I did not add firmware code for it.
    not to warn on event previously requested by firmware.
       a lot quirks over time due to the lack of any firmware description of
      and the addition of a new interface to dump firmware "core dumps" to
      firmware_class: make sure fw requests contain a name
    This fix issue with 636 firmware when scan always failed
    ath10k: advertise all possible firmware(-api) files
    In such case we need to have the firmware files accessible from ram disk too,
    This prevents some firmware revisions from crashing.
     - CPU suspend backend for PSCI (firmware interface) with standard idle
         firmware in emulated NOR flash)
    If an IPMI controller is used by the firmware and as such marked with
    greybus: greybus_manifest.h: add BSD license so that firmware can share it.
    greybus: svc_msg.h: add bsd license to file so that firmware can use it.
       a lot quirks over time due to the lack of any firmware description of
    to crash the firmware with an assert for debug purposes. As usual, we
    for supported firmware. The first firmware with cookie only support for
    me appears on T5. You can optionally force the HV firmware to not cookie
    cookie/sysino firmware versioning.
    (in order to avoid the firmware range) we don't specify the
    Fixes: 4ca9a23765da ("sparc64: Guard against flushing openfirmware mappings.")
    used in the driver/firmware interaction around command mailboxes.
    the latest revision if firmware specification.
    correctly in actual firmware implementations remains an unanswered
    drivers/firmware/efi/vars.c: In function ‘dup_variable_bug’:
    drivers/firmware/efi/vars.c:324:44: warning: declaration of ‘s16’ shadows a global declaration [-Wshadow]
    drivers/firmware/efi/vars.c:328:8: warning: declaration of ‘s8’ shadows a global declaration [-Wshadow]
    workaround triggers another firmware bug. This was only discovered with
    firmware issues, at least on x86. This is the rationale behind leaving
      ACPI / i915: Update the condition to ignore firmware backlight change request
      ACPI / i915: Update the condition to ignore firmware backlight change request
    The corresponding firmware image file is located at:
    Now obj-n is only used in firmware/Makefile and it can be
    iommu/vt-d: Work around broken RMRR firmware entries
     1) Don't halt the firmware in r8152 driver, from Hayes Wang.
    r8152: patches about firmware
    The patches fix the issues when the firmware exists.
    For the multiple OS, the firmware may be loaded by the
    The firmware would be clear when the power cut is enabled for
    The xxx_clear_bp() is used to halt the firmware. It only necessary
    for updating the new firmware. Besides, depend on the version of
    the current firmware, it may have problem to halt the firmware
    directly. Finally, halt the firmware would let the firmware code
    useless, and the bugs which are fixed by the firmware would occur.
    These two functions are used to inform dash firmware that driver is been
    Add support for reading firmware stats through the ethtool
    ath10k: add firmware crash counters
    Add three counters related to firmware crashes or resets.
    We will now dump MAC, APU, CIU, ICU firmware memory segments also
    reads firmware dump information.
    mwifiex: error path handling in pcie firmware dump
    This patch takes care of missing error paths in firmware dump.
    hot reset on the parent bus to bring their firmware back to
    powerpc/powernv: Sync OpalPciResetScope with firmware
    The names of PCI reset scopes aren't sychronized with firmware.
    powerpc/powernv: Sync header with firmware
    The patch synchronizes firmware header file (opal.h) for PCI error
    ACPI / i915: Update the condition to ignore firmware backlight change request
    Some of the Thinkpads' firmware will issue a backlight change request
    handled by commit 0b9f7d93ca61 (ACPI / i915: ignore firmware requests
    used to ignore the backlight change request from firmware is thus
    Fixes: 0b9f7d93ca61 (ACPI / i915: ignore firmware requests for backlight change)
    firmware splits it into many wmi stats update
    by splitting it up into firmware branch specific
    WARNING: drivers/dma/imx-sdma.o(.text+0x3bb4): Section mismatch in reference from the function sdma_probe() to the function .init.text:sdma_get_firmware()
    the function __init sdma_get_firmware().
    Provide calibration data used by the firmware to user space via a debugfs file.
    diag_read() is used for reading from firmware memory via the diagnose window.
    To serialise diagnostic window access and make it safe to use while firmware is
    when using the diagnostic window while the firmware is running due to NULL
    drivers/media/platform/exynos4-is/fimc-is.c: In function ‘fimc_is_load_firmware’:
       dev_err(dev, "wrong firmware size: %d\n", fw->size);
    the firmware. So, add the correct endiannes tags to the command fields.
    until the firmware has been completely installed, especially when using
        32-bit addresses to the firmware (Matt Fleming)
    "Helps debug funky firmware issues".
      firmware_features = 0x00000001405a440b
    gotten from or passed to firmware are in the correct
    If we fail to load one of the segments of firmware fail the operation
    Failing Device information are logged when IOA firmware detected these
    illegal request such as IOA firmware doesn't support inquiry with page
    system is running OS X, and changes firmware behaviour based on the
    operating system is found then later firmware code will assume that the
    the firmware. No methods sets it. The methods that are called in the "do
    stuff" path are dummies. Unless there's some additional firmware call in
    running on top of 32-bit firmware) we know that efi_early->text_output
    with 32-bit firmware).
    firmware (SRAT table) for all levels of sched domains above the
    firmware_class: make sure fw requests contain a name
    An empty firmware request name will trigger warnings when building
    The warning was visible via the test_firmware.ko module interface:
    echo -ne "\x00" > /sys/devices/virtual/misc/test_firmware/trigger_request
    to represent in firmware client address
    Many devices run firmware and/or complex hardware, and most of that
    device/firmware state through a generalized mechanism. As devices
    The IT9303 requires firmware that can be downloaded here:
    http://trsqr.net/olli/linux/firmwares/it930x/
    The Si2168-B40 requires firmware, but the one that is used by PCTV 292e can be used.
    http://palosaari.fi/linux/v4l-dvb/firmware/Si2168/Si2168-B40/
    The Si2147-A30 tuner does not require firmware loading.
    3 firmwares are needed:
    - Montage DS3103 demod: same as PCTV 461e, Antti has it on his LinuxTV project page: http://palosaari.fi/linux/v4l-dvb/firmware/M88DS3103/
      In the pdc_stable/firmware-access driver we fix a few possible stack
    [media] media: tuner xc5000 - try to avoid firmware load in resume path
    xc5000 doesn't load firmware at attach time instead loads it
    when system is suspended before firmware is loaded, firmware
    be in the suspend firmware cache.
    xc5000 releases firmware right after loading it. Change it to
    save the firmware and release it from xc5000_release(). This
    helps avoid fecthing firmware when forced firmware load requests
    come in to change analog tv frequence and when firmware needs to
    This patch adds support for Si2147-A30 tuner. Fairly trivial, no firmware needed for this tuner. However, command 14 00 02 07 01 00 seems to be mandatory. On Si2157 and Si2158 the value 0x0100 is the default value, so this patch does not impact the existing tuners/devices. On Si2147 the default is 0x0000 and I can't get a lock with that value.
    Current firmware is only for revision D.
    The Synopsys DesignWare APB GPIO driver only supports open firmware devices.
    of channels received from firmware. Since the index of the first channel
    no different across different firmware binaries.
    This command is not used anymore and most firmware
    Some firmware revisions don't wait for beacon tx
    case future firmware revisions solve this problem
    this should be no issue for the firmware to implement to match.
    /work/Linux/linux-2.6-aarch64/drivers/firmware/dmi_scan.c:591 dmi_matches+0x10c/0x110()
    [media] uvcvideo: Work around buggy Logitech C920 firmware
    Unfortunately it seems that the Logitech C920 has a firmware bug where
    Let the demod firmware estimate RF signal strength and return it
    strengths from firmware in 2 sec intervals when device is active.
    [media] af9033: fix firmware version logging
    AF9030 and IT9130 series has different memory location for firmware
    enabled by default, but firmware disables it automatically when
    [media] get_dvb_firmware: Update firmware of ITEtech IT9135
    IT9135 firmware update.
    [media] si2168: avoid firmware loading if it has been loaded previously
    Add a variable to keep track if firmware is loaded or not and skip parts of the
    [media] si2157: avoid firmware loading if it has been loaded previously
    Add a variable into state to keep track if firmware has been loaded or not.
    Skip firmware loading in case it is already loaded (resume from sleep).
    The issue with command 13 is that firmware loading is necessary after that.
    This is not an issue with tuners that do not require firmware, but starting
    streaming after sleep on an Si2158 takes noticeable time as firmware is
    the firmware would cause BA timeout to be reported as a BA notif
    ON and OFF, and the LED is now controlled internally by the firmware.
    configured.  Note, this could be a firmware bug on some older machines.
    Adjust printing order of adapter model name and firmware version.
    Current MegaRAID firmware and hence the driver only supported 64VDs.
        it is not possible on current firmware/driver.
    New feature and requirement to support upto 256VD, firmware/driver/apps need changes.
    older firmware and vice versa.
    When megaraid firmware encounter any crash, driver will collect the firmware raw image and
    This will be internal to driver and firmware/application are unaware of it.
    Driver should extract the information from ctrl info provided by firmware and
    figure out if firmware support crash dump feature or not.
    Current driver updates reply post host index to let firmware know that replies are processed,
    path. In such condition, firmware may crash when it tries to post reply and there is no free
    Update reply post host index to firmware once it reach to some pre-defined threshold value.
    This change will make sure that firmware will always have some buffer of reply descriptor and
    Message to the firmware.
    When firmware receives this address, it will program each of the
    own register. Thus the firmware, starting from a base address it
    Reply Queue and pass down all of the addresses to the firmware.
    Then the firmware will just take each address and program the value
    When HBAs with older firmware(i.e. without RDPQ capability) is used
    Message to the firmware.
    When firmware receives this address, it will program each of the
    own register. Thus the firmware, starting from a base address it
    Reply Queue and pass down all of the addresses to the firmware.
    Then the firmware will just take each address and program the value
    When HBAs with older firmware(i.e. without RDPQ capability) is used
    from the firmware and outputs it.
    with the firmware also accessing the registers.
    access the registers but go through the firmware for this if the
    firmware has support for DQA and thus the new command.
    imx25 is not compatible with imx35-sdma unless a custom firmware is
      Input: i8042 - also set the firmware id for MUXed ports
    The firmware notifies about interface changes through the IF event
          brcmfmac: ignore IF event if firmware indicates it
    brcmfmac: conditionally compile firmware protocol source code
    gap support added, firmware now allows driver to send Tx data while
    the data is sent to firmware. It is observed that one less packet
    of the value of the scratch registers setup by the BMC firmware.
    iwlwifi: mvm: align CSA GO NOA time event naming with the firmware
    firmware code.
    as otherwise slowly drifting quota would never update the firmware.
    In some testing configuration, the firmware restart flow is
    iwlwifi: mvm: use the firmware to get the temperature during CT kill
    of the firmware, is a complex process and is not entirely the same for
    sensors when the firmware is not running, which would add even more
    the firmware and the driver, boot the firmware briefly to read the
    iwlwifi: mvm: don't update quota in firmware too often
    When updating quota in the firmware, it has to reset quite a bit
    DB in the firmware, otherwise we leave the tfd_queue_mask in
    notifications. These notifications sent by the firmware
    of the bootloader and of the stock firmware. That way, it is
    There's not really a good way to determine whether firmware has already
    PCI_COMMAND_MEMORY is set, we can assume firmware has set the corresponding
    firmware has configured the bridge.  But we can't tell much about devices
    firmware has already configured the device, so configure everything we
    "I re-enable scheduled scan on firmware that contain the fix for
    in the firmware. Last but not least, a new device is added by Oren."
      that can happen in the lattice FPGA driver if the firmware isn't
      Lattice ECP3 FPGA: Check firmware pointer
    therefore must be provided by firmware to the OS in order to enable
    Input: i8042 - also set the firmware id for MUXed ports
    So that firmware-id matching can be used with multiplexed aux ports too.
    SCM chip set. However its firmware restricts it to only work with Jaz
    ath10k: support firmware crash-by-assert
    10.1 firmware does not have an official way to
    offer better ways to test firmware failure and
    Add testmode interface for starting and using UTF firmware which is used to run
    Expose firmware limit for the max_scan_ie_len;
    wil6210: firmware download
    firmware versions for the INIT2RTR command. Nevertheless, we've used it.
    Fix that by doing this policy change using INIT2RTR only if the firmware
    cxgb4: Allow T4/T5 firmware sizes up to 1MB
    structure. This was visible with 10.2 firmware
    early firmware crash, before registering to
    note of the thermal setup.  This is required for proper firmware
    of the bootloader and of the stock firmware. That way, it is
    of the bootloader and of the stock firmware. That way, it is
    'full_charge_capacity' to vary, both up and down.  Good battery firmwares
    This results in bogus warnings on perfectly working systems/firmwares:
    is necessary to work around some buggy firmware, then the workaround needs
    protection against being applied to working firmwares.
    Good battery firmwares will allow 'capacity_now' to increase above
     * support for new firmware version 10.2 (Michal)
     * export a firmware crash dump file (Ben & me)
    patch introduces another DT attribute for which an existing firmware
    Lattice ECP3 FPGA: Check firmware pointer
    If fw is NULL when calling firmware_load(), it results in a kernel oops.
    [ The cause of the freeze appears to be a firmware bug when reading
      multiple of 512 bytes, but I've seen some ASUS firmware simply
    the firmware to the lowest rssi figure. As rx_status->chain_signal
      s390/ipl: Add missing SCSI loadparm attributes to /sys/firmware
    catch the bug since the firmware command was not tagged as
    firmware command to prevent such issues in the future.
      ahci_xgene: Skip the PHY and clock initialization if already configured by the firmware.
    patch was sent to stable too. I also bump the firmware API versions
    since a new firmware is coming up. On top of that, Marcel fixes a
    Staging: rtl8192u: fix brace style coding issue in r819xU_firmware.c
    ahci_xgene: Skip the PHY and clock initialization if already configured by the firmware.
    initialization if it is already configured by the firmware.
    cause the stock firmware to enter recovery mode.  This can be worked
    In case of an unsupported firmware, the driver bails out without setting
    seems to confuse the firmware, so work around that.
    Move all FIFO definitions together into the firmware API
    iwlwifi: mvm: correct firmware disassoc command sequence
    The firmware would like to have a MAC context (unassoc)
    During a channel switch we should tell the firmware to disable TX
    Currently the firmware is handling this, but that is wrong as it then
    the driver; add it here so it can be removed from the firmware in the
    firmware. Prepare for this by allowing hardware configuration
    sending unnecessary MAC_PM_POWER_TABLE commands to the firmware).
    Since we can't read the actual temperature when the firmware is
    the firmware to try to enter burst mode.
    firmware utilises the TxOP better.
    /home/hans/work/build/media-git/drivers/media/pci/cx18/cx18-firmware.c:169:32: warning: cast to restricted __le32
    /home/hans/work/build/media-git/drivers/media/pci/cx18/cx18-firmware.c:170:32: warning: cast to restricted __le32
    /home/hans/work/build/media-git/drivers/media/pci/cx18/cx18-firmware.c:171:31: warning: cast to restricted __le32
    /home/hans/work/build/media-git/drivers/media/pci/cx18/cx18-firmware.c:172:31: warning: cast to restricted __le32
    The firmware for the tuner is the same as for TechnoTrend TT-TVStick CT2-4400.
    The demodulator needs a firmware that can be extracted from the Windows drivers.
    Then the firmware can be extracted:
    and display firmware reported errors.
    cxgb4: Detect and display firmware reported errors
    The adapter firmware can indicate error conditions to the host.
    If the firmware has indicated an error, print out the reason for
    the firmware error.
    s390/ipl: Add missing SCSI loadparm attributes to /sys/firmware
     - /sys/firmware/ipl/loadparm (for system that have been IPLed from SCSI)
     - /sys/firmware/reipl/fcp/loadparm
    iwlwifi: mvm: enable scheduled scan on newest firmware
    Scheduled scan was disabled because of a bug in the firmware.
    The firmware reported support for this feature, but enabling
    The bugs have been fixes in latest firmware versions, so that
    we can re-enable the feature on latest firmwares only.
    iwlwifi: bump firmware API version to 10 for 7000 and 8000
    New firmware on the way.
    qlcnic: Add support to run firmware POST
    To run POST, firmware file with name "83xx_post_fw.bin" should be present under
    /lib/firmware directory. load_fw_file module parameter is used to specify
    This was because old firmware had an incorrect MAC VLAN filter that
    needed to be replaced at startup, and now newer firmware does not have
    mwifiex: use firmware API revision from GET_HW_SPEC response
    Newer firmware returns API revision in GET_HW_SPEC command
    This bug in parsing logic is exposed by newer firmware which adds
    two TLVs in GET_HW_SPEC command response. Earlier firmwares used to
    Tests were done with 2 Atheros AR9271 based devices with firmware
    resume on models (or is it firmware versions?) where the interface does not
    BIOS or firmware can modify hardware state during suspend/resume,
    Older firmware has an incorrect MAC VLAN filter that needs to be replaced
    at startup, and now newer firmware doesn't have this problem.  With this
    psmouse serio1: elantech: assuming hardware version 3 (with firmware version 0x350f02)
    defunct) path which was setup by the firmware for the coldplugged
    drivers/media/platform/s5p-mfc/s5p_mfc_ctrl.c:119:5: warning: no previous prototype for 's5p_mfc_release_firmware' [-Wmissing-prototypes]
     int s5p_mfc_release_firmware(struct s5p_mfc_dev *dev)
     [  793.880000] ath10k: firmware crashed! (uuid n/a)
    Currently, we rely on the behaviour that the EC firmware can respond
    EC firmware.
    When reading 'bf' file on debugfs, query beam forming status from firmware.
    If firmware broken on the boot time, Sparrow card enumerates as
    interact with card, specifically don't attempt firmware download or
    Otherwise, race happens in the firmware
    prevent firmware from booting in some rare cases
    registered and firmware version is guaranteed to
    ath10k: print more driver info when firmware crashes
    Sometimes users forget to include important info like firmware version,
    ath10k: provide firmware crash info via debugfs
    Store the firmware registers and other relevant data to a firmware crash dump
    why the firmware crashed.
    Service mapping for main firmware branch was incorrectly used for 10.x firmware
      firmware: Do not use WARN_ON(!spin_is_locked())
      10) Fix endianness bugs in qlcnic firmware handling, from Rajesh
      qlcnic: Fix endianess issue in firmware load from file operation
    firmware: Do not use WARN_ON(!spin_is_locked())
    Developed a new Automatic Egress Queue Update firmware facility to slowly tick
    qlcnic: Fix endianess issue in firmware load from file operation
      ASoC: Intel: Update Baytrail ADSP firmware name
    This patch moves the BIT processor specific coda_context_ops, the firmware
    [media] coda: initialize hardware on pm runtime resume only if firmware available
    If no firmware was found and the coda module is unloaded, coda_runtime_resume
    [media] xc5000: be sure that the firmware is there before set params
    move the code that checks for the firmware to happen there.
    This way, the firmware will be loaded either for analog or
    low power may require to re-load the firmware, with takes
    staging: rtl8188eu: Cleanup firmware initialization code
    firmware initialization code to replace rtl8188eu's messy firmware
    Testing has shown that the firmware rfkill settings are persistent over
    at the firmware level the wifi needs to be explictly unblocked through the
    with a firmware blocked wifi get stuck in that situation, ignore the value
      firmware fixes.
      Input: synaptics - use firmware data for Cr-48
      Input: atmel_mxt_ts - mXT224 DMA quirk was fixed in firmware v2.0.AA
      ALSA: hda/ca0132 - Don't try loading firmware at resume when already failed
       7) Don't enable sched scan in iwlwifi driver, it causes firmware
      iwlwifi: mvm: disable scheduled scan to prevent firmware crash
    Emmanuel Grumbach fixes Linus's iwlwifi firmware-related log spam.
    iwlwifi: mvm: disable scheduled scan to prevent firmware crash
    There are firmwares which don't support scheduled scan.
    We can recover the device using a userspace firmware update tool, but it needs
    read. Also, the firmware update callback should be the entity releasing
    firmware blob, not lower layers.
    crashes (because of host/firmware). We have new OPAL API to register/
    firmware reporting unexpected scan event
    prevented firmware from properly propagating scan
    The 10.x and main firmware branches have
    A side note: The carl9170 firmware currently specifies endpoint 4 as
    no relevance because before this firmware is loaded the endpoint type
    is as described above and after the firmware is running the stick is not
    case stream is still active but paused and firmware doesn't allow allocating
    Remove sst_byt_pcm_dev_resume() and move waiting of firmware boot into
    unloading firmware modules in suspend_late and then taking DSP into reset
    sst_byt_pcm_dev_suspend_late() before firmware unloading.
    ALSA: hda/ca0132 - Don't try loading firmware at resume when already failed
    CA0132 driver tries to reload the firmware at resume.  Usually this
    works since the firmware loader core caches the firmware contents by
    itself.  However, if the driver failed to load the firmwares
    (e.g. missing files), reloading the firmware at resume goes through
     WARNING: CPU: 10 PID:11371 at drivers/base/firmware_class.c:1105 _request_firmware+0x9ab/0x9d0()
    firmware, but anyway).
    Input: synaptics - use firmware data for Cr-48
    chromebooks. Note that this device's firmware always reports the higher
    Input: atmel_mxt_ts - mXT224 DMA quirk was fixed in firmware v2.0.AA
       - new firmware format support
      firmware, this could lead to DCB app table  in kernel or in firmware being
    drivers/firmware/memmap.c: don't allocate firmware_map_entry of same memory range
    firmware_map_entrys of same memory range are allocated and memmap X
      # cat /sys/firmware/memmap/0/*
      # cat /sys/firmware/memmap/33/*
      # cat /sys/firmware/memmap/35/*
    When calling e820_reserve_resources(), firmware_map_entrys of all e820
    memory map are allocated.  And all firmware_map_entrys is added
    limited by mem=, the PNP0C80 is hot-added.  Then firmware_map_entry of
    After that, firmware_memmap_init() creates memmap sysfses of all
    firmware_map_entrys in map_entries list.  As a result, memmap 33 sysfs
    This patch checks whether there is firmware_map_entry of same memory
    range in map_entries list and don't allocate firmware_map_entry of same
    drivers/firmware/memmap.c: pass the correct argument to firmware_map_find_entry_bootmem()
    firmware_map_add_hotplug() calls firmware_map_find_entry_bootmem() to
    get free firmware_map_entry.  But end arguments is not correct.  So
    firmware_map_find_entry_bootmem() cannot not find firmware_map_entry.
    The patch passes the correct end argument to firmware_map_find_entry_bootmem().
    ASoC: Intel: Update Baytrail ADSP firmware name
    Update the initial Baytrail ADSP firmware file name with the one that is now
    in linux-firmware.git. Please see linux-firmware.git commit 7551a3a78453
    ("fw_sst_0f28: Add firmware for Intel Baytrail SST DSP").
     6) Because we have modules --> openfirmware --> vmalloc ordering of
        of flush_tlb_kernel_range() that covers the openfirmware address
        range.  Unfortunately this will flush out the firmware's locked TLB
      sparc64: Guard against flushing openfirmware mappings.
      ima: add support for measuring and appraising firmware
      firmware_class: perform new LSM checks
    - Support for new firmware format that makes it easier to update
      drm/radeon: tweak ACCEL_WORKING2 query for the new firmware for hawaii
      drm/radeon: use packet3 for nop on hawaii with new firmware
      drm/radeon: use packet2 for nop on hawaii with old firmware
    days, that isn't going to fly with UEFI since parts of the firmware
    from the firmware will cause all sorts of trouble. Bruno reports that
    by the firmware.
    were missing RX reordering altogether. The 10.1 firmware doesn't support
    support with that firmware. Also he implemented a workaround for a KVM
    The secure-host capability depends on firmware handling all QP0
    via events generated by the firmware while processing QP0 MADs.
    drm/radeon: tweak ACCEL_WORKING2 query for the new firmware for hawaii
    Adjust the previous tweak for hawaii to return 3 if the new firmware is used.
    drm/radeon: use packet3 for nop on hawaii with new firmware
    Older firmware didn't support the new nop packet.
     - drm/radeon: use packet2 for nop on hawaii with old firmware
    drm/radeon: use packet2 for nop on hawaii with old firmware
    Older firmware didn't support the new nop packet.
     - Drop usage of packet3 for new firmware
    features like hdmi audio, etc.  When the user uses the firmware
    drm/radeon: add new firmware header definitions (v3)
    updated firmware.
    v2: add new firmware helper functions as well.
    the HMI interrupt registration with firmware.
    The patch synchronizes header file with firmware to have new OPAL
    powerpc/cpufreq: Add pr_warn() on OPAL firmware failures
    Cpufreq depends on platform firmware to implement PStates.  In case of
    platform firmware failure, cpufreq should not panic host kernel with
    Add firmware_has_feature(FW_FEATURE_OPALv3) check to
    sparc64: Guard against flushing openfirmware mappings.
    This "another unrelated region" is where the firmware is mapped.
    openfirmware area entirely.
    The sparc64 kernel learns about openfirmware's dynamic mappings in
    area.  But openfirmware has some locked TLB entries which are not
    These huge lazy TLB flush ranges causes those openfirmware locked TLB
      through this tree to handle merge issues.  There's also some firmware
      firmware loader: Fix _request_firmware_load() return val for fw load abort
      test: add firmware_class loader test
      doc: fix minor typos in firmware_class README
      firmware loader: inform direct failure when udev loader is disabled
      firmware: replace ALIGN(PAGE_SIZE) by PAGE_ALIGN
      firmware: read firmware size using i_size_read()
      firmware loader: allow disabling of udev as firmware loader
      drivers/misc/ti-st: Load firmware from ti-connectivity directory.
         firmware calls, and conversion of the EFI stub code into a static
      drivers/firmware/efi/libstub/lib.a(efi-stub-helper.o): In function `efi_relocate_kernel':
    Somewhere along the way, the firmware loader sprouted another lock
    This may appear as PCI or ACPI depending upon the firmware so we
    Commit "c1b2053 brcmfmac: Make firmware path a module parameter"
    [media] xc5000: always write at dmesg when it fails to upload firmware
    firmware upload is done. So, print at the dmesg if something
    [media] xc5000: optimize firmware retry logic
    Currently, firmware retry logic keeps reading from FS every
    only release the firmware read after success.
    only matters to the user if the firmware was successfully
    [media] xc5000: Don't try forever to load the firmware
    firmware init process, the device will keep trying forever,
      Exynos has buggy firmware that puts bad data into the memory node.
    by boot firmware: all in-kernel boards should continue to work
    depending on the configuration of the firmware. Knowing which queries are
    more things to the firmware debugging infrastructure. Eran fixes a
    ath10k: add support for 10.2 firmware
    The 10.2 firmware is a successor of 10.1 firmware
    The 10.2 firmware introduces some new features but
    Different firmware may support different numbers of
    firmware.
    The function rtas_flash_firmware passes the address of a data structure,
    [media] get_dvb_firmware: Add firmware extractor for si2165
    We don't have license to redistribute this firmware, so extract
    Input: alps - cache firmware version
    The radio-miropcm20 driver has firmware that decodes the RDS signals. So in that
    During hibernation, the HBA firmware may lose power and forget the device
    Tack the firmware reply event_data payload to the end of its
    Tack the firmware reply event_data payload to the end of its
    Tack the firmware reply event_data payload to the end of its
    ima: add support for measuring and appraising firmware
    new security hook to evaluate any loaded firmware that wasn't built
    security hook, to measure and/or appraise the loaded firmware's
    firmware_class: perform new LSM checks
    This attaches LSM hooks to the existing firmware loading interfaces:
    filesystem-found firmware and demand-loaded blobs. On errors, loads
    In order to validate the contents of firmware being loaded, there must be
    a hook to evaluate any loaded firmware that wasn't built into the kernel
    firmware designed to mount an attack against kernel memory (e.g. via DMA).
    or firmware that want to do low-level access to regulators, with no
    The 10.x firmware does not support IBSS mode at
    Catherine fixes a couple of firmware API version errors.
    because the firmware was already in the middle of a reset. Also, initialize
    i40e: Fix firmware API version errors
    firmware loader: Fix _request_firmware_load() return val for fw load abort
    _request_firmware_load() returns -ENOMEM when fw load is aborted after
    drivers/misc/ti-st: Load firmware from ti-connectivity directory.
    Looks like the default location for TI firmware is inside the ti-connectivity
    directory, to be coherent with other firmware request used by TI drivers, load
    the TIInit firmware from this directory instead of /lib/firmware directly.
    It really isn't valid to ignore a tree modification provided by firmware
    particular maXTouch chip and firmware version, therefore it can't be
    firmware image, it stays in bootloader mode and reports a failure. It is
    possible to reflash a working firmware image from this state.
    Input: atmel_mxt_ts - download device config using firmware loader
    with firmware changes that move values around on the chip.
    loads the configuration via the firmware loader and sends it to the MXT
      firmware loader to return.
      firmware download).
            [   16.332247] xc2028 0-0061: Loading firmware for type=BASE F8MHZ (3), id 0000000000000000.
    64 bytes is too short for firmware load on this device. So, increase it
    [media] xc4000: add module meta-tag with the firmware names
    the firmware and generate proper initrd images.
    So, add the firmware names there.
    [media] xc4000: Update firmware name
    The firmware name at:
       http://www.kernellabs.com/firmware/xc4000/
    Cc: sfi-devel@simplefirmware.org
    firmware generates a lot of events, e.g. spectral
    When the firmware asserts, we restart the device and reset
    reconfigure the firmware properly after firmware restart.
    Add the Control Status Registers to the firmware error dump
    the firmware to be on a certain channel for a certain time.
    a MAC context in the firmware - it uses a generic context
    2) The driver sends an Aux ROC command (0x53) to the firmware.
    3) The firmware responds with the unique id of the time event.
    [media] coda: split firmware version check out of coda_hw_init
    This adds a new function coda_check_firmware that does the firmware
    The CODA960 firmware spins if there is not enough input data in the bitstream
    Latest MFC v6 firmware requires tile mode and loop filter
    with v7. This patch adds this support for new v6 firmware.
    [media] s5p-mfc: Support multiple firmware sub-versions
    For MFC firmwares, improved versions with bug fixes and
    feature additions are released keeping the firmware version
    the release of a new MFCv6 firmware with an interface change.
    This patch adds the support of accepting multiple firmware
    firmwares starting from latest. This ensures full backward
    compatibility regardless of which firmware version and kernel
    [media] s5p-mfc: Remove duplicate function s5p_mfc_reload_firmware
    The function s5p_mfc_reload_firmware is exactly same as
    s5p_mfc_load_firmware. So removing the duplicate function.
    4c2c5763 ("cxgb4/iw_cxgb4: use firmware ord/ird resource limits") of net-next
    [media] si2168: Support Si2168-A20 firmware downloading
    This adds support for the Si2168-A20 firmware download.
    Extracting the firmware:
    32e06713b33915f674bfb2c209beaea5 /lib/firmware/dvb-demod-si2168-a20-01.fw
    staging: vt6656: struct vnt_private rename wFirmwareVersion to firmware_version
    "[media] coda: update CODA7541 to firmware 1.4.50".
      [media] si2168: firmware download fix
    There's nothing ath10k can do to help firmware
    frames as already inspected to prevent firmware
    In the s5p_mfc_alloc_firmware() function there are some mistakes
    aggregation on their own (e.g. in firmware)
    This command requests the firmware to trigger a time event
    Framework in the firmware, and makes use of the Aux station
    comes to loading the right firmware version and comparing that it
    This patch fixes every instance of the firmware version handling and
     - enable common hardware blocks, secure firmware calls,
      commit I promised, a system resume fix related to request_firmware(),
       - Fix for a 3.4 regression in request_firmware() resulting in
      PM / sleep: Fix request_firmware() error at resume
    from #including shared .c files under drivers/firmware/efi to
    New register area defined in the firmware
    Firmware sets this register with the offset of the firmware trace area
    within the peripheral memory region. Critical for the firmware trace
    Use single data source for all information regarding the firmware
    boot-time. This may be used for feature reporting, firmware bug
    The Chromebook firmware doesn't enable the CCI for the boot cpu, and
    kernel rather than expecting the firmware/bootloader to do it and only in
    Use the correct compatible string for sdma and also provide the sdma firmware
    test: add firmware_class loader test
    This provides a simple interface to trigger the firmware_class loader
    doc: fix minor typos in firmware_class README
    This is a tiny clean up for typos in the firmware_class README.
      PM / sleep: Fix request_firmware() error at resume
    Neerav adds support to get the port MAC address from firmware and adds
    Change format of mqd structure to match latest KV firmware
    Change format of mqd structure to match latest KV firmware
    v5: Set default sched_policy to HWS as it is now supported by firmware
    Change format of mqd structure to match latest KV firmware
    Change format of mqd structure to match latest KV firmware
    This patch adds a new API to get the port mac address from firmware.
    This value can be used to match log entries from this log with firmware
    application.  With debug firmware, the sge timestamp is also logged by
    firmware in its flowc history so that we can compute the latency from
    posting the work request until the firmware sees it.
    cxgb4/iw_cxgb4: use firmware ord/ird resource limits
    parameters are not available, due to older firmware, then hard-code
    the values based on the known values for older firmware.
        (including being given explicitly by the firmware). Names
    brcmfmac: Make firmware path a module parameter
    This patch makes firmware path a module parameter so that firmware and
    Last megabyte of RAM is used by secure firmware and should not be accessed
    mainline kernel. This includes secure firmware calls, watchdog, g2d and
    PM / sleep: Fix request_firmware() error at resume
    and request_firmware()] introduced the finer state control, but it
    firmware loading of intel BT device at suspend/resume:
    and the clear of usermodehelper lock.  The request_firmware() function
    usermodehelper_read_trylock() returns an error and request_firmware()
    request_firmware() will be blocked until the end of this function
    Fixes: 247bc0374254 (PM / Sleep: Mitigate race between the freezer and request_firmware())
    Change format of mqd structure to work with latest KV firmware
    Bluetooth: btmrvl: avoid sending data to firmware after hs_activated
    before enabling host sleep in firmware. If any data is sent to
    firmware after host sleep is activated, firmware may end up
    [media] si2157: rework firmware download logic a little bit
    Rework firmware selection / chip detection logic a little bit.
    Add missing release_firmware() to error path.
    [media] si2168: few firmware download changes
    Rework firmware selection logic a little bit.
    Print notice asking user update firmware when old Si2168 B40
    firmware is used.
    [media] si2157: advertise Si2158 A20 firmware
    Driver uses that firmware. Add it module firmware list.
    [media] si2168: advertise Si2168 A30 firmware
    Driver uses that new firmware too, so advertise it.
    Tell used TV standard and bandwidth for tuner firmware.
    Add handling for different chip revisions and firmwares.
    key/value pairs to firmware and it returns 4 bytes back including
    We want also read data from firmware. Add support for it. Copied from
    If firmware probing worker failed it called
    some fixes in firmware initialisation which applies to ar6004 hw1.3 as well.
    Some of the firmware versions support rate tables up to mcs15, add support for
    ath6kl: convert ar6004 hardware flags to firmware feature flags
    The functionality defined through these flags were actually firmware features
    which can change between firmware versions. To make it possible to support
    different firmware versions with the same driver, convert the flags to firmware
    For backwards compatibility support for old ar6004 firmware FW
    Starting from FW API 5 the firmware image needs to set them.
    WWAN devices often have their LL address provided by the firmware of the
    or read a meaningless MAC address from the firmware.  Thus the EUI64 and
    address is often retrieved from the firmware with AT or proprietary
    the one retrieved from the firmware is less complicated and more robust.
    Knowing how long we spend in firmware calls is an important part of
      firmware: Create directories for external firmware
       - ACPI-related i915 fix preventing firmware on some Thinkpad laptops
      ACPI / i915: ignore firmware requests for backlight change
    keeps making trouble to the firmware and is not a really reliable
    firmware assertion."
      ACPI / i915: ignore firmware requests for backlight change
    string.  Checking with our firmware team, all systems should have this
    some specific initializations related to the firmware downloading and
    firmware: Create directories for external firmware
    Commit 5180d5f4 ("firmware: Simplify directory creation") broke
    including firmware specified in CONFIG_EXTRA_FIRMWARE:
      MK_FW   firmware/amd-ucode/microcode_amd.bin.gen.S
    /bin/sh: firmware/amd-ucode/microcode_amd.bin.gen.S: No such file or directory
    firmware/Makefile:185: recipe for target
    'firmware/amd-ucode/microcode_amd.bin.gen.S' failed
    Makefile.build. Create the directory in firmware/Makefile in non-O
    firmware loader: inform direct failure when udev loader is disabled
    Now that the udev firmware loader is optional request_firmware()
    direct firmware loading failed and udev firmware loading is disabled.
    If no information is needed request_firmware_direct() should be used
    for optional firmware, at which point drivers can take on the onus
    over informing of any failures, if udev firmware loading is disabled
    With this change with a simple firmware load test module [0]:
    platform fake-dev.0: Direct firmware load for fake.bin failed
    platform fake-dev.0: Direct firmware load for fake.bin failed with error -2
    firmware: replace ALIGN(PAGE_SIZE) by PAGE_ALIGN
    firmware: read firmware size using i_size_read()
    firmware loader: allow disabling of udev as firmware loader
    which means that distros can't really stop loading firmware through
    Ideally we would remove/disable the udev firmware helper in both the
    be around to cancel firmware requests.
    This patch allows udev firmware loading to be disabled while still
    allowing non-udev firmware loading, as done by the dell-rbu driver, to
    and udev without the firmware loading support, but I don't have the
    I continue to work on the firmware error report system adding more
    A copy paste issue broke the rate control when a firmware
    ACPI / i915: ignore firmware requests for backlight change
    Some Thinkpad laptops' firmware will initiate a backlight level change
    since we are not using firmware's interface to do the backlight setting
    on these affected laptops, we do not want the firmware to use some
    and under drivers/firmware/efi to <asm/efi.h>. This is in preparation of
    turning the stub code under drivers/firmware/efi into a static library.
    and under drivers/firmware/efi to <asm/efi.h>. This is in preparation of
    turning the stub code under drivers/firmware/efi into a static library.
    mode function call wrappers, move them to drivers/firmware/efi/runtime-wrappers.c.
    the firmware, and furthermore - it interferes with the DBGC
    includes telling the firmware that we are not associated, removing
    The firmware currently deals with zero quota for a given
    iwlwifi: mvm: don't send zero quota to the firmware
    with the old firmware API.
    Tell the firmware if TTC should be enabled when switching
    If a firmware with the new API is detected, we currently
    that the functionalities of the platform firmware are seriously affected.
    These flags are not used by the firmware anyway.
    iwlwifi: mvm: update layout of firmware error dump
    here, but the full DMAR table is already exposed under /sys/firmware/
    A vendor specific command is sent to firmware during
    is much harder for the firmware which is likely to have
    - Collect a firmware dump on first Tx timeout if netif_msg_tx_err() is set
    - Collect a firmware dump on first Tx timeout if netif_msg_tx_err() is set
    "I have here a fix from Eliad for scheduled scan: it fixes a firmware
    newer firmwares support the feature. Here too, the visible effect
    is a firmware assertion. Along with that, we have a few fixes and
    Passthrough. Adds support to use firmware interface to get BAR0 value.
    Use the firmware interface to get the BAR0 value since we really don't want
    firmware.
    well as core 40 that I missed in the earlier firmware patch.
    In some circumstances, the firmware could beat us to the punch, and the
    instead of just returning -EIO by propagating firmware errors back to the
    and the VF module is autoloaded by simply resending firmware request if
    firmware needs to be loaded first.
    Sometimes the firmware will not indicate an error but fail to pass a
    communicates with the firmware and thus the PF driver), there are many
    firmware, there may be unresponsive firmware, there may be an error from
    crypto: qat - Fix error path crash when no firmware is present
    Firmware loader crashes when no firmware file is present.
    by all its callers.  Adds a log warning when the firmware's API minor/major
    p54: use request_firmware_direct() for optional EEPROM override
    The p54 driver uses request_firmware() twice, once for actual
    firmware and then another time for an optional user overide on
    @ firmware_not_critical @
    -       ret = request_firmware(&cf, config_file, dev);
    +       ret = request_firmware_direct(&cf, config_file, dev);
                    release_firmware(cf);
    b43: update list and code making a selection of firmware files
    Clean ucode selection, fix choice of firmware for LCN, drop some goto-s,
    brcmfmac: reduce log level in fwil if firmware returns error
    the firmware on the device returns an error. Some errors can be
    mpc setting and then let firmware take care of it.
    can with specific firmware result in a composite USB device. This
    driver and firmware using customized parameters.
    mwifiex: add firmware dump feature for SDIO
    1) Trigger firmware dump operation:
    mwifiex: add firmware dump feature for PCIe
    1) Trigger firmware dump operation:
        - don't rely on firmware's secondary_cpu_start for mcpm
      ARM: EXYNOS: Don't rely on firmware's secondary_cpu_start for mcpm
           brcmfmac: use asynchronous firmware request in USB
    adding driver's txpd header. This results in firmware parsing
    garbage data as packet length. Sometimes firmware is unable
    required by some drivers (eg. iwlmvm with newer firmware version).
    i40e: warn on newer/older firmware API rev
    If the firmware's API minor number is larger than the one expected, log
    If the firmware's API major or minor number is smaller then the one expected
    antenna. This logic is done in the firmware when we use the
    When the firmware enables TxTxCorunning, we can lift the
    iwlwifi: pcie: add firmware monitor capabilities
    This allows to use the firmware monitor. This capability
    iwlwifi: add device / firmware to fw-error-dump file
    Also add the human readable version of the firmware.
    entries to firmware pipeline id conversion
    - don't rely on firmware's secondary_cpu_start for mcpm
      ARM: EXYNOS: Don't rely on firmware's secondary_cpu_start for mcpm
    enough" number.  It is an unknown property of the modem firmware.
    Cc: sfi-devel@simplefirmware.org
    Cc: sfi-devel@simplefirmware.org
    Cc: sfi-devel@simplefirmware.org
      staging: rtl8723au: Reference correct firmwarefiles with MODULE_FIRMWARE()
      staging: rtl8723au: Request correct firmware file for A-cut parts
    ASoC: Intel: Show Baytrail SST DSP firmware details during init
    carrying firmware details in mailbox. Read and show those details during
    ARM: EXYNOS: Don't rely on firmware's secondary_cpu_start for mcpm
    On exynos mcpm systems the firmware is hardcoded to jump to an address
    firmware puts a bunch of code at that location.  That code expects the
    Originally (on prerelease hardware) this firmware code contained a
    Don't update the firmware/Makefile yet since there is no FW binary in
    v3 - removed change to ./firmware/Makefile
    This patch adds acceleration engine handler part the firmware loader.
    This patch adds microcode part of the firmware loader.
    driver and the firmware.
     "This looks bigger than it is, as one of the nouveau firmware fixes
      regenerates a bunch of the firmware files after changing the assembly
    The net device only exists when firmware is loaded successfully.
    staging: rtl8712: Fix oops on dongle removal if firmware is not available
    When firmware is not available, net device is not created. Upon
    staging: vt6656: rename FIRMWAREbCheckVersion to vnt_check_firmware_version
    staging: vt6656: rename FIRMWAREbBrach2Sram to vnt_firmware_branch_to_sram
    staging: vt6656: rename FIRMWAREbDownload to vnt_download_firmware
    staging: vt6656: firmware.c replace DBG_PRT debug messages
    staging: dgap: move unrelated functions in dgap_firmware_load()
    The dgap_firmware_load() has a lot of stuff which are
    unrelated with loading firmware.
    The dgap_config_buf is only used in dgap_firmware_load().
    dgap_firmware_load().
    firmware presumably).
    Thunderbolt hotplug is supposed to be handled by the firmware. But Apple
    It seems that there's a bug at au0828 hardware/firmware
    [media] si2168: firmware download fix
    First 8 bytes belonging to firmware image were hard-coded and uploaded
    by the driver mistakenly. Introduce new corrected firmware file and
    New firmware image could be extracted from the PCTV 292e driver CD
    $ sudo cp dvb-demod-si2168-02.fw /lib/firmware/
    drivers/firmware/efi/fdt.c|66 col 22| warning: unused variable ‘name’ [-Wunused-variable]
    drivers/firmware/efi/efi.c|368 col 3| warning: passing argument 3 of ‘of_get_flat_dt_prop’ from incompatible pointer type [enabled by default]
    drivers/firmware/efi/efi.c|368 col 8| warning: assignment discards ‘const’ qualifier from pointer target type [enabled by default]
    In the case where platform firmware has specified conflicting values for
    firmware has done something wrong and globally disable port poweroff.
    staging: rtl8723au: Reference correct firmwarefiles with MODULE_FIRMWARE()
    Add missing firmware references, and request the correct one.
    staging: rtl8723au: Request correct firmware file for A-cut parts
    in /lib/firmware/
    staging: rtl8723au: Reference correct firmwarefiles with MODULE_FIRMWARE()
    Add missing firmware references, and request the correct one.
    staging: rtl8723au: Request correct firmware file for A-cut parts
    in /lib/firmware/
    b43: fix frequency reported on G-PHY with /new/ firmware
    Support for firmware rev 508+ was added years ago, but we never noticed
    rt2800usb:fix hang during firmware load
    not actually require loading a firmware file. The vendors driver finds out
    about this by checking a firmware state register, so this patch adds this here.
    lacking a check for the firmware mode present in the vendors driver,
    tools. I suspect that dib7000p firmware or hardware
    This is bigger because it regenerates the internal firmwares after a fix.
      firmware: Use $(quote) in the Makefile
      firmware: Simplify directory creation
    This indicates to the firmware that it can power down various other
    This series contains an enhancement in the area of firmware minidump collection
    Shannon updates the admin queue API for the new firmware, which adds
    firmware can indicate any admin queue error states to the driver via
    if the firmware reports DCB capability the driver enables
    Remove the filter created by the firmware with the default MAC address it
    Currently if the firmware reports DCB capability the driver enables
    the firmware reports to us is a guaranteed minimum, not an absolute
      LE mode without a hypervisor (ie. under OPAL firmware) by doing the
      drm/nouveau/graph: pad firmware code at load time
    drm/nouveau/graph: pad firmware code at load time
    Pad the microcode to a multiple of 0x40 words, otherwise firmware will
    fail to run from non-prepadded firmware files.
    enabled at all on chips that rely exclusively on external firmware, even
    where an external firmware has also been loaded.
    Also switch to external firmware if the graph class has no microcode
    The number of VSIs that the firmware reports to us is a guaranteed
    guaranteed by the firmware, with the knowledge that we may fail to get
    firmware, so writing to gain seems to overflow into the offset register.
    the box for both 32-bit and 64-bit firmware, commit 7d453eee36ae
    left unhooked in a failed reset recovery, e.g. when firmware is broken.
    If a reset recovery failed (e.g. firmware is broken), the HMC space won't
    While scanning the firmware performs RF sweep and we cannot track
    fire on resume since (except for hilarious firmware) all pipes are off
    param before making OPAL call. So firmware image validation fails.
    struct OpalMemoryErrorData is passed to us from firmware, so we
    non-virtualized using the appropriate OPAL firmware calls.
    call to the OPAL firmware which may result in just switching HID0:HILE
    been brought out of firmware.
    firmware revision when reporting the Inquiry Product Revision. These
    turnaround time such as EC firmware reads and writes.
    mfd: Add sysfs attributes for Kontron PLD firmware revision
    applications to retrieve firmware information.
    Queued trim only works for some users with MU05 firmware.  Revert to
    blacklisting all firmware versions.
    for reports of trouble with MU05 firmware.
      USB: io_ti: fix firmware download on big-endian machines (part 2)
      ARM: dts: add secure firmware support for exynos5420-arndale-octa
    TARGET_10X_NUM_VDEVS with 10.x firmware to make it possible to create
    with firmware loading when the driver is linked to the kernel.
    hpsa: fix event filtering to prevent excessive rescans with old firmware
    do not require rescans to be initiated.  Current firmware filters out
    these events already, but some out of date firmware doesn't, so the
    of date firmware you may see the driver spending a lot of time
    After 3.22 firmware, PMC firmware guys tell us the
      : add secure firmware support
      ARM: dts: add secure firmware support for exynos5420-arndale-octa
    Lastly fixes a Tx hang and firmware crash that happens after setting the MTU
    Shannon adds the clear_pxe AdminQ API call to tell the firmware that the
    driver is taking over from PXE.  In addition, relaxes the firmware API
    hardware/firmware problems and he also fixed two memory leaks."
    modifying the firmware copy of a port GID table becomes an
    ARM: dts: add secure firmware support for exynos5420-arndale-octa
    firmware binary. Added DTS node entry to enable this support.
    If it is, it points to the problem in firmware.
    firmware-initialised device with static windows or an emulation by
    firmware to program these PCIe settings for the OS.
    ACPI Battery device receives notifications from firmware frequently,
    firmware to work around this.  Provide a hook for them to intercept
    mwifiex: change hscfg gap parameter to avoid potential firmware deadlock
    If host sleep parameter gap is set to 0xff, firmware will wait
    This prevents firmware from uploading data packet before host
    if firmware error occurs but was not reported. Firmware should report
    Perform firmware recovery procedure.
    In case there is something fundamentally wrong with the firmware
    brcmfmac: remove firmware list from USB driver
    The USB driver was using a list for firmware info that was
    the asynchronous firmware request this is no longer needed.
    driver did not use the result at all and with newer firmware it is
    The firmware channel specification is a bitfield using a
    brcmfmac: use asynchronous firmware request in USB
    This patch adds use of asynchronous firmware request to
    brcmfmac: use asynchronous firmware request in SDIO
    This patch adds use of asynchronous firmware request to
    brcmfmac: introduce asynchronous firmware loading
    The driver needs firmware to be loaded to the device, which
    is done through the firmware class API. The synchronous call
    request_firmware() need root filesystem to be mounted and/or
    it is called. Instead use request_firmware_nowait().
    brcmfmac: rename nvram.[ch] for upcoming firmware handling functions
    The firmware processing will be modified to use asynchronous request
    firmware api. In preparation this patch is simple rename of source
    not be handled by the firmware so we return -EINVAL. However, as
    i40e: relax the firmware API version check
    firmware will also describe its peer port.  This allows the
    There is always the possibility that firmware mis-identifies the ports,
    firmware.  For now, simply perform the nominal association.
    This also changes behavior in the case where the firmware says that the
    USB: io_ti: fix firmware download on big-endian machines (part 2)
    A recent patch that purported to fix firmware download on big-endian
    firmware is actually being downloaded (and not just verified and left
    untouched unless older than the firmware at hand).
    during firmware download also on big-endian machines.
    data and hooks, as the first step we add firmware
    read by the firmware
    and one for openfirmware devicetree based initialization. The devicetree
    transfer on CE rings which can lead firmware to
    transfer failure in mid-way and crash firmware
    It seems ath10k firmware gives us no way to know
    Some firmware drivers, ie acpi-video want to get themselves out of the
    specific) firmware backlight controls, not by native / raw backlight controls
    Userspace will normally prefer firmware interfaces over raw interfaces, so
    2) Making acpi_video_backlight_support() return true so that other firmware
    In post commit, a quirk of this firmware about transactions is reported.
    ALSA: bebob: Send a cue to load firmware for M-Audio Firewire series
    Just powering on, these devices below wait to download firmware.
    But firmware version 5058 or later, flash memory in the device stores the
    firmware. So this driver can enable these devices by sending a certain cue to
    load the firmware.
    The firmwares for M-Audio Firewire 410/1814 and ProjectMix I/O has a quirk to
    with DM1000 but its firmware is special. They are:
    They have heavily customized firmware. The usual operations can't be applied to
    M-Audio special firmware quirks:
     - Just after powering on, they wait to download firmware. This state is
       recognized as a different model with the uploaded firmware.
    This module don't support to upload firmware.
    with DM1000/DM1000E with usual firmware. They are:
    M-Audio usual firmware quirks:
     - Just after powering on, 'Firewire 410' waits to download firmware. This
       device is recognized as a different model with the uploaded firmware.
     - 'Firewire Audiophile' also waits to download firmware but its
       vendor id/model id is the same as the one after loading firmware.
    firmware.
     - firmware information
    Normal BeBoB firmware has a quirk. When receiving bus reset, it transmits
     - firmware information
    Fireworks firmware version 5.5 reports fix interval for dbc in each packet.
    One of Fireworks firmware, named  as 'AudioFire9', seems to transmit
    for AudioFire12/8(till 2009 July) with firmware version 1.0. Already in
    previous commit, this driver don't support such old firmwares. So this commit
    firmware version 5.0 or later. This is also confirmed by FFADO. So this driver
     - Flash Memory to store firmwares
    each firmware API variant) waiting for firmware
    repair misbehaving monitor firmware.
    staging: rtl8723au: rtl8732au_hal_init.c: Use rtl8723au_BT_coexist() to pick firmware image
    Staging: rtl8192u: r819xU_firmware_img.c Fixed checkpatch.pl ERRORs
    firmware version v8 for MFC
    file for new firmware version v8 for MFC.
    firmware too. So moving the definition from v7 regs to v6.
    new v6 firmware. This updation is increasing the size and so
    is backward compatible with older v6 firmwares.
    the consumed stream size returned by the firmware and, based on that,
    - v7 firmware will always return consumed stream size equal to whatever
    buffer), which means we will never try to resubmit, because the firmware
    - v6 firmware will return the number of consumed bytes, but will not
    the latest v7 firmware. As the new macro increases the
    firmware too.
    This used to work for firmwares version <= 6, because in addition to the above,
    previously decoded buffers (firmware reports the same destination buffer address
    is returned in it. This also works on <= v6 firmware, which behaves in the same
    [media] v4l: ti-vpe: register video device only when firmware is loaded
    vpe fops(vpe_open in particular) should be called only when VPDMA firmware
    a vpdma helper to initialize VPDMA and load firmware. This function is
    non-blocking(it calls request_firmware_nowait()), and doesn't ensure that the
    firmware is actually loaded when it returns.
    The ready field in vpdma_data is no longer needed since we always have firmware
    [media] ivtv: Fix Oops when no firmware is loaded
    When ivtv PCM device is accessed at the state where no firmware is
    This patch adds the check of firmware at PCM open callback like other
    In order to deal with an firmware bug on a specific ppc32 platform
    carl9170_usb_probe() does not handle request_firmware_nowait() failure
    to default state irrespective of what firmware did with it.
    The firmware / low level driver can parse the channel in
      The other one is a change to our PCIe reset hook to use a firmware
      powerpc/powernv: Reset root port in firmware
    MAC_CONTEXT_CMD command we send to the firmware.  Instead of having to
      ASoC: Intel: Fix Baytrail SST DSP firmware loading
    powerpc/powernv: Reset root port in firmware
    this using/creating appropriate firmware interfaces.
    qla4xxx_start_firmware().
    added with latest firmware minidump template
    qla4xxx: Change default capture to firmware defined capture mask
    qla4xxx: Do not wait for IO completion, after issuing stop_firmware
    iSCSI stop_firmware mailbox command is not completing outstanding IO.
    Do not wait for IO completion after issuing stop_firmware mailbox
       firmware responsiveness. To improve the responsiveness, default IO throttle
    current code prematurely free qla_tgt_cmd while firmware
    still has the command.  When firmware release the command
    The driver will look for firmware attribute that support
    qla2xxx: Don't check for firmware hung during the reset context for ISP82XX.
    qla2xxx: ISP27xx firmware dump template spec updates (including T274).
    qla2xxx: Adjust adapter reset routine to the changes in firmware specification for ISPFx00.
    qla2xxx: Avoid escalating the SCSI error handler if the command is not found in firmware.
    If the firmware cannot find the command specified then return SUCCESS to the
    qla2xxx: Support of new firmware dump opcodes QLA8044_RDDFE(38), QLA8044_RDMDIO(39),QLA8044_POLLWR(40).
    qla2xxx: Allow the next firmware dump if the previous dump capture fails for ISP8044.
    qla2xxx: Issue abort command for outstanding commands during cleanup when only firmware is alive.
    Input: atmel_mxt_ts - add check for incorrect firmware file format
    Atmel supplies firmware files in ASCII HEX format (.enc) which must be
    firmware may contain hundreds of frames).
    Also add CHG poll after last firmware frame - some bootloader versions will
    This improves firmware update time as we no longer wait longer than
    Input: atmel_mxt_ts - select FW_LOADER for firmware code
    the firmware file is in
    backup firmware properly.
    Staging: unisys: detect s-Par firmware
    This patch adds support for detection of s-Par firmware by checking for
    s-Par firmware is present.
    scan offload while associated, the firmware seems not to like it. I
    to reset things as part of recovering from parse failures in firmware
    its own sibling so there should be no risk of confusion with firmware
    staging: rtl8723au: Remove a pile of unused firmware image file names
    The firmware needs to know on what channel we run before we
    Also re-enable U-APSD for -9 firmware since the firmare issues were
    firmware, so bring the TLV flag back to detect those.
    firmware: Use $(quote) in the Makefile
    firmware: Simplify directory creation
    When building the firmware blobs, use a simple loop to create
    When installing the firmware blobs, call mkdir like in Makefile.modinst.
    Apparently firmware can sometimes report a
    firmware. Add a transport API for this.
    The channel values used by firmware is handled using conversion functions
    The DISASSOC command needs to be sent to firmware when a connection
    loss is detected by firmware (e.g., beacon timeout). Otherwise the
    firmware. This patch resolves the issue by using brcmf_link_down()
    The driver serializes the nvram firmware file before sending it
    brcmfmac: Report the support of firmware roaming
    Currently firmware roaming support is not reported to cfg80211.
    This patch reports the support of firmware based roaming when
    'join_pref' to induce firmware to preferably select 5GHz BSS.
    orinoco_usb: Fix broken firmware load error checking
    The check of ezusb_firmware_download() return value (added by commit
    ezusb_firmware_download() returns 1 on success.
    but the firmware may send the sync timeout event at any time,
    ASoC: Intel: Fix Baytrail SST DSP firmware loading
    baytrail-pcm-audio baytrail-pcm-audio: error: failed to load firmware
    A firmware bug is present on the XPS Haswell edition which silently
    firmware loading it can be removed from here.
    an atomic rename, in a firmware upgrade scenario, while keeping the volume
    Reading the partial HID Descriptor is causing a firmware lockup in some
    Since there is no support for compressed audio in Baytrail ADSP firmware
    unloading firmware modules and putting DSP into reset prior suspend and
    We have to save the physical address of extended firmware block in the
    beginning of mailbox every time when we boot the DSP firmware since that
    mailbox address is re-used after DSP firmware is running. Otherwise DSP
    firmware will get bogus extended firmware block address during next DSP
    implemented. Prepare for that by moving extended firmware address saving
    safeguard against concurrent timestamp structure access between DSP firmware
          brcmfmac: fallback to mimo_bw_cap for older firmwares
    This resulted in disabling 20MHz operation in the firmware.
    cxgb4: Decode the firmware port and module type a bit more for ethtool
    powerpc/powernv: Reset root port in firmware
    ports and we should have resetting root port done in firmware instead
    is not defined by firmware.
    the firmware has skipped some initialization in that case.
     - Support to collect RDMEM section of firmware dump using
    qlcnic: Collect firmware dump using DMA on 82xx adapters
    o Add support to collect RDMEM section of firmware dump
    After hardware reset, some BCM Bluetooth adapters obtain their initial firmware
    from OTPROM chip. Once this initial firmware is running, the firmware can be
    If the .hcd file is not found in /lib/firmware, BCM Bluetooth adapter continues
    to operate with the initial firmware. Sample kernel log:
      hotplug: sys=firmware act=add fw=brcm/BCM20702A0-0a5c-22be.hcd dev=...
    it starts using the new firmware. Sample kernel log:
      hotplug: sys=firmware act=add fw=brcm/BCM20702A0-0a5c-22be.hcd dev=...
      Bluetooth: hci0: BCM: firmware hci_ver=06 hci_rev=1389 lmp_ver=06 lmp_subver=220e
    ASoC: Intel: Add support to unload/reload firmware modules.
    Add some SST API calls to unload and reload firmware modules. This can be used
    iwlwifi: mvm/pcie: capture last commands on firmware error
    When a firmware error occurs, capture the last 32 commands
    Also add golden registers, update firmware loading functions.
    The firmware correctly switches to THUMB before entry.
    * fix memory allocation failures after a firmware crash (Michal)
    * add a new firmware crash option to make it possible to crash 10.1
      firmware for testing purposes (Marek P)
    * fix firmware stats reporting (Chun, Ben & Bartosz)"
    Hans de Goede fixes a brcmfmac firmware load hang.
    The cd pin settings have been taken from the original firmware fex files,
    The cd pin settings have been taken from the original firmware fex files,
    the ones of the tested boards according to the original firmware fex files.
    Communicate hbm version 1.1 to firmware to tell that we
    Exit power gating request might also be initiated by the firmware
    drivers/firmware/pcdp.c
    usbif0: serial/firmware loader?
      and common-io-layer fix for old firmware levels"
    The TEAC UD-H01 firmware sends wrong feedback frequency values, thus
    unless they are spaces. For devices that use these words in the firmware
    Image so that it appears as an EFI application to UEFI firmware.
    the kernel to access various EFI runtime services provided by EFI firmware.
    firmware standard specifies that the firmware be little endian. A future
    little endian firmware.
    At boot time, before switching to a virtual UEFI memory map, firmware
       drivers/firmware/efi/fdt.c
    rsi: Changing opcode for sta mode according to changes in firmware
      secondary processors having reached back into firmware in time.
    can be passed down through the firmware to low-level NC-SI functions.
    error caused the failure to get the DCB configuration from firmware.
    down through the firmware to low-level NC-SI functions. We tell
    the firmware about the length of the ASCII string not counting
    powerpc/powernv: Return secondary CPUs to firmware before FW update
    This patch returns all secondary CPUs to firmware before starting
    firmware update process.
    firmware.
    by the firmware.
    of root port to underly firmware. For that, one more weak function
    platforms are running on top of different firmware and some of the
    delays have been covered by underly firmware (PowerNV).
    powerpc/powernv: Reset root port in firmware
    ports and we should have resetting root port done in firmware instead
    With this patch I was able to update firmware on an LE kernel.
    usbif0: serial/firmware loader?
      USB: io_ti: fix firmware download on big-endian machines
    Staging: rtl8192e: Remove built-in firmware images
    The driver can already use request_firmware() to load firmware, and
    always does so.  There is code in init_firmware() to use the static
    firmware images, but it's unreachable!  Remove the data and simplify
    init_firmware() accordingly.
    USB: io_ti: fix firmware download on big-endian machines
    During firmware download the device expects memory addresses in
    This fixes brcmfmac hanging in firmware loading on my board.
    Revert "mwifiex: add firmware dump feature for PCIe"
    On some Kvaser hardware, the firmware returns extra messages after the
    * Reset firmware API lock which might be in inconsistent state.
    qlcnic: Reset firmware API lock at driver load time
    Some firmware versions fails to reset the lock during
    initialization. Force reset firmware API lock during driver
    ath10k: fix firmware recovery with ap interface
    phase of recovery. This in turn caused firmware to
    This speeds up firmware recovery significantly.
     "The main change is that we now publish "firmware ID" for the serio
      dealing with: i8042 will export PS/2 port's PNP IDs as firmware IDs.
      Input: i8042 - add firmware_id support
      Input: serio - add firmware_id sysfs attribute
    fails to detect their firmware version number. This prevents more advanced
    Catherine removes a firmware workaround that is no longer needed with
    the latest firmware for i40e.  She also provides some minor cleanups
    recent changes in the firmware.  Also rearranges the "if netdev" logic
    mwifiex: add firmware dump feature for PCIe
    This option be useful to dump firmware memory for debugging
    purpose. Actual code to dump firmware momory for SDIO and PCIe
    When command timeout occurs due to a firmware/hardware bug,
    firmware.
    Reshuffle prints to consolidate firmware/hardware information
    Reflect recent changes in firmware:
    still can see it installed into /sys/firmware/acpi/tables on Linux boxes.
    Input: i8042 - add firmware_id support
    Fill in the new serio firmware_id sysfs attribute for pnp instantiated
    Input: serio - add firmware_id sysfs attribute
    serio devices exposed via platform firmware interfaces such as ACPI may
    We don't associate the serio devices with the firmware device (we don't
    firmware interface as that would break suspend / resume ordering.
    Therefore this patch adds a new firmware_id sysfs attribute so that
    information the firmware interface may provide.
    "I have new device IDs and a new firmware API. These are the trivial
    Amitkumar Karwar fixes a couple of problems relating to driver/firmware
    when using new firmware.
    in PLT mode in order to work around a firmware bug.
    as runtime EFI firmware may potentially use the FPU.
    as runtime EFI firmware may potentially use the FPU.
    one assembly function to make firmware calls.
    v2: print out mc firmware version used and size
    v2: print out mc firmware version used and size
    is unsupported on some firmware levels. Retry SEI with that mask set
      cxgb4: use the correct max size for firmware flash
    cxgb4: use the correct max size for firmware flash
    Sometimes when command timeout occurs due to a firmware or
    queue. These commands are never downloaded to firmware causing
    is the RGB chip number (as seen by the firmware).
    On Hyper-V, when our legacy firmware presented to the guests, emulates
    the legacy PIC while when our EFI based firmware is presented we do
    not emulate the PIC. To support Hyper-V EFI firmware, we had to set
    calibration in the early boot code. While, on the EFI firmware, we
    Hyper-V EFI firmware.
    Fixes: 028e724 ("wl18xx: move to new firmware (wl18xx-fw-3.bin)")
    Sometimes the firmware sends a dummy packet event while we are in PLT
    mode.  This doesn't make sense, it's a firmware bug.  Fix this by
    values for 82xx adapters. In case of 83xx adapters, use minimum of firmware
    iwlwifi: 7000: bump firmware API version to 9
    Also warn if an older firmware is loaded.
    Calling iwl_send_bt_init_conf for INIT firmware is not a
    All the supported firmwares have this flag set.
    All the supported firmwares have this flag set.
    All the supported firmwares have this flag set.
    All the supported firmwares have this flag set.
    All the supported firmwares have this flag set.
    All the supported firmwares have this flag set.
    All the supported firmwares have this flag set.
    All the supported firmwares have this flag set.
    All the supported firmwares have this flag set.
    All the supported firmwares have this flag set.
    The firmware doesn't handle properly the fragmented scan.
    usec to TUs as expected by firmware API.
    iwlwifi: mvm: deprecate -7 firmware
    This firmware is not supported any more.
    A few code paths specific to old firmware can be removed.
    we won't load firmware that didn't support the corresponding
    The firmware doesn't support broadcast filtering on P2P
    client. Trying to enable it makes the firmware assert.
    iwlwifi: mvm: dump Rx FIFO when the firmware asserts
    iwlwifi: mvm: propagate the beamforming status from firmware
    The firmware tells us if an Rx packet was beamformed or not.
    This define is related to the firmware packaging and is
    This will allow to load the new firmware.
    I forgot to send the new Look Up Table to the firmware and
       firmware was reading random values from the stack because we were
    the proper firmware API for that.
    Because the firmware treats the object as 64-bits regardless it was
      So you'll find here the conversion of the two new firmware sysfs
      change to "kick" the HVC thread when the firmware tells us there is
    Rate controller in firmware may also return the Tx Rate
    populated with various runtime messages produced by the firmware.
    Provide a sysfs interface /sys/firmware/opal/msglog for userspace to
    PState table is obtained from OPAL v3 firmware through device
    The firmware can notify us when new input data is available, so
    Today I investigated the issue and found that the firmware simply does
    double events on non-broken firmware, this is only done if
       MAC only if the firmware supports it (TLV flag is set).
       should be enabled only if the firmware supports this
       (based on the firmware capabilities).
      ERROR: "__vmyield" [sound/sound_firmware.ko] undefined!
      Input: edt-ft5x06 - add support for M09 firmware version
    Fixes: fd335ab04b3f ('Input: edt-ft5x06 - add support for M09 firmware version')
      We have new functionality when running under the OPAL firmware
      (non-virtualized or KVM host), such as access to the firmware error
    with firmware MU05. Update the blacklist so we only disable queued trim
    for older firmware releases.
    firmware is in the pipeline but not ready yet. Until then, blacklist
      firmware: use power efficient workqueue for unloading and aborting fw load
      firmware: give a protection when map page failed
      firmware: google memconsole driver fixes
      firmware: fix google/gsmi duplicate efivars_sysfs_init()
        booted from 32-bit firmware.  This needs a bootloader that supports
      x86/efi: Re-disable interrupts after calling firmware services
    sleep activation fails due to a missing interrupt from firmware.
    CPU cache features, UEFI-like firmware interface (LEFI), HT-linked PCI,
    configuration issue. So, latest firmware has enable the DMA support as
    DMA32 limit), and also to be compatible with old firmware, we keep use
    With LEFI firmware interface, We don't need fixup for PCI irq routing
    MIPS: Loongson: Add UEFI-like firmware interface (LEFI) support
    The new UEFI-like firmware interface (LEFI, i.e. Loongson Unified
    port is programmed to the firmware using a new command we introduce
    CONFIG_DEV firmware command.
    Introduce the CONFIG_DEV firmware command which we will use to
    configure the UDP port assumed by the firmware for the VXLAN offloads.
    When a VF issues a firmware command which is disallowed for them, the PF
    Shannon fixes i40e to verify the eeprom checksum and firmware CRC status
    Input: edt-ft5x06 - add support for M09 firmware version
    There is a new firmware version for the EDT-FT5x06 chip.
    Add support for detecting the firmware version and handle the
    We can not use SMBus to get the actual range because I suspect the firmware
    ath10k: add extra pdev stats on 10.1 firmware
    for 10.1 firmware.
    Tested with firmware 10x firmware.
    ath10k: fix getting stats from firmware
    Tested on 10.x firmware, and others report it at least
    makes older firmware no more broken than it already was.
    since 999.999.0.629 firmware release.
    The driver needs to verify the eeprom checksum and firmware crc status bits,
    device is booted (e.g. due to firmware recovery).
    during firmware recovery.
    ath10k: advertise only firmware API 2 files
    We do not really support older firmware API 1 anymore, so better remove
    ath10k: add otp and firmware boot error messages
    If OTP or firmware fails to load properly, print out some
    ath10k: better firmware loading error messages
    found, and make it easier to determine the firmware
    MFP_CAPABLE flag in the firmware command. This is supported from
     Workqueue: events request_firmware_work_func
     [<c0310748>] (wlcore_nvs_cb+0x10c/0x97c) from [<c02be5e8>] (request_firmware_work_func+0x38/0x58)
     [<c02be5e8>] (request_firmware_work_func+0x38/0x58) from [<c0036394>] (process_one_work+0x1c0/0x4a4)
    emulate BTN_RIGHT events in firmware based on the finger position, as part
    firmware interface is necessary (native or mixed mode), but also allows
      relies on a different firmware download protocal than the C2 one. We
    own contribution. Avri dives deep in the power code - newer firmware
    uAPSD since we identified firmware bugs that cause packet loss. One
    ath10k: update regulatory domain settings for 10.x firmware
    Regulatory domain settings for firmware 10.x has more options
    than main firmware, so handle regulatory domain setup separately
    for both supported firmwares. Fill in additional dfs domain
    for firmware 10.x was found during code review.
    ath10k: add soft/hard firmware crash option to simulate_fw_crash
    Command WMI_FORCE_FW_HANG_CMDID is not supported in firmware 10.1.
    In order to have firmware crash simulation functionality also
    in firmware 10.1 driver can force firmware crash by performing not allowed
    operation. Driver can deliberately crash firmware when setting vdev param for
    'soft' which will cause firmware crash that is recoverable
           by warm firmware reset but supported only in main firmware.
    'hard' which will cause firmware crash recoverable by cold
           firmware reset, this option works for both firmwares.
    Commands to trigger firmware soft/hard crash:
    This exposes a simple way to grab the firmware provided
    Trusted Foundations firmware used on production Tegra SoCs. The changes
      ARM: tegra: cpuidle: use firmware for power down
      ARM: firmware: add prepare_idle() operation
      ARM: firmware: enable Trusted Foundations by default
    Since all the VF interaction with the firmware passes through the PF
    cables where we were not always freeing the firmware/software semaphore
    after grabbing it.  Second stops caching whether the management firmware
    stopping link and to fully check to see if manage firmware is running or
    brcmfmac: fallback to mimo_bw_cap for older firmwares
    in devices that do not support bwcap firmware command a fallback
    identity in some way when it is reset.  It may lose its firmware, its
    iwlmvm firmware.
    staging: rtl8192u: Delete 'fwSendNullPacket' function in r819xU_firmware.c
    drivers/staging/rtl8192u/r819xU_firmware.c:109:1: warning: symbol 'fwSendNullPacket' was not declared. Should it be static?
    staging: rtl8192u: make in r819xU_firmware.c some local functions static
    Make some local functions static (firmware_init_param, fw_download_code,
    CPUcheck_maincodeok_turnonCPU and CPUcheck_firmware_ready) and fix
    Fixed the following sparse warnings in r819xU_firmware.c
      CHECK   drivers/staging/rtl8192u/r819xU_firmware.c
    drivers/staging/rtl8192u/r819xU_firmware.c:20:6: warning: symbol 'firmware_init_param' was not declared. Should it be static?
    drivers/staging/rtl8192u/r819xU_firmware.c:32:6: warning: symbol 'fw_download_code' was not declared. Should it be static?
    drivers/staging/rtl8192u/r819xU_firmware.c:159:6: warning: symbol 'CPUcheck_maincodeok_turnonCPU' was not declared. Should it be static?
    drivers/staging/rtl8192u/r819xU_firmware.c:208:6: warning: symbol 'CPUcheck_firmware_ready' was not declared. Should it be static?
    access whilst debugging their firmware.
    access whilst debugging their firmware.
    in the hardware/firmware interface.  In the current code, some parts
    iwlwifi: mvm: disable uAPSD due to bugs in the firmware
    The current firmware advertises support for uAPSD, but
    When a fixed firmware will be available, we will be able to
    iwlwifi: mvm: remove using max_duration in firmware API
    The firmware decided to not implement this API in this way,
    allow the firmware to change how to use this field later.
    In order to debug the firmware, we need to be able to set
    iwlwifi: mvm: send udev event upon firmware error to dump logs
    When the firmware asserts, the driver will dump the firmware
    staging: nokia_h4p: move firmware macros to firmware part
    As the TODO file suggests, move firmware file macros from the header
    file to the file that deals with firmware. In the process also move
    query_variable_info(). Restore it otherwise the firmware will return
    used in the userland firmware download process.
    supporting the old firmware loading process
    staging: comedi: jr3_pci: tidy up jr3_download_firmware()
    This callback function for comedi_load_firmware() first validates that
    the firmware data is the correct format then it writes the data to each
    New firmware do support scan while connected. Enable it.
      relies on a different firmware download protocal than the C2 one. We
    * 1839c7ebd9 "staging/gdm72xx: usb_boot: replace firmware upgrade API"
    * 3afcb91c41 "staging/gdm72xx: usb_boot: replace firmware upgrade API in
    * 9e412a0a58 "staging/gdm72xx: sdio_boot: replace firmware upgrade API"
    staging: rtl8192u: Added in r819xU_firmware_img.c an include to fix a sparse warning
    Fix the following warnings from sparse in r819xU_firmware_img.c
    due to the missing include of r819xU_firmware_img.h
      CHECK   drivers/staging/rtl8192u/r819xU_firmware_img.c
    drivers/staging/rtl8192u/r819xU_firmware_img.c:4:5: warning: symbol 'Rtl8192UsbPHY_REGArray' was not declared. Should it be static?
    drivers/staging/rtl8192u/r819xU_firmware_img.c:7:5: warning: symbol 'Rtl8192UsbPHY_REG_1T2RArray' was not declared. Should it be static?
    drivers/staging/rtl8192u/r819xU_firmware_img.c:158:5: warning: symbol 'Rtl8192UsbRadioA_Array' was not declared. Should it be static?
    drivers/staging/rtl8192u/r819xU_firmware_img.c:284:5: warning: symbol 'Rtl8192UsbRadioB_Array' was not declared. Should it be static?
    drivers/staging/rtl8192u/r819xU_firmware_img.c:326:5: warning: symbol 'Rtl8192UsbRadioC_Array' was not declared. Should it be static?
    drivers/staging/rtl8192u/r819xU_firmware_img.c:329:5: warning: symbol 'Rtl8192UsbRadioD_Array' was not declared. Should it be static?
    drivers/staging/rtl8192u/r819xU_firmware_img.c:332:5: warning: symbol 'Rtl8192UsbMACPHY_Array' was not declared. Should it be static?
    drivers/staging/rtl8192u/r819xU_firmware_img.c:341:5: warning: symbol 'Rtl8192UsbMACPHY_Array_PG' was not declared. Should it be static?
    drivers/staging/rtl8192u/r819xU_firmware_img.c:354:5: warning: symbol 'Rtl8192UsbAGCTAB_Array' was not declared. Should it be static?
    has the right firmware and is in "hba" mode)
    MFI_INIT and IOCTL frames will have high memory addresses, leads to firmware FAULT.
    Don't wait forever for firmware response for internal DCMDs sent from driver
    firmware. Such DCMDs will be posted to firmware with timeout. Timeout is also
       chip reset, driver owns the IO otherwise it is with firmware and can
    before init_firmware during driver probe
       firmware protocol i.e R2H bit set
    firmware.  As part of that process, controller disables ioaccel mode and later
    the user, regardless of settings in controller firmware
    Underlying firmware cannot handle task abort on accelerated path (SSD Smart Path).
    can bypass the RAID stack firmware and do the i/o to the device
    code in the controller firmware.
    [SCSI] lpfc 8.3.45: Fixed driver error messages after firmware download
    Send aborts to the firmware via the request/response queue mechanism.
    [SCSI] qla2xxx: Read capture firmware dump on mailbox timeout for ISP8044 and ISP82XX.
    Allow for the capture of a firmware dump but have a sysfs node
    [SCSI] qla2xxx: Add changes in the IOCB structures to adjust driver source codes to ISPFX00 firmware spec.
    Now that the 2.4 firmware reports the correct number of MSI-X vectors,
    brcmsmac: fix deadlock on missing firmware
    When brcm80211 firmware is not installed networking hangs.
    ("brcmsmac: request firmware in .start() callback")
    callback to not initiate anything unless firmware is installed.
    aggregation is performed only if AMPDU streams in firmware
    As V15 firmware supports VHT rate configuration, we can use this
    During Tx rate configuration, newer firmware V15 expects bitmap
    mwifiex: extract firmware API version number
    The firmware API version number will be used for future patches
    to support different firmware API specs.
    If p54u_load_firmware() fails, p54u_probe() does not deallocate
    that are normally controlled by the FIMC-IS firmware. The FIMC-IS
    The sensor properties required for the ISP's firmware are parsed from
    by the ISP and its own firmware.
          causes the firmware to shut down the PHY.  Fix from Michael Chan.
    the firmware currently available."
    and sta_rc_update() operation. I enabled firmware "STA quick kickout"
    /proc/device-tree symlinks to /sys/firmware/devicetree/base.
    v5: Rename firmware/ofw to firmware/devicetree
    possible with a newer firmware that allows to define the
    Note that this change is compatible with older firmware
    since older firmware will simply ignore the new bit (11),
    stretching bug. It causes to fail xc5000 firmware loading normally at
    [media] drx-j: propagate returned error from request_firmware()
            drivers/media/dvb-frontends/drx39xyj/drxj.c:11711 drx_ctrl_u_code() info: why not propagate 'rc' from request_firmware() instead of (-2)?
    never brought up.  This can cause the firmware to shutdown the PHY
    The fix is to tell the firmware not to shutdown the PHY if there was
    BGN SKU won't scan on 5.2GHz obviously, but the firmware
    Since the firmware has symmetric constraints on the power
    The current firmware doesn't know how to enable power
    Future firmware will support power save on BSS and P2P client
    As the antenna dependent fields depend on the firmware file and not
    New firmware enforce valid values for the quota in D3.
    The values given to the firmware when suspending and using
    Anjali removes a firmware workaround for newer firmware since the number
    "ST1000LM024 HN-M101MBB" with firmware revision "2AR10001".
    we need to also add firmware revision 2BA30001 as it is broken as well.
    the max_antenna_gain we pass to firmware, with zero value.
    Tested with high-speed TCP and UDP traffic on modified firmware that
    Platform dumps from the service processor (via firmware) through sysfs.
      - We add the /sys/firmware/opal/dump directory
        different dump types) to /sys/firmware/opal/dump/initiate_dump
        in /sys/firmware/opal/dump/ with a name of the dump type and ID (in hex,
    We export each log entry as a directory in /sys/firmware/opal/elog/
    redundant waste of a couple cycles it is harmless since firmware returns the
    The current code makes rtas calls for update-nodes, activate-firmware and then
    It also add rtas_busy delay for the activate-firmware rtas call.
    i40e: fix nvm version and remove firmware report
    The driver was reporting when firmware was less than
    for the product and we print the firmware number at
    ASoC: wm_adsp: Split firmware load into smaller chunks
    The firmware files can be quite large and allocating the whole firmware
    high memory load. Ease the requirements slightly by writing the firmware
    Add a firmware call to request platform to resync timebase
    bad ACPI firmware toggling Vbus off and on in quick succession, the port
    x86/efi: Re-disable interrupts after calling firmware services
    Some firmware appears to enable interrupts during boot service calls,
    Some EFI firmware makes use of the FPU during boottime services and
    clearing X86_CR4_OSFXSR by overwriting %cr4 causes the firmware to
    leaving the rest of the bits as the firmware set them.
    the firmware are below the 4GB boundary so that they can be addressed
    The EFI handover code only works if the "bitness" of the firmware and
    the kernel match, i.e. 64-bit firmware and 64-bit kernel - it is not
    the bitness of the firmware we're running on, without requiring any boot
    However, we do reload the firmware's global descriptor table
    the firmware.
    booting a 64-bit kernel on a 32-bit EFI firmware because the size of
    'unsigned long' does not allow the kernel to interact with firmware
    booted with 32-bit EFI firmware.
    rtlwifi: rtl8723ae: rtl8723-common: Copy common firmware code
    This commit copies the common firmware routines into the shared
    two firmware functions. Remove it.
    [media] drx-j: Remove duplicated firmware upload code
    Remove the duplicated firmware upload code that was commented
    download the firmware from userspace.
    This file contains just the firmware load code, that it is also
    [media] drx-j: Split firmware size check from the main routine
    The firmware upload routine is already complex enough. Split the
    first loop that verifies the firmware size into a separate routine,
    [media] drx-j: dynamically load the firmware
    Instead of hardcoding the firmware files together with the driver,
    use request_firmware() way, loading it from userspace.
    The firmware files are placed at:
            http://linuxtv.org/downloads/firmware/#8
    And they'll be latter submitted to linux-firmware git tree.
    converting the driver to load the firmware from an external
    drivers/firmware/efi/efivars.c:230:66: warning:
    drivers/firmware/efi/efi.c:236:27: warning:
    know firmware) we realloc the next power-of-two pages.
    information from firmware, it merely implements the scaffolding for
    serves to hide a firmware bug, and slows down a cpu boot unnecessarily.
    - Try to preserve the firmware modeset config on driver load. And a bit of prep
       - The firmware_class driver's PM notifier doesn't handle the
    Remove firmware framebuffer before initializing hyperv-fb.  Needed
      ASoC: wm8958-dsp: Fix firmware block loading
    Command timeout happens when firmware goes into bad state.
    Currently default Tx buffer size configured to firmware is 2K
    8897 chipsets as per firmware requirements.
    since firmware may generate events during this call; and events need translation
    As per current algorithm used in the firmware, imply Rx BACK
    As currently hardware/firmware don't support A-MSDU, convert broadcast
    Internal firmware roaming is enabled by default. This patch
    makes it possible to disable internal firmware roaming by
    Adding AP firmware command to access BBP
    one place and fixes some firmware bit handling.
    The OPAL firmware functions opal_xscom_read and opal_xscom_write
    then the firmware will have transmitted them as single frames.)
    PM_RESTORE_PREPARE.  The firmware_class driver handler
    ASoC: Intel: sst-firmware: missing curly braces (harmless)
    ASoC: Intel: sst-acpi: Fix Oops in case of missing firmware
    I swear I tested missing firmware in commit e5161d7987f1 ("ASoC: Intel:
    sst-acpi: Request firmware before SST platform driver probing").
    Some firmware calls return errors indicating allocation failures, for
    a BYE message to the firmware, for example.
    Dropped patch "qlcnic: reset firmware API lock during driver load" for further rework.
    with the DSP firmware.
    firmware loading.
    ASoC: wm8958-dsp: Fix firmware block loading
    staging: dgap: Add in-kernel firmware loading support
    This patch adds in-kernel firmware loading support and removes
    support for the original userland firmware loading process.
    * Re-factored firmware minidump template header handling
    qlcnic: Re-factor firmware minidump template header handling
    Treat firmware minidump template headers for 82xx and 83xx/84xx adapters separately,
    [media] get_dvb_firmware: it913x: Remove it9137 firmware files
    Remove it9137 firmware files it9137.txt and it9137 get_dvb_firmware.
    dvb-usb-it9137-01.fw firmware is no longer in use.
    We use the TLV flags as a handshake between the firmware
    and the driver. These flags allow the firmware to advertise
    These values aren't used as the firmware values should be used,
    SST DSPs. This includes suppoprt for DSP boot and reset, DSP firmware module
      ALSA: usb-audio: work around KEF X300A firmware bug
    is received from firmware during sleep handshake due to which
    host and firmware power states go out of sync causing cmd and
    Newer firmware support a new bit in the policy  that allows
    iwlwifi: pcie: stop the firmware when we restart it
    In case the firmware didn't assert but we want to restart
    Tx queues are stuck, we should stop the firmware by
    firmware in these bad scenarios.
    firmware/hardware records it as being asleep, mac80211 will
    we should complain about a firmware bug.
    with single machine driver and same firmware file per platform. It was known
    This patch also changes that DSP firmware name is machine not platform
    ASoC: Intel: Fix sparse warnings for firmware loader
    Sparse gives us the following warnings on sst-firmware.c
      CHECK   sound/soc/intel/sst-firmware.c
    sound/soc/intel/sst-firmware.c:39:34: warning: incorrect type in argument 1 (different address spaces)
    sound/soc/intel/sst-firmware.c:39:34:    expected void volatile [noderef] <asn:2>*dst
    sound/soc/intel/sst-firmware.c:39:34:    got void *
    sound/soc/intel/sst-firmware.c:417:36: warning: incorrect type in argument 1 (different address spaces)
    sound/soc/intel/sst-firmware.c:417:36:    expected void *dest
    sound/soc/intel/sst-firmware.c:417:36:    got void [noderef] <asn:2>*
    sound/soc/intel/sst-firmware.c:430:5: warning: symbol 'sst_block_module_remove' was not declared. Should it be static?
    ASoC: Intel: sst-acpi: Request firmware before SST platform driver probing
    We originally thought to request SST audio DSP firmware during the SST
    platform driver initialization. However plain request_firmware doesn't
    Implementing asynchronous firmware request in SST platform driver
    firmware is missing.
    This is more simple to handle by requesting firmware asynchronously in
    sst_acpi_probe() and register SST platform only after firmware is loaded.
    clarifying that these are not related to firmware file but for platform
    specific extended firmware area reserved by the BIOS.
    ASoC: Intel: Add GFP_KERNEL flag to firmware DMA buffer.
    Add GFP_KERNEL when allocating firmware DMA buffer.
    Some firmware leaves the Interrupt Disable bit set even if the device uses
    Tx performance, but the firmware is buggy and we can't rely on it.
    cxgb4: Query firmware for T5 ULPTX MEMWRITE DSGL capabilities
    Query firmware to see whether we're allowed to use T5 ULPTX MEMWRITE DSGL
    cxgb4: LE-Workaround is not atomic in firmware
    The LE workaround in firmware is not atomic and fw_ofld_connection_wrs must not interleave.
    ARM: tegra: cpuidle: use firmware for power down
    Attempt to invoke the prepare_idle() and do_idle() firmware calls
    to power down a CPU so an underlying firmware gets informed of
    Support the prepare_idle() firmware call, which is necessary to properly
    ARM: firmware: add prepare_idle() operation
    Some firmwares do not put the CPU into idle mode themselves, but still
    happens. Add a prepare_idle() operation to the firmware_ops structure to
    ARM: firmware: enable Trusted Foundations by default
    of_register_trusted_foundations() and the firmware Kconfig used
    The device found on Asus Z87 Expert motherboard requires firmware to work
    imx25 did not work without a firmware previously.
    Provide services for Intel SST drivers to load SST modular firmware.
    block and firmware module manager that can be used with any SST firmware
    ALSA: usb-audio: work around KEF X300A firmware bug
    speakers' firmware apparently locks up, making even PCM streaming
    This vector definition is used by the platform firmware to export the
    NFC: pn544: i2c: Support PN544 C3 secure firmware download
    PN544 C3 firmwares already contain the command frames to be sent, but as
    NFC: pn544: Pass hardware variant information when downloading firmware
    new firmwares. The C2 does a regular firmware download while the C3 uses
    staging: r8188eu: Make firmware buffer persistent
    The present code reloads the firmware file from the disk every time the interface
    re-inits. Change to hold the firmware in memory, and only download to the
    firmware: use power efficient workqueue for unloading and aborting fw load
    firmware load timeout routine and delayed routine for firmware unload.
    firmware: give a protection when map page failed
    firmware: google memconsole driver fixes
    Tested: booted dbg build, verified I could read /sys/firmware/log
    firmware: fix google/gsmi duplicate efivars_sysfs_init()
    and by drivers/firmware/google/gsmi.c gsmi_init().
    [    5.657699] sysfs: cannot create duplicate filename '/firmware/gsmi/vars'
    Tested: booted, checked that /firmware/gsmi/vars was still present and
    Some firmware leaves the Interrupt Disable bit set even if the device uses
    wcn36xx: Cache nv to avoid request_firmware on resume path
    resume. This causes problems on resume since request_firmware is called
    On some wcnss firmwares the start command can take up to 300ms to
    wl18xx: move to new firmware (wl18xx-fw-3.bin)
    firmware (due to api changes), so use bump
    the firmware name as well.
    detection) and PHYERR events from firmware, when firmware may
    firmware mismatch issues.
    Bluetooth: Add firmware update for Atheros 0cf3:311f
    The device is not functional without firmware.
    The device without firmware:
    The device with firmware:
    Bluetooth: Enable Atheros 0cf3:311e for firmware upload
    The device will bind to btusb without firmware, but with the original
    buggy firmware device discovery does not work. No devices are detected.
    Device descriptor without firmware:
    with firmware:
        This new firmware fixes following bugs:
         1. HW attention appears and traffic stops when iSCSI firmware tries to
    New version of the PCU firmware supports two new commands:
    brcmfmac: enable firmware console logging functionality
    fixed. Later it should be set via the firmware.
    We also check that busses configured by the firmware fit into their parents
     - arm/firmware.txt was added by commit 7366b92a77fc ("ARM: Add
       interface for registering and calling firmware-specific operations")
    responsibility of the bootloader/firmware to set this bit per core - it is
    done here in Linux as last resort in case of bad firmware.
    it was enabled, and the firmware disagreed. We ended up making the
    firmware unhappy. I also fix the station table in AP mode and fix the
    On Gen2 firmware, Hyper-V does not emulate the PCI bus. However, the MMIO
    staging: fpgaboot: Xilinx FPGA firmware download driver
    This driver downloads Xilinx FPGA firmware using gpio pins.
    It loads Xilinx FPGA bitstream format firmware image and
    firmware assert.
    workqueue, because sending firmware command require us to sleep, but
    ath10k:  Print out firmware feature bits from IE.
    Aids in understanding excactly what a firmware is
    provide this from firmware does not yet support any kind of generic card.
    take into account the firmware limitations.
    If the driver detects old firmware, we disable support for
    store the latest command sent to the firmware.
    The firmware doesn't allow per-vif beacon filtering: we can
    in drv->firmware_name by setting a maximal length to the
    iwlwifi: mvm: support multiple firmware sections
    the firmware. This means that we need to add a state to
    firmware - the driver needs to send a list of commands
    to the firmware before entering this state. Wake up from
    d0i3 also requires a few commands to the firmware.
    This happens only when the firmware asserts, and only when
    interface in the firmware, this prevents those bindings from
    As older firmware doesn't do anything with the max_duration field
    and ignores it completely, there's no need for a firmware flag.
    iwlwifi: 7000: warn about old firmware
    iwlwifi: pcie: fix secure section / dual cpu firmware loading
    Newer firmware will support uAPSD clients in AP/GO mode, so complete
    For older firmware, this doesn't change anything as it ignores the
    fields used by the new firmware, and we only advertise uAPSD support
    when the firmware does.
    think that A band is supported while the HW / firmware
      [media] drxk: remove the option to load firmware asynchronously
    the firmware. This led to an firmware assert when we remove
    iwlwifi: mvm: print the version of the firmware when it asserts
    This can be useful to be able to spot the firmware version
      dma: imx-sdma: Assign a default script number for ROM firmware cases
    system will be handled transparently by firmware if they need software
      firmware/google: drop 'select EFI' to avoid recursive dependency
    firmware/google: drop 'select EFI' to avoid recursive dependency
    The other way is using the firmware interface.
    This patch enables dynamic LED MUX configuration when the firmware is loaded.
    used to show the firmware is up and running. Set "timer" trigger for
      firmware, which is what is used on many of the commercial Nvidia Tegra
    fs/proc/proc_devtree.c: remove empty /proc/device-tree when no openfirmware exists.
    openfirmware.  This results in an empty /proc/device-tree existing.
    firmware/dmi_scan: generalize for use by other archs
    firmware still allows) then we may write a descriptor pointer
    ath10k handles UAPSD completly in the firmware.
    ath10k: enable firmware STA quick kickout
    When that happens, the firmware sends WMI_PEER_STA_KICKOUT_EVENTID event to the
    the firmware.
    Match firmware specification.
    Output structs are expected by firmware to be cleared when a command is called.
    Some firmware images may be large (64K), so using kmalloc memory is
    drivers/firmware/memmap.c: use memblock apis for early memory allocations
    PORT_RESET MC command was NOP in the ef10 firmware hence we are using
       - Drop cs46xx DSP blobs, using firmware loader now
     - CPU suspend support on top of PSCI (firmware Power State Coordination
    Jesse provides fixes for a compiler warning, firmware workaround,
    interfaces using Intel XL710 adapter firmware APIs.
    class enabled by firmware for any given PF. The driver would
    query the firmware for the traffic classes that are enabled for
    The driver registers and listens to firmware events that may
    firmware. The firmware runs DCBX in willing mode and configures
    By default in absence of any DCBX; firmware would configure the
    configuring DCB using firmware APIs.
    i40e: Change firmware workaround
    a better understanding of what firmware is returning in the MSI-X
      values are overwriting the firmware ones while other should not be set
    Bartosz added a runtime firmware feature flag to disable P2P. Our 10.1
    firmware branch doesn't support P2P and ath10k can now disable that. He
    And I added firmware debug log to help the firmware engineers."
    There were changes done in firmware to address this.
    In the original HID sensor hub firmwares all Named array enums were
    I think the most likely cause for this is a firmware bug
    details from the firmware. However, the escan uses a dynamically
    brcmfmac: rework firmware download code
    The firmware download code has been restructured so the reset vector
    for downloaded firmware and nvram in debug mode.
    firmware assings it for IBS to 0 too. The kernel needs to reprogram
    cpu-to-node mappings that we got from the firmware during boot, may no longer
    and instead queries the firmware for the cpu-to-numa relationships and uses
    1. During boot, the kernel gets the cpu-to-node mappings from the firmware
       CPU hotplug ignores the new mappings, it queries the firmware and tries to
    Presuming we are running on recent enough firmware that supports the
    traffic from.  We introduce a new firmware command FLOW_STEERING_IB_UC_QP_RANGE
    [media] drxk: remove the option to load firmware asynchronously
    The option to load firmware asynchronously were added due to
    So, we end by only letting the firmware to be loaded syncronously
    b43legacy: Fix unload oops if firmware is not available
    The asyncronous firmware load uses a completion struct to hold firmware
    As a result, unloading the driver when firmware is not available causes an oops.
    b43: Fix unload oops if firmware is not available
    The asyncronous firmware load uses a completion struct to hold firmware
    As a result, unloading the driver when firmware is not available causes an oops.
    It is u64 data received from firmware. Little endian to cpu
      values are overwriting the firmware ones while other should not be set
    of the firmware running on the MegaAVR microcontroller use a different
    [media] em28xx: fix xc3028 demod and firmware setup on DVB
    dma: imx-sdma: Assign a default script number for ROM firmware cases
    i.MX series have inner firmware in its ROM code: when SDMA isn't provided
    any firmware from Kernel or rootfs, the default inner ROM firmware will be
    Thus this patch adds a default script number when no external firmware being
    their platform without any firmware.
    underrun issue, which is only included by SDMA firmware version 2. However,
    there are quite a lot people still using version 1 or default firmware in
    the ROM code of SoC while these two kinds of firmwares do not support the
    version 1/2 or inner ROM firmware.
    On PA-Semi firmware, the instance-to-package callback doesn't seem
    Thus caused the firmware to load values around 0 (physical) internally
      ACPI / IBFT: Fix incorrect <acpi/acpi.h> inclusion in iSCSI boot firmware module
    via I2C, and other I2C operations may be happening (firmware
    In the latest firmware the clear_pxe_mode function will use the
    device structure to represent a subsystem.  However, firmware tends to
    It can be a problem when a pattern is loaded via the firmware interface.
    LP55xx common driver has already locked the mutex in 'lp55xx_firmware_loaded()'.
    hardware / firmware issues that are hard to hit.
    ath10k: add debugfs file to control firmware dbglog
    Send firmware WMI debug logs to user space for further processing.
    10.X firmware support up to 127 peers, non-AP centric firmwares 16.
    Currently ath10k is not using STA KICKOUT firmware functionality.
    [ 3675.930940] xc2028 19-0061: Device is Xceive 3028 version 1.0, firmware version 2.7
    wl1251: add nvs file name to module firmware list
    Add nvs file name to module firmware list
    The firmware doesn't support per packet encryption selection, so disable hw
    firmware, whereas the usual JOIN command seems to transmit some frames at
    firmware level.
    another firmware bug mentioned in the TI WLAN driver, which is described as
    can't send probe requests. I think the firmware somehow also tries to
    cleared, on power-on, or firmware reset.  This should help limit the need for
    rebooting a customer machine if something goes wrong on a firmware update or
    firmware_class: Fix the file size check
    We expect to read firmware blobs with a single call to kernel_read(),
    firmware loader: Add sparse annotation
    drivers/base/firmware_class.c:230:9: warning: context imbalance in '__fw_free_buf' - unexpected unlock
    This fixes a potential deadlock in case of a firmware
    ALSA: hda - Add consistent tag names for firmware patch
    Some tags used in the firmware patch file are inconsistent with hwdep
    sysfs file names, such as, the firmware patch takes [hint] tag while
    ALSA: hda - firmware patch code cleanup
    that the hardware waits to make sure that the firmware is ready as well
    firmware.  Provides a fix while in MFP mode where resources are
    code, so the firmware would process the ring exactly once and then fail.
    as we will trigger firmware to init the AQ again. In this case
    firmware will lose the information about the AQ Rx tail position
    i40e: update firmware api to 1.1
    The firmware's AdminQ interface has matured a little, so update the
    This patch determines support for HT40 using a firmware query that
    is limitation is imposed by the firmware.
            drivers/firmware/efi/Kconfig
    In case of CSR devices, the bcdDevice revision contains the firmware
    Some ACR122 firmwares seem to send 0 length data frames. Before using
    are set by the firmware and should not be modified by the driver. Others
    most user and system mode configurations to the firmware defaults.
    On ASF enabled devices where the mgmt firmware runs on the application
    link change event and the ASF firmware clearing the link changed bit in
    The driver will attempt to load firmware from userspace and compare
    older firmware in the devices ROM.
    The firmware needs to be stopped quickly (100ms) after the
    firmware to access the radio registers which would lead to
    Before this change, we would kill the firmware only when
    This is not relevant if the current firmware is INIT
    firmware since that firmware can run while in RFKILL.
    Under very specific circumstances, the firmware might
    Since the firmware relies on fifo / ac mapping - this led
    to wrong behavior. E.g. the firmware sends beacon with the
    firmware gates the clockby default.
    when trying to use G2D on systems on which firmware gates this clock
    ARM: tegra: Trusted Foundations firmware support
    Add support for the Trusted Foundations secure-mode firmware, as found
      ARM: tegra: set CPU reset handler using firmware
    drm/radeon: re-order firmware loading in preparation for dpm rework
    (meant for allocation by firmware in case of hash collisions) for filter
    Introducing a new directory /sys/firmware/efi/runtime-map just like
    /sys/firmware/memmap. Containing below attribute in each file of that
    /sys/firmware/efi/{fw_vendor,runtime,config_table} because kexec kernels
    We do use memcpy to avoid access alignment issues between firmware and
    Plantronics Gamecom 780 headset has a firmware problem, and when the
    This used to be the default, but at some point the firmware guys
    Use the port GUID read from the firmware to identify the physical port.
    drivers/firmware/efi") results in CONFIG_EFI being enabled even
    firmware version 3.2.3.0
    switch side. Mode is not passed to BFA from firmware when the test is
    enabled, driver can receive PLOGI from the target before firmware
    layer on bfa or firmware initialization failure and subsequently failure
    This patch includes change to enable firmware patch simplication
    independent patch release for firmware. Prior to 3.2.3, releasing a
    patch fix for firmware requires changes to bfa, to use new firmware
    images. But with these changes, if the new firmware is flashed on to the
    firmware after checking the patch release byte in the firmware version.
    [SCSI] qla2xxx: Add changes to obtain ISPFX00 adapters product information in accordance with firmware update.
    [SCSI] qla2xxx: Honor execute firmware failures.
    If the execute firmware command fails we do not stop the rest of the
    # echo disable > /sys/firmware/acpi/interrupts/gpeXXX
    drivers/firmware/dcdbas.c suggests that SMM accesses must
    Code derived from drivers/firmware/dcdbas.c.
      staging: comedi: drivers: fix return value of comedi_load_firmware()
    mwifiex: download per country tx power table to firmware
    in device tree for that country is downloaded to firmware.
    mwifiex: download cal-data from device-tree to firmware
    device tree. Add cal-data downloading from device tree to firmware.
    mwifiex: send regulatory domain info to firmware only if alpha2 changed
    There is no need to send domain info to firmware in case of "00" or
    On suspend/resume, firmware will restart and gpios
    Bfa driver crash is observed while pushing the firmware on to chinook
    initialized only for CT2 ASIC based cards after request_firmware().
    request_firmware and instead bfi_image_cb is initialized as it is the
    This patch includes changes to read the right firmware for quad port chinook.
    multi-buffer RX, firmware patch simplification, enhancements for RX filters,
    RX processing changes, bug fixes and updates the firmware version to v3.2.3.0.
    This patch includes change to enable firmware patch simplication feature.
    release for firmware. Prior to the 3.2.3.0 firmware, releasing a patch fix for
    firmware would require changes to bna driver, to use new firmware images.
    However with these changes, if the new firmware is flashed on to the Adapter,
    the driver will use the new firmware after checking the patch release byte in
    the firmware version.
      qlcnic: Allow firmware dump collection when auto firmware recovery is disabled
    o Added patch to allow capturing of dump, when auto recovery is disabled in firmware.
    qlcnic: Allow firmware dump collection when auto firmware recovery is disabled
    o Allow driver to collect firmware dump, during a forced firmware dump
      operation, when auto firmware recovery is disabled. Also, during this
    staging: comedi: drivers: fix return value of comedi_load_firmware()
    Some of the callback functions that upload the firmware in the comedi
    Current firmware doesn't handle well uAPSD in P2P Client.
    When it will be fixed, the firmware will set a TLV flag to notify
    makes more sense and WARN when we want to run the INIT firmware while
    Send firmware a Smart FIFO Configuration host command to allow
    drm/i915: kick firmware fbs even when i915 fbdev is disabled
    Otherwise we don't kick out firmware framebuffers like vesafb and
    When we insert an filter, the firmware checks that the given RX queue
    implicitly (by calling firmware implementations like PSCI) or explicitly
    This new firmware feature flag allows to turn off P2P interface type.
    the firmware, don't set the pointer to NULL but to -ENOENT
    in SDMA firmware version 2. This script would allow SSI use dual
    dma: imx-sdma: Add sdma firmware version 2 support
    On i.MX5/6 series, SDMA is using new version firmware to support SSI
    7. Log all unexpected errors returned by firmware, from Edward Cree.
    aer_set_firmware_first() searches the HEST for an error source descriptor
    ARM: tegra: set CPU reset handler using firmware
    Use a firmware operation to set the CPU reset handler and only resort to
    up directly and need to ask the firmware to do it.
    Register the firmware operations for Trusted Foundations if the device
    the ARM firmware API. Current features are limited to the ability to
    We are passing pointers to the firmware for reads, we need to properly
    In case of certain hardware and firmware errors it can be useful to
    The EF10 firmware can optionally insert RX timestamps in the packet
    We query the firmware for the clock format and corrections at run-time.
    The MC firmware will return error MC_CMD_ERR_ENOSPC if filter
    done by firmware that runs before the guest.  Also, it only affects AMD
    an enhanced error decoding functionality in the firmware, i.e. eMCA.
    USB: emi62: Provide the correct bitstream firmware
    Commit b8e24bfabb03 ('emi62: use request_firmware()') made
    contained the same bitstream but different firmware).
    firmware, from Robert Stonehouse.
    they're also broken on some 32-bit firmware, including the Dell Venue.
    Sometimes fixing firmware issues feels like plugging holes in a leaky boat.
    Also use the const qualifier on the firmware name strings.
    This is similar to the Terratec H7. It works with the same az6007 firmware as
    the former, however the drx-k firmware of the H7 will NOT work. Hence use
    a different firmware name. The firmware does not need to exist as the one in
    driver couldn't find the h7 drx-k firmware...).
      open-firmware 'dumb' framebuffer"
    devices as they are claimed by the firmware running in the secure mode.
    mwifiex: use little-endian variables in firmware structures
    The firmware expects the command structure members in little
    For now, the firmware doesn't really use the field, but
    firmware: dmi-sysfs: Remove "dmi" directory on module exit
      sysfs: cannot create duplicate filename '/firmware/dmi'
    firmware: dmi-sysfs: Don't remove dmi-sysfs "raw" file explicitly
    "/sys/firmware/dmi/entries/19-0", removes the directory and all its
    firmware: Suppress fallback warnings when CONFIG_FW_LOADER_USER_HELPER=n
    The commit [3e358ac2bb5b: firmware: Be a bit more verbose about direct
    firmware loading failure] introduced a new warning message about
    firmware: Use bit flags instead of boolean combos
    microcode: Use request_firmware_direct()
    Use the new helper, request_firmware_direct(), for avoiding the
    lengthy timeout of non-existing firmware loads.  Especially the Intel
    firmware: Introduce request_firmware_direct()
    When CONFIG_FW_LOADER_USER_HELPER is set, request_firmware() falls
    seconds) for non-existing firmware.  This is unacceptable for the
    drivers like microcode loader where they load firmwares optionally,
    This patch provides a new helper function, request_firmware_direct().
    It behaves as same as request_firmware() except for that it doesn't
    Without CONFIG_FW_LOADER_USER_HELPER=y, request_firmware_direct() is
    just an alias of request_firmware(), due to obvious reason.
    to release_firmware() down a couple lines to fix this.
    We should be able to override firmware-provided parameters with in-kernel
    This is an implementation of the driver access to a new firmware
    ACPI / IBFT: Fix incorrect <acpi/acpi.h> inclusion in iSCSI boot firmware module
    References: http://www.microsoft.com/whdc/system/platform/firmware/ibft.mspx
    The MC firmware is cooperatively multitasking and its scheduler will
    expected maximum time.  This can be useful for firmware development
    a flash firmware update.  Keep using the single operation, but
    firmware on the SFN[56]322F boards may not be able to provide
      about support and then firmware has been choking on the commands).
    i40e: firmware version fields offsets update
    firmware unhappy since the firmware isn't ready for it yet. WE also
    work with the new firmware that will be out soon hopefully.
    rtlwifi: rtl8192cu: Add new firmware
    new firmware for these chips. The code try for the new file, and fall back to
    the original firmware if the new file is not available.
    libertas/sdio: make sure card enters power-off when firmware is loaded.
    Since firmware loading became async it is possible that if_sdio_finish_power_of
    In order to support concurrent adapter firmware download
    the duration of the adapter firmware update, which can take
    register with firmware to handle machine check exception.
    firmware to decode MCE error details and handover the high level info to OS.
    data from host driver to firmware. They do have EEPROM but still
    incorrect firmware version check. This patch series modifies the firmware
    cxgb4: Add new scheme to update T4/T5 firmware
    not defined by the firmware.
    In the original HID sensor hub firmwares all Named array enums were
    brcmfmac: move firmware event related defines to fweh.h
    related to events received from the firmware. Those are
    brcmfmac: move firmware command code definitions
    Move the command codes to the firmware interface module as
    brcmfmac: move firmware related structures to fwil_types.h
    The firmware control interface is provided by fwil source file, but
    a number of structures used to communicate with the firmware still
    brcmfmac: provide firmware version in ethtool driver info
    Knowing the firmware version is pretty useful information when
    brcmfmac: add firmware and nvram file name for bcm4339
    Add firmware/nvram file name for bcm4339 so fmac can actually be functional with
    on firmware features so it is not possible to provide it in the
    firmware and i915 request_symbol() stuff, we just need to enable it
    Windows driver will enable ALDPS function, but linux driver and firmware
    commands on the device's behalf. This can lead to adapter firmware hangs
    If the next seqno returned by the firmware is 0, we return an error
    iwlwifi: pcie: stop sending commands to dead firmware
    firmware is in bad condition and will be reset soon.
    Since the firmware will be reset, there is no good
    iwlwifi: bump required firmware API version for 3160/7260
    A new firmware is coming out soon with new APIs.
    To make sure that this new firmware won't be loaded on old
    in firmware doesn't have a valid ieee80211_sta pointer.
    to the STA in firmware that represent the AP.
    This feature isn't supported by the firmware (yet).
    feature is enabled in the firmware.
    that value back before loading the firmware. Since
    calibrations are notification from firmware and not Rx
    packets, this doesn't change anyway - the firmware will
    /sys/firmware/acpi/tables is of zero size:
    $ LANG=C ls -ld /sys/firmware/acpi/tables/*
    -r-------- 1 root root 0 Nov 19 09:48 /sys/firmware/acpi/tables/APIC
    -r-------- 1 root root 0 Nov 19 09:48 /sys/firmware/acpi/tables/BOOT
    -r-------- 1 root root 0 Nov 19 14:25 /sys/firmware/acpi/tables/DSDT
    -r-------- 1 root root 0 Nov 19 14:25 /sys/firmware/acpi/tables/FACP
    -r-------- 1 root root 0 Nov 19 14:25 /sys/firmware/acpi/tables/FACS
    -r-------- 1 root root 0 Nov 19 14:25 /sys/firmware/acpi/tables/MCFG
    -r-------- 1 root root 0 Nov 19 14:25 /sys/firmware/acpi/tables/SRAT
    drwxr-xr-x 2 root root 0 Nov 19 09:48 /sys/firmware/acpi/tables/dynamic/
    $ acpidump -f /sys/firmware/acpi/tables/SRAT
    Could not get input file size: /sys/firmware/acpi/tables/SRAT
    $ LANG=C ls -hld /sys/firmware/acpi/tables/*
    -r-------- 1 root root  94 Nov 19 16:45 /sys/firmware/acpi/tables/APIC
    -r-------- 1 root root  40 Nov 19 16:45 /sys/firmware/acpi/tables/BOOT
    -r-------- 1 root root 58K Nov 19 16:55 /sys/firmware/acpi/tables/DSDT
    -r-------- 1 root root 244 Nov 19 16:55 /sys/firmware/acpi/tables/FACP
    -r-------- 1 root root  64 Nov 19 16:55 /sys/firmware/acpi/tables/FACS
    -r-------- 1 root root  60 Nov 19 16:55 /sys/firmware/acpi/tables/MCFG
    -r-------- 1 root root 168 Nov 19 16:45 /sys/firmware/acpi/tables/SRAT
    drwxr-xr-x 2 root root   0 Nov 19 16:55 /sys/firmware/acpi/tables/dynamic/
    $ acpidump -f /sys/firmware/acpi/tables/SRAT
    toggle, even for radios not controlled by the hw-switch (yeah firmware bugs).
    ath10k: show hardware and firmware info prints only once
    it's easier to show this information only during first firmware boot
    ... and load from the external firmware files.
    The firmware binary blobs in cs46xx driver have been in a gray zone
    and awaiting to be deleted, cause the firmware to believe that they are being used.
    secondary MAC addresses, the firmware returns a MAC address Collision error.
    The driver currently requests the firmware to enable rx_interface options
    This could cause commands to firmware to fail.
      x86/microcode/amd: Tone down printk(), don't treat a missing firmware file as an error
      [SCSI] esas2r: Cleanup snprinf formatting of firmware version
      DMA-API: firmware/google/gsmi.c: avoid direct access to DMA masks
    x86/microcode/amd: Tone down printk(), don't treat a missing firmware file as an error
    for missing firmware files.
    has been submitted to kernel-firmware repo yet resulting in
    ath10k: guard against CE corruption from firmware
    In case firmware crashes it may report CE
    firmware indication bit to be set. Prerequisite
      Move cper.c from drivers/acpi/apei to drivers/firmware/efi
         drivers/firmware/efi/ and sharing it with ARM.
         Interface) capable firmware
      drm/radeon: update firmware loading for hawaii
    mlx5: Support communicating arbitrary host page size to firmware
    Connect-IB firmware requires 4K pages to be communicated with the
    the command that reports back to firmware that pages can't be
    also a few other fixes that are relevant for the new firmware that has
    drm/radeon: update firmware loading for hawaii
    This just updates the firmware loading functions
    to look for the appropriate firmware files for
    If no mode can be found over DDC or the firmware we just ignore LVDS.
            drivers/media/tuners/tuner-xc2028.c:651:1: warning: 'load_firmware' uses dynamic stack allocation [enabled by default]
    devices, but the firmware load time is already good enough. Anyway,
    the buffer size at load_firmware().
    Some firmware doesn't initialize initial backlight level to a proper
    firmware begins to fill _BCL with values from 0 to 100, now 0 becomes
    When testing if the firmware's initial value is valid, we should use
    firmware.
    Do not load the Intel pstate driver if the platform firmware
    HP BIOS has several power management modes (firmware, OS-control and
    will be loaded. When the customer chooses the firmware power
    have their firmware power management. Vendors should make sure their
    firmware power management works properly, and they can go for adding
    The patch supposes that the underly firmware has built the RID to
    to PE#0. The reserved PE# is being exported by firmware by device
    - some regressions might be possible if there are some unknown firmware
    this driver only works around a nice firmware bug present in E3131, which
     * IBSS support (though due to a small bug it requires new firmware)
    "Bartosz added support to ath10k for our 10.x AP firmware branch, which
    firmware branch as well just like before, ath10k detects runtime what
    firmware is used. Unfortunately the firmware interface in 10.x branch is
      digital layer in firmware, but others have more basic functionalities
    net/mlx4_core: Fix reg/unreg vlan/mac to conform to the firmware spec
    to pass the port number. The firmware spec specifies that the port number
    o 83xx and 84xx firmware is capable of multiple Tx queues.
    Most setup errors are ignored to ensure maximum firmware
    we filter out some of the notifications sent us by the firmware. If
    ASoC: wm_adsp: Print out the firmware version
    ASoC: wm_adsp: Release firmware on memory allocation failure
       handling. Move it to drivers/firmware/efi/cper.c to reflect this
    sfc: Fix DMA unmapping issue with firmware assisted TSO
    When using firmware assisted TSO, we use a single DMA mapping for
    Move cper.c from drivers/acpi/apei to drivers/firmware/efi
    this code is under drivers/firmware/efi/
    If hardware (or firmware) detects palm on the surface of the device it does
    DMA-API: firmware/google/gsmi.c: avoid direct access to DMA masks
      - Create below sysfs files under /sys/firmware/opal
    Create /sys/firmware/opal directory. We wil use this
    interface to fetch opal error logs, firmware update, etc.
    for KSEG0 by the power-on firmware to reliably indicate an MC processor.
    is linked to a cached load address so the firmware has to use the correct
    OTOH if the firmware chooses to use either the non-coherent cached or the
    iwlwifi: warn if firmware image doesn't exist
    If the firmware image that we attempt to load doesn't
    actually exist we have a broken firmware file or other
    in firmware doesn't have a valid ieee80211_sta pointer.
    to the STA in firmware that represent the AP.
    Don't use UAPSD when the firmware doesn't support it.
    parameters to some firmware recommended default values. This enables
    With the new firmware, there are not anymore four register sets,
    - Function to load firmware required by VPDMA. VPDMA requires a firmware
      for it's internal list manager. We add the required request_firmware
      apis to fetch this firmware from user space.
      function will take care of loading VPDMA firmware and returning a
      thread info pointer before calling a firmware function and then to
      are being clobbered by the firmware call, and thus we failed to bring
    CPU, the PDC_PSW firmware function to enable WIDE (=64bit) mode is called.
    It's documented that this firmware function may clobber various registers, and
    turned zero after the firmware call.
    before the firmware call and restoring it afterwards.
    [SCSI] esas2r: Cleanup snprinf formatting of firmware version
    are converted to little endian and the firmware version read from
    Fatal dump in case of firmware failure.
    Somehow older areca firmware versions have issues with
    scsi_get_vpd_page() and a large buffer, the firmware
    firmware versions (<1.49 for my controller).
    Fixes a regression with areca controllers and older firmware versions
    sendtarget ram index as soon as firmware is done with discovery,
    The worse thing is that firmware loader is broken by this patch,
    and user space application can't write to firmware bin file any more
    because both firmware loader and drivers can't know at advance how
    large the firmware file is and have to set its initialized size as
      [media] tda10071: change firmware download condition
    ath10k: early firmware event indicated
    10.1.389 firmware has some differences in
    while main firmware branch was unnaffected.
    If firmware crashes during FW probing it would try
    firmware's byte-swapping would garble the data; clarify this in the
       - fix a next-gen SGI/UV hw/firmware enumeration bug"
    rt2x00: rt2800pci: use separate firmware callbacks for SoC devices
    Use empty firmware callbacks for SoC devices because those
    don't require firmware.
    libertas: move firmware lifetime handling to firmware.c
    Previously, each bus type was responsible for freeing the firmware
    firmware into firmware.c so that it's done once and correctly, instead
      digital layer in firmware, but others have more basic functionalities
    o fixed firmware dump collection logic to skip unknown entries.
    qlcnic: Skip unknown entry type while collecting firmware dump
    o Allow collecting the firmware dump of halted firmware when auto
    The activity grading indication from the firmware should
    The firmware always expects the Coex Mode to be set.
    Moreover, the firmware expects bit 0 is the valid bits to
    a result, the firmware understood that the BT Coex was
    to reuse our intel-mid code for platforms that supports firmware
    operation request by firmware".
    Some APs (notably a Sitecom WL-153 v1 with firmware 1.45) are sending
    QoS parameters are actually uploaded to the firmware.
    the end of the struct after ->firmware_rev.
    Return -EOPNOTSUPP if given parameter is not supported by firmware.
    10.X firmware does not support WMI_VDEV_PARAM_TX_ENCAP_TYPE.
    [media] em28xx: MaxMedia UB425-TC offer firmware for demodulator
    Downloading new firmware for DRX-K demodulator is not obligatory but
    usually it offers important bug fixes compared to default firmware
    the firmware, but in that case it will print warning to system log
    to tip user he should install firmware.
      mlx5: Fix error code translation from firmware to driver
      IB/mlx5: Fix opt param mask according to firmware spec
    staging: r8188eu: Convert driver to use external firmware
    As originally submitted, this driver acquired its firmware from data
    into a binary file that has been accepted into the linux-firmware git
    repo as commit ffc47f1 entitled "rtlwifi: Add new firmware files for
    the firmware data from the source. The TODO list is also updated.
    [media] siano: Use the default firmware for Stellar
    The Stellar firmware load routine is different. Improve it to use
    the default firmware, if no modprobe parameter tells otherwise.
    but after firmware load, they get a different USB ID.
            smsusb1_load_firmware: sent 38144(38144) bytes, rc 0
            smsusb1_load_firmware: read FW dvbt_bda_stellar_usb.inp, size=38144
    iwlwifi: support Signed firmware image and Dual CPUs
    Support Signed firmware based on code signing system (CSS)
    At the firmware level, IBSS support has similar programming
    the firmware should support it though.
    iwlwifi: don't WARN on bad firmware state
    When we restart firmware and it is marked as not alive, we can still get
        iwlwifi: don't WARN on host commands sent when firmware is dead
    In certain corner cases in the firmware implementation, powersave
    transitions can cause the firmware to miss the fact that commands
    the commands really are in the queue, try to poke the firmware in
    connection to the AP because the firmware didn't give
    us the right information. Since the firmware API has
    POWER_SAVE_ENABLE debug option. Send this command when firmware is
    only way to recover since the driver and the firmware might
    which is used to hold the retrieved error log from firmware. The
    log from firmware. It's helpful for debugging.
    net: wireless: wl1251: update firmware path
    TI firmwares are located under ti-connectivity
    find and load firmware blob.
    https://www.codeaurora.org/cgit/external/hisense/platform/vendor/qcom-opensource/wlan/prima/tree/firmware_bin?h=8130_CS
    mlx5: Fix error code translation from firmware to driver
    IB/mlx5: Fix opt param mask according to firmware spec
    The layout of struct health_buffer was not according to firmware
    On a single ported Connect-IB, its possible for the firmware to issue
    1. Make sure wqe_cnt does not exceed the limit published by firmware.
    ath10k: remove unneded semicolon from ath10k_core_fetch_firmware_api_n()
    generated by rbtree cache syncs or firmware downloads and essentially all
    If the firmware is not builtin and userspace is not yet running, we can
    stall the boot process for a minute whilst the firmware loader times
    leaking requested firmware.
    just too much to support it. Michal added support for the new firmware
    * add support for firmware version 999.999.0.636 (Michal)
    * firmware htt statistics support (Kalle)
    firmware doesn't consider us fully trusted.  So, abort probing unless
    ath10k: enable 10.x firmware branch support
    FW IEs what firmware variant we deal with, turn on support
    for 10.x firmware branch in ath10k_wmi_attach().
      [insert standard rant about firmware writers], bAlternateSetting
    These are only provided if the MC firmware has the
    SDIO firmware download routines uses one name for firmware file
    Bus layer need to share sk_buff::cb with firmware signal feature. Reserve
    brcmfmac: sync firmware event list
    Update event list to keep sync with firmware development. Use calculated event
    The firmware API for IPv6 NDP/NS offload has changed again.
    no longer ignored by the firmware.
    from the firmware, we reset the rssi all the time which
    iwlwifi: mvm: BT Coex - use data from firmware
    from the the firmware and not hard coded.
    Add support for scheduled scan according to firmware support.
    Newer firmware don't clean the RFKILL interrupt in APMG, do
    If we forget to do so, we can't send HCMD to firmware while
    iwlwifi: mvm: split ADD_STA and ADD_STA_KEY in firmware API
    Add support for new station management firmware API. The old
    When firmware restart happens, the timers are obviously reset and
    the new firmware has no synchronisation with the AP as we program
    timings to the pre-restart values. The firmware should attempt to
    iwlwifi: mvm: use CTS to Self if firmware allows it
    Newer firmware fixed a bug that prevented to use CTS to
    fixed. Enable the feature for these firmwares only.
    iwlwifi: mvm: query firmware for non-QoS seqno
    query the firmware when suspending, that's more efficient. As
    [media] tda10071: change firmware download condition
    Reading firmware status register to detect whether firmware is
    likely set by firmware itself which means it could not contain
    reasonable values until firmware is up and running. Usually it
    was considered "firmware is up and running" by the driver and
    firmware loading was skipped leaving device to non-working state.
    count whether firmware is loaded or not.
    This is done by sending a host command to the firmware, but
    firmware. The firmware will send SCAN_COMPLETE_NOTIFICATION
    If the scan cannot be aborted, it is because the firmware
    iwlwifi: don't WARN on host commands sent when firmware is dead
    The D3 firmware image doesn't support uAPSD, so disable it.
    /lib/firmware/mrvl/sd8797_caldata.conf
    The data will be downloaded to firmware during initialization.
    ath10k: implement firmware IE container support
    firmware supports. Also it can embed more than one image so updating firmware
    is easy, user just needs to update one file in /lib/firmware/.
    The firmware API 2 or higher will use the IE container format, the current API
    files are named as firmware-2.bin (which contains both firmware and otp images)
    and API 1 files are firmware.bin and otp.bin.
    ath10k: store separate pointers for firmware data
    Needed for firmware IE formatted images.
    net: qmi_wwan: add Telit LE920 newer firmware support
    Newer firmware use a new pid and a different interface.
    request_firmware_nowait fails.
    Amitkumar Karwar fixes a firmware hang caused by too much header data
    firmware timeouts on USB; and a fix for a NULL pointer dereference.
    firmware track, reflact that to not have a mismatch in
    Both firmwares (main and 10.x) have different set of vdev
    ath10k: add TARGET values for 10.x firmware
    Introduce all TARGET specific values for 10.x firmware.
    Some of them are common for both firmwares we will support,
    main and 10.x firmwares we need to split the wmi_init_cmd
    of 10.X firmware.
    10.X firmware can request a memory pool from host to offload
    Since the both firmwares we are going to support,
    ath10k: implement WMI events handling frame for both firmwares
    differences in the new AP firmware.
    host-firmware WMI interface for 10.X FW branch.
    WMI API in order to support new firmware (from so
    each of the firmwares, registered upom wmi init.
    firmware: Be a bit more verbose about direct firmware loading failure
    The direct firmware loading interface is a bit quiet about failures.  Failures
    that occur during loading are masked if firmware exists in multiple locations,
    logged, so in the event that you expect the direct firmware loader to work (like
    of firmware initiated reset
    appended for USB packets. This sometimes leads to a firmware hang,
    handshake between driver and firmware.
    Like SDIO interface, PCIe also needs to go through firmware power
    p54usb: fix leak at failure path in p54u_load_firmware()
    If request_firmware_nowait() fails in p54u_load_firmware(),
    p54u_load_firmware_cb is not called and no one decrements usb_dev refcnt.
    ARM: dts: imx6sl reuses imx6q sdma firmware
    There is no imx6sl specific sdma firmware.  Instead, imx6sl reuses
    imx6q sdma firmware.
    staging: rtl8192u: remove code inside #ifdef RTL8190P in r819xU_firmware.c
    Some systems although they have firmware class 'M', which usually
    [media] tda10071: change firmware download condition
    Reading firmware status register to detect whether firmware is
    likely set by firmware itself which means it could not contain
    reasonable values until firmware is up and running. Usually it
    was considered "firmware is up and running" by the driver and
    firmware loading was skipped leaving device to non-working state.
    count whether firmware is loaded or not.
    Wait until firmware ack is written before unlocking channel
    3. Change soft-TSO to take advantage of firmware assistance on EF10.
    sfc: Implement firmware-assisted TSO for EF10
    The SFC9120 MC firmware often takes longer than 20ms to reboot and
       - Enable ARM_ATAG_DTB_COMPAT to let firmware override command line
         when booting with an appended devicetree on non-DT-enabled firmware
    Hyper-V guest firmware, many legacy devices will not be emulated and this
      1. To workaround the firmware bug described in 916f676f8
    firmware-set bootargs to the kernel.
    3. Reset MAC stats properly after a firmware upgrade.
    4. Re-check the datapath firmware capabilities after the controller is
    o At the time of firmware hang "adapter->need_fw_reset" variable gets
      set but after re-initialization of firmware OR at the time of VF
    to avoid issuing firmware commands on non existing CQs.
      ACPI / hotplug / PCI: Use _OST to notify firmware about notify status
    this so that the proper mode is given to the firmware.
    core.c mostly deals with driver and firmware starting related
     - firmware/dmi-scan
    firmware/dmi_scan: drop OOM messages
    firmware/dmi_scan: constify strings
    firmware/dmi_scan: fix most checkpatch errors and warnings
    drivers/firmware/dmi_scan.c.
    firmware/dmi_scan: drop obsolete comment
    drivers/firmware/google/gsmi.c: replace strict_strtoul() with kstrtoul()
    2. the purpose of doing discard is to improve SSD firmware garbage
       firmware can do something smart.  Sending discard just after swap entry
    aligned, SD firmware can do flash erase more efficiently.
    firmware began to write the "appropriate" value for each controller into
    the code also issues command to fnic firmware to clear vnic stats.
    After an MC reboot, the datapath may be running a different firmware
    don't need to support pre-production firmware.
    the node arrays with the firmware provided nr_node_ids.
      ACPI / hotplug / PCI: Use _OST to notify firmware about notify status
      Provide version number for Debian firmware package
      rpm-pkg: install firmware files in kernel relative directory
    ACPI / hotplug / PCI: Use _OST to notify firmware about notify status
         use the proper accessors, call the firmware with the right endian
      powerpc/powernv: Return secondary CPUs to firmware on kexec
    connected via a special bus and listed in the firmware device tree.
    x86. Move it from arch/x86 to drivers/firmware. Add memmap pointer
    drivers/firmware/efi/efivars.c:567:6: warning: symbol 'efivars_sysfs_exit' was not declared. Should it be static?
      mce: acpi/apei: Soft-offline a page on firmware GHES notification
    offloads, support for a new firmware API and various code cleanups."
      special mode where it's waiting for firmware blobs to replace the
    reducing the number of interface combinations to avoid firmware crashes.
      [SCSI] qla2xxx: Set default critical temperature value in cases when ISPFX00 firmware doesn't provide it
      firmware loader: fix pending_fw_head list corruption
      firmware: dcdbas: use binary attribute groups
      driver core: firmware: use __ATTR_RW()
    [SCSI] qla2xxx: Set default critical temperature value in cases when ISPFX00 firmware doesn't provide it
    [SCSI] qla2xxx: Notify ISPFX00 firmware when driver is unloaded or system is shut down.
    [SCSI] qla2xxx: Perform warm reset every 2 minutes if firmware load fails for ISPFX00.
    [SCSI] bfa: firmware update to 3.2.1.1
    This patch updates the firmware to address the thermal notification issue
    They have no representation in firmware. Clean
    * Enhanced minidump feature by using firmware recommended
      firmware dump state.
      will hold the name of firmware image file name.
    qlcnic: Store firmware dump state in CAMRAM register
    -Use CAMRAM register to store firmware dump state in adapter
    qlcnic: Use firmware recommended dump capture mask as default
    3. Add support for starting or queueing firmware requests from atomic
    drm/radeon: check firmware overrides for mclk/sclk ss
    Check the overrides in the firmware info table before
    firmware loader: fix pending_fw_head list corruption
      _request_firmware_load()
                                           firmware_loading_store(1)
                                           firmware_loading_store(0)
    causing an oops later when walking pending_list after the firmware has
    firmware has changed in which case the device has to be reenumerated.
    in firmware and releases the newly allocated bos descriptor to prevent memory
      ARM: dts: Add secure-firmware boot support for OrigenQaud board
      functions under firmware control
      allowing firmware to implement a vswitch
    firmware release.
    The TX path firmware for EF10 supports 'option descriptors' to control
    On EF10, the firmware will initiate a queue flush in certain
    6. Add support for new events that are generated by EF10 firmware.
    and call the MLX4_QP_FLOW_STEERING_ATTACH/DETACH firmware commands.
    On the ATTACH command completion, the firmware provides a 64-bit
    this reg ID is used for detaching that flow from the firmware.
    firmware: dcdbas: use binary attribute groups
     drivers/firmware/dcdbas.c |   19 ++-----------------
    This field is ignored by Siena firmware but is significant to EF10 firmware.
    bna: firmware update to 3.2.1.1
    This patch updates the firmware to address the thermal notification issue
      virtual instead of physical addresses to the firmware under some
    2. Some bug fixes for firmware completion handling.  (They're not known
    3. Update to the firmware protocol (MCDI) definitions.
    powerpc/powernv: Return secondary CPUs to firmware on kexec
    With OPAL v3 we can return secondary CPUs to firmware on kexec. This
    allows firmware to do various cleanups making things generally more
    all the CPUs are in firmware.
    bootloader and PowerNV firmware.
    (leds-lp5523: use generic firmware interface) causes an application conflict.
    or pattern data is loaded from generic firmware interface.
      in lp5523_firmware_loaded().
    or pattern data is loaded from generic firmware interface.
    command to firmware.
    SDMA driver needed for the driver to work without additional firmware.
    A lot of 64-bit systems supported by Linux/MIPS have boot firmware or
    Probably an error in earlier firmware is never enabled so remove.
     + a3xx or a2xx 3d core, which share a common CP (the firmware
    driver core: firmware: use __ATTR_RW()
    [SCSI] qla4xxx: Export more firmware info in sysfs
    driver but it depends on firmware support.
    While Midway firmware handles L2 smc calls as nops, the custom smc calls
    The filter table(s) on EF10 are managed by firmware and will need
        iwl4965: reset firmware after rfkill off
    - add support secure-firmware for OrigenQuad
      ARM: dts: Add secure-firmware boot support for OrigenQaud board
    efx_fini_eventq() needs to be idempotent but EF10 firmware is
    - The request for MC_CMD_DRV_ATTACH now includes a datapath firmware
    The reason we didn't notice before is that the MC firmware error codes
    o  82xx firmware allows support for multiple Tx queues. This
    On EF10, the firmware is in charge of allocating buffer table entries.
    disconnect if firmware fails to do our bidding. I also have Stanislaw's
    drivers/net: enic: Add an interface for USNIC to interact with firmware
    This patch adds an interface for USNIC to proxy firmware commands
        - Adds new firmware commands for the new Cisco Low Latency NIC
    qlcnic: Add support for 84xx adapters to load firmware from file
    o Use appropriate firmware image file name based on device IDs.
     "Two AMD microcode loader fixes and an OLPC firmware support fix"
    ARM: dts: Add secure-firmware boot support for OrigenQaud board
    OrigenQuad board boots with secure firmware support. Enable support for
    Deferred probe was added in order to avoid udev vs. Kernel firmware
    added due to udev firmware loading problems, but things are fixed after
    [media] s5p-mfc: Update driver for v7 firmware
    Adds variant data and core support for the MFC v7 firmware
    The patch adds the register definition file for new firmware
    version v7 for MFC. New firmware supports VP8 encoding along with
    holds good for v7 firmware also.
      USB: ti_usb_3410_5052: fix big-endian firmware handling
     2) Fix use of *_PAGES interfaces with mlx5 firmware, from Moshe Lazar.
    10) Clear out firmware capability flags the be2net driver isn't ready to
      net/mlx5_core: Support MANAGE_PAGES and QUERY_PAGES firmware command changes
    net/mlx5_core: Support MANAGE_PAGES and QUERY_PAGES firmware command changes
    This patch isn't compatible with firmware versions < 5; however, it  turns out that the
    first GA firmware we will publish will not support previous versions so this should be OK.
    o Load firmware from file before setting up interrupts.
    qlcnic: Reinitialize mailbox data structures after firmware reset
    o After firmware reset VFs were failing to come up because of not
      VFs can come up after firmware reset.
    as interrupt endpoints. Current firmware will try to overwrite
    brcmfmac: ignore IF event if firmware indicates it
    Not every IF event from the firmware needs to result in a
    ignore the firmware event.
    AMPDU session in the correct order from the firmware to the host
    driver. This reduces buffer requirement on the firmware side.
    With firmware-signalling the packet handed to the bus specific driver
    Firmware-signalling needs transmit to firmware to be atomic and
      special mode where it's waiting for firmware blobs to replace the
    Provide version number for Debian firmware package
    Currently the firmware package always gets the same version number
    The paths inside the firmware package depend on the Kernel
    Debian firmware package number.
    New firmware comes with new HTT protocol version.
    ath10k: add support for firmware newer than 636
    both old and new firmware.
    It is possible for some versions of firmware to advertise capabilities that driver
    This patch prevents firmware from reporting
    NFC: pn544: i2c: Add firmware download implementation for pn544
    The pn544 can enter a firmware update mode where firmware blobs can be
    this is what we do for every downloaded firmware blob.
    NFC: pn544: Add firmware operations hci ops
    The firmware operation callback is passed by the physical layer to the
    NFC: netlink: Add result of firmware operation to completion event
    NFC: pn544: i2c: Add firmware download mode power-on support
    This is in preparation for pn544-i2c firmware download feature, where we
    need to know if we're in regular or firmware upload mode.
    It seems that some pn533 firmwares go belly up when being asked to send
    as they can (theorically) handle datas up tu 64kB. PN533 firmware only
    RDMA/cxgb4: Handle newer firmware changes
    video pipeline fails with timeouts reported by the FIMC-IS firmware.
    USB: ti_usb_3410_5052: fix big-endian firmware handling
    Fix endianess bugs in firmware handling introduced by commits cb7a7c6a
    ("ti_usb_3410_5052: support alternate firmware") which made the driver
    use the wrong firmware for certain devices on big-endian machines.
    Since the firmware support is no longer available for hw1.0,
    The time event firmware API will change, add the support for that.
      and a megaraid_sas firmware initialisation problem which causes kdump
    maintain Linux compatibility with old firmware versions. To do that, we just
    Coalesce filters are configured in firmware based on settings
    Packet type which is required by firmware is determined based on
    resets the firmware after turning rfkill off (resolving a bug in the
    Similar to power_down(), except that for a suspend, the firmware
    the firmware is not fully functional yet. This change implements a
    an unexpected notification from the firmware, there isn't
    the firmware.
    fbdev-core uses FBINFO_MISC_FIRMWARE to mark drivers that use firmware
    firmware is downloaded.  We need to check max_iscsi_conn again after
    can hang as the firmware will not respond to the iSCSI init message.
                     "firmware uses non-FIP mode\n");
    Actually this issue needs fix in firmware, but for firmware running in field,
    this driver fix is proposed to resolve the issue.  At firmware initialization
    time, if firmware does not come to ready state, driver will reset the adapter
    and retry for firmware transition to ready state unconditionally(not only
    iwl4965: reset firmware after rfkill off
    Using rfkill switch can make firmware unstable, what cause various
    Microcode errors and kernel warnings. Reseting firmware just after
    Apparently the available firmware has a limit of
    combinations may crash the firmware.
    The patch makes sure we ath10k tells firmware to
      Current driver-firmware mailbox interface was operating in polling mode
      firmware. These issues are resolved now and we are implementing the
    qlcnic: Interrupt based driver firmware mailbox mechanism
    o Driver firmware mailbox interface was operating in polling mode
      because of limitations with the earlier versions of 83xx adapter firmware.
       merge window but the typical terminology for loading a firmware to a
       target is firmware download rather than upload. In order to avoid any
    corner case) and a workaround for a firmware design issue - it only
    release_firmware(adapter->*) is called for success as well
      drm/nouveau/core: xtensa firmware size needs to be 0x40000 no matter what
    is required to allow firmware to complete boot commands and the other
    enforce using supported firmware.
    This patch breaks compatibility with old versions of firmware (< 4);
    however, the first GA firmware we will publish will support version 4
     4) Fix OOPS caused by firmware loading races in ath9k_htc, from Alexey
     7) Fix multicast settings getting dropped by firmware in qlcnic driver,
      merge window but the typical terminology for loading a firmware to a
      target is firmware download rather than upload. In order to avoid any
    Newer firmware supports offloading more IPv6 addresses for NDP,
    firmware capability.
    iwlwifi: mvm: reprobe device on firmware error during restart
    If we get a firmware error during restart, we currently abandon any
    Loading a firmware into a target is typically called firmware
    download, not firmware upload. So we rename the netlink API to
    forced firmware crash write 'crash' to
    ath10k: store firmware files in memory
    It is safe to swap firmware files on disk during
      drm/nouveau/core: xtensa firmware size needs to be 0x40000 no matter what
    firmware.
    drm/nouveau/core: xtensa firmware size needs to be 0x40000 no matter what
    net/mlx4_core: Respond to operation request by firmware
    This commit adds new firmware command and new firmware event.  The firmware
    entries which are used by the firmware for handling NCSI traffic in B0
    EEPROM for an issue with the firmware at 10Mbps when K1 (a power mode of
          For the sdma's firmware limit, we do not support the DMA except
    We will add the DMA support for the imx uart. For the firmware's limit,
    staging: comedi: usbdux: move usbdux_firmware_upload()
    firmware upload.
      Revert "ACPI / video / i915: No ACPI backlight if firmware expects Windows 8"
    mwifiex_fw_dpc() asynchronously takes care of firmware download
    are not handled. So if wrong firmware is downloaded, required
    [media] tlg2300: fix checking firmware in poseidon_probe()
    check_firmware() makes sure firmware is in a device.
    Also it sets down_firmware flag to 1 if downloading occurs.
    The only caller poseidon_probe() checks down_firmware flag and
    That looks very strange, so the patch removes down_firmware argument
    of check_firmware() and returns error code if check_firmware() fails
    [media] coda: update CODA7541 to firmware 1.4.50
    pointer on commands. With the new firmware, there is only a single set of
    Revert "ACPI / video / i915: No ACPI backlight if firmware expects Windows 8"
    Commit 8c5bd7a (ACPI / video / i915: No ACPI backlight if firmware
    If we forget to do so, we can't send HCMD to firmware while
    Until now, we relied on the firmware to do clean the
    interrupt, but new firmwares don't do that any more.
    descriptor. This was fixed with an immediate firmware update from the vendor,
    for example ath9k_htc with stalled firmware, kernel will
    firmware crashes from Emmanuel and a small BT fix for older devices as
    well as a workaround for a firmware problem with APs with very small
    driver and firmware in sync.
    For PCIe cards, when wrong firmware is downloaded, firmware is
    this point. But currently we are sending first command to firmware.
    As expected firmware doesn't respond to this command and command
    It is observed that when wrong firmware is downloaded for
    is used when firmware status is polled.
    mwifiex: reduce firmware poll retries
    After downloading the firmware, firmware status is checked by
    sufficient for firmware to get ready.
    firmware download and second enumeration expects firmware
    deinitialization for first enumeration after firmware download.
    Before sending command to firmware, we need to check the frame type.
    Unfortunately, the firmware only supports replay counters for
    to the dependency on the SigmaDSP firmware loader which was only available on a
    ("ASoC: Move SigmaDSP firmware loader to ASoC") though, so we can add the driver
    rpm-pkg: install firmware files in kernel relative directory
    Prior to this patch, firmware files were being installed
    in /lib/firmware with a potential conflict with already
    firmware files are now installed in /lib/firmware/<release>
    ath9k_htc: reboot firmware if it was loaded
    Currently ath9k_htc will reboot firmware only if interface was
    https://github.com/qca/open-ath9k-htc-firmware/issues/1
    reboot PC without configuring adapter, firmware will freeze.
    Bug: https://github.com/qca/open-ath9k-htc-firmware/issues/1
      over backlight control if the firmware thinks it's dealing with
      the firmware through the _DOS method that it should not carry out
         workaround making i915 take over bakclight control if the firmware
         the firmware through the _DOS method that it should not carry out
      ACPI / video: no automatic brightness changes by win8-compatible firmware
      ACPI / video / i915: No ACPI backlight if firmware expects Windows 8
      drm/radeon: use radeon device for request firmware
    ACPI / video: no automatic brightness changes by win8-compatible firmware
    parameter of control method _DOS, to inform firmware it should not
    firmware may choose to adjust brightness level instead of sending out
    ACPI / video / i915: No ACPI backlight if firmware expects Windows 8
    avoiding to register the ACPI backlight interface if the firmware
    it if the firmware has called _OSI for Windows 8 (or will register
    firmware.
    ath9k_htc: fix data race between request_firmware_nowait() callback and suspend()
    ath9k_hif_usb_probe() requests firmware asynchronically and
    there is some initialization postponed till firmware is ready.
    In particular, ath9k_hif_usb_firmware_cb() callback initializes
    ath9k_hif_usb_dealloc_urbs(). If suspend happens before request_firmware_nowait()
    There seems to be no limit to the amount of gunk the firmware can
    This is harmless since the firmware is most likely to
    Due to a firmware bug, it crashes when the beacon interval
    The firmware / HW can't support more than 16 Rx BA sessions.
    This bug led to firmware assert after 16 BA sessions.
    interrupts to host by buffering these packets in firmware/hardware
    Drivers are supposed to do required firmware/hardware settings based
      drm/radeon: use radeon device for request firmware
    [    4.790943] r600_cp: Failed to load firmware "radeon/CEDAR_smc.bin"
    [    4.791152] [drm:evergreen_startup] *ERROR* Failed to load firmware!
    drm/radeon: use radeon device for request firmware
    the radeon device for requesting firmware.
      [media] exynos4-is: Change fimc-is firmware file names
    the firmware spec), renaming the field to log_uar_pg_size to conform
    The firmware on both Dave's Thinkpad and Maarten's Macbook Pro appear to
    also when mixing kernel and firmware "bitness", e.g. 32-bit kernel with
    64-bit firmware.
    drm: avoid warning in drm_load_edid_firmware()
      drivers/gpu/drm/drm_edid_load.c: In function ‘drm_load_edid_firmware’:
    Intel Rapid Start Technology is a firmware-based suspend-to-disk
    to the firmware and copy the contents of RAM to a specialised partition, and
    firmware will copy the contents of the partition back to RAM and then resume
    timeout. It still requires firmware support and an appropriate suspend
    mce: acpi/apei: Soft-offline a page on firmware GHES notification
    If the firmware indicates in GHES error data entry that the error threshold
      drm/nvc0/gr: fix gpc firmware regression
    Hardware timing requirements is updated in order to comply with firmware
      drm/nvc0/gr: fix gpc firmware regression
    Add a boot option to disable firmware first mode for corrected errors.
    set by the firmware to indicate to the OS that it prefers to process the
    monitor for corrected errors (through CMCI/polling). Instead, the firmware
    structure and to disable CMCI/polling if the firmware first flag is set.
    [SCSI] qla2xxx: Do not take a second firmware dump when intentionally generating one.
    When we are intentionally generating a firmware dump by executing the
    course of action when a mailbox command times out is to take a firmware dump.
    MBA_SYSTEM_ERR AEN already generates a firmware dump.
    drm/nvc0/gr: fix gpc firmware regression
      open firmware: "/aliasas" -> "/aliases"
      PCI/AER: Set dev->__aer_firmware_first only for matching devices
      interaction with the EFI firmware, and a cleanup"
      Lots of little things, and larger firmware subsystem updates, all
      firmware loader: fix another compile warning with PM_SLEEP unset
      firmware loader: fix compile warning with PM_SLEEP set
      firmware loader: simplify holding module for request_firmware
      firmware loader: don't export cache_firmware and uncache_firmware
      firmware loader: fix compile warning
      firmware loader: fix build failure with !CONFIG_FW_LOADER_USER_HELPER
      driver core: firmware loader: kill FW_ACTION_NOHOTPLUG requests before suspend
      driver core: firmware loader: don't cache FW_ACTION_NOHOTPLUG firmware
      firmware: move EXPORT_SYMBOL annotations
      firmware: Avoid deadlock of usermodehelper lock at shutdown
    cassini: Make missing firmware non-fatal
    The firmware patch for the Saturn PHY fixes a bug, but is not absolutely
    We could have a firmware passing stuff via the new style map, and
    here, the firmware API version bump for the 7260/3160 devices."
    When the firmware supports the UPDATE_QP command, if the VF link is disabled,
    This requires firmware which supports the UPDATE_QP command.
    MIPS: BCM63XX: recognize Cable Modem firmware format
    Add the firmware header format which is used by Broadcom Cable Modem
    SoCs such as the BCM3368 SoC. We export the bcm_hcs firmware format
    structure because it is used by user-land tools to create firmware
    firmware runs on a dedicated core ("Security Processor", part of the SoC)
    [media] exynos4-is: Change fimc-is firmware file names
    This patch changes the firmware file names of the FIMC-IS subsystem.
    It is needed since there are different firmwares used across various
    FIMC-IS firmware. The driver enables those interrupt only where available,
    brcmfmac: reduce firmware-signalling locking scope in rx path
    feedback from the firmware. Determine the tag in the netdev transmit
    boot_root - holds the name of the /sys/firmware/ibft or iscsi_rootN
    Update bfa to use firmware image versions 3.2.1.0
    [SCSI] bfa: fix endianess issue for firmware stats
    Fix endianess issue on Big-endian architecture for firmware statistics
    Allow processing completions from firmware during IOC_DISABLE request is
    being processed by the firmware, by setting the queue_process flag
    [SCSI] bfa: firmware statistics update
    from firmware.
    1. While FRU VPD data update, inform firmware to send a completion event
       on I2C bus. Without this change, firmware used to send completion
    returned by the firmware is compared with driver/bfa iotag after masking
    Correction (FEC) (enabled at 16Gig speed) status from firmware and to
    firmware loader: fix another compile warning with PM_SLEEP unset
    drivers/base/firmware_class.c:221:29: warning: 'fw_lookup_buf' defined
    is released from reset, and a full reset cycle, including a new firmware
    firmware download is postponed to the first hw_params call, when the
    ASoC: adau1701: move firmware download to adau1701_reset()
    firmware, since it was not supported configuration in old firmware
       capability of handling UnevenSpan PRL11 to the firmware.
    [SCSI] megaraid_sas: Update balance count in driver to be in sync of firmware
    We want the firmware merge fixes, and other bits, in here now.
    [SCSI] mpt2sas: fix firmware failure with wrong task attribute
    Previously it is set to untagged. This causes the firmware to fail the commands.
    rtlwifi: rtl8723ae: Fix typo in firmware names
    The driver loads its firmware from files rtlwifi/rtl8723fw*.bin, but the
    $ echo 0x0123456701234567 > /sys/firmware/reipl/fcp/wwpn
    $ cat /sys/firmware/reipl/fcp/wwpn
    $ echo 0x012345670123456789 > /sys/firmware/reipl/fcp/wwpn
    $ cat /sys/firmware/reipl/fcp/wwpn
      special firmware update mode where applications can push a new
      firmware that will be flashed. We now have a netlink API for providing
    firmware.
    to notify the driver version to the firmware.
     "Here's a single patch for the firmware core that resolves a reported
      oops in the firmware core that people have been hitting."
      firmware loader: fix use-after-free by double abort
    firmware loader: fix compile warning with PM_SLEEP set
    drivers/base/firmware_class.c:1254:12: warning: 'cache_firmware' defined
     static int cache_firmware(const char *fw_name)
    drivers/base/firmware_class.c:1281:12: warning: 'uncache_firmware'
     static int uncache_firmware(const char *fw_name)
    from firmware. If we have pending PCI errors, special EEH event
    powerpc/eeh: Sync OPAL API with firmware
    The patch synchronizes OPAL APIs between kernel and firmware. Also,
    This resolves the merge issues with drivers/base/firmware_class.c
    announcement event from firmware. This happens when AP advertises
    read the firmware revision in the probe function. This leads to the following
    Otherwise, if the firmware does not mask the interrupt and
    This adds ability to bind uio driver to given open firmware device
    The firmware-signalling code used NL80211_NUM_ACS, but it has
    brcmfmac: Only use credits for bcmc when firmware indicates it.
    The firmware will sent an event message when bc/mc traffic should
    firmware loader: fix use-after-free by double abort
    fw_priv->buf is accessed in both request_firmware_load() and
      ALSA: usb-audio: work around Android accessory firmware bug
      [media] exynos4-is: Prevent NULL pointer dereference when firmware isn't loaded
    Pins may be muxed to alternate function instead of gpio by firmware.
    open firmware: "/aliasas" -> "/aliases"
    iwlwifi: mvm: allow firmware crashes to wake system for debug
    When the D3 firmware crashes, it can be helpful for debugging to
    firmware located at:
    using a module argument.  This overrides the firmware regulatory
    iwlwifi: bump required firmware API version for 3160/7260
    As the firmware API has changed significantly and we don't
    able to release the version 7 API firmware. Unfortunately
      ALSA: usb-audio: work around Android accessory firmware bug
    ALSA: usb-audio: work around Android accessory firmware bug
    When the Android firmware enables the audio interfaces in accessory
    This patch makes the firmware setup code assume presence of DT, since it
      special firmware update mode where applications can push a new
      firmware that will be flashed. We now have a netlink API for providing
    NFC: Add firmware upload netlink command
    As several NFC chipsets can have their firmwares upgraded and
    that the driver loads or flashes a new firmware. This will allows
    userspace triggered firmware upgrade through netlink.
    The firmware name or hint is passed as a parameter, and the driver
    will eventually fetch the firmware binary through the request_firmware
    firmware loading/flashing is an asynchronous operation. Result of the
    the op_mode might still get notifications from the firmware
    Ensure release_firmware is called if kmalloc fails.
    DVM opmode due to firmware availability, while newer ones will
    in our case to let the firmware optimise beacon RX.
    the device does not have firmware.
    happen, including drive firmware bugs.
      wl12xx: increase minimum singlerole firmware version required
      wl12xx: fix minimum required firmware version for wl127x multirole
    me, are related to the firmware version checks in our driver.  Without
    them, the firmwares fail to load.  The other one, by Eliad, fixes a typo
    brcmfmac: add debugfs statistics for firmware-signalling
    Currently firmware requested credits do not require fifo credits.
    With "iwl{4965,3495): workaround for firmware frame tx rejection"
    iwl3945: workaround for firmware frame tx rejection
    iwl4965: workaround for firmware frame tx rejection
    information should be sent to firmware. If it can piggy back
    brcmfmac: fix send_pkts statistic counter in firmware-signalling
    During P2P testing it turned out that the firmware sents multiple
    firmware should be processed. Otherwise the firmware-signalled flow
    control can run haywire when it has packets outstanding in firmware.
    brcmfmac: fix invalid ifp lookup in firmware-signalling
    The destination entries for firmware-signalled flow control have
    brcmfmac: reducing debug logging in firmware-signalling code
    The debug logging in firmware-signalling code was rather extensive and
    brcmfmac: allow firmware-signal tlv to be longer than specified
    The firmware-signal API specification defines length for the different
    tlv. During testing on different devices it turned out not all firmware
    firmware download and second enumeration expects firmware
    A major difference from ath9k is that there's now a firmware and
    ASoC: codecs: adau1701: factor out firmware reset
    firmware loading, so the actual download and releasing the device from
    and is used to define the firmware filename. b43_do_request_fw() populates
    ctx->errors[] on error, containing the firmware filename. b43err()
    wl12xx: increase minimum singlerole firmware version required
    The minimum firmware version required for singlerole after recent
    wl12xx: fix minimum required firmware version for wl127x multirole
    multirole firmware for wl127x (WiLink6) to be rejected.  The actual
    The firmware API wasn't being used correctly, fix that.
    vendor specific AT management commands to their firmwares.
    the firmware is often buggy.  Linux is much better off using
    regard.  I recall that it was better with some firmware revisions and
    worse with later firmwares or maybe my test coverage wasn't good
    and soonish the PMPs and their firmwares will improve in quality, so
    QueryVariableInfo() from boot services results in some firmware
    until the firmware triggers a garbage collection run, which they won't do
    Feedback from Samsung indicates that the firmware doesn't need more than
    usb 2-1: dvb_usb_v2: downloading firmware from file 'dvb-usb-it9137-01.fw'
    [media] exynos4-is: Prevent NULL pointer dereference when firmware isn't loaded
    Ensure the firmware isn't accessed in the driver when the firmware loading
    [   96.545000] PC is at fimc_is_start_firmware+0x14/0x94
    [   96.745000] [<c03e0354>] (fimc_is_start_firmware+0x14/0x94) from [<c03e1cc4>] (fimc_isp_subdev_s_power+0x13c/0x1f8)
      PCI/AER: Set dev->__aer_firmware_first only for matching devices
    It is because some firmware will access target address specified in
    PCI/AER: Set dev->__aer_firmware_first only for matching devices
    Previously, we always updated info->firmware_first, even for HEST entries
    dev->__aer_firmware_first.
    firmware loader: simplify holding module for request_firmware
    simply holds the module in the whole life time of request_firmware()
    firmware loader: don't export cache_firmware and uncache_firmware
    firmware loader: fix compile warning
    The commit ddf1f0648e8c("firmware loader: fix build failure
    drivers/base/firmware_class.c:921:13: warning:
    It's pretty harmless.  This information comes from the firmware, if
    firmware bugs, but we shouldn't be passing those regions to
    - Retain firmware defined configuration settings in the absence of
    link up notification is sent to bfa from the firmware. The bfa then send
    an FLOGI to the firmware which is sent out on the wire.
    firmware loader: fix build failure with !CONFIG_FW_LOADER_USER_HELPER
            driver core: firmware loader: kill FW_ACTION_NOHOTPLUG requests
    taking over firmware state. So check for this case and WARN about it.
    driver core: firmware loader: kill FW_ACTION_NOHOTPLUG requests before suspend
    This patch kills the firmware loading requests of FW_ACTION_NOHOTPLUG
    driver core: firmware loader: don't cache FW_ACTION_NOHOTPLUG firmware
    handle firmware loading, so don't cache these firmwares during
    suspend for these drivers since doing that may block firmware
    Both the two drivers are involved in private firmware images, so
    firmware: move EXPORT_SYMBOL annotations
    firmware: Avoid deadlock of usermodehelper lock at shutdown
    when a driver tries to load a firmware beforehand and it's stuck by
    some reason.  For example, dell_rbu driver loads the firmware in
    As a workaround, in this patch, the firmware class driver registers a
    The driver has been extracted from GPL sources of EdgeRouter Lite firmware
    There is no point to check firmware ABI version when the driver
    For such failures, the driver should assume the firmware is not
    At this point driver supports above and greater than above version of firmware.
    If it doesn't find the required firmware version than it forces the adapter to
           - If FW_ON_ADAPTER < /lib/firmware/cxgb4/t*fw.bin we will update the
           - If FW_ON_ADAPTER >= /lib/firmware/cxgb4/t*fw.bin don't upgrade FW.
    this information until after we've tried to kick out the firmware fb.
      efivarfs: Never return ENOENT from firmware again
    * Log driver version information with firmware version information.
    netxen_nic: Log driver version with firmware version
      ALSA: usb-6fire: Modify firmware version check
    staging: comedi: usbduxsigma: move usbduxsigma_firmware_upload()
    FIRMWARE_MAX_LEN define so its with the other firmware constants
    staging: comedi: usbduxsigma: tidy up firmware upload error messages
    For testing the D3 (WoWLAN) firmware, it is useful to be able
    to run the firmware with instrumentation while the host isn't
    sleeping and can poke at the firmware debug logging etc.
    D3 firmware is loaded and all regular commands are blocked.
    While the file is being read, poll the firmware's PME status
    non-wireless reason and when the firmware wants to wake up
    commands to the firmware, they could still be made and cause
    Als note that this requires an upcoming firmware change to
    D3 test will fail if the firmware doesn't report the pointer.
    The only remaining pci_set_drvdata(NULL) is in azx_firmware_cb() in
    The firmware supports periodic keep alive and beacon monitoring,
    HID: elo: add quirks for broken firmware
    "Elo touchscreen firmware M workaround".
      as a workaround for devices with M-level firmware, otherwise these
    The firmware requires that on p2p setup when net interfaces
    the same from be_setup() and/or post firmware download.
    A PF should ack the firmware when receiving unknown messages through the VF's
    It was set to be FORCED because of a firmware bug which
    specific but rather define how the DVM firmware is used.
    The MVM firmware doesn't communicate this way, it instead
    bit thus belongs into the firmware API code, i.e. DVM.
    using the mwifiex driver and firmware from the Marvell git
    The symptom was a timeout after firmware download.
    ape state only needs to be updated to tell the firmware that the driver
    Also, the firmware does not distinguish between SUSPEND and START states
    mwl8k: Fix the firmware hang issue for 8764
    The firmware hang issue is not seen very often,
    ,to interrupt the firmware, are needed when we
    detect that firmware is stuck and when the host
    This is to ensure that the firmware does not
    miss any PPA_RDY interrupts to cause the firmware
      powerpc/pseries: Make 32-bit MSI quirk work on systems lacking firmware support
    16) Fix device startup synchronization with firmware in tg3 driver, from
    powerpc/pseries: Make 32-bit MSI quirk work on systems lacking firmware support
    for a new firmware feature to force an adapter to use 32 bit MSIs.
    However, this firmware is not available for all systems. The hack below
    ASoC: adau1701: refactor firmware loading function
    Pass a struct i2c_client * to adau1701_load_firmware directly to make
    ALSA: usb-6fire: Modify firmware version check
    the version information. Do this because all firmware version tested
    updated to know that firmware has completed initialization. However, the
    contention with firmware.  This logic has existed since day one but is
    Register addresses, firmware name and some macros are specific to
    firmware.
    before they are sent to firmware. When each scan result is back
    firmware may go off-channel to scan the remaining channels.
    staging: comedi: usbduxsigma: use comedi_load_firmware()
    Use comedi_load_firmware() instead of duplicating the code in a
    Also, rename firmwareUpload() to have namespace associated with
    staging: comedi: usbduxsigma: move firmware request/upload into (*auto_attach)
    comedi_driver (*auto_attach) is requesting and uploading the firmware.
    comedi_load_firmware() helper.
    staging: comedi: usbduxsigma: consolidate the firmware upload
    functions into firmwareUpload().
    firmware_upload() so the extra messages are redundant.
    staging: comedi: usbduxsigma: request firmware synchronously
    Change the request_firmware_nowait() to a request_firmware() so
    staging: comedi: usbdux: use comedi_load_firmware()
    Use comedi_load_firmware() instead of duplicating the code in a
    Also, rename firmware_upload() to have namespace associated with
    staging: comedi: usbdux: move firmware request/upload into (*auto_attach)
    comedi_driver (*auto_attach) is requesting and uploading the firmware.
    comedi_load_firmware() helper.
    staging: comedi: usbdux: consolidate the firmware upload
    functions into firmware_upload().
    firmware_upload() so the extra messages are redundant.
    staging: comedi: usbdux: request firmware synchronously
    Change the request_firmware_nowait() to a request_firmware() so
    staging: comedi: usbduxfast: use comedi_load_firmware()
    Use comedi_load_firmware() instead of duplicating the code in a
    [media] smscoreapi: Make Siano firmware load more verbose
    If firmware load fails, report it as an error.
    drivers/built-in.o: In function `pvr2_upload_firmware1':
    drivers/built-in.o: In function `pvr2_upload_firmware2':
    "I have fixes for a firmware crash during resume, multicast RX,
    aggregation and a workaround for a firmware scanning bug."
    staging: comedi: ni_pcidio: use comedi_load_firmware()
    Use comedi_load_firmware() instead of duplicating the code in a
    This driver loads multiple firmware images to the device. Modify
    comedi_load_firmware() to take a 'context' that is passed to the
    firmware upload callback function.
    staging: comedi: me_daq: use comedi_load_firmware()
    Use comedi_load_firmware() instead of duplicating the code in a
    staging: comedi: daqboard2000: use comedi_load_firmware()
    Use comedi_load_firmware() instead of duplicating the code in a
    staging: comedi: drivers: generalize comedi_load_firmware()
    Move comedi_load_firmware() from jr3_pci.c to drivers.c and export
    staging: comedi: jr3_pci: tidy up comedi_load_firmware()
    rtl8192u: fix whitespace around if statements in r819xU_firmware.c
    staging: comedi: usbduxfast: consolidate the firmware upload
    usbduxfastsub_start() functions into usbduxfast_upload_firmware().
    usbduxfast_upload_firmware() so the extra messages are redundant.
    staging: comedi: usbduxfast: move usbduxfast_upload_firmware()
    For aesthetic reasons, move usbduxfast_upload_firmware() near its
    only caller, usbduxfast_request_firmware().
    Also, move the #define for the maximum firmware size so it's with
    the other firmware defines.
    staging: comedi: usbduxfast: tidy up firmwareUpload()
    firmware * directly instead of parsing out the data and size.
    buffer for the firmware when an error is encountered.
    needed. The firmware for the device is then requested and uploaded
    staging: comedi: usbduxfast: request firmware synchronously
    Change the request_firmware_nowait() to a request_firmware() so
    iwlwifi: mvm: adjust firmware D3 configuration API
    The D3 firmware API changed to include a new field, adjust
    While at it, correct the check that firmware is loaded.
    firmware INIT image can now be run to retrieve the NVM
    allow loading the data via request_firmware() and then send it
    As the new MVM firmware files package the DATA section
    Configure power management in the D3 firmware by sending
    iwlwifi: mvm: add a missing define in firmware API
    iwlwifi: mvm: tell firmware to let multicast frames in
    Without this command, the firmware will filter out all the
      [SCSI] qla2xxx: Update firmware link in Kconfig file.
      [SCSI] pm80xx: SPC new firmware changes for device id 0x8081 alone
    query the CPU status from the firmware and decide what to do
    Future firmwares will support that new version
    efivarfs: Never return ENOENT from firmware again
    Previously in 1fa7e69 efi_status_to_err() translated firmware status
      [SCSI] qla2xxx: Update firmware link in Kconfig file.
      [SCSI] pm80xx: SPC new firmware changes for device id 0x8081 alone
    In theory, the firmware format allows changing the data section
       firmware is loaded and up.
    iwlwifi: pcie: prefer to load the firmware in one shot
    the firmware in small chunks (PAGE_SIZE). This makes the
    firmware restart considerably slower.
    STAGING: rtl8192u: fix checkpatch error about pointer position in r819xU_firmware.c
    This patch fixes the pointer position in r819xU_firmware.c
    continuing them blindly (if /sys/firmware/acpi/hotplug/force_remove
    and a corresponding 'firmware_node' is present in the processor
    'force_remove' that will reside under /sys/firmware/acpi/hotplug/.
    o Driver need to read firmware control mailbox register instead
      adapter soft reset. If soft reset fails to resume traffic, firmware
      [SCSI] qla2xxx: Update firmware link in Kconfig file.
      [SCSI] pm80xx: SPC new firmware changes for device id 0x8081 alone
    [SCSI] qla2xxx: Update firmware link in Kconfig file.
    and operation in firmware flash update.
    [SCSI] pm80xx: SPC new firmware changes for device id 0x8081 alone
    Additional bar shift for new SPC firmware, applicable to device
      mlx4: Match DMFS promiscuous field names to firmware spec
                   sleep since there is interrupt from the firmware
    or data from being sent to firmware. Fix it by clearing is_suspended
    After switch to passive channel 4965 firmware drops any TX packet until
    workaround for this firmware issue, will be added to the driver.
    The driver and firmware sync up through SYNC messages, and the
    firmware's affirmative reply to these SYNC messages appears to be the
    sending SYNC messages to the firmware, which crashes about 10 seconds
    custom indications from firmware.  Add functions to refcount
    Remove old YAMON prom code and use common firmware library code.
    Remove old YAMON prom code and use common firmware library code.
    the kernel to the firmware library.
    If the firmware returns an error such as "closed" (or hardware
    Currently we only do that when a firmware compatible with OPAL v2
      remoteproc: support default firmware name in rproc_alloc()
      remoteproc: parse STE-firmware and find resource table address
      remoteproc: add find_loaded_rsc_table firmware ops
    whether there are any machines out there with "wrong" firmware and
      iommu/amd: Don't report firmware bugs with cmd-line ivrs overrides
    fixups are processed. This means that the now-firmware-owned vectors
      be2net: Fix firmware download for Lancer
    Merge tag 'firmware-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc
    Pull ARM platform specific firmware interfaces from Olof Johansson:
     "Two platforms, bcm and exynos have their own firmware interfaces using
    * tag 'firmware-for-linus' of git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc:
      ARM: EXYNOS: Add secure firmware support to secondary CPU bring-up
      ARM: EXYNOS: Add support for Exynos secure firmware
      ARM: Add interface for registering and calling firmware-specific operations
      ALSA: emu10k1: Fix dock firmware loading
    be2net: Fix firmware download for Lancer
    [SCSI] lpfc 8.3.39: Fixed VPI allocation issues after firmware dump is performed
    cleanup. Howerver, cleanup timesout as the firmware has no clue about
    Set perf_config to 3 during firmware initialization to enable both
       firmware version
      updates], lpfc, aacraid [dual firmware image support]) and a few bug
     - the cypress firmware load is used outside dvb usb drivers.  So, move
            drivers/firmware/Kconfig
            drivers/firmware/efivars.c
    We use kmem_cache_alloc() to allocate memory to hold the new firmware
    dd if=<fw image> of=/proc/ppc64/rtas/firmware_flash bs=4096
      firmware, memmap: fix firmware_map_entry leak
    firmware, memmap: fix firmware_map_entry leak
    When hot removing memory, a firmware_map_entry which has memory range of
    the memory is released by release_firmware_map_entry().  If the entry is
    allocated by bootmem, release_firmware_map_entry() adds the entry to
    map_entires_bootmem list when firmware_map_find_entry() finds the entry
    from map_entries list.  But firmware_map_find_entry never find the entry
    Here are steps of leaking firmware_map_entry:
    firmware_map_remove()
    -> firmware_map_find_entry()
    -> firmware_map_remove_entry()
       -> release_firmware_map_entry()
          -> firmware_map_find_entry()
    release_firmware_map_entry() should not call firmware_map_find_entry()
    patch delete firmware_map_find_entry() from releae_firmware_map_entry()
    firmware value and dither to get what flimsy panels want.
    Like before we ensure that we don't change the bpp if the firmware
    Newer firmware can post CPL_SGE_EGR_UPDATE message encapsulated in a
    This patch also writes a new parameter to firmware requesting encapsulated
    EGR_UPDATE. This allows firmware with this support to not break older drivers.
    Newer firmware can post CPL_SGE_EGR_UPDATE message encapsulated in a
    This patch also writes a new parameter to firmware requesting encapsulated
    EGR_UPDATE. This allows firmware with this support to not break older drivers.
    Note that this depends on the platform code and/or firmware to boot the
    be2net: Avoid diagnostic test in certain versions of firmware to avoid NIC freeze.
    The Linux kernel and platform firmware negotiate their mutual support
    vector to indicate Linux support for PRRN and will allow the firmware to
    The new PRRN firmware feature provides a more convenient and event-driven
    for some customers to update to the latest firmware. For these customers,
    the VPHN feature supported on previous firmware versions may still be the
    The new PRRN firmware feature allows CPU and memory resources to be
    Platform events such as partition migration or the new PRRN firmware
    powerpc/pseries: Update numa.c to use updated firmware_has_feature()
    Update the numa code to use the updated firmware_has_feature() when checking
    powerpc/pseries: Update firmware_has_feature() to check architecture vector 5 bits
    The firmware_has_feature() function makes it easy to check for supported
    firmware_has_feature() to include checking for specified bits
    for firmware_has_feature much easier.
    powerpc/pseries: Use ARRAY_SIZE to iterate over firmware_features_table array
    When iterating over the entries in firmware_features_table we only need
    handling is enabled. To do this firmware_has_feature() is updated (in a
    Newer firmware on Power systems can transparently reassign platform resources
    The firmware supports a maximum of 4K FCoE exchanges. In 4-port devices,
    efx_mcdi_get_board_cfg() uses a buffer for the firmware response that
    'eth5 sfc_fpga:01'.  This means the firmware update tool (sfupdate)
    towards the firmware.
    mlx4: Match DMFS promiscuous field names to firmware spec
    actual firmware specification.  The patch doesn't introduce any
    functional change or API change towards the firmware.
    assumed by the firmware for IB link layer is zero.
    2) Check if the firmware provides a workaround to prevent this.
    4) If the firmware provides a workaround, insert the VLAN tag in the
    packet and inform the firmware to skip further VLAN insertions.
    a pvid, the driver needs to invoke a special hack in firmware to avoid
    We need to check the runtime sys_table for the EFI version the firmware
    This is apparently the case with several Apple firmwares that support EFI
    + arm-linux-gnu-ld -EL -p --no-undefined -X --build-id -X -o .tmp_vmlinux1 -T /root/linux-next/arch/arm/kernel/vmlinux.lds arch/arm/kernel/head.o init/built-in.o --start-group usr/built-in.o arch/arm/nwfpe/built-in.o arch/arm/vfp/built-in.o arch/arm/kernel/built-in.o arch/arm/mm/built-in.o arch/arm/common/built-in.o arch/arm/net/built-in.o arch/arm/crypto/built-in.o arch/arm/mach-s5pv210/built-in.o arch/arm/plat-samsung/built-in.o kernel/built-in.o mm/built-in.o fs/built-in.o ipc/built-in.o security/built-in.o crypto/built-in.o block/built-in.o arch/arm/lib/lib.a lib/lib.a arch/arm/lib/built-in.o lib/built-in.o drivers/built-in.o sound/built-in.o firmware/built-in.o net/built-in.o --end-group
    ALSA: emu10k1: Fix dock firmware loading
    The commit [b209c4df: ALSA: emu10k1: cache emu1010 firmware] broke the
    firmware loading of the dock, just (mistakenly) ignoring a different
    firmware for docks on some models.  This patch revives them again.
    Add new return code to rtas_flash to indicate firmware entitlement
    [  235.752799] Bluetooth: Downloading firmware failed!
    hardware/firmware does the rest. In such cases we need to read the info
    The firmware provides credits to the driver per WMM-AC. When
    only AC_BE are to be transmitted to the firmware the driver
    towards the firmware.
    firmware as the feature is not supported on all devices.
    brcmfmac: flush queue upon MACDESC_DEL firmware signal
    When firmware signals the driver to remove a destination entry
    driver and firmware.
    Send P2P_MODE_CFG cmd to firmware when p2p interface is created.
    Without proper p2p configuration firmware may behave incorrectly
    When deleting an interface in firmware-signalling module it will
    brcmfmac: schedule dequeue upon firmware-signal reception
    Several firmware signals should be considered as opportunity to
    send packets to the firmware. This patch adds conditional scheduling
      x86, efivars: firmware bug workarounds should be in platform code
    10) In bnx2x the kernel driver and UNDI firmware can try to program the
    11) Fix corruption of status block in firmware ram in bxn2x, from Ariel
    15) Add workarounds for firmware bugs in LTE qmi_wwan devices, wherein
      net: qmi_wwan: prevent duplicate mac address on link (firmware bug workaround)
      net: qmi_wwan: fixup destination address (firmware bug workaround)
      net: qmi_wwan: fixup missing ethernet header (firmware bug workaround)
            drivers/firmware/efivars.c
          x86, efivars: firmware bug workarounds should be in platform
    This series adds workarounds for 3 different firmware bugs, each
    exact distribution of the buggy firmwares. All we know is that the
    net: qmi_wwan: prevent duplicate mac address on link (firmware bug workaround)
    net: qmi_wwan: fixup destination address (firmware bug workaround)
    instead of the address the device firmware should have learned
    hardcoded firmware default.
    net: qmi_wwan: fixup missing ethernet header (firmware bug workaround)
    same firmware bug: Most of the packets received from the device while
    It is believed that the bug depend on firmware revision, which means
    affected if we consider all available firmware revisions.
    iommu/amd: Don't report firmware bugs with cmd-line ivrs overrides
    function might not be a firmware bug anymore. So disable
    the firmware bug reporting if the user provided valid
    code to request firmware at IFF_UP to play more nicely with being
    open source firmware, and an ath9k_hw initvals fix to improve device
    access the MNG firmware while the port was in a down state.  The other
    * Tx timeout and subsequent firmware reset by removing check for
    firmware reset.
    even if firmware did not initialize it. If more than one graphics
    adapter is present, ensure the one initialized by firmware is set
    This patch sets the facilities Linux knows about incase the firmware doesn't.
    Memory allocated to rtas_firmware_flash_list in rtas_flash_write
    unload rtas_flash module after loading new firmware image and
    This patch frees rtas_firmware_flash_list during module exit.
    This issue is seen with the Chromebook Pixel due to a firmware bug in
    path in order to work around this issue.  A future firmware update
    This registers /sys/firmware/efi/{,systab,efivars/} whenever EFI is enabled
     *) userspace to check for the existence of /sys/firmware/efi as a way
     *) 'mount -t efivarfs none /sys/firmware/efi/efivars' without manually
      variable code, into the firmware/efi directory. Note that the efivars.c
        mount -t efivarfs none /sys/firmware/efi/efivars
    information on the BIOS boot device available in /sys/firmware/edd/.
    "x86, efivars: firmware bug workarounds should be in platform code".
    Chain noise is done in the firmware and Bluetooth Coexistence
    it just ignores the new channel width for lack of firmware
    device firmware crashing since it checks regulatory as well.
    ERROR: "usb_control_msg" [drivers/media/common/cypress_firmware.ko] undefined!
    [media] hdpvr: recognize firmware version 0x1e
    This is the latest firmware version and - it seems - the most reliable.
    are addressed in the firmware.
      [SCSI] qla2xxx: Fix crash during firmware dump procedure.
    brcmfmac: obtain iftype for firmware-signal descriptor lookup
    associated with a sk_buff for firmware-signalling. It needs the
    brcmfmac: support save&restore firmware feature
    Support for it is hardware and firmware dependent.
    repair misbehaving monitor firmware.
    disk firmware version but the code overwrites the driver version with the disk
    ASoC: wm_adsp: Add support for firmware wide coefficient blocks
    Firmwares may provide some firmware wide configuration regions which can
    be configured by the coefficient files using the firmware ID as the
    Merge tag 'fw-for-3.10' of git://github.com/broadcom/bcm11351 into next/firmware
    the firmware information from the info client and then disconnect from it.
    [SCSI] aacraid: Dual firmware image support
    This patch adds dual flash firmware support for Series 7 and above controllers.
    [SCSI] qla4xxx: Pass correct LUN address to firmware in case of lun_reset
    [SCSI] qla4xxx: Fix double reset in case of firmware hung for ISP83XX
    In case of firmware hung we need to call "mailbox_premature_completion" to
    complete any pending mbox command as firmware is not alive.
    Merge tag 'secure-exynos-for-v3.10' of git://git.kernel.org/pub/scm/linux/kernel/git/kgene/linux-samsung into next/firmware
    add support secure firmware for exynos
      ARM: EXYNOS: Add secure firmware support to secondary CPU bring-up
      ARM: EXYNOS: Add support for Exynos secure firmware
      ARM: Add interface for registering and calling firmware-specific operations
    Merge branch 'exynos/clk' into next/firmware
    sound_firmware: don't bother with filp_close()
    x86, efivars: firmware bug workarounds should be in platform code
    firmware bug, plain and simple.
    Franky Lin gives us a brcmfmac fix to fail at the firmware loading
    brcmfmac: wait for firmware event when creating P2P_DEVICE interface
    The firmware sends a IF event to notify the host driver that the
    brcmfmac: firmware shared data version fix
    brcmfmac: read firmware console without trap indication
    brcmfmac: handle firmware signals requesting for packets
    The firmware can request the host driver for packets, by sending
    brcmfmac: handle firmware signalling destination entry state
    brcmsmac: request firmware in .start() callback
    The firmware is requested from user-space. To assure the request
    ath9k_htc: accept 1.x firmware newer than 1.3
    Since the firmware has been open sourced, the minor version has been
    ARM: EXYNOS: Add secure firmware support to secondary CPU bring-up
    Boards using secure firmware must use different CPU boot registers and
    call secure firmware to boot the CPU.
    ARM: EXYNOS: Add support for Exynos secure firmware
    Some Exynos-based boards contain secure firmware and must use firmware
    This patch adds firmware operations for Exynos secure firmware and a way
              .init_early   = exynos_firmware_init,
              firmware@0203F000 {
                      compatible = "samsung,secure-firmware";
    firmware.
    ARM: Add interface for registering and calling firmware-specific operations
    Some boards are running with secure firmware running in TrustZone secure
    This patch adds an interface for platforms to specify available firmware
    A wrapper macro, call_firmware_op(), checks if the operation is provided
    In code using firmware ops:
      if (call_firmware_op(cpu_boot, cpu) == -ENOSYS)
              /* tell platformX firmware to enter idle */
              /* tell platformX firmware to boot CPU i */
      static const struct firmware_ops platformX_firmware_ops = {
              register_firmware_ops(&platformX_firmware_ops);
    enic: be less verbose about non-critical firmware errors
    If a feature is not supported by firmware no need to print an error message.
    net/mlx4_en: Enable DCB ETS ops only when supported by the firmware
    Enable the DCB ETS ops only when supported by the firmware. For older firmware/cards
    r8169: Modify the method for setting firmware
    firmware could support setting mac ocp.
    r8169: Remove firmware code
    remoteproc: support default firmware name in rproc_alloc()
    If rproc_alloc isn't given a firmware name, look for a default
    Copy resource table from first to second firmware loading.
    After firmware is loaded to memory, update the vdevs resource
    [SCSI] qla2xxx: Fix crash during firmware dump procedure.
    qla2xxx_copy_atioqueues() in stack trace when firmware dump is
    The original patch was not covering all the adapters and firmwares.
    firmware,IB/qib: revert firmware file move
    Commit e2eed58b4fbf ("IB/qib: change QLogic to Intel") moved a firmware
    firmware name as used in qib.
    remoteproc: parse STE-firmware and find resource table address
    Parse the STE firmware and scan the TOC-table to find the address
    remoteproc: add find_loaded_rsc_table firmware ops
    Add function find_loaded_rsc_table to firmware ops. This function
    prepare for loading firmware once.
    firmware image chunk.
    it is handled by the ISP's firmware.
    controlled by the ISP firmware running on the Cortex-A5, allows
    internal FIMC-IS ARM CPU firmware. The image sensor driver could
    memory, loading the firmware, FIMC-IS register interface and
    "The only fix here is to the passive-no-RX firmware regulatory
    practice, as it would require the siano's firmware to return
    The firmware API changed to differentiate between event and
    iwlwifi: print opmode when firmware is loaded
    firmware is loaded.
    The firmware starts sending nulldata frames for keepalive immediately
    handled differently in the firmware. If a P2P device is added power
    existing firmware, change the API in the driver back
    to the API used in the current firmware.
    to the firmware. When credits run out the packets should be queued
    and dequeued when receiving creditback signals from the firmware.
    brcmfmac: only allocate firmware-signalling resources if required
    Bail out of brcmf_fws_init() when no firmware-signalling is asked
    If iovar to the firmware fails the firmware-signalling module
    During SDIO layer flow control signalling firmware can issue
    When firmware-signalling is active the brcmf_txcomplete() does
    a free of the sk_buff when transfer to firmware fails in the
    before sending to the firmware and handling the tx status signal.
    brcmfmac: add flow-control mode to firmware signalling
    Upcoming patches will add firmware signalled flow control. Prepare
    used to cleanup packet buffers from firmware-signalling code.
    brcmfmac: add firmware-signalling hanger functions
    The hanger for firmware-signalling is used to retain information for
    brcmfmac: perform filtered firmware-signalling cleanup upon DEL_IF
    associated information. In brcmfmac it is used to hold firmware
    brcmfmac: add firmware-signalling cleanup function
    brcmfmac: add handler for credit map firmware events
    The firmware signalling functionality needs the credit map firmware
    brcmfmac: handle firmware signal for updating mac descriptor info
    brcmfmac: hookup firmware signalling to firmware interface events
    to firmware freeing up the original packet. However, that packet is
    still referenced in firmware-signalling so this would result in a
    Nvram contains critical initialization parameter for firmware to run. Host
    chip and implement asynchronous firmware reading in the callback routine
      patterns. LP5562 driver supports the firmware interface and the predefined
      And 'engine_mux' is updated with the firmware interface is activated.
    Since the FIMC-IS firmware communicates with an image sensor directly
    Since the FIMC-IS firmware communicates with an image sensor directly
    Found problem on system that firmware that could handle pci aer.
    But after os boots, firmware can not get report anymore, even pci=noaer
    Current kernel code is using _OSC query to notify firmware about support
    That will have problem when pci=noaer or aer firmware_first is used.
    As firmware have that control set for os aer already in query support stage,
    ASoC: wm_adsp: Split ADSP1 and ADSP2 firmware controls
    ASoC: wm_adsp: Provide defines for firmwares
    For future work to have specific handling for some firmwares.
    [media] media: move dvb-usb-v2/cypress_firmware.c to media/common
    Loading the cypress firmware is not dvb specific and should be common
    ASoC: wm0010: Report filename when we fail to load firmware
    ASoC: wm0010: Constify usage of firmware filenames
    by the firmware as it hasn't heard a beacon yet. Before,
    firmware reject it again.
    v9: Reinstate the fix to properly ignore the firmware edp bpp ... this
    tg3: fix length overflow in VPD firmware parsing
    Limit the hardware's reported firmware string length (max 255 bytes) to
    stay inside the driver's firmware string length (32 bytes). On overflow,
    truncate the formatted firmware string instead of potentially overwriting
    driver/firmware (both from 1.9.4 to 1.9.7)"
    Fix settings not being applied when the device is idle and the firmware
    firmware; however, all versions of the firmware are affected.
    Currently, default VHT configuration from the firmware is used
    firmware based on input received from cfg.
    [media] au0828: improve firmware loading & locking
      to 0 since the tuner loses the firmware at that time.
    We retested with this AP and later firmware doesn't have this
    [media] go7007: don't continue if firmware can't be loaded
    The go7007 driver would continue during probe if no firmware could be
    loaded. Without firmware the probe() should return an error, so do that.
    by firmware for roaming statistics instead of the
    [media] go7007: drop firmware name in board config, make configs const
    The firmware is always the same, so drop it from the board configs. Also make
    Add support for the other devices that need to load the boot firmware.
    All firmware files are now placed in a single go7007 directory.
    firmware loader for any go7007 device, not just for the s2250/1.
    [media] go7007: remember boot firmware
    [media] s2250-loader: use usbv2_cypress_load_firmware
    [media] cypress_firmware: make checkpatch.pl happy
    [media] af9035: select firmware loader according to firmware
    AF9035 and IT9135 supports two different firmware format. Select
    correct loader according to first byte of firmware file.
    set up by the platform firmware and managed by hardware.  Software
    there's also a workaround to reset USB devices when the firmware upload
      PCI: Use ROM images from firmware only if no other ROM source available
    Some firmware exhibits a bug where the same VariableName and
    [    0.587123] sysfs: cannot create duplicate filename '/firmware/efi/vars/SbAslBufferPtrVar-01f33c25-764d-43ea-aeea-6b5a41f3f3e8'
    variable list once we hit this firmware bug. Our only solution is to
    VariableName, as not all firmware updates VariableNameSize in the same
      > On HP z220 system (firmware version 1.54), some EFI variables are
      > ls -d /sys/firmware/efi/vars/*8be4d* | grep -v -- -8be returns
      > /sys/firmware/efi/vars/dbxDefault-pport8be4df61-93ca-11d2-aa0d-00e098032b8c
      > /sys/firmware/efi/vars/KEKDefault-pport8be4df61-93ca-11d2-aa0d-00e098032b8c
      > /sys/firmware/efi/vars/SecureBoot-pport8be4df61-93ca-11d2-aa0d-00e098032b8c
      > /sys/firmware/efi/vars/SetupMode-Information8be4df61-93ca-11d2-aa0d-00e098032b8c
    We know that with some firmware implementations writing too much data to
    This driver can use several firmwares. Provide such info at
    module firmware metadata.
    [media] siano: use defines for firmware names
    There are too many firmwares there. As we need to add
    [media] siano: remove the bogus firmware lookup code
    [media] siano: simplify firmware lookup logic
    There are two ways to specify firmware for siano devices: a
    [media] siano: fix status report with old firmware and ISDB-T
    payload (this is what happens with sms2270 and firmware 8.1),
    Newer firmwares seem to require an init device message. Apply
    [media] siano: use the newer stats message for recent firmwares
    The old statistics request don't work with newer firmwares.
    Add a logic to use the newer stats if firmware major is 8.
    Note that I have only 2 devices here, one with firmware 2.1
    firmware 8.1. We may need to adjust the firmware minimal
    firmware versions between 2.x and 8.x.
            [   61.869415] smscore_load_firmware_family2: rc=0, postload=0x          (null)
            [ 1348.441160] smscore_load_firmware_family2: rc=0
    [media] siano: report the choosed firmware in debug
    Don't keep in the dark: report the firmware file name after
    lookup. That helps to debug what's happening when a firmware is not
    [media] siano: make load firmware logic to work with newer firmwares
    There are new firmwares for sms2xxx devices. Change the firmware
    load logic to handle those newer firmwares and devices.
    [media] siano: store firmware version
    As there are some changes that seem to be firmware-dependent,
    we need to store the firmware version, as we don't want to break
    custom) firmware.
    wakeup trigger code -- the firmware was changed to look at
    In firmware "listener" (monitor) mode, we still need to
    This feature is not implemented yet in firmware.
    PCI: Use ROM images from firmware only if no other ROM source available
    expects. There is no need to parse the vht cap from the firmware
    for its command response from firmware. If the function shutdown
    sent to firmware. Firmware expcets only FUNC_INIT once WLAN
    firmware errors like showed below and make 3945 device non usable.
    iwl3945 0000:02:00.0: Loaded firmware version: 15.32.2.9
    ath6kl: print firmware capabilities
    Printin the  firmware capabilities during the first firmware boot makes it easier to find out what
    features firmware supports.
    [21025.678667] ath6kl: firmware supports: sched-scan,sta-p2pdev-duplex,rsn-cap-override
    bluetooth: btmrvl_sdio: look for sd8688 firmware in proper location
    The firmware images are shared with libertas_sdio WiFi chip and used to be
    in libertas/ subtree in linux-firmware. As btmrvl_sdio used to look into
    the linux-firmware root, it ended up being unsuccessful. Since the
    firmware files are not specific to the libertas hardware, they're being
    netxen: write IP address to firmware when using bonding
    wil6210: sync with new firmware
    as previous firmware, no new features.
    New firmware allows for shorter SW reset procedure.
    [  207.272378]        [<ffffffff8135c76e>] _request_firmware+0x52e/0xb20
    [  207.272389]        [<ffffffff8135cdd6>] request_firmware+0x16/0x20
    [  207.272575]        [<ffffffff8135c7dd>] _request_firmware+0x59d/0xb20
    [  207.272587]        [<ffffffff8135cdd6>] request_firmware+0x16/0x20
    powerpc/85xx: Reserve a partition of NOR flash for QE ucode firmware
    Due to the partition of JFFS2 overlaps with QE ucode firmware, So JFFS2
    QE ucode firmware.
    Currently the caps are parsed on every firmware reload, causing any
    When there is a firmware to interface mode mismatch, the triggered
    firmware reload causes a reset of the regulatory settings, causing all
    To prevent this, only parse the caps on the first firmware load during
    orinoco_usb: don't release nonexistent firmware
    bogus pointer to release_firmware() when priv allocation fails.
    The me-2600i needs to have firmware uploaded to the board. Add a new
    field to the boardinfo, 'needs_firmware', to indicate this.
    Staging: bcm: potential forever loop verifying firmware
    There is an ioctl() to write data to the firmware.  After the data
    is written, it reads the databack from the firmware and compares
    firmware size is not a multiple of 4.  I've fixed it by replacing
    18) Fix various issues in benet driver wrt waiting for firmware to
    Commit 9f9c9cbb6057 ("drivers/firmware/dmi_scan.c: fetch dmi version
    a service patch firmware to the scratchpad for the boot code to execute. This
    A major portion of this patchset is refactoring the existing firmware download
    section to allow a cleaner merge of the 57766 download. The 57766 firmware
    differs from previous firmware in that it's not written to a contiguous area in
    The patchset makes an attempt to make the new firmware format to be an
    tg3: Download 57766 EEE service patch firmware
    This patch downloads the EEE service patch firmware and enables the necessary
    tg3: Enhance firmware download code to support fragmented firmware
    This lays the ground work to download the 57766 fragmented firmware. We
    tg3: Cleanup firmware parsing code
    The current firmware header parsing is complicated due to interpreting it as a
    u32 array and accessing header members via array offsets. Add tg3_firmware_hdr
    structure to access the firmware fields instead of hardcoding offsets. The same
    header format will be used for individual firmware fragments in the 57766.
    The 57766 rxcpu needs to be paused/resumed when we download the firmware just
    like we do for existing firmware. Refactor the pause/resume code to be
    tg3 used the fw_needed member loosely as a synonym for firmware TSO. Now
    that the 57766 needs firmware download support, fw_needed can no longer be
    The current MC firmware and driver discard the first two bytes of this
    older version of the firmware and driver.
    will try to enable PTP in the firmware using the enhanced mode
    (above). If the firmware returns an error, the driver will enable PTP
    in the firmware using the old mode.
    firmware upgrade. Resume to normal state once scm_blk_set_available is
      firmware bug, but still a regression because the device work as
    Appropriate packet filters for wowlan are configured in firmware
    start of data. This will be used for firmware signalling.
    brcmfmac: add support for TLV based firmware signalling
    The firmware and host can exchange signals which are carried within
    RSSI signals from firmware.
    brcmfmac: increase required skbuff headroom for firmware signalling
    In preparation of firmware signalling feature additional headroom is
    firmware.
    firmware:       brcm/brcmfmac-sdio.txt
    firmware:       brcm/brcmfmac-sdio.bin
    firmware:       brcm/brcmfmac43236b.bin
    mwl8k: Load 8764 firmware image
    a 8764 loads firmware image without a helper image
    b Add firmware support with API versioning
    brcmsmac: export firmware version to ethtool
    This exports the firmware version in use to userspace through ethtool.
    firmware-version: 610.812
    iwlwifi: move firmware restart debugfs hook to op_mode
    iwlwifi: mvm: update firmware API - MAC ID in RX
    The firmware tells the driver to what MACs the received frame
    is taken as a base to calculate TBTT. The firmware doesn't use
    When a station is added, we need to tell the firmware what
    the initial data, the firmware will track future changes
    With remote wake, the firmware creates a TCP connection
      $ sudo mount -v /sys/firmware/efi/efivars mount: Cannot allocate memory
      $ sudo mount -v /sys/firmware/efi/efivars mount: Cannot allocate memory
    the firmware to complete POST successfully. The original code would
    The patch forces the driver (be_eeh_reset) to wait the firmware
    available for the new virtual interface in the firmware.
    in the FSCR (Facility Status & Control Register) incase some firmwares don't
    /sys/firmware/acpi/hotplug/, one for each hotplug profile, containing
      ARM: dts: imx6q: Remove silicon version from SDMA firmware
      [SCSI] qla4xxx: Added support for force firmware dump
      [SCSI] qla4xxx: Throttle active IOCBs to firmware limits
    apparently fails to push the firmware to the device:
    Bluetooth: Downloading firmware failed!
    Bluetooth: Downloading firmware failed!
    ipmi: add options to disable openfirmware and PCI scanning
    Add try...  parameters to disable pci and platform (openfirmware) device
     - Cleanup code duplication in the EFI mixed kernel/firmware code - from
    garbage instead of being zeroed or something equivalent (firmware
      such as emu1010 firmware loading fixes, M-Audio AP192 SPDIF fix, and
      ALSA: emu10k1: Load firmware when it was already cached
      ALSA: emu10k1: Fix regression in emu1010 firmware loading
    to a multiple of 4 bytes by the firmware for transfer
    the MAC context might be removed from the firmware before
      leds-lp5523: use generic firmware interface
      leds-lp5521: use generic firmware interface
      leds-lp55xx: support firmware interface
      leds-lp55xx: add new lp55xx_register_sysfs() for the firmware interface
       - open firmware videomode and hdmi common code helpers
      ((&wl->firmware_load)){+.+.+.}, at: [<ffffffff81062160>] flush_work+0x0/0x2a0
    To summarize, commit 6b6fa58 added a 'cancel_work_sync(&wl->firmware_load)'
    ALSA: emu10k1: Load firmware when it was already cached
    The firmware also needs to be loaded when it was already cached.
    However, we can do better in some cases if the firmware help us.  This
    By using the firmware-provided maximum number of nodes instead of
    memory-hotplug: remove /sys/firmware/memmap/X sysfs
    When (hot)adding memory into system, /sys/firmware/memmap/X/{end, start,
    We cannot free firmware_map_entry which is allocated by bootmem because
          separately in firmware_map_find_entry() and
          firmware_map_remove_entry().  Hold the map_entries_lock across find
          and remove /sys/firmware/memmap/X operation.
    [tangchen@cn.fujitsu.com: reuse the storage of /sys/firmware/memmap/X/ allocated by bootmem]
    [tangchen@cn.fujitsu.com: fix the doc format in drivers/firmware/memmap.c]
         firmware trampoline (prom_init.c) on 64-bit by Anton Blanchard
    aer_acpi_firmware_first().
    fnic driver issues LUN RESET to firmware. On successful completion of device
    [SCSI] fnic: fixing issues in device and firmware reset code
    1. Handling overlapped firmware resets
         This fix serialize multiple firmware resets to avoid situation where fnic
         device fails to come up for link up event, when firmware resets are issued
         back to back. If there are overlapped firmware resets are issued,
         the firmware reset operation checks whether there is any firmware reset in
    4. Preventing IOs during firmware reset.
         Current fnic implementation allows IO submissions during firmware reset.
         This fix synchronizes IO submissions and firmware reset operations.
         firmware before firmware reset.
    increases, this causes a lot of traffic and busies the firmware.
    NULL.  In this context, if the firmware were to return an
    ALSA: emu10k1: Fix regression in emu1010 firmware loading
    This patch fix regression in emu1010 firmware loading after
    loop-reset and firmware's completion of link re-negotiation.  The
    original code incorrectly assumes that firmware AENs would arrive
    Avoid firmware glitch in Cypress PS/2 Trackpad firmware version 11
      firmware: Ignore abort check when no user-helper is used
      firmware: Reduce ifdef CONFIG_FW_LOADER_USER_HELPER
      firmware: Make user-mode helper optional
      firmware: Refactoring for splitting user-mode helper code
    Fix up trivial conflict in drivers/firmware/efivars.c
    completely hidden. This is the case of firmware-driven error
    IPoIB: Add version and firmware info to ethtool reporting
    Implement version info as well as report firmware version and bus info
    At this time, the only documentation for the device is the firmware
    It also fixes the missing audit for the return value of firmware download
    the wlconf structure to support newer firmwares."
       firmware, and is handled by the notification wait handler
    For the firmware to know when DTIM beacons arrive
    Work requests are passed between the host and the firmware with a
    firmware and back to host endianness on return.  This swapping seems
    But byte swapping isn't needed as the firmware doesn't actually touch
    With newer firmware, we can get streaming data due to connection
    With later firmware, the chances of getting streaming mode data after
      ARM: dts: imx6q: Remove silicon version from SDMA firmware
    the firmware to associated only after having received a
    Note that this is tricky: a firmware bug (that has
    efivarfs_file_write(), which means we can't rely on the firmware to
    handles base addresses and firmware detection.
    This patch updates the firmware version detection to pass
    Further it updates the firmware version detection, since the
    location of the firmware ID bytes in the designated memory
    hold the firmware information and a separate function to
    registers, firmware name, FW download block size, etc. from
    qlcnic: fix firmware based IDC participation
    Driver needs to stop participating in firmware based Inter Driver
    Register for firmware based Inter Driver Communication (IDC) using initialize
    ARM: dts: imx6q: Remove silicon version from SDMA firmware
    Remove silicon version from SDMA firmware.
    This makes it consistent with other i.MX SoCs firmware names.
    Base the DSP firmware transfer and communication timeouts on jiffy values.
    between firmware and driver. This was hidden because the
    the IF_ADD event from firmware.
    Upon receiving an IF event from the firmware the interface
    With upcoming P2P feature the firmware will send a IF event
    bit and WPA-PSK (TKIP) with firmware 2.13.1.0.lm87.arm (md5sum:
    firmware doesn't support changing the rates after the STA is started,
    affect backwards-compatibility with older firmwares.
    wlcore: use single-role version when verifying the PLT firmware
    The PLT firmware used by wl12xx for calibration always has the same
    version number as the single-role firmware.
    Currntly the driver rejects the PLT firmware since anything that is
    This core does not use a firmware or an eeprom.
    are removing the generic firmware driver (vesa/efi/offb), that a new driver
     Add leds-lp55xx.txt which includes the firmware interface description.
    leds-lp5523: use generic firmware interface
     LP55xx common driver provides generic firmware interface
     'firmware_cb' and 'run_engine'.
    leds-lp5521: use generic firmware interface
     LP55xx common driver provides generic firmware interface
     'firmware_cb' and 'run_engine'.
    leds-lp55xx: support firmware interface
     loading the firmware. ('select_engine' and 'run_engine')
     Register addresses for loading firmware data
     This sequence is almost same as the firmware interface.
     (2) Mode change to load                   : 'loading' of firmware class
     (3) Write pattern data into selected area : 'data' of firmware class
     echo 1 > /sys/class/firmware/lp5521/loading
     echo "4000600040FF6000" > /sys/class/firmware/lp5521/data
     echo 0 > /sys/class/firmware/lp5521/loading
     o 'engine_idx' and firmware data, 'fw'
    leds-lp55xx: add new lp55xx_register_sysfs() for the firmware interface
     This patch is the initial step for adding the firmware interface.
    it means downloading firmware into each one of them to execute
    [media] staging: media: go7007: firmware protection Protection for unfirmware load
    If no firmware was loaded (no exists,wrong or some error) then rmmod
    Fixed wrong condition in firmware reload function used by the watchdog.
    (dev_cap->flags holds the firmware capabilities).
    This is not needed with MVM firmware.
    for its bus interface after loading firmware into it. A driver
    ASoC: wm_adsp: Use asynchronous I/O to write firmware and coefficients
    the delay between transfers, reducing firmware download times.
    mtd: bcm47xxpart: register extra "firmware" partition
    checksum) and for writing a new firmware.
    firmware: Ignore abort check when no user-helper is used
    firmware: Reduce ifdef CONFIG_FW_LOADER_USER_HELPER
    By shuffling the code, reduce a few ifdefs in firmware_class.c.
    Also, firmware_buf fmt field is changed to is_pages_buf boolean for
    firmware: Make user-mode helper optional
    guards the user-helper codes in firmware_class.c with ifdefs.
    firmware: Refactoring for splitting user-mode helper code
    Since 3.7 kernel, the firmware loader can read the firmware files
    Without this patch, the /sys/bus/pci/devices/.../firmware_node symlink
    mwifiex: do not reconfigure tx buffer size in firmware while associating
    association can cause data path failure in firmware after
    The tx buffer reconfiguration is not really useful in firmware.
    Since the firmware will give us an A-MPDU bit and
    Newer firmware revisions have a completely new
    firmware API. This is the new driver for this
    net/mlx4_en: Don't reassign port mac address on firmware that supports it
    Mac reassignments should only be done when not supported by the firmware. To
    accomplish that, checking firmware capability bit to know whether we should
    net/mlx4_core: Use firmware driven flow steering hash mode
    to set hard coded hash configuration which is changed by the firmware from L2
    used to put obnoxious firmware into check on lid reopening.
      efivarfs: Never return ENOENT from firmware
    The new MVM (multi-virtual MAC) firmware driver
    The firmware TLV for calibration data isn't
    In case vring setup with the firmware failed,
    wil6210: Never delete Rx chain with firmware
    as reset is the only flow that removes Rx chain in the firmware.
    Strictly say, it is firmware issue - it should issue "disconnect"
    In the firmware, added is ability to report internal errors using IRQ.
    While using STA mode in the AP firmware, avoid
    calling some firmware commands which are not
    supported by the AP firmware.
    firmware types.
    Add and delete self entry in the firmware sta database
    firmware.
    Set mac type for station interface on AP firmware
    as secondary. This allows the firmware to set specific
    mwl8k: Allow adding station interface on AP firmware
    AP firmware is loaded & in-use, allow creating
    rt2x00: print chip and firmware version by default
    EFI firmware. Over time its semantics have changed, and it now
    bit-native firmware, e.g. 64-bit kernel with 64-bit firmware.
    scan_pending_q. Each scan command will be sent to firmware and
    next scan command in scan_pending_q to firmware.
    ASoC: wm_adsp: Fix support for firmware switching on DSP2 and higher
      ASoC: wm_adsp: Release firmware on error
    staging/fwserial: Assume firmware is OHCI-complaint
    [SCSI] qla4xxx: Added support for force firmware dump
    This patch force driver to collect firmware dump using following command:-
    [SCSI] qla4xxx: Throttle active IOCBs to firmware limits
    QLA4xxx firmware may assert if given more IOCBs than it can handle.
    on the total number of IOCB buffers received from get_firmware_status
    Removed unnecessary calls to qla4xxx_get_firmware_status from
    [SCSI] csiostor: Don't leak mem or fail to release firmware in csio_hw_flash_config()
    firmware. This should take care of the leaks.
    operations from firmware implementing the PSCI protocol.
    Some use cases like firmware download can transfer a lot of data in quick
    Maximise robustness for the widest range of firmwares by ensuring the DSP
    performance testing. The EFI firmware on my test box unfortunately no
    Performing the DUMP_ETH_STATS firmware command outside the lock leads to kernel
    qlcnic: set driver version in firmware
    ASoC: wm_adsp: Add speaker Tx as a firmware option
    vendor's firmware revision instead of that of the implemented EFI
    on the revision of the vendor's firmware since the version scheme is
      ACPI, APEI: Fixup incorrect 64-bit access width firmware bug
    response from AP, our firmware uses proprietary status codes.
    ASoC: wm_adsp: Release firmware on error
    This patch correctly releases the firmware if the magic string in the
    firmware header does not match.
    ASoC: wm_adsp: Release firmware on error
    This patch correctly releases the firmware if the magic string in the
    firmware header does not match.
    Some firmware releases of Gigaset M105 do not accept AT+VLS=0 command
    required for other Qualcomm firmware based MBIM devices.
    Some Sierra Wireless firmwares support CDC MBIM but have no CDC
    Windows uses too, which explains how the firmware bug has gone
    the firmware fb. The new code seems like a bugfix to me.
    drm: Load EDID: Explain better how to write your own EDID firmware
    A description was lacking how to write an EDID firmware file that
    ACPI, APEI: Fixup incorrect 64-bit access width firmware bug
    (ACPI, APEI: Fixup common access width firmware bug). Now there
    net/mlx4_core: Set number of msix vectors under SRIOV mode to firmware defaults
    mode to two can be removed completely, since the firmware sets num_eqs and
    efivarfs: Never return ENOENT from firmware
    is created in the firmware. This leads to users being able to
    firmware. Reading a non-existent variable currently returns -ENOENT,
    while interacting with firmware", and should hopefully indicate to the
    ASoC: wm5102: Add controls for firmware selection
    ASoC: wm2200: Add controls for firmware enumeration
    staging: comedi: deprecate loading firmware with comedi_config
    All the comedi drivers have been converted to use the request_firmware()
    firmware blob as 'aux_data' is no longer required.
    The name of the firmware (drv_datap->base_img) could potentially
    $ echo 1 > /sys/class/firmware/spi0.0/loading
    $ cat fpga_a4m2k.bit > /sys/class/firmware/spi0.0/data
    $ echo 0 > /sys/class/firmware/spi0.0/loading
    firmware: make sure the fw file size is not 0
    If the requested firmware file size is 0 bytes in the filesytem, we
        _request_firmware_load+0x220/0x6b0
        request_firmware+0x64/0xc8
        request_firmware_work_func+0x94/0x100
    iwlwifi: enable communication with WoWLAN firmware
    to the WoWLAN/D3 firmware in order to query it about
    82572, this can take too long and cause the firmware to take ownership of
    ALSA: hda/ca0132 - Declare firmware only when really built
    Revert "ALSA: hda - Add firmware caching to CA0132 codec"
    Since the recent firmware loader code supports caching at S3/S4 by
    for a similar firmware bug.
    SCP buffer transfer to the firmware.
    Finally, add verb tables for configuring DSP firmware.
    filesystems; MSDOS/VFAT for the SoC-required firmware partition, ext2/3/4
    RAM used by the VideoCore is dynamic at boot-time; a firmware config
    basic firmware does if it boots the kernel directly; users may need to
    This patch just skips the clearing of any ASPM setup that the firmware has
    "firmware_node" and "physical_node" files for them, but currently
    ASoC: wm_adsp: Add basic firmware selection support
    There are many firmwares available for ADSP devices. Add basic support
    set of available firmware to start off with.
    Some touchscreens have buggy firmware which claims
    This case may happen if a firmware has a bug and
    it returns without accessing to a firmware to avoid the deadlock.
    This case may happen if a firmware has a bug and
     - cpuA grabs psinfo->buf_lock and stucks in a firmware
    operations from firmware implementing the PSCI protocol.
    ARM: psci: add devicetree binding for describing PSCI firmware
    This patch adds a new devicetree binding for describing PSCI firmware
    With Hard-Wired firmware configuration it was incorrectly provisioning the VFs
    IBM Blue Gene/Q comes with some very strange firmware that I'm trying to get out
    (using the firmware) and have them enter the kexec stub, pre-translated at the
    virtual "linear" address, never touching firmware again.
    this to using the firmware_feature_table.
    powerpc/pseries: Allow firmware features to match partial strings
    This allows firmware_features_table names to add a '*' at the end so that only
    When a '*' is added, only upto the '*' is matched when setting firmware feature
      PCI/ACPI: Reserve firmware-allocated resources for hot-added root buses
      x86/PCI: Don't track firmware-assigned BAR values for hot-added devices
    functionality on firmware load, however it does affect other clocks
    PCI/ACPI: Reserve firmware-allocated resources for hot-added root buses
    x86/PCI: Don't track firmware-assigned BAR values for hot-added devices
    mwl8k: bump firmware API to 3
    New firmware is required to support
    Bumping firmware API version by one.
    are empty. Whenever watchdog event is raised, firmware
    We know 'firmware' is non-NULL from the beginning of mwifiex_prog_fw_w_helper,
    remove all !firmware paths from the rest of the function.
    identifiers to event names. With redesign of firmware event
    brcmfmac: assure USB dongle firmware is reset upon module unload
    Upon unloading the brcmfmac module the USB firmware should be reset
    Set bitrate_mask is not desired anymore. The firmware will
    Power save support was removed from iwlegacy due to possible firmware
    the carl9170 firmware. The default number of
    supported interfaces for all current firmwares is 2.
    custom firmwares.
    carl9170: import 1.9.7 firmware headers
    Import new headers from my firmware branch:
    b43: Fix firmware loading when driver is built into the kernel
    Recent versions of udev cause synchronous firmware loading from the
    out. The original fix for b43 (commit 6b6fa58) moved the firmware
    firmware loading. This method is OK when b43 is built as a module;
    This version changes the code to load the initial firmware file
    using request_firmware_nowait(). A completion event is used to
    reads several firmware files - the remainder can be read synchronously.
    staging: vt6656: channel/control/firmware/int/usbpipe to new structures
      MAINTAINERS: remove firmware/isci/
    Detect NVRAM types for 5762 and read OTP firmware version.
    [media] s5p-mfc: Move firmware allocation point to avoid allocation problems
    Move firmware allocation from open to probe to avoid problems
    [media] af9035: print warning when firmware is bad
    MAINTAINERS: remove firmware/isci/
    This directory was removed by commit 7d99b3abaf84 ("isci, firmware:
    firmware, QCA maintains the device driver.
    - Monitor: due to a hardware/firmware limitation
    firmware, the cards comes pre-flashed and no firmware
    added to both the interrupt based aer path and the firmware first path.
    There's a bug in the currently released firmware version,
    with PS3 since firmware 3.50, as they decided to prevent those
    whereas WL-682 is a ISL3887 (LM87 firmware)]
    NL80211_IFTYPE_MESH_POINT support if the firmware has Content
    qlcnic: flash template based firmware reset recovery
    firmware. These instructions are abstracted as a series of read, write and
    Template based firmware reset recovery and initialization mechanism minimize
    driver changes as firmware evolves.
    firmware error recovery.
    address in the parsing BD. This is used for firmware validation
    [media] get_dvb_firmware: Fix the location of firmware for Terratec HTC
    Fix firmware download for the Terratec Cinergy HTC Stick HD. The file
    [media] ds3000: bail out early on i2c failures during firmware load
       upload the remaining bytes of the firmware.
    The firmware can be downloaded with:
    $ ./Documentation/dvb/get_dvb_firmware vp7049
    [media] get_dvb_firmware: add entry for the vp7049 firmware
    Add an entry to download the dvb-usb-vp7049-0.95.fw firmware for the
    drivers/firmware/dmi_scan.c: fetch dmi version from SMBIOS if it exists
    drivers/firmware/dmi_scan.c: check dmi version when get system uuid
    It establishes passive open connection through firmware work request. Passive
    firmware work request.
    Sets ntuple bits in active open requests. For T4 firmware greater than 1.4.10.0
      solos-pci: add firmware upgrade support for new models
    solos-pci: add firmware upgrade support for new models
    the wrong firmware command to be called, fix it.
    It supports establishing passive open connection through firmware filter work
    Note that this fixes a NULL deref at BIOS takeover when the firmware
       CC      drivers/firmware/efivars.o
      drivers/firmware/efivars.c: In function ‘efivarfs_get_inode’:
      drivers/firmware/efivars.c:886:31: error: incompatible types when assigning to type ‘kgid_t’ from type ‘int’
      make[2]: *** [drivers/firmware/efivars.o] Error 1
      make[1]: *** [drivers/firmware/efivars.o] Error 2
       - Clean ups in many drivers regarding firmware loading
    MIPS: Kconfig: Rename several firmware related config symbols.
    MIPS: Kconfig: Enable drivers/firmware/Kconfig
    This allows the use of /sys/firmware/memmap for MIPS platforms.
    kexec-tools may use /sys/firmware/memmap though current versions parse
     -      Modified the firmware naming convention to contain the firmware image
            <firmware-image>-<firmware-version>.bin The change will enforce loading
            only compatible firmware with this driver and also avoid over-writing
            the old firmware image in-order to load new version driver as the
            firmware names used to be the same.
      also deleted some unused firmware files, and got rid of the very old
      iio:imu: adis16480: show_firmware() buffer too small
      some firmware loading updates and other minor things in the driver
    content via firmware API) smatch complains about that
    ath9k: allow to load EEPROM content via firmware API
    data via the firmware API to avoid this limitation.
    b43legacy: Fix firmware loading when driver is built into the kernel
    Recent versions of udev cause synchronous firmware loading from the
    The original fix for b43legacy (commit a3ea2c7) moved the firmware
    firmware loading. This method is OK when b43legacy is built as a module;
    This version changes the code to load the initial firmware file
    using request_firmware_nowait(). A completion event is used to
    firmware files are read synchronously.
    BCM4716/4717/4718 SoCs. The firmware version 610.812 for brcmsmac found
    in linux-firmware does not support these cores, but a firmware
    firmware file.
    OPAL firmware patches the machine check interrupt vector so that it
    deleting the Connection ID.  This will prevent the firmware assert.
    all the current firmwares support elp, so
    wl18xx: ignore irrelevant firmware version fields
    Previously we were only checking the single-role firmware version.
    Now add code to check for the firmware versions separately for each
    firmware type.
    wl12xx: ignore some of the firmware version fields
    The firmware type and the project number fields in the firmware
    because the former is the firmware type and the latter is an internal
    wlcore: change way of checking the firmware version
    The firmwares version string contain 5 integers.  We used to consider
    some of the integers indicate type of firmware (eg. single-role
    firmware version checks more flexible (eg. allow the lower driver to
    We don't distinguish between STA and AP firmwares anymore, so the
    firmware version checking and quirks setting in wl12xx isn't needed
    wlcore: gather information about firmware stability
    It's sometimes useful to gather information about the firmware
    devices based on the OXUF936QSE chip but having different firmwares,
    and did not encounter any apparent firmware bugs with it.  All devices
    2. Fix spurious failure of a firmware request running during a system
    3. Fix inconsistent statistics after a firmware upgrade.
    only happen immediately after a firmware upgrade it's not really worth
    CLP instructions are used to query the firmware about detected PCI
    iio:imu: adis16480: show_firmware() buffer too small
    firmware reset").
    without OpRegion support, where the firmware changes the display hw
       7) Ambassador ATM driver loops forever while loading firmware, fix
      atm: forever loop loading ambassador firmware
    Will allow use of the engine if firmware (nvXX_fuc086) provided.
    Will allow use of the engine if firmware (nvXX_fuc086) provided.
    Will allow use of the engine if firmware (nvXX_fuc085) provided.
    Will allow use of the engine if firmware (nvXX_fuc084) provided.
    Will allow use of the engine if firmware (nvXX_fuc085) provided.
    Will allow use of the engine if firmware (nvXX_fuc084) provided.
    we have a number of cleanups, message reduction, firmware error
    "Major changes this time are firmware recover support to gracefully
    handle if firmware crashes, support for changing regulatory domain and
    atm: forever loop loading ambassador firmware
    request_firmware() back in 2008.
    ALSA: hda - Add firmware caching to CA0132 codec
    ALSA: hda - Update CA0132 codec to load DSP firmware binary
    firmware install location and transfer it over to the chip using the new DSP
    - Add calls to new DSP loader system to transfer firmware to the hardware.
    1) If DSP firmware loader is enabled, ca0132_download_dsp() is called
    2) Driver requests DSP image using request_firmware().
    ALSA: hda - Add DSP firmware enums and defs to CA0132 codec
    Add new DSP loader switch to Kconfig to turn off DSP firmware.
    firmware. Incase the firmware does not
    firmware will shutdown the system.
    The firmware version of the Kvaser device was 2.5.205.
    This patch contains updates to firmware/hardware header files shared
    The request_firmware interface can induce delays while looking
    for firmware files, even if no fw file is present. In some situations
    Change request_firmware use to be module paramater driven. Default is to
    not attempt firmware download on boot. Add sysfs parameter to invoke
    firmware update.
    And we wouldn't expect all firmware to handle it gracefully.
    The info record at the start of the dsp firmware file has been
    ds3000_firmware_ondemand() is called only once during init. This
    locking scheme may have been useful when the firmware was loaded at
    ALSA: emu10k1: don't update firmware during suspend/resume
    Add a flag to suppress the update in emu1010_firmware_thread() during
    ALSA: emu10k1: cache emu1010 firmware
    Instead of calling request_firmware() at each time, keep the obtained
    firmware internally and reuse it.
    ALSA: hdsp: improve firmware caching
    As the recent firmware code tries to reread and cache the firmware by
    itself, it's even better to keep the struct firmware data instead of
    Last, but not least, allocate the firmware data loaded via ioctl in
    vmalloc'ed buffer instead, as the firmware size isn't that small.
    ALSA: hda - Don't release firmware when CONFIG_PM is set
    The new firmware code tries to re-read the formerly read firmware
    files before suspend.  Thus it's wiser to keep the "patch" firmware in
    firmware code from vx driver (snd-vxpocket and snd-vx222).
    It makes no longer sense to keep the old hwdep user-space firmware
    firmware has provided us a way to power off the device during runtime.
    firmware: remove last vestiges of dabusb
    obsolete driver"), so remove the last vestiges of firmware and
    the "sniffer" firmware mode."
    drm/radeon: check alloc_apertures() success in radeon_kick_out_firmware_fb()
    drm/cirrus: check alloc_apertures() success in cirrus_kick_out_firmware_fb()
    to enable MFP since the firmware interprets some
    for the primary interface. When handling IF ADD events the firmware
    brcmfmac: correct handling IF firmware event
    brcmfmac: cleanup of usb firmware download routines
    Clean code related to firmware download routines. Remove obsolete
    brcmfmac: rework firmware event handling code
    Handling of firmware event has been reworked into a seperate
    code file. The change is needed as firmware event can be received
    mwl8k: Send BASTREAM firmware commands per vif
    The firmware supports 8 macid's corresponding to 8 BSS that can be
    As ath6kl firmware can't do intersections the driver should only listen
    OPAL provides the firmware base/entry in registers at boot time
    firmware loader: document firmware cache mechanism
    This patch documents the firmware cache mechanism so that
    users of request_firmware() know that it can be called
    the device's firmware needn't be cached any more by individual
    driver itself to deal with firmware loss during system resume.
    firmware loader: introduce module parameter to customize(v4) fw search path
    This patch introduces one module parameter of 'path' in firmware_class
    to support customizing firmware image search path, so that people can
    use its own firmware path if the default built-in paths can't meet their
    parameter when 'firmware_class' is built in kernel:
            firmware_class.path=$CUSTOMIZED_PATH
    firmware: use noinline_for_stack
    firmware loader: Fix the concurrent request_firmware() race for kref_get/put
    There is one race that both request_firmware() with the same
    firmware name.
    request_firmware() -->
    _request_firmware_load() return err                   another request_firmware() is coming -->
    _request_firmware_cleanup is called -->               _request_firmware_prepare -->
    release_firmware --->                                 fw_lookup_and_allocate_buf -->
    firmware loader: Fix the race FW_STATUS_DONE is followed by class_timeout
    There is a race as below when calling request_firmware():
    and request_firmware() will return failure due to condition in
    _request_firmware_load():
    In STA mode, this field is unused in the firmware. In AP
    brcmfmac: use struct brcmf_if parameter in firmware event callbacks
    then firmware would return error. Checking was added to
    firmware, it should just pass the data buffer instead.
    the refactored firmware interface layer made this function obsolete.
    all information needed for interfacing with firmware. As
    refactored firmware interface layer. Remove obsolete brcmf_proto_dcmd
    When command timeout happens due to a bug in firmware/hardware,
    firmware will be re-downloaded.
    libertas_sdio: failed to load firmware
    When the firmware is in SNIFFER mode, it leaves
    Interface 5 is for firmware updates and I'm not sure how to get
    "firmware_version" attribute.
    MIPS: lantiq: adds GPHY firmware loader
    The internal GPHYs need a firmware blob to function properly. This patch adds
    firmware is supporting. The table is then provided through to the
    Make the wanxl firmware array const
    Make the wanxl firmware array const so that it goes in the read-only section.
    Fix the wanxl firmware to include missing constants
    Fix the wanxl firmware to include missing constants such as PARITY_NONE.  It
    UAPI: Fix compilation of the wanxl firmware blob.
    The wanxl firmware needs access to some bits of UAPI stuff, so the -I flag in
    When a firmware error occurs, don't just abort synchronous
    Blocking is done until a new firmware image is loaded.
    On resume or firmware recovery, mac80211 sends a null
    ASoC: wm0010: Split out the firmware file parsing from the boot
    Move the firmware load and record parsing functionality out into
    firmware API in the flush control.
    Added binary attribute info for this purpose, which obsoletes firmware_version
    If T4 configuration file gets loaded from the /lib/firmware/cxgb4/ directory
    Also, in the instructions indicating where to put the firmware file,
    firmware file by name.
        ASUS machines no longer booting due to a firmware bug, and so was
        firmware was merged in 03a1c254975e ("x86, efi: 1:1 pagetable
    Some firmware still needs a 1:1 (virt->phys) mapping even after we've
    This bug was discovered on ASUS machines where the firmware
    informed the firmware via SetVirtualAddressMap() that the boottime
    time. Some broken implementations of EFI firmware require these
    efivars kobject to efi_kobj for create a /sys/firmware/efi/efivars
    This change re-reads the updated variable from firmware, to check for
    igb: Update firmware version info for ethtool output.
    modify the setup code to use the refactored firmware interface layer.
    firmware related interfaces will be associated with a net_device. To
    accomodate provisioning firmware for such interfaces the struct
    The firmware carries channel information in a different format
    The firmware interface has functions to send bsscfg specific commands
    this functions are used that bypass the common firmware interface.
    When the firmware notifies the driver about adding a new interface
    of firmware interface layer.
    brcmfmac: change testmode command to use new firmware interface layer
    switch to new firmware interface layer and remove redundant code.
    brcmfmac: refactor firmware interface layer.
    data to and and from the firmware.
    to firmware.
    firmware will turn off the filtering of scan responses from
    BT firmware will send a new profile A2DP_Voice in this case. So WLAN
    causes BT firmware to busy with security key calculation. At this
    Thus it solves BT firmware panic issue reported in AR9565.
    based on its firmware/hardware limitation, cfg80211
    drivers/media/tuners/xc4000.c: In function ‘check_firmware’:
    firmware: use noinline_for_stack
    drivers/media/pci/cx88/cx88-blackbird.c: In function 'blackbird_load_firmware':
    drivers/media/usb/dvb-usb-v2/lmedm04.c:802:13: warning: no previous prototype for 'lme_firmware_switch' [-Wmissing-prototypes]
    drivers/media/pci/ivtv/ivtv-firmware.c:279:5: warning: no previous prototype for 'ivtv_firmware_restart' [-Wmissing-prototypes]
      b43: Fix oops on unload when firmware not found
     "Here are a number of firmware core fixes for 3.7, and some other minor
      firmware loader: document kernel direct loading
      firmware loader: sync firmware cache by async_synchronize_full_domain
      firmware loader: let direct loading back on 'firmware_buf'
      firmware loader: fix one reqeust_firmware race
      firmware loader: cancel uncache work before caching firmware
        drm/i915: kick any firmware framebuffers before claiming the gtt
     "Fix oops with EFI variables on mixed 32/64-bit firmware/kernels and
    feature should be set after the other PHY settings. And the firmware
    is necessary. Don't enable it without loading the firmware.
    None of the firmware-free chipsets support ALDPS. Neither do the
    firmware. For 8168 series, the ALDPS would be disabled automatically
    when loading firmware. You must not disable it directly.
    firmware loader: document kernel direct loading
    This patch adds description on recently introduced direct firmware
    - the "HTC USB XS HD" uses the same firmware as the "HTC Stick HD";
    b43: Fix oops on unload when firmware not found
    When b43 fails to find firmware when loaded, a subsequent unload will
    AR6004(UB134) firmware supports only LP Endpoint, So map
    mapped in sync with the firmware.
    to the firmware in minutes. For now we will cleanup the
    firmware results in connection failures after recovery
    from firmware error is disabled by default to debug
    of firmware recovery configuration. This would help to have
    periodic message (heart beat challenge) to firmware. Upon reception
    This patch reflects changes in the firmware scheduled scan
    To maintain graceful failure with old firmwares, a new firmware
    Since firmwares from here on out won't support the previous implicit API
    for scheduled scan (set WoW filters and host sleep), bump the firmware
    Unfortunately, due to firmware RAM constraints ath6kl still cannot
    If the firmware decides to initiate a channel switch on an AP vif
    mismatch after a channel switch, since the firmware apparently clears
    When an ath6kl STA vif is issued a connect command, the firmware will
    Starting WoW in firmware and setting host sleep mode is still handled on
    No firmware capability bits or API bump is needed for this patch, as
    and used that also in the firmware WMI interface definitions. But after
    The ath6kl firmware can monitor a connection and report when a certain
    reporting on compatible firmwares.
    firmware and driver individually generate the MAC addresses, introduce a new
    firmware capability bit to keep them compatible.
    The ath6kl firmware can filter scan results based on rssi. This is
    if the firmware doesn't support MFP then the user shouldn't
    net: cdc_ncm: workaround NTB input size firmware bug
    functionality.  This works around the known firmware bug, and
    staging: slicoss: fail out if we dont have a valid firmware file
    fail instead calling request_firmware with filename as a null string
    staging: vt6656: Keep firmware loading local and release firware.
    When done release firmware and if the need be request firmware again.
    stuff.  However, Openfirmware has already done this for us, so there's no
    firmware loader: sync firmware cache by async_synchronize_full_domain
    so use async_synchronize_full_domain to sync caching firmware instead
    firmware loader: let direct loading back on 'firmware_buf'
    Firstly 'firmware_buf' is introduced to make all loading requests
    to share one firmware kernel buffer, so firmware_buf should
    be used in direct loading for saving memory and speedup firmware
            abb139e75c2cdbb955e840d6331cb5863e409d0e(firmware:teach
            the kernel to load firmware files directly from the filesystem)
    bypasses the firmware cache meachnism, so this patch enables
    caching firmware for direct loading case since it is still needed
    firmware loader: fix one reqeust_firmware race
    firmware buf, and this patch moves fw_map_pages_buf()
    firmware loader: cancel uncache work before caching firmware
    before caching firmware during next suspend.
    This patch cancels the uncache work before caching firmware to
    Also this patch optimizes the cacheing firmware mechanism a bit by
    only storing one firmware cache entry for one firmware image.
    So if the firmware is still cached during suspend, it doesn't need
    staging/gdm72xx: sdio_boot: replace firmware upgrade API
    Replace firmware upgrade API in download_image().
    Buggy firmware leads to bad things happening otherwise..
      firmware/memmap: avoid type conflicts with the generic memmap_init()
    firmware/memmap: avoid type conflicts with the generic memmap_init()
      drivers/firmware/memmap.c:240:19: error: conflicting types for 'memmap_init'
    carl9170: handle traps from firmware loader
    While the carl9170 firmware does not use this
    firmware loader on the device does. It uses it
    in case the firmware/hardware has crashed.
    other devices); iwlwifi firmware would assert if
    archscripts depends on scripts_basic") and c1c1a59e37da ("firmware: fix
    ASoC: wm8958: Load firmwares simultaneously
    As of commit 99c2aa (firmware loader: fix creation failure of fw loader
    device) we can have more than one firmware request outstanding at once so
      [media] ds3000: add module parameter to force firmware upload
      [media] ds3000: add module parameter to force firmware upload
         firmware no longer sets up all pin states before starting the
    firmware/cis/PCMLM28.cis.gen.S:1:0: warning: target CPU does not support THUMB instructions [enabled by default]
    Load io_request->DataLength in bytes for newer firmware that supports high
         firmware loading code.  Other than that, most of changes in
    from firmware when connection is lost in different scenarios.
    firmware event body and send it to cfg80211.
    firmware when association attempt fails. Also, the error message
    [SCSI] lpfc 8.3.35: Correct request_firmware use that was increasing boot times
    [SCSI] lpfc 8.3.35: Fixed Linux generic firmware download on SLI4 devices with longer module names
    firmware is now loaded asyncrousnly there.
    [media] ds3000: add module parameter to force firmware upload
    Note that the firmware already disables the receiver before transmit,
    - Modified the firmware naming convention to contain the
      firmware image version (3.1.0.0).
    - The new convention is <firmware-image>-<firmware-version>.bin
    - The change will enforce loading only compatible firmware with this driver
      and also avoid over-writing the old firmware image in-order to load new
      version driver as the firmware names used to be the same.
    [SCSI] bfa: Fix to handle firmware tskim abort request response
    - Handle the tskim abort response from firmware in the
          without your firmware fix patch.  This way, Greg doesn't need to
          rush backporting your patch (as there are still the firmware cache
          and firmware path customization issues to be addressed there).
          reverting the rest of the DRX-K async firmware request, fully
      em28xx: regression fix: use DRX-K sync firmware requests on em28xx
      drxk: allow loading firmware synchrousnously
    /sys/device/<bus>/<bridge path>/<device path>.../firmware_node/description
    /sys/devices/pci0000:00/0000:00.07.0/0000:0e:00.0/firmware_node/description
    Adds register definitions for MFC v6.x firmware
    firmware v6. Also the shared memory management files are removed
    be provided along with the firmware files. Currently only coefficient
    Support download and execution of firmwares to the DSPs on the WM2200.
      em28xx: regression fix: use DRX-K sync firmware requests on em28xx
      drxk: allow loading firmware synchrousnously
    firmware: use 'kernel_read()' to read firmware into kernel buffer
    Fengguang correctly points out that the firmware reading should not use
    and could fail for other users of the firmware loading.
       reset the remote processor and reload the firmware (resulting in the
    firmware: teach the kernel to load firmware files directly from the filesystem
    device firmware.  Current versions of udev will deadlock (causing us to
    firmware is loaded as part of the module initialization path, and this
    The current patch hardcodes the firmware path that udev uses by default,
    and will fall back to the legacy udev mode if the firmware cannot be
    em28xx: regression fix: use DRX-K sync firmware requests on em28xx
    no need anymore for a separate thread to load the DRX-K firmware.
    and asynchronous DRX-K firmware load.
    drxk: allow loading firmware synchrousnously
    Due to udev-182, the firmware load was changed to be async, as
    otherwise udev would give up of loading a firmware.
    Add an option to return to the previous behaviour, async firmware
    having all DVB firmwares loaded synchronously with udev-182.
    2. Fix firmware structure field lookup bug that resulted in missing
    which was recently submitted into the linux-firmware tree.
    in the linux-firmware git repository.
      removing a firmware file and adding a staging tty driver (it depended
      A number of firmware_class.c updates (as you saw a month or so ago),
      x86, microcode: Add a refresh firmware flag to ->request_microcode_fw
      x86, EFI: Calculate the EFI framebuffer size instead of trusting the firmware
    tda1004x: Lock I2C bus during firmware load
    tda1004x doesn't allow firmware loads while it is busy with something
    else. Avoid it to happen by locking the I2C bus during firmware transfer.
    In the current driver, the SENSE_PORT firmware command is issued as a
    The latest ConnectX-3 2.11.500 firmware reports the SENSE_PORT
    The MAD_IFC firmware command fulfills two functions.
    get_dvb_firmware: fix download site for tda10046 firmware
    firmware control packets over usb are async acked. This is
    b43legacy: Fix crash on unload when firmware not available
    When b43legacy is loaded without the firmware being available, a following
    The firmware has support for this feature, so we offload it to
    firmware. In start_ap, driver passes the inactivity timeout
    value to firmware via TLVs and firmware will report STA_DEAUTH
    P2P mode config commands to firmware and set bss role and bss
    send P2P mode config commands to firmware.
    Due to firmware design, driver needs to add a default P2P interface
    mwifiex: send firmware initialization commands synchronously
    The driver will send some commands to firmware during the
    Process the management frames received from firmware and report
    a wrapped-around negative value. It turns out that some firmware uses
    information is correct and print out a firmware bug message
    cxgb4: Don't attempt to upgrade T4 firmware when cxgb4 will end up as a slave
    firmware.  This routine handles all of the complexities of working with the
    the existing adapter firmware in order to quiesce the adapter and uP, etc.
    want/can upgrade firmware, i.e. if cxgb4 is MASTER and has newer firmware
    Note that it should not issue a RESET command after a successful firmware
    cxgb4: Inform caller if driver didn't upgrade firmware
    If a card had already been initialized, on reloading cxgb4 driver firmware
    caller know the firmware was not upgraded so a reset would be issued before
    In case if user defined configuration file at /lib/firmware/cxgb4/t4-config.txt
    Starting with T4 firmware version 1.3.11.0 the firmware now supports device
    1) User defined configuration file: /lib/firmware/cxgb4/t4-config.txt
    [media] cypress_firmware: refactor firmware downloading
    Refactor firmware download function. It also should fix one bug
    [media] cypress_firmware: use Kernel dev_foo() logging
    request_firmware(). Since request_firmware() relies on udevd, the
    initialization only after the firmware request is over.
    op. By doing this, wlcore_probe will be the first to request a firmware
    Declare any firmware that might be used by this driver.
    If all drivers declare their firmware usage, then a sufficiently
    complete list of firmware files can then be used to pare down
    the external linux-firmware package to just the files in actual use.
    [media] media: coda: firmware loading for 64-bit AXI bus width
    Add support for loading a raw firmware with 16-bit chars ordered in
      in firmware. So for now we have an SHDLC and a NOP LLC layers.
    /sys/firmware/acpi/tables/dynamic
    As all current (and old) firmwares corrupt
    For suspend/resume it is necessary to store firmware in memory.
    list of firmwares was created.
    command. Hence the command is downloaded to firmware only after
    brcmfmac: simplify handling e-scan result firmware event
    Upon handling an e-scan result event from the firmware in
    firmware.
    Inside ath9k_hif_usb_firmware_fail(), the instance of
    ath9k_hif_usb_firmware_fail().
    If such bit exists on a given CPU, it must be set by the firmware or
    while processing the stop firmware mailbox command on driver unload,
     [<f98c0f70>] qla4xxx_init_firmware+0x40/0xf0 [qla4xxx]
    [SCSI] qla2xxx: Dont call nic restart firmware if it is already active and running.
      previous attempt at fixing make firmware_install with make 3.82.
      firmware: fix directory creation rule matching with make 3.80
    /sys/firmware/acpi/tables/dynamic
    The qla2xxx firmware actually expects the task management response
    This driver adds custom firmware handlers, because
    STE modem uses a custom firmware layout.
    staging: comedi: me_daq: use request_firmware()
    This driver requires loading a firmware file for the fpga. This
    is currently being done by passing the firmware data using the
    firmware loading options not being set in the comedi_devconfig
    Change the driver so it gets the firmware using request_firmware()
    and ignore any firmware options passed in the comedi_devconfig.
    the firmware for the device from the comedi_config utility. It
    now uses request_firmware_nowait() in the usb_driver probe to
    get this firmware.
    the firmware for the device from the comedi_config utility. It
    now uses request_firmware_nowait() in the usb_driver probe to
    get this firmware.
    the firmware for the device from the comedi_config utility. It
    now uses request_firmware_nowait() in the usb_driver probe to
    get this firmware.
    firmware: fix directory creation rule matching with make 3.80
    rule to create firmware directories which is matched after primary
    6c7080a61fc7 [firmware: fix directory creation rule matching with make
    firmware directory (ie. $(dir %) gives './'). Versions of make prior
    $(dir %) when % is in the base firmware directory and as such continue
    4. Fix for potential over-length requests to firmware.
    v2: use firmware flags
    v2: store all the firmware flags, not just BL control
    As such, the ask-reply way to checking picoLCD firmware version during
    to firmware data within a designated element (or two elements for 64-bit
    value.  It needs to be treated as a `__user` pointer so the firmware
    staging: comedi: daqboard2000: use request_firmware()
    This driver requires loading a firmware file for the cpld. This
    is currently being done by passing the firmware data using the
    firmware loading options not being set in the comedi_devconfig
    Change the driver so it gets the firmware using request_firmware()
    and ignore any firmware options passed in the comedi_devconfig.
    sfc: Convert firmware subtypes to native byte order in efx_mcdi_get_board_cfg()
    subtype numbers and are not recognised by the firmware update tool
    USB: ezusb: add functions for firmware download
    This patch adds new functions to upload firmware to the controller. The
    This also fixes a bug occuring during firmware loading in the
    The driver iterates over an ihex-formatted firmware using ++ on a "const
    cooperatively with the firmware, without the firmware clobbering the
    But in case that there are really firmwares out there that clobber the
    staging/gdm72xx: usb_boot: replace firmware upgrade API in em_download
    Replace firmware upgrade API in em_download_image().
    and it should ideally be pushed to firmware.
    firmware to control overflow packets.  When this control bit gets enabled
    x86, EFI: Calculate the EFI framebuffer size instead of trusting the firmware
    staging: comedi: ni_pcidio: use request_firmware()
    The PCI-6534 needs three firmware files loading to work with the driver.
    That is currently done by passing the firmware data using the
    firmware-loading options set in the `struct comedi_devconfig *`
    Change the driver to request the firmware files using
    `request_firmware()`, ignoring any firmware-loading options set in the
    "scarabs".  Scarab A is loaded with firmware to support digital input
    mode, and scarab B is loaded with firmware to support digital output
    I don't think the order of loading the scarab firmwares matters as long
    as they are loaded with the correct firmware files.  This update loads
    firmware files are loaded in the following order:
    The required firmware files can be found in the
    "comedi-nonfree-firmware" tar-ball at
    <http://www.comedi.org/download/comedi-nonfree-firmware-2007.06.22.tar.gz>.
    to loading the wrong firmware for RTL8188CE devices.
    firmware bootstrap sequence.  Likewise its calendar manipulation commands
    staging/gdm72xx: usb_boot: replace firmware upgrade API
    Replace file I/O of reading firmware usb_boot()
    by request_firmware().
    brcmfmac: Add extra data support to firmware event queueing.
    include selection of the wrong firmware, and system lockup. A full
    fixes the problem with loading the wrong firmware, and logs a message
      module because of the firmware loader.
    CMD_MAC_CONTROL is currently sent async to the firmware, and is sent
    from the lbs_setup_firmware() path during device init.
    lbs_setup_firmware() path.
    AP's country ie is parsed and 11d information is updated in firmware
    firmware: Add missing attributes to EFI variable attribute print out from sysfs
    /sys/firmware/efi/vars/*/attributes. This patch adds those in. It also
    firmware loader: fix compile warning when CONFIG_PM=n
    CONFIG_PM_SLEEP becasue firmware cache is only used in
            drivers/base/firmware_class.c:1147: warning: 'device_cache_fw_images'
            drivers/base/firmware_class.c:1212: warning:
    firmware to use native EEE instead of auto-greeen.
    the firmware attribute check assumes the system is little endian and
    demo firmware application.  This is a device with a single
    the intention of demonstrating CDC ACM class firmware and
    firmware, emulating FTDI chips. Attempting to continue to
    iwlwifi: load firmware in chunks
    memory for the firmware and keeping it around, only
    vmalloc() the firmware and copy it into a single
    the firmware image that is stored while the driver
    field to figure out special workarounds for a given firmware revision.
       number, or unified PE address assigned by firmware or
    firmware.
    for testing and debugging purposes with driver and firmware.
    wireless: ath9k-htc: only load firmware in need
    It is not necessary to hold the firmware memory during the whole
    4*50KBytes RAM to cache firmware for all dongles. After applying the
    patch, kernel only caches one single firmware image in RAM for
    When system is ready for loading firmware, ath9k-htc can request
    can load the firmware which was cached in kernel memory before
    device firmware does not handle fragmented messages
    The pseries firmware currently refuses any non power of two MSI-X
    This patch rounds up the firmware request to the next power of two
    firmware with non-zero size. That leads to space waste.
    Recently firmware loader code has been cleaned up much and
    cache/uncache firmware mechanism is introduced, so later
    of firmware lost during suspend/resume cycle.
    firmware loader: let caching firmware piggyback on loading firmware
    After starting caching firmware, there is still some time left
    before devices are suspended, during the period, request_firmware
    to load firmware images which can't be cached during suspend/resume
    This patch utilizes the piggyback trick to cache firmware for
    this kind of situation: just increase the firmware buf's reference
    caching firmware and before syscore_suspend() is called.
    firmware loader: fix firmware -ENOENT situations
    If the requested firmware image doesn't exist, firmware->priv
    warning and oops will be triggered inside firmware_free_data().
      The other one fixes make firmware_install with certain configurations,
      where a file in the toplevel firmware tree gets installed first, and
      $(INSTALL_FW_PATH)/$$(dir <file>) results in /lib/firmware/./, which
      firmware: fix directory creation rule matching with make 3.82
     - a firmware bug on several Samsung MoviNAND eMMC models causes
    staging: slicoss: remove default case after we done with request_firmware
    we are returning -ENOENT when there is no firmware file for a matching
    device id. then we start calling request_firmware,
    after this we do checks on the firmware length of corresponding
    there is no need of a default case at the firmware length checks
    before sending the request to firmware. Otherwise the request
    mwifiex: fix skb length issue when send a command to firmware
    When we send a command to firmware, we assumed that cmd_size
    Since the firmware will give us an A-MPDU bit and
    firmware console at boot time, not if it's detected later on, for
    example because the firmware is using a graphics card.
    console currently used by the firmware, so if you have your firmware
    staging: slicoss: release firmware before returning
    we request_firmware in slic_card_download_gbrcv and we return out
    with out calling release_firmware, where we compare against a
    firmware lengths of certain device ids.
    staging: slicoss: return early before calling request_firmware with empty firmware filename
    i.e an empty name, and we try calling request_firmware with that name,
    actually we can just fail out at default case before even calling request_firmware
    staging: rtl8192u: use kzalloc to allocate firmware pointer
    the firmware pointer is allocated with kmalloc and memset,
    Specifically, there is a bug in the eMMC firmware that causes
    firmware: fix directory creation rule matching with make 3.82
    Attempting to run 'firmware_install' with CONFIG_USB_SERIAL_TI=y when
    make[2]: *** No rule to make target `/lib/firmware/./', needed by
    `/lib/firmware/ti_3410.fw'.  Stop.
    The './' seen in the error is added by $(dir) for firmware which
    resides in the base firmware src directory, such as
    ARM: dts: imx: Move SDMA firmware to SoC dtsi file
    x86, microcode: Add a refresh firmware flag to ->request_microcode_fw
    * boot machine, no new microcode in /lib/firmware
    /lib/firmware and reloads it by doing
    initialize the timers. The voice firmware needs these timers as a reference.
    boards. This DTB will be used if the firmware does not pass in a
    partition with firmware release 740 or higher.  With vTPM
    firmware sends the interrupt to each CPU in the irq affinity
    the init firmware.
    Newer firmware versions for the Pantech UML290 use a different
    - Since these UUIDs are used in the firmware to reference section
      names, the firmware doesn't follow the standard uuid delimiter '-'
      expected by the firmware. E.g.:
      firmware expects: .24BC8D90_BB45_11D4_B756_006008BDB66F
    firmware loader: fix build failure if FW_LOADER is m
    firmware loader need to cache firmware images for devices
    firmware loader: fix compile failure if !PM
    firmware loader: cache devices firmware during suspend/resume cycle
    This patch implements caching devices' firmware automatically
    call request_firmware or request_firmware_nowait inside resume
    path to get the cached firmware if they have loaded firmwares
    firmware loader: use small timeout for cache device firmware
    Because device_cache_fw_images only cache the firmware which has been
    firmware: introduce device_cache/uncache_fw_images
    so we can use device_cache_fw_images() to cache firmware for
    all devices which need firmware to work, and the device driver
    can get the firmware easily from kernel memory when system isn't
    ready for completing requests of loading firmware.
    After system is ready for completing firmware loading, driver core
    the cached firmware.
    The above helpers will be used to cache device firmware during
    The firmware loader will use the API to get each firmware name
    firmware loader: store firmware name into devres list
    This patch will store firmware name into devres list of the device
    which is requesting firmware loading, so that we can implement
    auto cache and uncache firmware for devices in need.
    firmware loader: fix comments on request_firmware_nowait
    request_firmware_nowait is allowed to be called in atomic
    firmware loader: fix device lifetime
    Callers of request_firmware* must hold the reference count of
    @device, otherwise it is easy to trigger oops since the firmware
    call request_firmware* in its probe() or open(), so the constraint
    schedule_work() in request_firmware_nowait() to avoid that
    the @device is released after request_firmware_nowait returns
    firmware loader: introduce cache_firmware and uncache_firmware
    This patches introduce two kernel APIs of cache_firmware and
    uncache_firmware, both of which take the firmware file name
    So any drivers can call cache_firmware to cache the specified
    firmware file into kernel memory, and can use the cached firmware
    in situations which can't request firmware from user space.
    firmware loader: always let firmware_buf own the pages buffer
    This patch always let firmware_buf own the pages buffer allocated
    inside firmware_data_write, and add all instances of firmware_buf
    into the firmware cache global list. Also introduce one private field
    in 'struct firmware', so release_firmware will see the instance of
    firmware_buf associated with the current firmware instance, then just
    'free' the instance of firmware_buf.
    The firmware_buf instance represents one pages buffer for one
    firmware image, so lots of firmware loading requests can share
    the same firmware_buf instance if they request the same firmware
    This patch will make implementation of the following cache_firmware/
    uncache_firmware very easy and simple.
    In fact, the patch improves request_formware/release_firmware:
            - only request userspace to write firmware image once if
            several devices share one same firmware image and its drivers
            call request_firmware concurrently.
    firmware loader: introduce firmware_buf
    This patch introduces struct firmware_buf to describe the buffer
    which holds the firmware data, which will make the following
    cache_firmware/uncache_firmware implemented easily.
    firmware loader: fix creation failure of fw loader device
    If one device driver calls request_firmware_nowait() to request
    several different firmwares' loading, device_add() will return
    failure since all firmware loader device use same name of the
    device who is requesting firmware.
    This patch always use the name of firmware image as the firmware
    for caching firmware will make sure only one loading for same
    firmware is alllowd at the same time.
    firmware loader: remove unnecessary wmb()
    firmware loader: fix races during loading firmware
    This patch fixes two races in loading firmware:
    on _request_firmware_load, otherwise FW_STATUS_ABORT may be
    2, Inside _request_firmware_load(), there is a small window between
    to prevent pages' buffer completed from being freed in firmware_loading_store.
    firmware loader: simplify pages ownership transfer
    instance of firmware until the firmware loading is completed,
    which will simplify firmware_loading_store a lot, so help
    to introduce the following cache_firmware and uncache_firmware
    firmware loader device is bypassed between writting 1 and 0 to
    firmware: remove computone driver firmware and documentation
    option.  Therefore, remove firmware, documentation, and the last vestiges
    If the read firmware version response from the chip is split into multiple
    USB: storage: ene_ub6250: Use macros for firmware names
    Advertise firmware files using MODULE_FIRMWARE macros.
    verified to work on interface #19 (a firmware bug is
    by the firmware somehow.
    v3: The Apple firmware seems to switch off the panel on it's own, hence
    staging/csr: remove firmware pointer check before giving to release_firmware
    we do a check of firmware pointer against the NULL value before we give
    it to the release_firmware.
    as release_firmware is actually having a check against NULL, its not needed
    > drivers/media/dvb/dvb-usb-v2/lmedm04.c:769 lme2510_download_firmware()
    [  446.892309] Modules linked in: tcp_lp fuse sunrpc cpufreq_ondemand acpi_cpufreq mperf ip6t_REJECT nf_conntrack_ipv6 nf_defrag_ipv6 nf_conntrack_ipv4 ip6table_filter nf_defrag_ipv4 xt_state nf_conntrack ip6_tables ext2 arc4 btusb bluetooth snd_hda_codec_idt snd_hda_intel carl9170 snd_hda_codec coretemp joydev ath5k snd_hwdep snd_seq isight_firmware ath snd_seq_device snd_pcm applesmc appletouch mac80211 input_polldev snd_timer microcode cfg80211 snd lpc_ich pcspkr i2c_i801 mfd_core soundcore rfkill snd_page_alloc sky2 tpm_infineon virtio_net kvm_intel kvm i915 drm_kms_helper drm i2c_algo_bit i2c_core video
    [media] iguanair: ignore unsupported firmware versions
    supported. Also report the firmware version in the standard format.
    [media] dvb_usb_lmedm04: don't crash if firmware is not loaded
    There is a missing error handling when no firmware file found.
    brcmsmac: document firmware dependencies
    The brcmsmac driver requests firmware but doesn't document the
    determine if firmware is needed won't detect it.
    Specifically, (at least) openSUSE won't install the kernel-firmware
    event from firmware.
    [media] xc5000: change filename to production/redistributable xc5000c firmware
    firmware, and there were no redistribution rights.  Change over to using
    the release version, for which freely redistributable firmware can be
    http://kernellabs.com/firmware/xc5000/README.xc5000c
    http://kernellabs.com/firmware/xc5000/dvb-fe-xc5000c-4.1.30.7.fw
    Thanks to Ramon Cazares from Cresta Technology for making the firmware
    [media] au0828: make xc5000 firmware speedup apply to the xc5000c as well
    Make the firmware speedup work for the 5000c as well as the original
    xc5000.  This cuts firmware load time in half.
    result, the version doesn't visibly match the filename for the firmware,
    Change the firmware printout to be in decimal.
    The problem manifested itself as the xc5000 firmware version and PLL
    [media] xc5000: add support for firmware load check and init status
    The xc5000c and newer versions of the xc5000a firmware need minor revisions
    to their initialization process.  Add support for validating the firmware
    tuner and reload the firmware.  This problem was detected after several days
    Reset the firmware in the event that the PLL is in an unlocked state.  This
    firmware download.  With this change it goes from 4.2 seconds to 2.9.
    [media] au0828: speed up i2c clock when doing xc5000 firmware load
    Put a hack in place to speed up the firmware load in the case that the
    This reduces the firmware load time from 6.9 seconds to 4.2.
    did reset the device and reload the firmware.
    Rework the routine to only do calibration if reset and firmware load was
    firmware is already loaded, the caller no longer needs to invoke
    is_firmware_loaded().
    will cause a firmware load (which is very time consuming on the 950q).
    The firmware callback must be protected by that ifdef.
    the specified "patch" firmware doesn't exist.  It's basically a long-
    firmware loader base code.
    ALSA: hda - Deferred probing with request_firmware_nowait()
    For processing the firmware handling properly for built-in kernels,
    implement an asynchronous firmware loading with
    request_firmware_nowait().  This means that the codec probing is
    ALSA: hda - Load firmware in hda_intel.c
    request_firmware() errors at init.
    This patch moves the call of request_firmware() to hda_intel.c, and
    The sequence counter will be sent to firmware via key_material
    p54pci: convert driver to use asynchronous firmware loading
    Drivers that load firmware from their probe routine have problems with the
    space to start. The problem is fixed by using request_firmware_nowait()
    and delaying the start of mac80211 until the firmware is loaded.
    To prevent the possibility of the driver being unloaded while the firmware
    This driver needs the cypress firmware load, so, auto-selects it.
    [media] dvb-usb-v2: Don't ask user to select Cypress firmware module
    The dvb-usb-v2 cypress firmware module is not optional, as drivers
    [media] dvb-usb-v2: Fix cypress firmware compilation
    ERROR: "usbv2_cypress_load_firmware" [drivers/media/dvb/dvb-usb-v2/dvb-usb-az6007.ko] undefined!
    [media] dvb_usbv2: rename dvb_usb_firmware to cypress_firmware
    [media] dvb_usb_v2: use identify_state() to resolve firmware name
    Merge get_firmware_name() to identify_state().
    It is wise to resolve firmware name in that routine as it does
    decision wether or not to load firmware at all. It is one very
    device but it is warm and no firmware loading needed.
    [media] dvb_usb_v2: return the download ret in dvb_usb_download_firmware
    The first being this patch, no return value from dvb_usb_download_firmware
    [media] ec168: re-implement firmware loading
    [media] dvb_usb_v2: Cypress firmware download module
    [media] dvb_usb_v2: clean firmware downloading routines
    Remove Cypress USB-interface firmware downloading routines.
    Move single function out from the dvb_usb_firmware.c and
    [media] dvb_usb_v2: delay firmware download as it blocks module init
    Delay firmware download and whole driver initialization using
    workqueue. udev causes problems when blocking firmware download
    DVB USB firmware downloading issues we have had during recent years.
    (struct dvb_usb_device *) to the firmware download
    [media] dvb_usb_v2: restore .firmware - pointer to name
    Most commonly only one firmware is used by the driver
    old functionality but allow .get_firmware_name() callback
    Call is done after the possible firmware is downloaded to the device,
    [media] dvb_usb_v2: implement .get_firmware_name()
    Use callback to return firmware name instead of static firmware name.
    There is some chips that needs to select firmware name according to
    for .identify_state() and .download_firmware() callbacks.
    firmware: Remove obsolete Chelsio cxgb3 firmware
    The current firmware version used by the device driver
    to discovering necessary firmware files.
    firmware_map: make firmware_map_add_early() argument consistent with firmware_map_add_hotplug()
    There are two ways to create /sys/firmware/memmap/X sysfs:
      - firmware_map_add_early
      - firmware_map_add_hotplug
      - end argument of firmware_map_add_early()   : start + size - 1
      - end argument of firmware_map_add_hogplug() : start + size
    /sys/firmware/memmap/X/end file content does not change.
    [media] radio-si470x: Lower firmware version requirements
    Testing with a firmware version 12 usb radio stick has shown version 12
    [media] radio-si470x: Lower firmware version requirements
    With the changes from the previous patches device firmware version 14 +
    firmware from the silabs reference boardto fix this, but:
       firmware flashing
       firmware, if at all possible
      deb-pkg: Install linux-firmware-image in versioned dir
    to prevent PHY access conflict with APE firmware.
    sound_firmware: don't pass crap to filp_close()
      powerpc: Lack of firmware flash support is not an error
    These devices are set to 640x480 by firmware, switch them to 800x600@60
    powerpc: Lack of firmware flash support is not an error
    Reduce the severity of the warning given when firmware flash is
    from the firmware offb by nouveau doesn't work properly (and leads to
      remoteproc: Support custom firmware handlers
      ACPICA: Table manager: deploy new firmware error/warning interfaces
      ACPICA: Add new interfaces for BIOS(firmware) errors and warnings
      Input: synaptics - print firmware ID and board number at init
    callback called when the ASYNC call to request_firmware
    the firmware.) requires byteswapping of num_modes and num_modules.
    that the EFI firmware doesn't natively understand, such as ext4, etc.
    can: janz-ican3: avoid firmware lockup caused by infinite bus error quota
    up, the Janz VMOD-ICAN3 firmware will stop responding to control
    The firmware will automatically stop sending bus error messages when the
    error message is received. By doing this, the firmware never stops
    The Janz VMOD-ICAN3 firmware does not support any sort of TX-done
    - Driver converts s/g list to a firmware suitable list for best performance on
    commit 9ac32e1b firmware: convert e100 driver to request_firmware()
    libertas: firmware.c: remove duplicated include
    soon and get out-of-sync with the firmware.
    In some cases, the firmware may not send the event, so we wait for the
    wl12xx fetches fem number from firmware and stores it in wl->fem_manuf
    auto fem detection where driver asks firmware to detect
    b43 with open firmware crashes mac80211 because
    This patch configures data rates to firmware using bitrate mask
    3. ath6kl sets regdomain in firmware
    4. firmware sends regdomain event to notify about the new regdomain (FI)
    The reason why ath6kl calls regulatory_hint() is that firmware can change
    Some tg3 devices have management firmware that can export sensor data.
    firmware version string.  We fix this by separating the probing of NCSI
    ACPICA: Table manager: deploy new firmware error/warning interfaces
    Emit firmware error/warning messages where appropriate for table
    ACPICA: Add new interfaces for BIOS(firmware) errors and warnings
    was left running by the firmware) before setting up the ehci_hcd data
    remoteproc: Support custom firmware handlers
    firmware functions that depends on a particular firmware
    unless the HW driver explicitly injects another firmware
    firmware handlers may need to use this function.
    Prepare for introduction of custom firmware loaders by
    Prepare for introduction of custom firmware loaders by
    Prepare for introduction of custom firmware loaders by changing
    to use struct firmware as parameter.
    the firmware specific function must use struct firmware as
    ACPI, APEI: Fixup common access width firmware bug
    Many firmwares have a common register definition bug where 8-bit
    With recent enough motherboard firmware, core tile can be fitted
    carl9170: import 1.9.6 firmware headers
    Import new headers from my firmware branch:
    The BCM4716 is working for me with an other firmware and I am working
    We have some API changes and new features in the new firmwares that
    The driver configures the firmware template for probe requests during
    This fix works only on firmwares later than X.3.9.2.112 for single
    New wl12xx firmware supports scheduled scans also while connected.
    For RTL8111G, the settings of phy and firmware are replaced with
    the firmware of the device and not on the host CPU.
    beacon, probe response, association response WPS IEs to firmware.
    And firmware is responsible for constructing these frames.
    Input: synaptics - print firmware ID and board number at init
    Device behavior is very board and firmware dependent.
    Use these modes with the flow_attach and flow_detach firmware commands
    {NET, IB}/mlx4: Add device managed flow steering firmware API
    If supported by firmware use the device managed flow steering
    the firmware supports the B0 steering mode use it, and finally,
    the firmware returns a 64 bit registration id, which is to be
    Currently the firmware is always programmed during HCA initialization
    net/mlx4_core: Add firmware commands to support device managed flow steering
    Add support for firmware commands to attach/detach a new device managed
    L2/L3/L4 flow specification to the firmware and have the device to steer
    Instead of checking the firmware supported steering mode in various
    if the firmware supports both unicast and multicast B0 steering,
    a load of firmware commands and second, there is period of time where
    Currently there are two different implementations (in the firmware) for
    4-parameter command with firmware that implements the 2-parameter
    updated because this firmware is the only loadable firmware where the
    QAM demodulator command takes 4 parameters. Some firmwares in the ROM
    [media] tuner-xc2028: tag the usual firmwares to help dracut
    need to copy the firmware inside the initfs image.
    [media] get_dvb_firmware: add logic to get sms1xx-hcw* firmware
    The firmwares are there at the same place for a long time. However,
      when it realizes that they are supported by the firmware
    Remoteproc requires user space firmware loading support, so
      drm/i915: kick any firmware framebuffers before claiming the gtt
    drm/i915: kick any firmware framebuffers before claiming the gtt
    The form affinity for NUMA is set to 1 if the firmware supports
    An upcoming release of firmware will add DDW extensions, in particular
    window, increasing the resources available to firmware for creation of
    Further, this same release of firmware will make it a hard requirement
    [media] tuner-xc2028: use request_firmware_nowait()
    Change the firmware logic to use request_firmware_nowait(), and
    to preserve the loaded firmwares in memory, to reduce the risk
    With this change, while the firmware is being loaded, the driver
    will return -EAGAIN to any calls. If, for some reason, firmware
    If firmware is not loaded for some reason, or if it is not ready
    firmware or because there's an error during init_drxk, returns
    [media] drxk: Lock I2C bus during firmware load
    firmware load, in order to prevent using the device while it is
    firmware loads, make sure that the priv state routine will be
    will implement an exclusive lock mode to be used during firmware
    [media] drxk: change it to use request_firmware_nowait()
    The firmware blob may not be available when the driver probes.
    Instead of blocking the whole kernel use request_firmware_nowait() and
    continue without firmware.
    internal firmware. So, only the firmware update will take a little longer
    firmware update, the old object table is destroyed and all cached object
    the new firmware does not have the old objects.
      3) Just after a firmware update, when a new object table is
    Make firmware and hardware version strings available to userspace.
    Also, parse and print the firmware version in its canonical format, as
    netxen_nic: restrict force firmware dump when dump is disabled.
    "chan->max_power" to set max_power in firmware.
    mwifiex: use correct firmware command to get power limits
    hardware by sending correct firmware command.
    from firmware. This adds worst case delay of 50msec.
        iwl4965 0000:03:00.0: On demand firmware reload
    deb-pkg: Install linux-firmware-image in versioned dir
    That way they don't file conflict with official firmware package:
     trying to overwrite '/lib/firmware/qlogic/1040.bin', which is
                   also in package firmware-qlogic 0.35
    Did this to illustrate my understanding of the firmware generations:
    If firmware returns error status, proceed to close the iSCSI connection.
    brcmfmac: use firmware data buffer directly for nvram
    firmware structure passed by request_firmware function. This patch
    txglomming is a firmware feature for sdio bus interface. For SDIO
    firmware should be used instead of disabling it from the host side.
      [media] cx88: fix firmware load on big-endian systems
    (firmware?).
    could lead to bad firmware behavior.
      [media] cx88: fix firmware load on big-endian systems
    wlcore: access the firmware memory via debugfs
    - access to firmware log
    - dump memory after firmware panic event
    For some cards (SD8797, for example), firmware will send SLEEP event
    For other cards, such as USB8797, firmware won't send SLEEP event.
    events from firmware. While handling events, we perform
    [media] Add support for downloading the firmware of the Terratec Cinergy HTC Stick HD's firmware
    As of June 2012 it uses the same firmware as the Hauppauge WinTV HVR 930C.
    New PG2 firmwares have additional Rx descriptors.
    caused issues as the firmware checks the active
    wl1251: send filters to firmware as they are set
    This seems to be triggering a firmware bug where it stops reporting any
    firmware crashes. By exposing this information to a debugfs file users
    igb: Update firmware info output
    comedi_driver to auto-configure probed USB devices after the firmware is
    comedi_driver to auto-configure probed USB devices after the firmware is
    comedi_driver to auto-configure probed USB devices after the firmware is
    firmware when it's looking for a bootloader - it wants the catalog ID of
    bnx2: Dump additional BC_STATE during firmware sync timeout.
      ASoC: wm2000: Always use a 4s timeout for the firmware
    of firmware capability bits translate into fewer bytes than the host has
    reported by the firmware.
    power state.  Presumably this is a firmware bug, but there's nothing
    passed to firmware using TEST_CMD_INI_FILE_RADIO_PARAM. Still,
    drm/i915: kick any firmware framebuffers before claiming the gtt
    here since we're running in the firmware request
    d2c8b15d0cb ("iwlwifi: use correct supported firmware
    Later firmwares for this device now have proper subclass and
    This is caused by a firmware bug checking (checking generic address
    register provided by firmware) in runtime.  The checking should be
    [media] cx88: fix firmware load on big-endian systems
    Also fix a few endian issues related to mailboxes and firmware loading.
    commands to firmware when scan is requested by user. Now we will
    ath6kl: use firmware version from FW IE
    This is handled by appending different meta data in firmware
    this patch fixes kernel Oops on "rmmod b43" if firmware was not loaded:
    iwlwifi: use correct supported firmware for 6035 and 6000g2
    did not correctly report supported firmware
    minimum supported firmware version for 6035
    Also correct the minimum supported firmware
    from a "firmware" file called wl18xx-conf.bin.  If the file doesn't
    Instead of parsing all the binary data returned by the firmware, we
    This patch calls ACX_CLEAR_STATISTICS to clear the firmware
    ASoC: wm2000: Always use a 4s timeout for the firmware
    and ensures compatibility with current calibration firmwares.
    drop in performance. Hence we need to set gso_size to MSS obtained from firmware.
    o This is fixed recently in firmware hence the MSS is obtained based on
    Some UEFI firmware will not load a .efi with a .reloc section
    Due to a need by the firmware when working in multirole
    by the system firmware, and drivers modifying this value can cause
    iwlwifi: fix double free/complete in firmware loading
    we double-freed the vmalloc() firmware area. His patch
    be 0xff to match the firmware's implementation.
    The polarity should be set before the firmware is loaded
    since the firmware touches the same register. Access
    of the firmware and driver to the same register will
    The firmware uses the indexing as defined in the ieee80211
    Modify default parameters to reduce firmware BSS lose
    as tcp check sum is going to be removed from firmware, and as
    Now the firmware can support TX block ack sessions with 64 frames.
    during iperf.  This is the optimal for the firmware.  Thus, increase
    Yet another temporary module parameter requested by the firmware team.
    With more recent PHY firmware versions (>8.1.0.0.116), we need to use
    wl18xx: print the PHY firmware version from the private static data
    The wl18xx firmware writes the PHY firmware version in the static
    firmware version when booting.
    The wl18xx firmware has more information in the static_data than
    rates have been properly set.  To avoid problems with the firmware not
    firmware.
    in different firmware versions.  Unfortunately, the array that
    firmware) and implement the plt_init operation.
    given to the firmware as part of the RX path.  Move this from core to
    The firmware uses the SCR_PAD2 register to read the board type passed
    The wl18xx chip passes extra information in the firmware status to the
    firmware and acknowledge when an event has been fully received.
    the correct firmware name.
    bcm_firmware_info. In addition, any calls to
    getting reset or there is a firmware upgrade happening, retrying right
      - firmware version (added QUERY_FW paravirtualization for that)
      [SCSI] qla4xxx: Capture minidump for ISP82XX on firmware failure
    implemenation, the AML code wrote value to EC register but firmware didn't
    [SCSI] qla4xxx: Capture minidump for ISP82XX on firmware failure
    catpure a snapshot of the firmware/hardware states at the time
    of firmware failure
    wait un-necessarily during a firmware recovery and prevent
    brcmfmac: use vmalloc to allocate mem for the firmware
    The firmware is more than 300KB big and you should not use kmalloc for
    sent down to the firmware. This needs to
    commands to be sent to the firmware. Fix
                external firmware rip), async buffer moves on nv84+ hw.
      Input: atmel_mxt_ts - only allow root to update firmware
    drm/nouveau/bios: allow loading alternate vbios image as firmware
    Completely dependent on firmware blobs from NVIDIA binary driver currently.
      qla1280: Remove redundant NULL check before release_firmware() call
      remoteproc: remove redundant NULL check before release_firmware()
      qla2xxx: Remove redundant NULL check before release_firmware() call.
      aic94xx: Get rid of redundant NULL check before release_firmware() call
      tehuti: delete redundant NULL check before release_firmware()
      qlogic: get rid of a redundant test for NULL before call to release_firmware()
      bna: remove redundant NULL test before release_firmware()
      tg3: remove redundant NULL test before release_firmware() call
      typhoon: get rid of redundant conditional before all to release_firmware()
    (arun: Capture ATIO queue during firmware dump + Send SCR in target mode +
    [SCSI] qla2xxx: Display proper firmware version when new minidump template is gathered for ISP82xx.
      - STATUS_SHUTDOWN was placed in incorrect place, so if firmware wasn`t loaded, we
    be2net: Fix to allow get/set of debug levels in the firmware.
       only be triggered with a device that has a firmware that
    second disconnect firmware event.
    6) The rtlwifi conversion to asynchronous firmware loading is racy, fix
      rtlwifi: fix for race condition when firmware is cached
    load the firmware in Kernel 3.3.4
    The firmware inverts the order of ssid list of scan command, we
    mwifiex: retrieve IEs from cfg80211_beacon_data and send to firmware
    RSN IE is also retrieved from tail IE buffer and sent to firmware.
    by the firmware. As MLME/SME is implemented in the
    firmware, events such as station association and
    firmware
    mwifiex: append peer mac address TLV in key material command to firmware
    Enable enhanced bmiss detection if the firmware supports it. This
    feature is only enabled on some firmwares since it comes with a power
    The rtlwifi fix addresses a regression related to firmware loading,
      - the firmware associated with the tokenring drivers.
    qlcnic-ethtool: set the ethtool_dump flag by ETH_FW_DUMP_DISABLE value that is zero, if firmware dump is disabled.
    value that is zero, if the firmware dump is disabled.
    by this we can get the firmware dump capability [enable/disable] via ethtool
    [media] get_dvb_firmware: add dvb-demod-drxk-pctv.fw
    Use the partition scheme of the original firmware by default.
    rtlwifi: fix for race condition when firmware is cached
    asynchronous firmware loading. Unfortumately, the implementation was
    with more advanced ISP firmware. The V4L2_CID_SCENE_MODE menu
    Not used anymore since new firmware downloader. I forget to remove
    those earlier when changed firmware downloader.
    Move ts78xx_fpga from /sys/power to /sys/firmware so that
    ath6kl: Add wow multicast firmware capability support
    firmware capability added to the driver.This enables
    on firmware capability.
    The currently used firmware images support 16 SSIDs in the scan
    Input: atmel_mxt_ts - only allow root to update firmware
    [SCSI] hpsa: dial down lockup detection during firmware flash
    also snoop the ioctl path and if a firmware flash command is detected,
    dial it back further to 4 minutes until the firmware flash command
    completes.  The reason for this is that during the firmware flash
    of Smart Array firmware we're dealing with is not obvious.
    drop in performance. Hence we need to set gso_size to MSS obtained from firmware.
    o This is fixed recently in firmware hence the MSS is obtained based on
    Driver queries DIMM information from firmware and accordingly
    netxen_nic: Allow only useful and recommended firmware dump capture mask values
    Bluetooth: btmrvl_sdio: remove pointless conditional before release_firmware()
    release_firmware() deals gracefullt with NULL pointers so there's no
    the interrupt register function must be called after firmware is
    of the iwlwifi firmware for all
            - add to switch for firmware load
            - add definition of default firmware name
    libertas: include sched.h on firmware.c
    tracks features whose support bits are advertised by the firmware in
    isdn/gigaset: improve error handling querying firmware version
    An out-of-place "OK" response to the "AT+GMR" (get firmware version)
      baseband processor running its own firmware, or a kernel-related
    It's actually an integer handle on the actual firmware, and 0 has no
    It is up to the prcmu firmware to recouple the gic automatically
    reflashing their firmware with an external hardware device. While this is
    obviously a firmware bug, the serious nature of the outcome suggests that
    qla1280: Remove redundant NULL check before release_firmware() call
    release_firmware() checks for NULL pointers internally so checking
    remoteproc: remove redundant NULL check before release_firmware()
    release_firmware deals gracefully with NULL pointers, so checking
    qla2xxx: Remove redundant NULL check before release_firmware() call.
    release_firmware() checks for NULL pointers internally so checking
    aic94xx: Get rid of redundant NULL check before release_firmware() call
    release_firmware() checks for NULL pointers internally, so checking
    tehuti: delete redundant NULL check before release_firmware()
    release_firmware() checks for NULL pointers - no need to test before
    qlogic: get rid of a redundant test for NULL before call to release_firmware()
    Since release_firmware() deals gracefully with being passed a NULL
    bna: remove redundant NULL test before release_firmware()
    release_firmware() does its own NULL test so explicit test before call
    tg3: remove redundant NULL test before release_firmware() call
    release_firmware - the function does that on its own.
    typhoon: get rid of redundant conditional before all to release_firmware()
    release_firmware() since the function does that check itself, so
    radeon_cp: Remove unneeded tests for NULL before calling release_firmware()
    release_firmware() does its own tests for NULL pointers so there's no
    b43_op_start(). When firmware fails to load this can wedge the system.
    ath6kl: Don't advertise HT capability for incapable firmware
    With firmwares which do not support rsn capability override
    packets, which was wrong assumption, because firmware will
    works with both firmware and userland agents.
    sync userland agents, firmware agents, and kernel notifier consumers.
    [SCSI] bfa: Fix to defer vport delete handler invocation till firmware logo response.
    before we get the response from firmware.
    firmware the ability to disable certain wiphy supported bands. Check if
    power state.  Presumably this is a firmware bug, but there's nothing
    of the iwlwifi firmware for all
    1. Configure vif parameters in firmware (default vlan, vif id, default
    The corresponding firmware image file is located at:
    libertas CS: convert to asynchronous firmware loading
    This patch doesn't fix the delay issue during firmware load.
    firmware reset is performed.
    Following the host reset, the firmware discovery is reassigning another hard
    interface This is because the firmware behavour changed where it would read
    bands / HT capabilities in firmware when stopping AP.
     - xc5000: don't require an special firmware (that won't be provided by
      [media] xc5000: support 32MHz & 31.875MHz xtal using the 41.024.5 firmware
    [media] xc5000: support 32MHz & 31.875MHz xtal using the 41.024.5 firmware
    Rather than loading firmware specific for the xtal frequency, just use
    the standard firmware and set the xtal frequency after firmware upload.
    The modified firmware will never be released, so we're better off
    [media] xc5000: log firmware upload failures in xc5000_fwupload
    [media] xc5000: support 32MHz & 31.875MHz xtal using the 41.024.5 firmware
    Rather than loading firmware specific for the xtal frequency, just use
    the standard firmware and set the xtal frequency after firmware upload.
    [media] s2255drv: Remove redundant NULL test before release_firmware()
    release_firmware() tests for NULL pointers on its own - there's no
    [media] staging: as102: Remove redundant NULL check before release_firmware() and pointless comments
    release_firmware() deals gracefullt with NULL pointers - it's
    code that kfree() free's a buffer and that release_firmware() releases
    firmware - comments just stating that add no value.
    staging: as102: Remove redundant NULL check before release_firmware() and pointless comments
    release_firmware() deals gracefullt with NULL pointers - it's
    code that kfree() free's a buffer and that release_firmware() releases
    firmware - comments just stating that add no value.
    staging: vt6656: Don't needlessly test for NULL before release_firmware()
    Checking for a NULL pointer before calling release_firmware() is
    quirk is similarly housed in of_serial.c.  Once the open firmware
    usb/atm/ueagle-atm: Don't test for NULL ptr before calling release_firmware()
    release_firmware() deals gracefullt w/ NULL pointers, no need to check
    usb/storage/ene_ub6250: Remove redundant NULL check before release_firmware() and pointless assignment
    release_firmware() tests for a NULL pointer, so it's redundant to do
    consistently (i.e., start with 0 similarly to sched_scan; firmware
    We get two timing related fields for each bss from firmware in scan
    2) network_tsf - firmware's TSF value at the time the beacon or probe
    Both are needed while associating by firmware.
    libertas USB: convert to asynchronous firmware loading
    libertas SDIO: convert to asynchronous firmware loading
    libertas: add asynchronous firmware loading capability
    libertas is taking a long time to load because it loads firmware
    Add a new API for interface drivers to load their firmware
    asynchronously. The same semantics of the firmware table are followed
    remove the old, synchronous firmware loading function.
    moving to asynchronous firmware loading (which means the device may fail to
    Remove the ability to pass module parameters with firmware filenames
    Remove the ability to pass custom "user" filenames to lbs_get_firmware().
    firmware from the USB driver (we don't know of any users), and simplify
    the OLPC firmware loading quirk to simply placing the OLPC firmware
    Move lbs_get_firmware() into its own file.
    upcoming transition to asynchronous firmware loading considerably less
    Set size of firmware section in mvm bundle format.
    We've never released firmware using the alternatives
    firmware files that actually do use the alternatives
    The method used to work out whether we were booted by EFI firmware or
    new entry point that is only used when booting from EFI firmware, when
    The mixer units from the firmware are corrupt, and even where they
    This allows the Electrix Ebox-44 with earlier firmware to be
    BRCMF_C_UP is the command that asks the firmware to enable RF of
    dongle. Some firmware initialization steps must be performed during
    called to ensure firmware have enough time to finish
    rt2800: add disabling of DMA before loading firmware
    Legacy driver disables DMA before loading firmware.
      staging/media/as102: Don't call release_firmware() on uninitialized variable
      rtlwifi: rtl8192de: Fix firmware initialization
    mwifiex: use asynchronous firmware loading
    Make use of request_firmware_nowait instead of request_firmware
     * fw_restart triggers a firmware restart when
    This cleans up all sources of firmware restart
    ipw2100: remove a redundant NULL check before calling release_firmware()
    The release_firmware() function does its own NULL test so a test
    wireless, orinoco: release_firmware() tests for NULL, remove explicit tests before calls
    release_firmware() since the function does its own NULL test.
    wireless, mwifiex: drop redundant NULL test before call to release_firmware()
    Since release_firmware() does its own test for NULL it is redundant to
    wireless, libertas: remove redundant NULL tests before calling release_firmware()
    release_firmware() tests for, and deals gracefully with, NULL
    ipw2200: remove a redundant NULL check before calling release_firmware()
    The release_firmware() function does its own NULL test, so testing
    wireless, atmel: remove pointless test for NULL before release_firmware() call
    release_firmware() does its own test. Explicitly checking before the
    wireless, at76c50x:: Don't needlessly test for NULL before calling release_firmware()
    The release_firmware() function deals gracefully with being passed a
    firmware update, but I am unsure if it is required for E-CUT chips to
    rsn IE. Set it to 0 in firmware when it is not there in the ie to
    wlcore/wl12xx: move identify firmware function to a lower driver op
    Different chip families have different firmware versions, so we need
    to identify the firmware to enable quirks, reject the used version
    ELP is a very complicated process in the firmware.  Due to its
    complexity, in some early firmware revisions, the ELP feature is
    firmware to an operation implemented by the lower driver.  Also move
    The firmware may decide to switch channels while already beaconing, e.g.
     - it913x: fixes firmware loading
      [media] it913x: fix firmware loading errors
    [media] staging/media/as102: Don't call release_firmware() on uninitialized variable
    then we'll end up calling 'release_firmware(firmware);' with
    'firmware' still uninitialized - not good.
    The easy fix is to just initialize 'firmware' to NULL when we declare
    it, since release_firmware() deals gracefully with being passed NULL
    it is not guaranteed to be always 4. The firmware
    comedi_driver to auto-configure probed USB devices after the firmware is
    auto-configure a freshly probed device (maybe after loading firmware).
    staging/media/as102: Don't call release_firmware() on uninitialized variable
    then we'll end up calling 'release_firmware(firmware);' with
    'firmware' still uninitialized - not good.
    The easy fix is to just initialize 'firmware' to NULL when we declare
    it, since release_firmware() deals gracefully with being passed NULL
    ASoC: wm8994: Don't test for NULL before release_firmware()
    release_firmware() does its own NULL ptr testing, it's redundant to
    firmware when touchpad is in relative mode. So remove BTN_RIGHT
    implemented in system firmware, and the EC chip has to receive
    ALSA: riptide: remove redundant NULL test before release_firmware()
    release_firmware() deals gracefully with NULL pointers, no need to check first.
    iwlwifi: remove firmware info from iwl_shared
    firmware.
    p54usb: Load firmware asynchronously
    Drivers that load firmware from their probe routine have problems with
    space to start. The problem is fixed by using request_firmware_nowait()
    and delaying the start of mac80211 until the firmware is loaded.
    firmware loading callback is still active, a completion queue entry
    Also, to simplify the firmware loading procedure, this patch removes
    the old, unofficial and confusing fallback firmware names. However,
    is hereby advised to link/rename their old firmware filenames:
    rtlwifi: rtl8192de: Fix firmware initialization
    Before the switch to asynchronous firmware loading (mainline commit b0302ab),
    it was necessary to load firmware when initializing the first of the units
    in a dual-mac system. After the change, it is necessary to load firmware in
    upcoming changes to the FRI2 firmware.
    address bytes to firmware.
    af9035.c: In function 'af9035_download_firmware':
    [media] af9035: reimplement firmware downloader
    revealing firmware structure on Linux Media mailing
    in firmware using a new wmi command, WMI_SET_IE_CMDID. There is a bit
    [media] it913x: fix firmware loading errors
    warm or firmware reboot.
     6) Link handling and firmware fixes in bnx2x driver from Yaniv Rosner
    The boot firmware might leave the registers configured causing interrupts
    Adding QoS firmware commands:
    In old firmware that force UP is not supported, untagged traffic will not subject to
    code. Added bfa_ioc_fwver_clear() function to clear the firmware header if
       request_firmware() and request_firmware_nowait() for good, with two
      firmware_class: Move request_firmware_nowait() to workqueues
      firmware_class: Reorganize fw_create_instance()
      PM / Sleep: Mitigate race between the freezer and request_firmware()
      firmware_class: Do not warn that system is not ready from async loads
      firmware_class: Split _request_firmware() into three functions, v2
      firmware_class: Rework usermodehelper check
    bnx2x: correction to firmware interface
    a commit to a header file with changes to the firmware's interface.
    updated firmware.
    which do not result in a change in its size will be missed. If a firmware update
        don't OOPS when providing firmware string.  From Phil Sutter.
      [SCSI] bfa: Move service parameter programming logic into firmware.
    ACPI 5.0 adds the BGRT, a table that contains a pointer to the firmware
    /sys/firmware/acpi in order to allow bootsplash applications to draw their
    splash around the firmware image and reduce the number of jarring graphical
    Drivers may wish to add entries to /sys/firmware/acpi, so export acpi_kobj
    Some APEI firmware implementation will access injected address
    always be set, causing the firmware to generate a message on boot
      dma: imx-sdma: Treat firmware messages as warnings instead of erros
    firmware_class: Move request_firmware_nowait() to workqueues
    Oddly enough a work_struct was already part of the firmware_work
    kthread for each request_firmware_nowait() call just schedule the
    firmware_class: Reorganize fw_create_instance()
    Recent patches to split up the three phases of request_firmware()
    Make _request_firmware_setup() return a struct fw_priv and use
    that struct instead of passing struct firmware to
    _request_firmware(). Move the uevent and device file creation
    _request_firmware_load() to better reflect its purpose.
    PM / Sleep: Mitigate race between the freezer and request_firmware()
    There is a race condition between the freezer and request_firmware()
    such that if request_firmware() is run on one CPU and
    usermodehelper_read_trylock() called from request_firmware()
    acquires it for reading, the request_firmware() will fail and
    to call request_firmware() right before freeze_processes() is
    request_firmware() the race for umhelper_sem against
    firmware_class: Do not warn that system is not ready from async loads
    If firmware is requested asynchronously, by calling
    request_firmware_nowait(), there is no reason to fail the request
    a timeout) and make request_firmware_work_func() use it instead of
    Accordingly, modify request_firmware() so that it uses
    the code related to that lock from _request_firmware().
    firmware_class: Split _request_firmware() into three functions, v2
    Split _request_firmware() into three functions,
    _request_firmware_prepare() doing preparatory work that need not be
    done under umhelper_sem, _request_firmware_cleanup() doing the
    post-error cleanup and _request_firmware() carrying out the remaining
    from _request_firmware() to the callers, which is going to be done
    firmware_class: Rework usermodehelper check
    otherwise) and make _request_firmware() use it.
    Add information about LVT offset assignments to better debug firmware
    (0x400). In the firmware bug message the format is the same as of the
    after sending SCAN request to the firmware in ath6kl_cfg80211_scan().
    In some corner cases, firmware sends SCAN_COMPLETE event immediately
    [SCSI] bfa: Move service parameter programming logic into firmware.
    Programming of the service parameters Tx credits etc., is now done in firmware.
    Remove the logic of sending the service parameters to firmware from driver.
    probably due to slow firmware loading. At the time nameif uses ethtool
    by firmware.
    reported by firmware and that the RTAS error log will have more
            Ambient temperature too high reported by firmware.
      remoteproc: make sure we're parsing a 32bit firmware
      remoteproc: bail out if firmware has different endianess
    though the firmware loader doesn't seem to mind, when we come to sign
    will be loaded by the UEFI firmware, but a zero-length
    code wrote value to EC register but firmware didn't change brighenss.
    firmware. This capability is advertised only when fw supports
    in firmware capability ie for driver to learn fw's capability.
         firmware interface - allows user to load a firmware for a broken
      drm: allow loading an EDID as firmware to override broken monitor
      [SCSI] qla2xxx: handle default case in qla2x00_request_firmware()
    firmware assert.  We need to fix this with new error codes that are
    of AMS in firmware, all of that memory shows up in node 0.  So, we end
    dma: imx-sdma: Treat firmware messages as warnings instead of erros
    As the SDMA controller can operate without an external firmware being loaded,
    treat the firmware related messages as warnings rather than errors.
    don't use the SCU interfaces or the SCU firmware interfaces.
    drm: allow loading an EDID as firmware to override broken monitor
    provided in the /lib/firmware directory and loaded via the firmware
      options drm_kms_helper edid_firmware=edid/1280x1024.bin
      drm_kms_helper.edid_firmware=edid/1280x1024.bin
      edid_firmware=[<connector>:]<edid>
      edid_firmware=DVI-I-1:edid/1920x1080.bin
    /lib/firmware directory.
    echo edid/myedid.bin >/sys/module/drm_kms_helper/parameters/edid_firmware
    IEs are filled in by the firmware). That was done based on the nw_type ==
    Only DVB-C supported currently since missing firmware.
    According to my tests, DRX 3913KA2 demodulator requires firmware
      bnx2x: fix memory leak in bnx2x_init_firmware()
      bnx2x: fix a crash on corrupt firmware file
      7) Fix a memory leak and a crash on corrupt firmware files in bnx2x,
      bnx2x: fix memory leak in bnx2x_init_firmware()
      bnx2x: fix a crash on corrupt firmware file
    mfd: Make use of the ab8500 firmware read-modify-write service
    read-modify-write service in the PRCMU firmware.
    service in the U8500 PRCMU firmware.
    bnx2x: fix memory leak in bnx2x_init_firmware()
    When cycling the interface down and up, bnx2x_init_firmware() knows that
    the firmware is already loaded, but nevertheless it allocates certain
    Fix the leaks by returning early if the firmware was already loaded.
    Because if the firmware is loaded, so are the arrays.
    bnx2x: fix a crash on corrupt firmware file
    If the requested firmware is deemed corrupt and then released, reset the
    bnx2x_release_firmware() or dereferencing it in bnx2x_init_firmware().
    b43: Load firmware from a work queue and not from the probe routine
    Recent changes in udev are causing problems for drivers that load firmware
    As this driver loads more than 1 firmware file, changing to the asynchronous routine
    request_firmware_nowait() would be complicated. In this implementation, the probe
    routine starts a queue that calls the firmware loading routines.
    b43legacy: Load firmware from work queue instead of from probe routine
    Recent changes in udev are causing problems for drivers that load firmware
    As this driver loads 3 or 4 firmware files, changing to the asynchronous routine
    request_firmware_nowait() would be complicated. In this implementation, the probe
    routine starts a work queue that calls the firmware loading routines.
    Commit 7504a3e1 ("ath6kl: add padding to firmware log records") accidentally
    Set the MTU for IB ports in the driver instead of using the firmware
    using the firmware return status to know whether the requested number
    of the MAD_IFC command, since MAD_IFC attempts to query the firmware
    Changed iwl_firmware_pieces structure to support an array of
    Portion of the commit id 080eec4fb4 ("ath6kl: Clear the IE in firmware
    quirk handling mechanism. Depending on the firmware installed on the device, the
    8) mlx4 device erroneously invokes the queue resize firmware operation
    In that case, the firmware will return the corresponding wait time.
    is PE address that should be enquired from firmware through RTAS
    if the firmware file doesn't advertise it.
    the code flow changed and the firmware is now
    firmware.
    and requires a firmware to be uploaded before it's usable.
      remoteproc: make sure we're parsing a 32bit firmware
    firmware, that will have to be removed
    but the implementation of firmware requests
    iwlwifi: split out firmware store
    store the firmware. Split this out into
    Since I wanted to constify the firmware
    to fix the firmware crash during wow suspend/resume.
    vendor-specific attribute MADs to firmware") we realized that the
    firmware would respond on all sorts of vendor-specific MADs.
    iwlwifi: move firmware completion wait
    iwlwifi: move firmware request into drv
    one part that deals with interaction with the PRCMU firmware
    not related to the PRCMU firmware.
    mfd: Remove check for db8500 firmware bug
    In prcmu firmware version 3.4.4 the issue with longer
    backing firmware in the PRCMU.
    mfd: Function for obtaining the db8500 prcmu firmware version
    version of the DB8500 PRCMU firmware is available, and revamps the
    firmware detection code a bit.
    in a single resource entry, firmware images can start supporting
    framework so multi-vdev firmwares can be leveraged: VDEV resource
    published by the firmware of the remote processor).
       existing firmware images (and we already want to: we can't introduce the
       existing firmware images.
    On the device tree case the code bails out when the firmware name cannot be found
    or if the firmware fails to be requested.
    device so don't use the SCU interfaces or the SCU firmware
    brcm80211: smac: remove firmware requests from init_module syscall
    brcm80211: fmac: remove firmware requests from init_module syscall
    and used by the drivers which have AP MLME in firmware but
    missing firmware.
    b43: prevent firmware on bcm5354 from taking over wrong GPIO pins
    firmware >= 478.104 it runs out of memory after a very short time in
    send. This was cased by a gpio misconfiguration, the firmware triggered
    work with firmware 666.2. Now the firmware just uses LED GPIO pin
    1. Driver and firmware do not support 22Mbps and 72Mbps bitrates.
    ath6kl: Collect residue firmware logs
    Collect residue firmware logs following firmware assert.
    logs lying in the firmware. This patch pulls those residue
    logs. This would give the full picture of the firmware.
    ath6kl: add padding to firmware log records
    firmware debug utility expects firmware log record size
    firmware record will be exactly 1500 bytes.
    ath6kl: Clear the IE in firmware if not set
    Remove check so that IE in firmware is cleared if not set. Without this fix, any
    received from firmware after uploading the firmware. Also it fixes
    any message from firmware.
    In commit 8c213fa "staging: r8712u: Use asynchronous firmware loading",
    the command to release the firmware was placed in the wrong routine.
    Interface-state not fully tracked", the driver attempts to upload firmware
    Note: Commit 8c213fa, which introdued asynchronous firmware loading
    [SCSI] qla2xxx: handle default case in qla2x00_request_firmware()
    types of firmware, so it might fix a bug in real life some day.
    [  955.108510] zd1211rw 1-3:1.0: firmware version 4725
    remoteproc: make sure we're parsing a 32bit firmware
    data communication to the firmware in some of the platform.
    for example, scan request issued to the firmware doesn't
    is now set by the iwl_parse_*_firmware.
    brcm80211: fmac: use correct firmware filename
    firmwares in the future.
      [SCSI] qla2xxx: Proper detection of firmware abort error code for ISP82xx.
      [SCSI] qla2xxx: Clear options-flags while issuing stop-firmware mbx command.
      [SCSI] isci: Fix NULL ptr dereference when no firmware is being loaded
      [media] hdpvr: update picture controls to support firmware versions > 0.15
    operating modes to call between kernel and firmware for thise cases. So
    kernel memdesc structure differ in size from what firmware specifies
      remoteproc: bail out if firmware has different endianess
      remoteproc: look for truncated firmware images
    and add to ath3k.c for firmware loading.
    With the firmware-assisted dump support we don't require a reboot when we
    fadump: Convert firmware-assisted cpu state dump data into elf notes.
    When registered for firmware assisted dump on powerpc, firmware preserves
    the first kernel before we register for firmware-assisted dump. After the
    the firmware preserves the entire partition memory at the time of crash the
    fadump: Register for firmware assisted dump.
    fadump: Reserve the memory for firmware assisted dump.
    crash, powerpc firmware will store CPU state data, HPTE region data and move
    If the firmware-assisted dump fails to reserve the memory, then fallback
    This patch also introduces a config option CONFIG_FA_DUMP for firmware
    fadump: Add documentation for firmware-assisted dump.
    Documentation for firmware-assisted dump. This document is based on the
    rtlwifi: rtl8192se firmware load can overflow target buffer
    maximimum possible firmware file size. Use it in the definition
    of the buffer which receives the firmware file data.
    the firmware file, e.g., 90000 (down from hard coded 164000). The current
    brcm80211: fmac: make sdio firmware filename specific
    The sdio driver part uses firmware name brcmfmac.bin. With addition
    the bcm43235, bcm43236, and bcm43238 for which firmware has been
    firmware download failure. However, also when enabling SDIO function 2
    remoteproc: bail out if firmware has different endianess
       Fix firmware data-in flow.
    firmware devcmd CMD_MAC_ADDR gets the mac address of a vnic from adapter.
    [SCSI] qla4xxx: Proper detection of firmware abort error code for ISP82xx
    port handle binding inside the firmware. This could lead to queued
    [SCSI] qla2xxx: Perform firmware dump procedure on mailbox command timeout.
    firmware to try to clear any residual commands associated with that fcport.
    [SCSI] qla2xxx: Increase speed of flash access in ISP82xx adapters to improve firmware load speed.
    Upgraded firmware on Smart Array P7xx (and some others) made them show up as
    - Fix unbounded firmware revision string from port cause panic (126560)
    [SCSI] qla2xxx: Proper detection of firmware abort error code for ISP82xx.
    [SCSI] qla2xxx: Clear options-flags while issuing stop-firmware mbx command.
    Not clearing the options flags in mbx1 could lead the firmware
    [SCSI] isci: Fix NULL ptr dereference when no firmware is being loaded
    If the firmware implements beacon filtering,
    Enabling this flag indicates to the firmware to allow
    iwlwifi: changes args to iwl_nic for firmware operations
    Remove the references to iwl_priv from the firmware request and
    iwlwifi: move firmware_loading_complete to iwl_nic
    Move firmware_loading_complete from iwl_priv to iwl_nic and rename it
    iwlwifi: move firmware_name to iwl_nic
    Delete firmware_name from iwl_priv and use iwl_nic instead.
    cxgb3: update firmware version
    This patch is sent in conjunction with the cxgb3 firmware update submission on linux-firmware.
    This patch updates the firmware version cxgb3 is requesting to 7.12.0.
    [media] hdpvr: update picture controls to support firmware versions > 0.15
    is because any firmware <= 0.15 didn't support them. The latest firmware
    [media] hdpvr: update picture controls to support firmware versions > 0.15
    is because any firmware <= 0.15 didn't support them. The latest firmware
    A special PLT firmware is used for calibration.
    [media] xc5000: declare firmware configuration structures as static const
    [media] xc5000: drivers should specify chip revision rather than firmware
    Specify chip revision at attach time rather than a firmware image.
    This is a better way to ensure that the correct firmware is loaded
    convert the firmware configuration attach-time parameter from
    [media] xc5000: allow drivers to set desired firmware in xc5000_attach
    newer versions of the xc5000 silicon require newer firmware
    of the xc5000a continue to use the same firmware.
    [  762.824912] cx24116_load_firmware: FW version 1.23.86.1
    be a firmware issue, but that breaks resource allocation so let's
    firmware each time the link state changes.  Up until now, the driver
      zd1211rw: firmware needs duration_id set to zero for non-pspoll frames
      staging: r8712u: Use asynchronous firmware loading
    staging: r8712u: Use asynchronous firmware loading
    of the firmware. The code now uses request_firmware_nowait().
    remoteproc: look for truncated firmware images
    Make sure firmware isn't truncated before accessing its data.
    Let remoteproc know when the firmware doesn't support any virtio
    with the remote processor (but only if supported by its firmware).
      moreover, we only add the virtio device if the firmware really
    - Loading a firmware which contains the OS image
    ath6kl: Fix firmware crash dump
    The firmware crash dump printout was wrong as it was using incorrect
    ath6kl: add blocking debugfs file for retrieving firmware logs
    When debugging firmware issues it's not always enough to get
    the latest firmware logs, sometimes we need to get logs from a longer
    reading from this file ath6kl will send firmware logs whenever available
    ath6kl: store firmware logs in skbuffs
    Currently firmware logs are stored in a circular buffer, but this was
    zd1211rw: firmware needs duration_id set to zero for non-pspoll frames
    zd1211 firmware messes up duration_id field if it is not set to zero by driver.
    zero results zd1211 outputting sane duration_id. This means that firmware is
    mwl8k: Remove BSSID from the firmware when the BSS is stopped
    this, the stale bss entry will still be maintained in the firmware
    If the firmware was over 2G, it would cause memory corruption and the
    system would die here.  Obviously we all know the firmware isn't going
    by a physical switch, and the firmware sends the events on the right
    enic: Check firmware capability before issuing firmware commands
    Check if firmware supports a particular command by first checking capability
    qlcnic: Fix firmware abort code check.
    Check bits 8-28 of peg_halt status register for firmware abort code.
    When firmware hang is detected, fw should stop sending pause control frames.
    netxen_nic: Error logging on firmware hang
    Log states of essential registers on firmware hang detection.
              firmware image to the flash firmware partition.
      IB/mlx4: pass SMP vendor-specific attribute MADs to firmware
    IB/mlx4: pass SMP vendor-specific attribute MADs to firmware
    feature.  However, the ConnectX firmware is able to handle such MADs.
    For unsupported attributes, the firmware returns a GET_RESPONSE MAD
    rtlwifi: Convert to asynchronous firmware load
    concerned changes in udev that break drivers that delay while firmware is loaded
    This patch converts all rtlwifi-based drivers to use the asynchronous firmware
    callback routine. Driver rtl8192se needs different handling of the firmware,
    ath9k_htc: Load firmware asynchronously
    firmware in an asynchronous manner, fixing timeouts
    the firmware sends WMI_SET_HOST_SLEEP_MODE_CMD_PROCESSED_EVENTID as
    In order to being sync with the firmware, the host has to wait for
    board file but before rest of the firmware files are fetched.
    rt2800: disable DMA after firmware load
    We can receive frames just after firmware load with current code, so
    disable DMA just after firmware is loaded, not before.
    Ralink USB driver initialize H2M_INT_SRC to 0 after firmware load, and
    Due to firmware limitations, we may not be able to
      asked for pll and firmware ops and compare :
      rtl_request_firmware        |
    The SFC9000-family controllers have firmware to manage all board
    sensors.  The firmware reports sensor alarms, which we log, and
    hwmon driver that exposes all sensors reported by the firmware.  Move
    These are defined alongside the firmware protocol in mcdi_pcol.h.
    When the MC reboots, either as part of a firmware upgrade or due to a
    twice, resulting in a spurious command failure after a firmware
    upgrade or frustrating recovery from a firmware bug.  Instead, if a
    driver or the firmware has already validated the board configuration.
    DSP firmware.
      ASoC: wm2000: Fix use-after-free - don't release_firmware() twice on error
    ASoC: wm2000: Fix use-after-free - don't release_firmware() twice on error
    then we'll release_firmware(fw) at the 'err_fw' label. But we've already
    release_firmware(fw) before leaving the function, but only ever call
    may now end up calling it without having called request_firmware(),
    but since request_firmware() deals gracefully with NULL pointers, we
    [media] it913x v1.23 use it913x_config.chip_ver to select firmware
    As recommended by Jason at ITE, the chip version should select firmware.
    However, to continue to support IT9137 firmware with different configuration
    [media] az6007: Fix some init sequences and use the right firmwares
    [media] drxk: Don't assume a default firmware name
    Move the ngene/ddbridge firmware into their drivers.
            1) The firmware used there didn't work for a few devices
            2) At least Terratec H7 doesn't seem to require a firmware
    After this change, if firmware is not specified, the driver will
    use a rom-based firmware (this seems to be the case for Terratec
    In any case, the firmware seems to be optional, as the DRX-K driver
    don't return the firmware load error.
      [SCSI] qla4xxx: Added error logging for firmware abort
    makes it possible to boot firmware but as HTC layer does not yet
    packets to the firmware. That will be added soon.
    will load ART firmware utf.bin and testscript nullTestFlow.bin. These files
    should be put in the firmware folder.
    The dib0700 needs a binary firmware file. This patch added the MODULE_FIRMWARE-macro.
    Some firmware will access memory in ACPI NVS region via APEI.  That
    Some firmware will access memory in ACPI NVS region via APEI.  That
    Some APEI firmware implementation will access injected address
    notified by firmware to do the recovery work.
    [media] tlg2300: fix up check_firmware() return
    The caller doesn't check the return value of check_firmware() but static
    XC4000 tuner when no firmware file available.
    [SCSI] qla4xxx: Added error logging for firmware abort
    Added debug print with error code in case of firmware error.
    shifts should be >> 4 thus treating the firmware version as a BCD quantity.
    provided by the platform or isci_firmware.bin).  While IO running to
    [SCSI] isci, firmware: Remove isci fallback parameter blob and generator
    linux-firmware.git repository.
    * When the host receives a frame which the firmware marked as trigger,
      in APSD power save queue are sent to the firmware.
      last frame from the APSD queue, it is indicated to the firmware using
    we can get this (if the user forgot to upload the firmware):
    r600_cp: Failed to load firmware "radeon/SUMO_pfp.bin"
    atl1c 0000:03:00.0: version 1.0.1.0-NAPI.213057] [drm:evergreen_startup] *ERROR* Failed to load firmware!
    the firmware was not loaded. So lets remove the WARN() from the TTM DMA code.
      firmware: google: fix gsmi.c build warning
    GPIO numbers from firmware or setting up wl12xx for SDIO)
    When downloading firmware into the device, the driver fails to check the
    sfc: Update MCDI (firmware interface) definitions
    firmware and the only multicast frames that host is interested
      firmware: Fix an oops on reading fw_priv->fw in sysfs loading file
    [media] xc3028: fix center frequency calculation for DTV78 firmware
    force reload of DTV7 firmware in VHF band with Zarlink demodulator",
    The problem is that the firmware DTV78 works fine in UHF band (8 MHz
    This is coherent to what was implemented for the DTV7 firmware by an
    In the end, now the center frequency is the same for all firmwares
    [media] it913x changed firmware loader for chip version 2 types
    > > will try to load a firmware
    > > [ 1106.253773] dvb-usb: downloading firmware from file
    > Looks like the the firmware is not at all compatible with your device.
    > You will have force to use this firmware
    > dvb-usb-it913x firmware=1
    Here is a modified firmware loader for version 2 types.
    The firmware must be as in original
    ./dvb_get_firmware it9135
    using the firmware of the H5.
    9006 devices should use dvb-usb-it9135-02.fw firmware.
      * the firmware was not being forwared declared
    firmware: Fix an oops on reading fw_priv->fw in sysfs loading file
    firmware_loading_store+0xf9/0x17b
    Its caused by the fact that firmware_loading_store has a case 0 in its
    _request_firmware sets fw_priv->fw to NULL and the time the corresponding sysfs
    firmware_loading_store.  Fix it by extending the protection of the fw_lock mutex
    Upon failure to read firmware version from chip or upon failure in responses
    to firmware download the UART needs to be flushed of its existing buffers so
    as BT, FM and GPS caused issues during firmware download failure cases or
    cases when the firmware download took longer than usual.
    - do like the windows driver that upload the tuner firmware
    mwl8k: Recover from firmware crash
    In case of firmware crash, reload the firmware and reconfigure it
     - Extend the firmware reload support for sta firmware as well
    Ideally, hardware/firmware initialization is complete after the
    Patch fix firmware error on "iw dev wlan0 scan passive" for
     iwl3945 0000:03:00.0: Loaded firmware version: 15.32.2.9
    firmware will report error, when we try to do passive scan on radar
    Under Ethernet, the ConnectX firmware treats (decode/encode) the four
    and the firmware. Leave the CONT_RX enum for backwards compatibility.
    To enable firmware debug messages through uart interface,
    ath6kl: Support for TCP checksum offload to firmware
    The change enables offloading TCP checksum calculation to firmware.
    2) perform appropriate housekeeping if firmware command succeeds.
    > dvb-usb-it9135-01.fw firmware
    > IT9137 remain on previous firmware.
    AF9015 firmware does not like if it gets interrupted by I2C adapter
    hardware and firmware revision. Currently the driver just waits for
    Atmel ATmega168P with custom firmware. Communication between the host
    > GB of RAM and UEFI firmware.
            - Add debugfs support to obtain firmware trace, saved firmware trace on
              fwtrc: collect current firmware trace.
              fwsave: collect last saved fw trace as a result of firmware crash.
    As firmware starting from 3.2.0.12 has some API changes and doesn't work
    ath6kl: handle firmware names more dynamically
    Currently ath6kl has just hardcoded paths to each firmware file. Change
    other. That way it's easier to dynamically create full paths to firmware and
    firmware names. I deliberately omitted board file support as
    This is needed for firmware API 3.
    ath6kl: Send own IP addr to the firmware during WOW suspend
    At present, firmware ARP module has capability to hold 2 IP addr.
    net_dev for our device is greater than firmware limit (MAX_IP_ADDRS)
    in order to determine the matching firmware version.
    dsp_code struct is not created if firmware is invalid, so check
    and zero of firmware pointer is not necessary
      mmc: vub300: fix type of firmware_rom_wait_states module parameter
    firmware: Refer to the co-maintained linux-firmware.git repository
      mmc: vub300: fix type of firmware_rom_wait_states module parameter
    mmc: vub300: fix type of firmware_rom_wait_states module parameter
    bnx2: Update driver to use new mips firmware.
    New firmware fixes iSCSI problems with some LeftHand targets that don't
      [SCSI] qla2xxx: Disable generating pause frames when firmware hang detected for ISP82xx.
      [SCSI] qla2xxx: Encapsulate prematurely completing mailbox commands during ISP82xx firmware hang.
      [SCSI] qla2xxx: Stop unconditional completion of mailbox commands issued in interrupt mode during firmware hang.
    during power ons to validate firmware operation.
      ASoC: WM8958: correctly show firmware magic on mismatch
    wl12xx: remove unused firmware version macros
    - Conditionalize the firmware upgrade/downgrade so that it is only
    Check for firmware alive and do premature completion of
    For 4032, context reset was the same as chip reset, and any firmware
    For 82xx, the iSCSI firmware runs along with FCoE and the NIC
    firmware contexts, and an error encountered doesnot essentially mean
    [SCSI] mpt2sas: Rearrange the the code so that the completion queues are initialized prior to sending the request to controller firmware
    or else strange firmware initialization errors may occur.
    [SCSI] qla2xxx: Corrected the display of firmware dump availability for ISP82xx.
    [SCSI] qla2xxx: Proper cleanup of pass through commands when firmware returns error.
    To make it worse, buggy firmware on some platforms may falsely generate
    hardware errors. Although the firmware bugs should be fixed, on the other hand,
    compatible with older firmware versions and other chips. The exception here is
    cause any issues with previous firmware versions since firmware only checks for
    updated to match the firmware.
    checking the firmware capabilities.
    Basically, what we did until now is take out a chunk of the firmware
    the firmware image, check it for sanity and copy it to local buffer for
      succeed (due to a firmware bug or system crash, for example)
    is always supplied by the ME firmware
    brcm80211: fmac: fix firmware shared structures version
    firmwares with new features.
    other VFs, possibly attached to other guest OSs since ConnectX firmware is not
    ath6kl firmware supports scheduled scan functionality with the wow ssid
    filter. But the firmware does not send any events after scan results
    Sched scan needs firmware version 3.2.0.6 or later. If firmware doesn't
    According to the firmware engineers WOW_FILTER_SSID is actually the
    be loaded and executed by EFI firmware. The bzImage appears to the
    firmware as an EFI application. Luckily there are enough free bits
    application, thereby coercing the EFI firmware into loading it and
       a high address address by the firmware. This was required to get my
       macbook booting because the firmware loaded it at 0x7cxxxxxx, which
    make the firmware to increment the sequence number which is incorrect and
    [SCSI] qla2xxx: Disable generating pause frames when firmware hang detected for ISP82xx.
    [SCSI] qla2xxx: Encapsulate prematurely completing mailbox commands during ISP82xx firmware hang.
    [SCSI] qla2xxx: Stop unconditional completion of mailbox commands issued in interrupt mode during firmware hang.
    ASoC: WM8958: correctly show firmware magic on mismatch
    [media] dvb_get_firmware: updates for it913x
    Changes to extract firmware for it913x devices
    ./get_dvb_firmware it9135
    ./get_dvb_firmware it9137
    dvb-usb-it9135-01.fw firmware
    IT9137 remain on previous firmware.
    IT9135 devices seem more stable on this firmware.
    If the user wishes to remain on it9137 firmware they can change
    back using firmware=1 module option.
    [media] dvb-usb/it913x: multi firmware loader
    Multi firmware loader
     This uses scatter write firmware headers
     The firmware must start with 03 XX 00
     and be the extract firmware length.
     I have tried all available firmwares with this loader.
    This patch is in preparation for multi firmware loading and
    firmware: google: fix gsmi.c build warning
      CC      drivers/firmware/google/gsmi.o
    drivers/firmware/google/gsmi.c: In function ‘gsmi_get_variable’:
    drivers/firmware/google/gsmi.c:348: warning: comparison of distinct
    USB: isight: fix kernel bug when loading firmware
    We were sending data on the stack when uploading firmware, which causes
    Commit a144c6a (PM: Print a warning if firmware is requested when tasks
    immediately if firmware is requested when usermodehelpers are disabled.
    drivers/base/firmware_class.c:
    In particular, this race condition in _request_firmware() causes task freezing
    to get the firmware/microcode image from userspace when actually the
    are those that depend on userspace via request_firmware(), such as x86
    It is needed by firmware to use the correct rate for BAR frame transmission
    ignored, but a future firmware version will rectify that. Since we
    [media] xc5000: Remove the global mutex lock at xc5000 firmware init
    Don't provide FCoE and iSCSI statistics to management firmware if
    rtl8192c: Do not log firmware load message unless actually done
    firmware from disk many times; however, the log message was not moved.
    management firmware.
    To support copying MAC addresses to firmware query structure.
    In latest firmware's SFI tables, pmic_gpio has been set to
    On AMD family 10h we see firmware bug messages like the following:
    Here is the firmware assert message:
    kernel: iwlagn 0000:03:00.0: Loaded firmware version: 17.168.5.3 build 42301
    Here is the firmware assert message:
    kernel: iwlagn 0000:03:00.0: Loaded firmware version: 17.168.5.3 build 42301
      firmware: Sigma: Fix endianess issues
      firmware: Sigma: Skip header during CRC generation
      firmware: Sigma: Prevent out of bounds memory access
    Print the name of nvs/fw if request_firmware fails. This will make
    Add support for loading the SigmaDSP firmware using regmap. This allows us
    Move the structs and functions only used by SigmaDSP firmware loader itself
    Provide some error messages when loading the firmware fails, so it is possible
    ASoC: Move SigmaDSP firmware loader to ASoC
    It has been pointed out previously, that the firmware subsystem is not the right
    place for the SigmaDSP firmware loader. Furthermore the SigmaDSP is currently
    ASoC framework in the future, with support for ALSA controls for firmware
    for the SigmaDSP firmware loader is the ASoC subsystem.
    firmware: Sigma: Fix endianess issues
    Currently the SigmaDSP firmware loader only works correctly on little-endian
    firmware: Sigma: Skip header during CRC generation
    The firmware header is not part of the CRC, so skip it. Otherwise the firmware
    firmware: Sigma: Prevent out of bounds memory access
    The SigmaDSP firmware loader currently does not perform enough boundary size
    checks when processing the firmware. As a result it is possible that a
    malformed firmware can cause an out of bounds memory access.
    are completely inside the firmware data boundaries before processing them.
    firmware.  The TSO cannot coexist with ASF management firmware though.
    "drivers/firmware/efivars.c:609: warning: initialization from".
    A new feature in the dongle firmware requires a handshake during
    firmware intialization. The request is sent in event packets which the
    brcm80211: fmac: change firmware/nvram name to be more generic
    The nvram file contains info for firmware which varies with different
    hardware designs. Use more common firmware/nvram file names instead
    of those in Linux firmware repository to avoid misunderstanding.
    Staging: bcm: Fix semaphore locking error when downloading firmware.
    download firmware for the bcm driver.
    When downloading firmware for this driver,
    powerpc/pseries: Cancel RTAS event scan before firmware flash
    The RTAS firmware flash update is conducted using an RTAS call that is
    AF9015 firmware does not like if it gets interrupted by I2C adapter
    rtlwifi: rtl8192cu: Change firmware upload to use block writes
    Driver rtl8192cu writes the firmware with 32-bit asynchronous writes. This
    firmware crash.
    ath6kl: Find ar->max_norm_iface in firmware IE parsing
    supported vifs are parsed from firmware IE in ath6kl_fetch_fw_api2()
    The SD8797 firmware image is shared with mwifiex driver.
    Whoever gets loaded first will be responsible for firmware
    [media] get_dvb_firmware: add support for HVR-930C firmware
    It turns out that v4's firmware provides a command so we can query
    Starting with v3 hardware, the firmware supports this shorter
    The corresponding firmware image file is located at:
    ASoC: Say how long short WM8958 DSP2 firmwares are
      gma500: Add the glue to the various BIOS and firmware interfaces
    gma500: Add the glue to the various BIOS and firmware interfaces
    ath6kl: add firmware IE for maximum number of vifs
    Not all firmwares support multiple vifs and we need to read the limit from
    the firmware image.
    Needed when detecting how many vifs firmware supports.
    ath6kl: add firmware filename info to struct ath6kl_hw
    ath6kl: add ar6004 firmwares to sdio module
    ath6kl: add firmware IE for board data address
    Board data address can change between firmwares so we need to read that
    from the firmware image.
    This is to make it configurable by firmware IEs. Also determine if we need
    drivers/firmware/dmi_scan.c: make dmi_name_in_vendors more focused
    Add USB support for ar6004. Currently only firmware can be booted,
    no commands can be sent to firmware yet as HTC layer doesn't work
    ath6kl: firmware boot fixes for ar6004
    The firmware expects the minimum length of
    command is 12. This command gets rejected by the firmware. To fix
    bma023 driver with the firmware naming of it.
    during suspend and restart firmware during resume. If we are connected
    Also fix a bug where we were comparing firmware scan status values
    that ath6kl didn't detect when firmware informed about failed scans. I
    ath6kl: print firmware crashes always
    Currently firmware crash dump is printed only if debug is enabled.
    by putting interface up and down. This is handy if firmware gets to some
    ath6kl: Maintain firmware interface index in struct ath6kl_vif
    firmware interface type during initialization because the type
    ath6kl: fix firmware start address for ar6003 hw2.0
    Sangwook found out that commit 639d0b89 ("ath6kl: read firmware start
    address from hardware") broke firmware boot on ar6003 hw2.0 as it seems
    with the new firmware (3.1.1.609), enable it back.
    > ipr 0000:01:01.0: Adapter firmware version: 06160039
    This is for example useful when loading a firmware in a predefined volatile
    Watchdog timer should be able to be stopped even firmware is not
            compat_firmware_class compat arc4 aes_generic deflate ecb cbc
    wl12xx: increase firmware upload chunk size
    The chunk size used during firmware upload was set to 512, which is
    bytes for firmware upload and the data is always sent in byte mode.
    Bluetooth: bfusb: Fix error path on firmware load
    (ath3k_probe) calls request_firmware() which definitely sleeps. Hence, we should
    Bluetooth: ath3k: output firmware filename when request_firmware failed
    refuses to load when the firmware is unavailable.
    as in recent files both firmwares are the same.
    NVMe: Add download / activate firmware ioctls
    NVMe: Read the model, serial & firmware rev from the controller
      [media] MFC: Change MFC firmware binary name
      ALSA: hdspm - Enable all firmware ranges for PCI MADI/AES cards
      ixgbe: fix reading of the buffer returned by the firmware
    rework of firmware file.
    [media] MFC: Change MFC firmware binary name
    This patch renames the MFC firmware binary to avoid SoC name in it.
    This driver requires firmware (which Abilis has provided with redistribution
    firmware can be downloaded from here:
    ixgbe: fix reading of the buffer returned by the firmware
      RDMA/cxgb4: Mark QP in error before disabling the queue in firmware
    If a line in the firmware file is larger than the given buffer size (and
    so the firmware file size), size is set to a value larger than the actual
    drivers/firmware: Add module.h to google/gsmi.c
    powerpc: fix implicit use of cache.h in kernel/firmware.c
     CC      arch/powerpc/kernel/firmware.o
    arch/powerpc/kernel/firmware.c:20: error: expected '=', ',', ';', 'asm' or '__attribute__' before '__read_mostly'
    arch/powerpc/kernel/firmware.c:21: error: expected '=', ',', ';', 'asm' or '__attribute__' before '__used'
    make[2]: *** [arch/powerpc/kernel/firmware.o] Error 1
    Bluetooth: bfusb: Fix error path on firmware load
    (ath3k_probe) calls request_firmware() which definitely sleeps. Hence, we should
    RDMA/cxgb4: Mark QP in error before disabling the queue in firmware
    to be a Marvell 88SE9485 part, with OCZ firmware/BIOS.
    - Some of the tuning in the firmware seems to ensure much better
    ALSA: hdspm - Enable all firmware ranges for PCI MADI/AES cards
    From the Windows INF file, we know the firmware ranges for all RME
    one revision ID per firmware version.
    The fix is in the driver-firmware handshake device removal code. We
    and then report devices. This feature is only enabled on IT firmware
    devices. For IR firmware, this feature is turned off. This feature is to
    If promiscous mode setting fails, reset loopback mode setting in firmware.
         firmware to abort the connection with RST.
    parsing the openfirmware tree. This causes calls to pci_map_rom() to fail.
    If a device's firmware initiates a bus reset by setting the IBR bit in
    Use 32bit value starting at offset 0x2d for displaying the firmware
    WPA has been disabled in the HCF layer. The firmware does
    firmware cards.
    ixgbe: fix endianess when writing driver version to firmware
    - Add a check to the switch statement in lpfc_decode_firmware_rev to check
    Since now login is not controlled by firmware, LLD need to free
    up the DDBs after firmware init. This will ensure free DDBs are
    [SCSI] qla4xxx: Add new FLT firmware region
    resources (the NVM and Phy) shared by the driver, firmware and hardware
    the software/firmware/hardware semaphore (arbitration of which is done in
    semaphore is owned by the firmware or hardware.
    not trigger a stop of the video firmware (due to missing lines errors).
    1. Adding new chip revisions including new firmware.
    When detect command queue stuck, instead of reload the firmware
    Lenovo X220, the MMC controller is already disabled by firmware it seems,
    [media] update az6027 firmware URL
    gpio_base was set to 0 if no system platform data or open firmware
    The corresponding firmware image file is located at:
    sometimes the firmware gets confused when recalibrating to the new
    ixgbe: fix driver version initialization in firmware
    firmware. If the os does not support the particular firmware
    management tools, the firmware requires a driver version to be written
    staging: brcm80211: remove dongle firmware related debug code
    firmware with this driver is stable this code does not belong
    bnx2: don't request firmware when there's no userspace.
    The firmware is cached during the first successful call to open() and
    cached firmware between open() and unregister_netdev().
    firmware is mandatory.
    The firmware on old 970 blades supports some kind of takeover called
       ports (aka NPEs).  The NPE needs a firmware in order to function.
    For some reason firmware is sending invalid rates when we try to
    process_sigma_firmware(codec->control_data, ADAU1701_FIRMWARE).
    gets it from firmware in separate tlv (chan_band_tlv).
    while preparing scan channel list for firmware Null entries
    ath6kl: allow firmware to override firmware patch address
    In some firmware versions their patch address has changed. If the firmware
    This patch adds helper functions to use PF as proxy for SRIOV VF firmware
    firmware will have done it for us, and under hypervisors such
    space between the first-level interrupt handlers and the firmware
    qlcnic: Added error logging for firmware abort
            short unsigned int         firmware_rev;         /*    28     2 */
        because the firmware is not filling in this field until the driver has
        the ioc->msix_vector_count.  This count is reported to firmware in the
    ath6kl: Indicate the roaming capability of the firmware
    firmware may do a background scan to find a better AP and try to
    Since the firmware is capable of handling roaming, let
      r8169: add MODULE_FIRMWARE for the firmware of 8111evl
        commands and firmware loading.
    [media] get_dvb_firmware: whitespace fix
    [media] get_dvb_firmware: update tda10071 file url
    [media] get_dvb_firmware: add dvb-fe-tda10071.fw
    TDA10071 firmware version 1.21.31.2
    o A performance drop was seen with firmware loaded
    "NMI occurred" messages when the firmware is unable to source the NMI.
    KDUMP to succeed even on NMIs that are unknown to the platform firmware.
    The firmware doesn't wait after lifting the PCI reset. However it does
    number of places thinking that the firmware blobs are required still.
    the OPAL runtime firmware.
    On machines supporting the OPAL firmware version 1, the system
    firmware, giving control to the kernel in hypervisor mode.
    These machines will be using a new firmware called OPAL
    the firmware doesn't always do it.
    When the driver (or most likely firmware) decides which AP to use
    commands and firmware loading.
    r8169: add MODULE_FIRMWARE for the firmware of 8111evl
    Add MODULE_FIRMWARE for the firmware of RTL8111E-VL
    simplify code - the defines to interact with the firmware are left in
    Encapsulation should always be enabled. Support is either via firmware
    that will only update the firmware. We don't need to support this
    ath6kl: add firmware capabilities support
    The new firmware format includes capability bits which make it
    possible to check what features the firmware supports. Add infrastructure
    ath6kl: read reserved ram size from firmware file
    A new version of firmware needs different reserved ram size so read that
    from the firmware image.
    ath6kl: read firmware start address from hardware
    It's actually possible to read the firmware start address from hardware,
    ath6kl: refactor firmware ext data addr and reserved ram handling size
    ath6kl: refactor firmware load address code
    ath6kl: add support for firmware API 2 format
    Brent reported that ath6kl busy loops if firmware doesn't boot for some
    reason (in this case he was using an older firmware which wasn't supported
    ath6kl: separate firmware fetch from upload
    In preparation for the new firmware image format.
    ath6kl: query device tree for firmware board-id
    libertas: prioritize usb8388_olpc.bin firmware on OLPC machines
    Normally, the v9 firmware will be loaded if it's available.  However, on
    OLPC XO-1 machines, the olpc-specific firmware supports extra functionality.
    This makes the libertas driver attempt to load the custom firmware first
    machine), fall back to attempting to load the other firmwares.
    usb8388_olpc.bin is currently found in the linux-firmware repository.
    Unblock the RX BA constraint event from firmware in AP mode as well.
    The latest firmware supports up to 16 SSIDs in the scheduled scan
    filter on SSIDs.  Due to the nature of the wl12xx firmware API, we
    The firmware only asks for one dummy packet at a time, but sometimes we
    based on the PM bit of incoming frames. AP firmware is capable of
    firmware may do a background scan to find a better AP and try to
    associate. Since firmware based roaming is faster, inform
    wpa_supplicant to avoid roaming and let the firmware decide to
    ESSID and the firmware will decide on the BSSID. Since it is not
    better to leave the roaming decision to the firmware.
    Input: elantech - use firmware provided x, y ranges
    Fail the probe if the LCD resolution described in card firmware does
    If the driver fails to get LVDS LCD data from the firmware, it falls
    ath6kl: Process regulatory requests from firmware.
    ath6kl: Add debugfs interface to dump diagnostic registers from firmware
    ath6kl: read fwlog from firmware ring buffer
    if firmware crashes we need to retrieve the latest logs through diagnose
    ath6kl: implement support to set firmware log parameters
    ath6kl: add firmware log support
    To save memory firmware log support is enabled only when CONFIG_ATH6KL_DEBUG
    firmware builds do not seem to like this when P2P is not enabled.
    When loading the firmware, complete each chunk by sending an I2C flush
    I2C transfer, which slows down the firmware loading especially when
     In some random cases, the firmware is sending two disconnect event to
    fw for both STA and AP roles") changed the name of the firmware name
    dmaengine i.MX SDMA: use request_firmware_nowait
    The firmware blob may not be available when the driver
    request_firmware_nowait() and continue without firmware.
    dmaengine i.MX SDMA: set firmware scripts addresses to negative value initially
    When the controller is disruprted (reboot, or setting firmware, etc),
      following write to PHYSDEV_CONTROL register for the firmware reaction, check
    - Swap all values that come from the firmware image on little endian systems.
    [SCSI] qla2xxx: Issue mailbox command only when firmware hung bit is reset for ISP82xx.
    Minidump allows us to catpure a snapshot of the firmware/hardware states at the
    [SCSI] qla4xxx: Added support for adapter and firmware reset
    [SCSI] scsi: Added support for adapter and firmware reset
    perform adapter or firmware reset as suggested by
    user/application can write "adapter" or "firmware" on
    in scsi_host_template to call LDD adapter or firmware
    This command is used to read ACB params from firmware
    This command will causes the firmware to update all
            Since firmware autologin is disabled this function will not work.
    [SCSI] bnx2fc: Clear DESTROY_CMPL flag after firmware destroy
    Since this flag was never cleared, the driver does not wait for firmware
    Since we enable interrupts before initializing the firmware, use the chip
    Also remove the unnecessary firmware attributes test.
          firmware interface, but requests not to validate it, but when a
          ref-tag error is detected by firmware, it would put
    [media] get_dvb_firmware: Firmware extraction for IT9135 based devices
    [media] mceusb: query device for firmware emulator version
    firmware. Second are "emulator" devices, which are built using custom
    hardware and firmware, written to emulate Microsoft's firmware. Third
    are "port" devices, which have their own device driver and firmware,
    responds "illegal command" to the query to get firmware emulator version
    According to MS docs, the device firmware may halt after receiving an
    unknown instruction, but that it should be possible to tell the firmware
      drivers:misc: ti-st: free skb on firmware download
      firmware: fix google/gsmi.c build warning
    The wl12xx firmwares support multiple SSIDs in a single sched_scan
    firmware loader: allow builtin firmware load even if usermodehelper is disabled
    In commit a144c6a6c924 ("PM: Print a warning if firmware is requested
    to load the firmware when tasks are frozen - we also failed the load.
    But that check was done before the check for built-in firmware, and then
    built-in modules can no longer load their firmware even if the firmware
    checking the built-in firmware.
    b43/legacy: Remove firmware IDs
    to a set of firmware files. However, this is hardly useful today.
    The firmware keeps track of channel usage. This data can
    firmware commands.
    The firmware keeps track of channel usage. This data can
    carl9170: import updated firmware headers
    Import new headers from our firmware branch:
    carl9170: fix timekeeping for HW_COUNTER firmwares
    would interfere with the firmware internal timekeeping,
    the function has to be moved into the firmware.
    staging: rtl8192e: Convert typedef firmware_status_e to enum firmware_status
    staging: rtl8192e: Convert typedef firmware_source_e to enum firmware_source
    staging: rtl8192e: Convert typedef firmware_init_step_e to enum firmware_init_step
    staging: rtl8192e: Convert typedef rt_firmware to struct rt_firmware
    staging: brcm80211: Fix handling of firmware and inits on big-endian platforms
    The firmware files are encoded as little-endian.  Do the appropriate swapping
    2. The NVS file is fetched by calling request_firmware() before it is
    The commit "Not all systems expose a firmware or platform mechanism for
    drivers:misc: ti-st: free skb on firmware download
    If during validation of the firmware download the data doesn't match what is
    expected out of the chip, this calls for a firmware download failure and a
    download firmware behaves differently at different times, when logs are
    wait_for_completion during the firmware send/wait sequence is being re-used
    and hence this needs to be re-initialised for fool proof firmware download
    b43: use enum for firmware header format
    Replace "old" and "new" with number of the first firmware known to use
    Remove support for firmwares that require 2 spare blocks for packet TX
      Not all systems expose a firmware or platform mechanism for changing the backlight intensity on i915, so add native driver support.
    Not all systems expose a firmware or platform mechanism for changing the backlight intensity on i915, so add native driver support.
    and (Re)Association Response frames internally (likely in firmware).
    driver/firmware.
    frames internally (in firmware most likely) in AP mode.
    ath3k.c for firmware loading.
       asic mode as part firmware boot parameters to firmware.
       ASIC ID. MSI-X vector assignment and programming done by firmware. Fixed
      powerpc/pseries: Fix kexec on recent firmware versions
    firmware need to be made available for user space (e.g., RSN IE for
    libertas: remove some dead code in if_spi_prog_helper_firmware()
    ath6kl: Release the memory allocated for the firmware
    Nowhere the firmware memory is freed, free it during
    o firmware logging
    Testmode, firmware logging and suspend support will be added soon. HCI
    firmware: fix google/gsmi.c build warning
    drivers/firmware/google/gsmi.c:473: warning: initialization from incompatible pointer type
    as the third product ID.  Those have Agere firmware.
    assumed to have Intersil firmware.  Cards with Agere firmware use
    This is needed to match wireless cards with Intersil firmware that have
    iwlagn: move context init after firmware loading
    firmware capabilities. Currently only the
    firmware-dependent setup before registering
    iwlagn: bump firmware API for some devices
    We're working on improvements for the firmware
    iwlagn: separate firmware version warning
    We sometimes need to support new firmware API for
    version of firmware to people who need to test.
    driver will warn everybody that their firmware is
    firmware isn't fully backward compatible)
    functions print consistent messages on error. I needed the firmware
    powerpc/pseries: Fix kexec on recent firmware versions
    Recent versions of firmware will fail to unmap the virtual processor
    The address argument is ignored by firmware on unregister so we
    notified by firmware to do the recovery work.
    defined under /sys/firmware/shutdown_actions/on_restart. Currently the
    be2net: add support for flashing Teranetics PHY firmware
      ALSA: asihpi - Don't leak firmware if mem alloc fails
      ALSA: hdspm - Add firmware revision 0xcc for RME MADI
    firmware arrays in 0a8692b534e18fcec6eac07551bb37a22659f5c7 (rtl8192u_usb:
    Remove built-in firmware images).
    drivers/firmware/efivars.c:161: warning: ‘utf16_strlen’ defined but not used
    drivers/firmware/efivars.c:602: warning: initialization from incompatible pointer type
    ALSA: asihpi - Don't leak firmware if mem alloc fails
    We leak the memory allocated to 'firmware' when we fail to
    release_firmware() after a kmalloc() failure in hpi_dsp_code_open().
       asserts IOC is in CNA mode in bfa_ioc_firmware_lock() and
       bfa_ioc_firmware_unlock() in bfa_ioc_ct.c.
      [SCSI] bnx2fc: Handle REC_TOV error code from firmware
      [media] NetUP Dual DVB-T/C CI RF: load firmware according card revision
      dmaengine: imx-sdma: sdma_get_firmware does not need to copy fw_name
    as the third product ID.  Those have Agere firmware.
    assumed to have Intersil firmware.  Cards with Agere firmware use
    This is needed to match wireless cards with Intersil firmware that have
    ALSA: hdspm - Add firmware revision 0xcc for RME MADI
    Apparently, there are multiple old firmware revisions in the wild for
    Program the firmware task structure with init_flags indicating the device is
    [SCSI] bnx2fc: Handle REC_TOV error code from firmware
    Driver decides to initiate REC on REC_TOV timer pop. The firmware maintains the
    REC timer and informs the driver as a firmware error message, which is an
    events from firmware that indicate data loss.
    response, the firmware has to be informed about the offset from which the
    firmware so that the firmware can program the task. Upon the sequence cleanup
    0x1     firmware filename: dvb-netup-altera-01.fw
    0x4     firmware filename: dvb-netup-altera-04.fw
    [media] NetUP Dual DVB-T/C CI RF: load firmware according card revision
    0x1     firmware filename: dvb-netup-altera-01.fw
    0x4     firmware filename: dvb-netup-altera-04.fw
    code for other types of firmware, and put the multiple-line comments
    In drivers/media/dvb/frontends/drxd_hard.c::load_firmware() I see 3
     allocated to it by request_firmware() by neglecting to call
     release_firmware().
     2) After a successful request_firmware() we allocate fw->size bytes
    [media] em28xx: Change firmware name for Terratec H5 DRX-K
    Use a name convention for the firmware file that matches on the
    current firmware namespacing. Also, add it to the firmware
    Better than ERROR -3. This happens with Terratec H5 firmware.
    I suspect that the scu_command is dependent on the firmware
    The microcode firmware provided on Terratec H5 seems to be
    firmware per-device.
    [media] drxk: Print an error if firmware is not loaded
    If something bad happens during firmware load, an error
    [media] drxk: Avoid OOPSes if firmware is corrupted
    Don't read paste the buffer, if the firmware is corrupted.
    setting for some things, and it has its own firmware.
    [media] get_dvb_firmware: Get DRX-K firmware for Digital Devices DVB-CT cards
    Get DRX-K firmware for Digital Devices DVB-CT cards
    [media] s2255drv: firmware version update, vendor request change
    removes obsolete comments. updates firmware versions. firmware vendor request simplified.
    [media] xc4000: check firmware version
    Enabled code to check if the version of the firmware reported by the hardware
    This patch causes the tuner reset command to be ignored in the firmware
    code, since this only happens when the BASE/INIT1 firmware is loaded by
    check_firmware(), and in that case check_firmware() already calls the
    reset callback before starting to load the firmware.
    [media] xc4000: firmware initialization
    This patch fixes/cleans up the loading of the firmware file when the
    [media] xc4000: check_firmware() cleanup
    This patch makes the following fixes in check_firmware():
      - there is only one BASE and INIT1 firmware for XC4000
    Removed unused code from load_scode() (all SCODE firmwares are
    [media] xc4000: simplified seek_firmware()
    This patch simplifies the code in seek_firmware().
    [media] xc4000: added firmware_name parameter
    The firmware_name module parameter makes it possible to set the firmware
    [media] xc4000: rename firmware image filename
    Give the xc4000 firmware filename a filename that makes more sense for public
    [media] xc4000: get rid of hard-coded 8MHz firmware config
    Remove a hack I had put in to force the firmware to be 8MHz, now setting
    the firmware properly based on the target standard.
    [media] xc4000: continued cleanup of the firmware loading routine
    Properly setup the standard firmware loading and scode loading, as well as
    error when the standard firmware sets the video standard, but everything else
    [media] xc4000: add code to do standard and scode firmware loading
    Add code to handle firmware blobs for the standard and scode.  Note there
    appears to be some issue with loading the DTV8 standard firmware, probably
    [media] xc4000: remove xc5000 firmware loading routine
    Since we use the xc3028 version of the firmware file parsing routine (which
    [media] xc4000: properly set type for init1 firmware
    We need to set the firmware type properly in order to locate the init1
    firmware.
    firmware load.  With this change, it would appear that the entire base firmware
    [media] xc4000: pull in firmware management code from xc3028
    Switch over to using the firmware management routines from the tuner-xc2028,
    firmware does not load properly (i2c write errors about 300 bytes in).
    else calls to request_firmware() will hit an oops in 2.6.31.
      Input: synaptics - set minimum coordinates as reported by firmware
    - Instead of waiting for a fixed amount of time after performing firmware
      readiness of the firmware for bring up.
    - Add revision and date to the firmware image format.
    - Use revision instead of rev_name to check firmware image version.
    - Update temporary offset after memcopy is complete for firmware update.
        a firmware response for the prior request.
    dmaengine: imx-sdma: sdma_get_firmware does not need to copy fw_name
    sdma_get_firmware().
      firmware: gsmi: remove sysfs entries when unload the module
      driver-core: Kconfig grammar corrections in firmware configuration
    drivers/firmware/sigma.c needs MODULE_LICENSE
    EFI provides an area of nonvolatile storage managed by the firmware. We
    HPI Version is used to check for firmware compatibility.
    This version  will accept 4.08.xx released firmware,
    and will also accept 4.09.xx beta firmware
    Mute functionality was recently added to the DSP firmware
    o In mn firmware case, file fw older than flash fw is allowed.
    bnx2: Fix endian swapping on firmware version string
    Otherwise, the firmware will not respond and we'll have to wait for
    set by firmware.  Unfortunately the new code causes throughput to stop
    MIPS: ARC: Fix build of firmware library on uniprocessor.
    and firmware was present.
    The latest firmware adds a second dword containing more device flags,
    carl9170 firmware: update firmware headers
    sysfs(/sys/firmware/efi/systab).
    Instead of having firmware command functions return an error and also
     bnx2x 7.0.23 firmware and the FW likewise must have the bnx2x multi
    to help debug issues related to management firmware.
    APEI firmware first mode must be turned on explicitly on some
    In APEI firmware first mode, hardware error is reported by hardware to
    firmware firstly, then firmware reports the error to Linux in a GHES
    some firmware implementation will work in a back-compatible mode by
    default.  Where firmware will only notify OS in old-fashion, without
    call can be specified to tell firmware that Linux has full APEI
    Some machine may have broken firmware so that GHES and firmware first
    notification in firmware first mode.  But because firmware first mode
    unload the GHES module with firmware first mode turned on.  To avoid
    error injection, and firmware may choose to do nothing here.  While
    some other actions are mandatory, for example, firmware must provide
    have no instructions), that may cause issue if firmware does not
    The firmware on some machine will report duplicated hardware error
    source ID in HEST.  This is considered a firmware bug.  To provide
    Input: synaptics - set minimum coordinates as reported by firmware
    Newer Synaptics firmware allows to query minimum coordinates reported by
    sst: avoid unnecessary firmware reloading for MRST
    SST HW on MRST doesn't need to reload the firmware during suspend/resume
    cycle, so remove the extra workload. This also fix a bug that the firmware
    Recent firmware changes report tx ack status properly
    b43: define firmwares for HT and LCN PHYs
    We were uploading different firmwares to the hardware until finding
    dmaengine: imx-sdma: pass sdma firmware name via platform data
    firmware name as variables.  For example, there are three TOs of
    have to prepare three identical firmwares, sdma-imx51-to1.bin
    and instead uses fw_name to pass the firmware name, so that we can
    firmware exists.
    code, imx-sdma driver will try to load firmware sdma-imx25-to0.bin,
    using it for probing of certain devices. However, some firmware fixes
    Retain compatibility with old firmware by fixing up the device tree
    Add new testmode command for retrieving rx reports from firmware.
    carl9170: import 1.9.4 firmware headers
    initialize the firmware during boot.
    progress during the recovery process by the firmware and avoid
    staging: ft1000-pcmcia: remove support for v5 firmware
    Remove support for v5 firmware images as all known firmware images are v6.
    staging: ft1000-pcmcia: remove firmware download typedefs
    Remove firmware download typedefs:
    staging: brcm80211: clean up firmware download code in fullmac
    In brcmfmac the firmware download related code scatter all around.
    And some old dead code which is not following the standard firmware
    routine is still present. This patch limits the firmware download
    The fullmac functions for firmware communication protocol handling
    driver. This commit renames identifiers related to firmware event
    When driver is unloaded, disable PMD in addition to TX laser, provided that the management firmware will be able to enable it back.
    1/ Since commit 858d4aa7 "isci: Move firmware loading to per PCI device" we have
    2/ The afe parameters from the firmware were not being honored
    Since the data structure for oem from orom/efi/firmware is the same as what
    Also updated the data struct for oem parameters and hex file for firmware
    isci: Move firmware loading to per PCI device
    Moved the firmware loading from per adapter to per PCI device. This should
    prevent firmware from being loaded twice becuase of 2 SCU controller per
    PCI device. We do have to do it per PCI device because request_firmware()
    state is entered through a global firmware or hardware operation.
    firmware: gsmi: remove sysfs entries when unload the module
    with the way "make firmware_install" really works.
    driver-core: Kconfig grammar corrections in firmware configuration
    While 0xffdc devices have their IR protocol hard-coded into the firmware
    un-necessary firmware reload.
    iwlagn: add correct firmware name for 135 series
    multiple functions at same time. To co exist all functions, firmware need
    loopback test, command need to send to firmware, which will quiescent other functions.
    learnt from the adapter firmware using the devcmd CMD_INTR_COAL_CONVERT. This allows the driver to configure
      rtl8192cu: Fix missing firmware load
    - Added logic to wait for the response  from the firmware before sending
    - Added h/w queue ID in CPE messages, firmware uses h/w queue ID
      in the message header and firmware modules use h/w queue ID from
      messages.  Used to translate host tag to firmware tag. bfa_lpuid()
        it's in the middle of sending TM  request to firmware
    - Made changes to support single firmware image per asic type.
      firmware response.
    ath6kl: export firmware version to user space
    firmware-version: 3:1:1:149
    ath6kl: cache firmware
    Drivers should not request firmware during resume. Fix ath6kl to
    cache the firmware instead.
      firmware: fix GOOGLE_SMI kconfig dependency warning
      USB: TI 3410/5052 USB Serial Driver: Fix mem leak when firmware is too big.
    rtlwifi: rtl8192de: Merge firmware routines
    iwlagn: fix *_UCODE_API_MAX output in the firmware field
        firmware:       iwlwifi-5150-IWL5150_UCODE_API_MAX.ucode
        firmware:       iwlwifi-5000-IWL5000_UCODE_API_MAX.ucode
        firmware:       iwlwifi-6000g2b-IWL6000G2_UCODE_API_MAX.ucode
        firmware:       iwlwifi-6000g2a-IWL6000G2_UCODE_API_MAX.ucode
        firmware:       iwlwifi-6050-IWL6050_UCODE_API_MAX.ucode
        firmware:       iwlwifi-6000-IWL6000_UCODE_API_MAX.ucode
        firmware:       iwlwifi-100-IWL100_UCODE_API_MAX.ucode
        firmware:       iwlwifi-1000-IWL1000_UCODE_API_MAX.ucode
        firmware:       iwlwifi-105-IWL105_UCODE_API_MAX.ucode
        firmware:       iwlwifi-2030-IWL2030_UCODE_API_MAX.ucode
        firmware:       iwlwifi-2000-IWL2000_UCODE_API_MAX.ucode
    A recently added feature to the firmware enables the driver to retrieve
    firmware logs via the host bus (SDIO or SPI).
    The firmware, in practice, treats the channels in three separate
      libata: apply NOSETXFER horkage to the affected Pioneer drives regardless of firmware revision
    regardless of firmware revision
    another and pioneer doesn't seem to be fixing firmwares for the
    regardless of firmware revision.
    firmware anyway at this time, it's only locked when device is using/txing
    rtl8192cu: Fix missing firmware load
    "rtlwifi: rtl8192c-common: Change common firmware routines for addition
    of rtl8192se and rtl8192de", the firmware loading code was moved.
    rtl8192c: Loading firmware file rtlwifi/rtl8192cufw.bin
    their firmware tables. Add dcb ops routine to handle this.
    error prone in the firmware case.
    And change iSCSI RQ doorbell size from 16B to 64B to match new firmware.
    This consists of informing the management firmware of the driver version
    The Sigma code is in drivers/firmware which is only included on a very
    r8169: check firmware content sooner.
    Firmware checking is only performed when the firmware is loaded
    r8169: support new firmware format.
    The new firmware format adds versioning as firmware for a specific
    r8169: explicit firmware format check.
    r8169: move the firmware down into the device private data.
      ALSA: hdspm - Add firmware revision ID for RME MADI PCI version
    firmware, but bug in Bluetooth stack, which will be fixed by
    firmware.  This patch will cope with the change easily.
    mwl8k: Tell firmware to generate CCMP header
    functionality since firmware was not doing this either. Set a flag
    to tell the firmware to generate the CCMP header
    USB: TI 3410/5052 USB Serial Driver: Fix mem leak when firmware is too big.
    If the size of the firmware exceeds TI_FIRMWARE_BUF_SIZE we'll leak 'fw_p'
    by failing to call release_firmware().
    sound/usb/6fire/firmware.c::usb6fire_fw_ezusb_upload().
    We already call release_firmware(fw) on line 258, so when we then do it
    Easily fixed by just removing the last call to release_firmware().
    ALSA: hdspm - Add firmware revision ID for RME MADI PCI version
    iwlagn: use IWL_DEBUG_FW for firmware related debug msg
    iwlegacy: remove firmware event log
    libertas firmware randomly stopping responding to commands after
    resume. Careful monitoring of communications indicates a firmware or
      staging: gma500: get control from firmware framebuffer if conflicts
    cnic: Fix race conditions with firmware
    at about the same time, the firmware may not complete the driver's
    need this in firmware download routine.
    staging: gma500: get control from firmware framebuffer if conflicts
    harmful for the increment of ptr done in download_firmware.
    firmware: fix GOOGLE_SMI kconfig dependency warning
    the modem's firmware to respond, which it of course doesn't do.
    completely different firmware and AT command sets, so we end up adding
    Uses Longcheer-based firmware and AT command set.
    iwlagn 0000:20:00.0: On demand firmware reload
      ALSA: 6fire: Don't leak firmware in error path
    Check the MX51 chip revision in run-time so that the correct SDMA firmware can
    ALSA: 6fire: Don't leak firmware in error path
    sound/usb/6fire/firmware.c::usb6fire_fw_ezusb_upload() neglects to free
    the memory allocated for the firmware before returning, thus leaking the
    For SD8787 A0/A1 chipsets we use the default firmware image
    drivers/net/wireless/b43legacy/main.c: In function ‘b43legacy_request_firmware’:
      [SCSI] lpfc 8.3.24: Add request-firmware support
    [SCSI] lpfc 8.3.24: Add request-firmware support
    Add request-firmware support:
    - Add support for request_firmware interface for INTF2 SLI4 ports.
    - Add capability of inducing SLI4 firmware dump obj file
    - Prevent driver from using new WWN when changed in firmware (until driver
    While decoding received event packet from firmware, 4 bytes
    make sure frontend is detached on firmware change.
    way for the operating system to be forced to depend on the firmware) and
    someone's eventually going to write yet another firmware specification.
    lives behind.  Thus bcm4329 firmware doesn't need to be reloaded.
    This is a snapshot of the current PRCMU firmware API as it looks
    right now. The PRCMU firmware is still subject to change. This
    Don't allow everybody to load firmware.
         posts a firmware WR with that wait object ptr as the cookie to be
    Ensure that the initial reference tag is passed on to the HBA firmware
    to firmware.
      [SCSI] qla2xxx: Log if qla82xx firmware fails to load from flash.
      [SCSI] qla2xxx: Update firmware version after flash update for ISP82xx.
    back (or worse, crashing the firmware), return -ERANGE when the
    Change firmware download split, which I introduced few patch earlier,
    [media] cx24116: add config option to split firmware download
    [media] cx23885: Don't leak firmware in cx23885_card_setup()
    We leak the memory allocated to 'fw' (the firmware) when the variable goes
    Fix the leak by calling release_firmware(fw) before 'fw' goes out of
    Print firmware version as two digit long (change from 3 to 2).
    [media] drxd: move firmware to binary blob
    Abstract out the firmware for the drx-d so that it can be loaded by the
    request_firmware() interface.
    The firmware licensing permits free redistribution, and can be found here:
    http://kernellabs.com/firmware/drxd
    [media] DM04/QQBOX Fix issue with firmware release and cold reset
    Fix issue where firmware does not release on cold reset.
    Also, default firmware never cold resets in multi tuner
      PM: Print a warning if firmware is requested when tasks are frozen
    Note: Since firmware now limits the size of the buffer, I made
    Tested with upcoming firmware with the 4 combinations of
    PM: Print a warning if firmware is requested when tasks are frozen
    Some drivers erroneously use request_firmware() from their ->resume()
    unless the firmware has been built in.  This causes system resume to
    stall until the firmware-loading timeout expires, which makes users
    unnecessarily.  For this reason, make _request_firmware() print a
    [SCSI] qla2xxx: Log if qla82xx firmware fails to load from flash.
    [SCSI] qla2xxx: Update firmware version after flash update for ISP82xx.
    the old firmware version ends up getting displayed. This patch fixes
    The firmware spec has the fcp_data_dseg_len defined as a 32-bit
    drm/nvc0/gr: better handling of fuc firmware
    Allows per-chipset firmware to be installed, and keeps a copy in memory
    the firmware during OS boot.  The BAU is generating an 'INTD'
    The current firmware only supports scheduled scan in station mode and
    when idle.  To prevent the firmware from crashing, return -EOPNOTSUPP
    Add firmware command structures, definitions and code to to configure,
    OXUF924DSB FireWire 800 to dual SATA bridge with firmware from MacPower,
    tune the audio firmware for it's requirement.
    This patch also adds a printk that outputs the name of the firmware
    a separate memory map, and only that map is passed back to the firmware.
    Some firmware implementations assume that physically contiguous regions
    entirely unjustifiable. Said firmware implementations lack the good grace
    In an ideal universe these firmware implementations would simultaneously
    r8169: merge firmware information into the chipset description data.
    r8169: provide some firmware information via ethtool.
    There is no real firmware version yet but the manpage of ethtool
    firmware-version:
    firmware-version:
    firmware-version: N/A
    firmware-version: rtl_nic/rtl8168d-1.fw
    last sysfs file: /sys/module/firmware_class/initstate
    Modules linked in: efivars(-) af_packet tun nfsd lockd nfs_acl auth_rpcgss sunrpc ipt_REJECT nf_conntrack_ipv4 nf_defrag_ipv4 iptable_filter ip_tables ip6t_REJECT xt_tcpudp nf_conntrack_ipv6 nf_defrag_ipv6 xt_state nf_conntrack ip6table_filter ip6_tables x_tables ipv6 cpufreq_ondemand acpi_cpufreq freq_table mperf binfmt_misc dm_mirror dm_region_hash dm_log dm_multipath scsi_dh dm_mod snd_hda_codec_analog snd_hda_intel snd_hda_codec snd_hwdep mousedev snd_seq joydev snd_seq_device mac_hid evdev snd_pcm usbkbd usbmouse usbhid snd_timer hid tg3 snd sr_mod pcspkr rtc_cmos soundcore cdrom iTCO_wdt processor sg dcdbas i2c_i801 rtc_core iTCO_vendor_support intel_agp snd_page_alloc thermal_sys rtc_lib intel_gtt 8250_pnp button hwmon unix ide_pci_generic ide_core ata_generic pata_acpi ata_piix sd_mod crc_t10dif ext3 jbd mbcache uhci_hcd ohci_hcd ssb mmc_core pcmcia pcmcia_core firmware_class ehci_hcd usbcore [last unloaded: dell_rbu]
    by the firmware to report IO events. The firmware uses the same interrupt
    Since firmware is capable of generating IV's for all crypto
    firmware can write IV's values.
    rtlwifi: rtl8192se: Merge firmware routines
    Platform firmware's use of this UUID/_OSC is optional, which is
    exports some page coalescing statistics available from firmware via
      b43: trivial: update module info about ucode16_mimo firmware
    filled in the buffer and then sent to firmware.
    wl12xx: print firmware program counter during recovery
    When performing recovery, print the firmware version and program
    counter (by reading the SCR_PAD4 register). The value of the firmware
    The 128x/AP firmware does not yet support dynamic memory. Temporarily,
    tell the firmware to wake up once in N DTIMs/beacons.
    Instead, configure the firmware to use the whole 11b rates by default.
    collect driver/firmware traces if init fails.  Also add a printk to
    [SCSI] bfa: firmware download fix
    This patch includes fixes for two issues releated to firmware download
    <jj@chaosbits.net>. Basically we need to call release_firmware() after
    request_firmware(). 2) fixed issues with the firmware download interface
    specific changes in the SSS6200 firmware).
    by the firmware through IRCC events and the driver does this just before
    arriving and processed by the firmware. Without this additional
    check, the firmware will return port-information stating that the
    [SCSI] qla2xxx: Display hardware/firmware registers to get more information about the error for ISP82xx.
    [SCSI] qla2xxx: Free firmware PCB on logout request.
    In order to keep Google's firmware drivers organized amongst themselves,
    all Google firmware drivers are gated on CONFIG_GOOGLE_FIRMWARE=y, which
    Our firmware gives us access to an in-memory log of the firmware's
    as to what the firmware is doing.
    the file /sys/firmware/log.
    The "gsmi" driver bridges userland with firmware specific routines for
    This driver works by trampolining into the firmware via the smi_command
    these commands when we are currently reset firmware, what could
    struct iwl_queue is not part of firmware interface, so __packed is not
    BA session in the firmware and get messages like that:
    BA session in the firmware and get messages like that:
    mwifiex: check firmware capabilities while initialising 5GHz band parameters
    Bump the firmware version to 1.2
    drivers that have rate control in either the firmware or hardware.
    b43: trivial: update module info about ucode16_mimo firmware
    - remove duplicate rtl_firmware_info record
    The hint firmware is returning in the RTAS call should definitely
    powerpc/book3e: Flush IPROT protected TLB entries leftover by firmware
    old mappings established by the firmware or bootloader.  At present we
    There are several good reason firmware might establish mappings with IPROT,
    and in fact ePAPR compliant firmwares are required to establish their
    rtlwifi: rtl8192c-common: Change common firmware routines for addition of rtl8192se and rtl8192de
    Change common firmware routines for addition of RTL8192SE and
    Note: Not all firmwares include the multicast filter
    and 0x05e0/0x1300) need HID_QUIRK_NOGET, otherwise their firmware exposes
    event is received from firmware the scan results never get
    The firmware expects the device ID to be added on the
    data and command packets sent to firmware for AR6003 v2.1.1.
    2. The firmware and the board data files are different
    3. Certain parameters like numdevice, firmware mode needs to be
    Tell the firmware to enable the life time expiry of tx packets
    when firmware commands are executing or if the interface is brought down.
    * Bump the required firmware version to 1.1
    r8169: don't request firmware when there's no userspace.
    The firmware is cached during the first successfull call to open() and
    cached firmware between open() and unregister_netdev().
    So far the firmware is optional : a failure to load the firmware does
    firmware load.
    iwlagn: combine firmware code/data
    iwlagn: implement synchronous firmware load
    The current firmware loading mechanism in
    the firmware loading synchronous.
    iwlagn: leave notification waits on firmware errors
    When the firmware encounters an error while the
    and down'd.  After that, management firmware made it illegal to access
    the phy unless the driver "owned" the device.  Now that most firmware
    file, which can be loaded at any location by the firmware and will
    firmware: Fix grammar in sysfs-firmware-dmi doc
    the firmware. Since dummy packets are handled differently than regular
    Issuing multiple JOIN commands to the wl12xx's firmware, while
    states (like authentication), otherwise the firmware might jump to
    The firmware requires dummy packets to be sent using TID 7
    All the new firmware versions (>=6.1.3.50.58 for STA and >=6.2.0.0.47
    firmwares that require 2 spare blocks, so added a quirk to handle the
    firmware revision.
    Thus, this patch implements a reassignment of node-ids if buggy firmware
    Broadcom iscsi offload firmware uses a non standard ibft sign of "BIFT".
    older firmware (I guess 4 years old), so boot does not work on current
    firmware. Mike has tested Chelsio and Intel cards.
    During a kernel crash, bna control path state machine and firmware do not
    ath9k_htc: Add detailed firmware statistics
    ath9k_htc: Sync MGMT/DATA packet headers with firmware
    Match the beacon header with that of the firmware.
    Also, the firmware reports the TSF for an SWBA, so
    ath9k_htc: Add a WMI command to get the firmware version
    ath9k_htc: Rename firmware
    commands to the firmware. Keep the other interrupts masked in
    The SD8787 firmware image is shared with mwifiex driver.
    Whoever gets loaded first will be responsible for firmware
    Bluetooth: Clean up ath3k_load_firmware()
    Before calling host_to_card() to send the cmd to firmware,
    The firmware version will be fixed later on when the FW
    obtained from firmware provided SFI tables. We reuse/fake MP
      bna: Fix for handling firmware heartbeat failure
    reserve extra scratch buffer space for the firmware]
    iwlagn: tx power calib always done in firmware
    If change_interface gets invoked during a firmware
    iwlwifi: remove extranious macro from firmware define
    define of firmware filenames use extra macro to build the files name.
    called during firmware loading.
    these commands when we are currently reset firmware, what could
    firmware (or vice-versa) in the mwl8k_add_interface routine, the
    bna: Fix for handling firmware heartbeat failure
    This patch contains a fix for gracefully handling firmware heartbeat
    firmware that reports it can do more than 4 bytes in a
    staging: gma500: pull mrst firmware stuff into its own header
    Grovel the firmware via the Moorestown interfaces and read the other bits
    firmware and fuse configurations
    We have a set of firmware passed descriptors and things we need to grovel
    driver or firmware that prefers to handle blinking asynchronously).
    and the firmware would generate ACL frames.
    Consumes 10s of milliwatts but avoids having to reload firmware
    The hw_dot_11n_dev_cap reported by firmware hw_spec
    explain the mapping between firmware and 11n spec.
    ALSA: 6fire - Improve firmware loader
    versions now and accepts possibly loaded firmware, if it is knowing to
    On ppc64 the crashkernel region almost always overlaps an area of firmware.
    region. If we free the firmware area we are guaranteed to crash.
    With current bnx2x firmware 6.2.9, iSCSI is not supported in DCB
    bnx2x: Update firmware to 6.2.9
    mwl8k: Handle the watchdog event from the firmware
    When an ampdu stream is on, if the firmware rate adaptation
    mwl8k: update to ap firmware API version 2
    -- capabilities are reported by the firmware
       Specifically, packets that are queued in firmware for longer
    The modem's firmware exposes a CDC ACM port for modem control and a
    If a given firmware doesn't have a token to support query-cpu-stopped-state,
    If change_interface gets invoked during a firmware
    firmware fixes, we need workaround problems by disable hardware scanning
      watchdog: sp5100_tco.c: Check if firmware has set correct value in tcobase.
    watchdog: sp5100_tco.c: Check if firmware has set correct value in tcobase.
    Also works around a firmware bug where the _WED method
    firmware provide the _OSC method required to support native PCIe hotplug.
    As it has become more common to have to write firmware or similar
    Cleanup commands are issued to the firmware to cleanup any stuck ios
    If SR-IOV is enabled by firmware, even if it is not enabled in the PCI
    sigma-firmware: loader for Analog Devices' SigmaStudio
    Analog Devices' SigmaStudio can produce firmware blobs for devices with
    regions passed by the firmware as reserved and we all know how much we can
    trust our firmwares...
    and/or RX only firmware for the on-board Zilog Z8 IR unit.
    With appropriate firmware the WM8958 can support Virtual Surround Sound or
    support for this mode of operation when the appropriate firmware can be
    ASoC: Support download of WM8958 MBC firmware
    Allow userspace to supply an update to the ROM firmware. The firmware
    request is non-blocking so userspace can load the firmware at its
    firmware the next time MBC is started after it has been supplied.
    reported firmware limits on mlx4.
    downloadable firmware at runtime can add or replace existing controls.
    [media] af9013: reimplement firmware download
    [media] af9015: reimplement firmware download
    [media] Force xc5000 firmware loading for NetUP Dual DVB-T/C CI RF card
    APEI ERST firmware interface and implementation has no multiple users
    and it worked (after I downloaded the firmware dvb-fe-ds3000.fw).
    [media] dw2102: use separate firmwares for Prof 1100, TeVii S630, S660
    sharing one firmware name. Now it's fixed.
    [media] TTUSB DVB: ttusb_boot_dsp() needs to release_firmware() or it leaks memory
    need to call release_firmware(fw) before returning or we'll leak - no
    [media] ds3000: don't load firmware during demod init
    Speed up tuning, as firmware is not necessary to load every attempt to tune
    [media] ds3000: loading firmware in bigger chunks
    Decrease firmware loading time. Before it is ~4000 i2c calls,
    now it is ~256 i2c calls to load ds3000 firmware.
    [media] Altera FPGA firmware download module
    [media] tuner-xc2028: More firmware loading retries
    My Hauppauge WinTV HVR-1400 needs sometimes more then only one retry to load the firmware successfully.
    [media] get_dvb_firmware: ngene_18.fw added
    Add download link for ngene firmware rev 18.
    Small modifications for firmware 18.
    demodulator is firmware-driven.
    usage of firmware-based devices.
    [The PCI SIG documentation for the _OSC OS/firmware handshaking interface
    there are chips whose firmwares ignore the configured split timeout and
    (DICE), and some OXUF936QSE firmwares.
      PCI: Export ACPI _DSM provided firmware instance number and string name to sysfs
    support runtime download of alternative firmware. In preparation for
      staging: rtl8192e: Pass priv to firmware download functions
      firmware: Fix unaligned memory accesses in dmi-sysfs
      firmware: Add documentation for /sys/firmware/dmi
      firmware: Expose DMI type 15 System Event Log
      firmware: Break out system_event_log in dmi-sysfs
      firmware: Basic dmi-sysfs support
      firmware: Add DMI entry types to the headers
    drivers/pci/pci-label.c: In function ‘pci_create_firmware_label_files’:
      x86, microcode, AMD: Release firmware on error
    Input: atmel_mxt_ts - remove firmware version check
    Atmel touchscreen chips have different firmware version with each chip,
    so we cannot distinguish attribute of chip by firmware version.
    netxen: Notify firmware of Flex-10 interface down
    Notify firmware when a Flex-10 interface is brought down
    bnx2: Update firmware and version
    Update 5709 mips firmware to 6.2.1a to fix iSCSI performance
    enic: Support newer version of firmware devcmd CMD_MCPU_FW_INFO
    This patch provides support to the newer version of firmware devcmd CMD_MCPU_FW_INFO
    staging: rtl8192e: Pass priv to firmware download functions
    The recent capacitive DWAV firmwares do not use the CONTACTCOUNT
    disabled using the "old" firmware interface (RTAS_CHANGE_FN), still
      [media] s2255drv: firmware re-loading changes
    Probing reports does bad things with some ntrig firmwares, better to
       OMAP firmware.
       OMAP firmware.
    ALSA: hdspm - Add firmware ID for older AES32 cards.
    The current AES32 firmware revision ID is 234, however, a user confirmed
    request certain wifi related activity to be performed by the firmware,
    where this calls helps to make sure our firmware would be in ready
    check for firmware status for any reason
    For example, PRUSS runs firmware for real-time critical industrial
    positive and firmware reset, for example when channel is noised and
    PCI: Export ACPI _DSM provided firmware instance number and string name to sysfs
    This patch exports ACPI _DSM (Device Specific Method) provided firmware
      /sys/bus/pci/devices/.../label which contains the firmware name for
      /sys/bus/pci/devices/.../acpi_index which contains the firmware device type
    The ACPI _DSM provided firmware 'instance number' and 'string name' will
    be given priority if the firmware also provides 'SMBIOS type 41 device
    If firmware allows us to map all of a partition's memory for DMA on a
    wl12xx: fix the path to the wl12xx firmwares
    In the linux-firmware git tree, the firmwares and the NVS are inside
    wouldn't work as implemented.  On top of that the X540 firmware is written
    the session information to the underlying FCoE firmware.
    doing libfc lport reset, this is needed for new switch firmware
    is done by the MC firmware and is not configurable by drivers).
    sfc: Read MC firmware version when requested through ethtool
    to format the firmware version for ethtool_get_drvinfo().  Since we
    after an MC firmware update.  Remove the cached version information
    ALSA: hdspm - Abort on unknown firmware revision
    ALSA: hdspm - Add updated firmware revision for AES32
    has a different firmware revision.
    firmware: Fix unaligned memory accesses in dmi-sysfs
    firmware: Add documentation for /sys/firmware/dmi
    firmware: Expose DMI type 15 System Event Log
    /sys/firmware/dmi/entries/15-0/system_event_log/raw_event_log.
    firmware: Break out system_event_log in dmi-sysfs
    firmware: Basic dmi-sysfs support
    as kobjects rooted at /sys/firmware/dmi/entries.
       handle       : The handle given to this entry by the firmware
    firmware: Add DMI entry types to the headers
    [SCSI] qla2xxx: Don't wait for active mailbox command completion when firmware is hung.
    This is required when issuing commands to the firmware.
    the firmware is 8, manage the station slots accordingly.
    All mwl8k parts perform rate control in firmware.  Make this known to
    rate information is not available from the firmware, invalidate the
    disables the gpio mode of that pin (if left on by firmware).
    wl12xx: update PLT initialization for new firmware
    In revision > 6.1.3.0.0 the firmware expects memory configuration command
    Seems like we are forever to be cursed with buggy firmware, so allow the
    It is found on Dell Inspiron 1018 that the firmware reports that the hardware
    This patch forces the driver to toggle the firmware rfkill status in the case
    that the hardware killswitch is indicated as unsupported by the firmware.
    iwlwifi: Limit number of firmware reload
    If device has serious problem and cause firmware can not recover itself.
    Keep reloading firmware will not help, it can only fill up the syslog and
    "mXT224" is used in the Intel mid firmware in SFI tables to identify the
    downloading a firmware binary meant for RF tests on the factory floor.
    clear the firmware previous profile state. There is one case in linux host
    This causes firmware state to mismatch causing an ASSERT. Use the driver
    issued to firmware.
    staging: brcm80211: improved checks on incompatible firmware
    firmware validation, which could lead to incompatible firmware not being
    staging: brcm80211: bugfix for stack dump on firmware load problems
    If there is a problem with the firmware load (eg, firmware not present in
    /lib/firmware/brcm), then the driver would dump its stack instead of bailing
    staging: brcm80211: bugfix for oops on firmware load problems
    Upon firmware load failure, wl_release_fw() was called multiple
    If management firmware is present and the device is down, the firmware
    host, it will collide with firmware phy accesses, resulting in
    firmware, used in the IEC 60945 keyboard.  This device crashes during
    be_cmd_pmac_add/del functions need to pass domain number to the firmware.
    Bluetooth: Add firmware support for Atheros 3012
      USB: io_edgeport: fix the reported firmware major and minor
    Firmware version check depends on hpi version. Update so correct firmware
    ALSA: asihpi - Tighten firmware version requirements.
    Difference in major.minor between driver and firmware is an error now.
    ALSA: asihpi - Clarify firmware id selection.
    passed on from the firmware loader.
    Modules linked in: wl12xx_sdio wl12xx firmware_class crc7 mac80211 cfg80211 [last unloaded: crc7]
    x86, microcode, AMD: Release firmware on error
    loaded firmware binary and its related resources. Make sure we do. Also,
    wl12xx: move to new firmware (6.1.3.50.49)
    This patch adds support for the new wl12xx firmware (Rev 6.1.3.50.49)
    firmware blob after it has been loaded (successfully or not).
    |     if (ath3k_load_firmware(udev, firmware)) {
    |             release_firmware(firmware);
    |     release_firmware(firmware);
    enic: Bug Fix: Reorder firmware devcmds - CMD_INIT and CMD_IG_VLAN_REWRITE_MODE
    Organize the wrapper routines for firmware devcmds into a separate file.
    drivers:misc: ti-st: firmware download optimization
    To fasten the process of firmware download, the chip allows
    when it comes across a wait event during firmware parsing.
    originally received by bootloader or firmware as platform
    USB: io_edgeport: fix the reported firmware major and minor
    inconsistency in the reported versions during firmware loading:
     usb 4-1: firmware: requesting edgeport/down.fw
     /usr/src/linux/drivers/usb/serial/io_edgeport.c: downloading firmware version (930) 1.16.4
    This can cause some confusion whether firmware loaded successfully
    firmware_classs: change val uevent's type to bool
    Some place in firmware_class.c using "int uevent" define, but others use "bool
      [SCSI] mpt2sas: fix internal device reset for older firmware prior to MPI Rev K
    Modules linked in: wl1271_sdio wl1271 firmware_class crc7 mac80211 cfg80211
    If the firmware buffer is full, tx_work does nothing. In combinition with
    firmware buffer is freed on tx_complete.
    watermark are queued, but more than firmware buffer can hold. This results
    [media] s2255drv: firmware re-loading changes
    Change for firmware re-loading and updated firmware versions.
    lme_firmware_switch because of a memcpy to a const char.
      staging: r8712u: Fix memory leak in firmware loading
    argument since the AMPDU TX is fully handled by the firmware.
    dmaengine i.MX SDMA: Fix firmware loading
    the ram_code_start_addr found in the firmware image. The copy
    5b28aa3 dmaengine i.MX SDMA: Allow to run without firmware
    struct iwl_queue is not part of firmware interface, so __packed is not
    job of the driver or hardware/firmware, change the cfg80211 to allow also
    rtlwifi: Fix firmware upload errors
    the project's main firmware carl9170fw.git.
      USB NET KL5KUSB101: Fix mem leak in error path of kaweth_download_firmware()
    If management firmware is present and the device is down, the firmware
    host, it will collide with firmware phy accesses, resulting in
    Old V2M firmware apparently configured it by default, but on newer
    USB NET KL5KUSB101: Fix mem leak in error path of kaweth_download_firmware()
    We will leak the storage allocated by request_firmware() if the size of
    the firmware is greater than KAWETH_FIRMWARE_BUF_SIZE.
    This removes the leak by calling release_firmware() before we return
    We may be able to remove this restriction in future firmware.
    The auto-arp feature sometimes has unexpected side effects (e.g. firmware
    The wl12xx chips do the AMDPU aggregation work in the firmware, but it
    wl12xx: AP mode - fetch appropriate firmware for AP
    AP and STA modes use different firmwares.
    Differentiate the firmware files by name and fetch the appropriate one
    when add_interface is called by mac80211. The STA firmware is chosen for
    structure (struct wl1271) if conf_tx is called when the firmware is
    Later on when the firmware is loaded, we apply the tx conf as part of
    (where the firmware is initialized).
    firmware. We work around this by always indicating success in when
    - firmware loading after cold start
    firmware reports that it supports more outstanding IO than what can be fit
    [SCSI] mpt2sas: fix internal device reset for older firmware prior to MPI Rev K
    for older firmware prior to MPI Rev K We added
    ignored for older firmware.  When ignored, the tm_busy flag doesn't
    removal handshake alogrithm to firmware. This results in controller
    firmware not sending sas topology add events the next time the device is
    FW_Omega2 chip, used in the CamSport Evo camera.  The firmware
    * delete 10K line farray.h containing internal firmware
    staging: r8712u: Switch driver to use external firmware from linux-firmware
    rtl8192u_usb: Remove built-in firmware images
    These firmware images are already unused.
    vt6656: Use request_firmware() to load firmware
    The file added to linux-firmware is a copy of the current array which
    Change the firmware version check to accept newer versions.
      machine check. Recent versions of the pseries firmware do not fill them
    Staging: rtl8192e: Dump step we fail in init_firmware()
    staging: r8712u: Fix memory leak in firmware loading
    The error path leaks the firmware struct.
    usbserial snd_hda_intel snd_hda_codec firmware_class snd_hwdep snd_pcm
    to rely on firmware to reroute specific traffic, a driver
    The firmware PXE EPROM version detection is failing due to passing the
    wrong parameter into firmware query function.  Also, the version
    There is no need to hold the firmware in memory.
    "firmware" image.
    executed for acpi_disabled=1 through aer_acpi_firmware_first(), from
      r8169: keep firmware in memory.
      vxge: Remember to release firmware after upgrading firmware
    r8169: keep firmware in memory.
    The firmware agent is not available during resume. Loading the firmware
    mildly natural release of firmware in the driver removal method instead.
    - there is no firmware
    vxge: Remember to release firmware after upgrading firmware
    Regardless of whether the firmware update being performed by
    release_firmware() before returning.
    rt2x00: Don't leak mem in error path of rt2x00lib_request_firmware()
    We need to release_firmware() in order not to leak memory.
    The newest device firmware stores IB vs. Ethernet protocol in two bits
    guests, but firmware (like OpenBIOS) use it and fail.
    firmware firstly, then reported to Linux by firmware. This way, some
    can be checked by firmware to produce more valuable hardware error
      net/r8169: Update the function of parsing firmware
    mlx4_core: Remove warning message about firmware bug
    Workaround firmware bug in query dev cap") about mlx4 reporting the
    the firmware bug is known and fixed and the bug is pretty much harmless
    net/r8169: Update the function of parsing firmware
    parse the complex firmware which is used by RTL8111E and later.
    The new firmware may read data and do some operations, not just
    Driver has check for old firmware, this bug can cause driver load fail.
    firmware that "the frame's sequence number has
    either the driver or firmware has to assign one.
    come across in the firmware.
    It workarounds the 60s firmware load failure timeout for the
    Madge Ambassador ATM Adapter driver: Always release_firmware() in ucode_init() and don't leak memory.
    Failure to call release_firmware() will result in memory leak in
    This patch makes sure we always call release_firmware() when needed,
    hamradio: Resolve memory leak due to missing firmware release in add_mcs()
    Failure to release_firmware() in drivers/net/hamradio/yam.c::add_mcs()
      drm/nvc0: fix init without firmware present
    is used to access pmic/msic registers from user space and firmware update
    (i.e. the ACPI firmware) is fully specification-compliant (as far
    or /sys/firmware/acpi/tables.  It should also improve
    the default clocks in the firmware info table as the post clocks, not
    The new firmware interface requires each Slow Path Queue (SPQ) message's
      apic, amd: Make firmware bug messages more meaningful
    drm/nvc0: fix init without firmware present
    Failing to do this would result in a firmware crash on the device.
    firmware restarts.
    r8169: remove the firmware of RTL8111D.
    The binary file of the firmware is moved to linux-firmware repository.
    The firmwares are rtl_nic/rtl8168d-1.fw and rtl_nic/rtl8168d-2.fw.
    The driver goes along if the firmware couldn't be found. However, it
    is suggested to be done with the suitable firmware.
    Simple firmware checking added per Ben Hutchings suggestion.
    bnx2: Update firmware and version
    Update MIPS firmware to 6.2.1, with improved small packet performance
    needed. Perhaps in the firmware case for example
    drivers/media/radio/radio-wl1273.c: In function ‘wl1273_fm_upload_firmware_patch’:
    [media] saa7164: Remove pointless conditional and save a few bytes in saa7164_downloadfirmware()
    release_firmware() just does nothing if passed a NULL pointer. So there's
    saa7164-fw.c::saa7164_downloadfirmware().
    > > To stop double rc registration in multi tuner environment or firmware change.
    [media] dvb-usb-gp8psk: get firmware and fpga versions
    This patch adds retrieval of firmware and FPGA versions of Genpix devices.
    with the various firmware versions, and may want to use a specific firmware
    [media] Documentation/lmedm04: Fix firmware extract information
            - Added a check in ioc firmware lock function to see if IOC is
    [SCSI] qla2xxx: Update FCP priority information to firmware before sending IOs
    adapters. Any of the functions can put the firmware into quiescence
    blocked. Loop resync is performed after firmware comes out of
    Pass the TCP port parameter for iSCSI connections to the firmware in
      drm/radeon: Add early unregister of firmware fb's
    b43: use correct firmware for newer cores
    [SCSI] hpsa: do not consider firmware revision when looking for device changes.
    The firmware may have been updated, in which case, it's the same device,
       Un-cleared bits will cause firmware to access invalid memory when the
    for persistency. The firmware will read this configuration when the
    Prior to firmware state change from ACQUIRING to READY, an
    needs to be removed from the driver.  The controller firmware is going
    from zero to 1.5 GB rate when the firmware reports there is an
    firmware returns an invalid system message id (smid).
    Newer firmware has sovled this issue, however it good to have this sanity
    drm/radeon: Add early unregister of firmware fb's
    Without this, we attempt the handover too late, the firmware fb
    ARM: pxa: Update Balloon3 for new FPGA firmware
    The new FPGA firmware in Balloon3 uses different methods to control it's bus
    My conversion of tehuti to use request_firmware() was confused about
    the filename of the firmware blob.  Change the driver to match the
    last sysfs file: /sys/devices/pci0000:00/0000:00:1d.7/usb2/2-1/firmware/2-1/loading
    The firmware in the joojoo reports touches sequentially, one per
    per report. This way, proper handling for both firmwares is ensured.
    The firmware reports a logical minimum of one, but in order for
    The firmware of both supported devices report a X/Y maximum of 4095,
    order to the firmware. To keep it relatively simple, maintain a global
    to the maximum size allowed by the firmware.
    The auto-arp feature of wl12xx allows the firmware to automatically
    In APEI, Hardware error information reported by firmware to Linux
    Interface).  The error data is passed from firmware to Linux via CPER
    reloading firmware and try to access RF again.
    rt2x00: Fix firmware loading regression on x86_64.
    memcpy_toio() works for x86_64, causing firmware loading to fail for
    This causes the log message: "phy0 -> rt2800pci_load_firmware: Error -
    Removing usage of rtnl_lock() to protect firmware interface registers.
    of this driver turn all non-zero return values from isar_load_firmware()
    staging: brcm80211: fix documentation on installing firmware
    Fix the documentation to have the current firmware filenames and use the
    The firmware framework gets initialized during fs_initcall time, so
    we are not allowed to call request_firmware earlier.
    Use the correct error condition exit in case firmware download
    previous timer. This have to be tuned based of firmware timing
    iwl3945: prevent too frequent firmware resets
    too frequent firmware resets.
    staging: brcm80211: added firmware validation
    New function wl_check_firmwares() checks validity of all firmware images
    running old firmware.  Only the caller of efx_mcdi_rpc() can decide
    dmaengine i.MX SDMA: Allow to run without firmware
    The SDMA firmware consists of a ROM part and a RAM part.
    the script addresses in ROM, so loading a firmware is
      mlx4_core: Workaround firmware bug in query dev cap
    wl1271: Add wl1271_load_firmware() and export some functions
    For the SDIO testing module we need to load the firmware but not
    boot it. wl1271_load_firmware() is meant to do just the firmware loading part.
    mlx4_core: Workaround firmware bug in query dev cap
    ConnectX firmware is supposed to report the number blue flame
    registers per page as log2 of the value.  However, due to a firmware
    [  694.196350] last sysfs file: /sys/devices/platform/hci_h4p/firmware/hci_h4p/loading
    Atheros 3011 has small sflash firmware and needs to be
    blacklisted in transport driver to load actual firmware
    The firmware name for each platform is appended by PCI id of device.
    powerpc: Add VPHN firmware feature
    This simple patch adds the firmware feature for VPHN to the firmware
    is used to load appropriate device firmware, select firmware offset
    wl12xx: Unset bssid filter, ssid and bssid from firmware on disassoc
    Fix this by resetting the firmware state on disassociation.
    To avoid mismatch in driver and firmware error codes assign specfic values
      be2net: Fix to avoid firmware update when interface is not open.
    be2net: Fix to avoid firmware update when interface is not open.
    Attempting a firmware update operation when interface is down could lead to
    The driver can fail initializing the hardware when manageability firmware
    scheme to prevent concurrent operations between software and firmware is
    firmware class expects.
    mwl8k: make initial firmware load asynchronous
    Introduce a firmware loading state machine to manage the process
    of loading firmware asynchronously and completing initialization
    firmware image.  If that fails, and if an alternative firmware
    mwl8k: add API version checking for AP firmware
    The AP firmware specifies an API version in the GET_HW_SPEC
    firmware for the 8366, and only supports API v1.  In the future,
    if higher API version firmwares emerge (possibly for different
    mwl8k: choose proper firmware image as directed by user
    firmware image that is loaded.  By default, STA firmware is
    module load time.  This saves an unnecessary firmware reload
    Also, the firmware image can be swapped to meet the user's
    firmware is loaded, no STA interface has been added, and the
    user adds an AP interface.  In this case, the AP firmware
    mwl8k: factor out firmware loading and hw init code
    firmware loading.
    mwl8k: rf_tx_power cmd not supported by AP firmware APIv1
    APIv1 AP firmware does not support the RF_TX_POWER command.  It
    The stabilized AP v1 firmware uses the same tx descriptor as
    the STA firmware.
    Certain firmware versions, particularly the 8388 found on the XO-1,
    [  215.750960] xhci_hcd 0000:01:00.0: NEC firmware version 30.25
    AP firmware uses xmitcontrol to differentiate between AMPDU
    firmware. This field will be set to indicate ampdu/non-ampdu
       a private firmware-internal struct.
    set wl->vif to the newly created interface only after the firmware booted
    firmware. Set the HW mode to monitor type based on mac80211
    Avoid sending commands to firmware (including commit_rxon) when scan
    packets caused by a firmware bug, which are then repeated with each one
    when making the VXGE_HW_FW_API_GET_FUNC_MODE firmware call.  However,
    the firmware call was not modified.  This had the driver printing out on
    vxge: add support for ethtool firmware flashing
    Add the ability in the vxge driver to flash firmware via ethtool.
    It is possible for multiple callers to access the firmware interface for
    x86 PC, but a firmware emulated virtual RTC device(vrtc), which provides
    qlge: Add firmware info to ethtool get regs.
    By default we add firmware information to ethtool get regs.
    Optionally firmware info can instead be sent to log.
    Remove unnecessary cast of firmware base address to integer before
    supported in kernel. The 0.8 firmware also provides GPIO tables.
    (Updated from RFC version to correct the emc1403 name used by the firmware
    to Bulk type by firmware, the urb submission done on Bulk pipes.
    solos: Refuse to upgrade firmware with older FPGA. It doesn't work.
    solos: Add 'Firmware' attribute for Traverse overall firmware version
    The existing 'FirmwareVersion' attribute only covers the DSP firmware as
    provided by Conexant; not the overall version of the device firmware. We
      netxen: remove unused firmware exports
    netxen: remove unused firmware exports
    submitted and its present in linux-firmware.git.
      libertas: Fix sd8686 firmware reload
    libertas: Fix sd8686 firmware reload
    For the SD8686, we cannot rely on the scratch register to read the firmware
      staging: brcm80211: brcmfmac: Removed codeversion from firmware filenames.
    ath9k_htc: Set proper firmware offset for Netgear WNDA3200
    Netgear WNDA3200 device uses ar7010 firmware but it is failed to set
    correct firmware offset on firmware download which causes device initialization
    Add to this whatever the Creative and M-Audio firmware writers have been
    ihex firmwares can include a jump address for starting execution.  Add a
    perform proper action on the in-use FCF and recover of FCF from firmware,
    located at  /sys/firmware/acpi/tables instead of
    /sys/firmware/acpi/tables/dynamic, which is not true.
    - Treated firmware matching FCF property with different index as error
    This patch fixes an issue which causes the firmware to fail with a
    DMA and firmware activities are stopped, and any associated driver resources
      don't want to return PCI_ERS_NEED_RESET if firmware hung.
    [SCSI] qla4xxx: Clear the rom lock if the firmware died while holding it.
    There is a possibility that the firmware dies while the rom
    [SCSI] qla4xxx: On firmware hang do not wait for the outstanding commands to complete
    Since interrupts are registered in start_firmware(load_risc) for 82xx,
    free them if init_firmware fails.
    * cleanup function qla4xxx_start_firmware_from_flash
    * cleanup function qla4xxx_get_firmware_status
    apic, amd: Make firmware bug messages more meaningful
    with a beta release of firmware that was never commercially available as
    a product.  This hardware and firmware is no longer available as Intel
    Cypress Astoria chips with firmware compliant with issue 2 of CSR's USHC
    The Digital Everywhere firmware have the shortcoming that ca_info_enq and
    -firmware switching for LG tuner.
    The WAGO 750-923 USB Service Cable is used for configuration and firmware
    The SAM-BA firmware cannot handle merged write requests so we cannot use
    option will cause the 3110 driver to fail on 0.7 SFI firmware.
    (Yes, drivers/base/firmware_class.c uses interfaces from linux/kobject.h,
      - EC firmware bug
    staging: brcm80211: brcmfmac: Removed codeversion from firmware filenames.
    The basename-apiversion-codeversion construction for firmware filenames is not
    used by most other firmware files, adds complexity, and is not providing any
    value.  Rename the firmware files using just basename-apiversion.
    Users of the brcmfmac driver will need to update the linux-firmware package
    to get the renamed files, or manually rename their installed firmware files.
    through debugfs can help identify the issue with the misbehaving firmware.
    drivers/media/video/cx231xx/cx231xx-417.c: In function 'cx231xx_load_firmware':
    [media] hdpvr: fix audio input setting for pre AC3 firmwares
    [media] hdpvr: add two known to work firmware versions
    refine the firmware version test and print the version only once
    [media] hdpvr: print firmware date
    Hauppauge released different firmwares using the same version number.
    The firmware date can be used to identify the exact driver/firmware
    [media] saa7164: Disable firmware debug message output
    [media] saa7164: bugfix, avoid oops when driver unloads without firmware
    [media] saa7164: collect/show the firmware debugging via a thread
    [media] saa7164: enforce the march 10th firmware is used
    [media] saa7164: add firmware debug message collection and procfs changes
    coming from the firmware.
    IRQ handlers, firmware messages, deferred queue handlers, V4L api's
    [media] saa7164: Avoid spurious error after firmware starts
    [media] saa7164: New firmware changes, new size, new filename
    [media] saa7164: Implement resolution control firmware command
    [media] saa7164: Add some encoder firmwares message types and structs
    * Add support for newer firmware version that uses different
    enic: Replace firmware devcmd CMD_ENABLE with CMD_ENABLE_WAIT
    Replace no wait CMD_ENABLE firmware devcmd with CMD_ENABLE_WAIT
    enic: Make firmware cognizant of the user set mac address
    Let the firmware know about the mac address set by the user using ndo_set_mac_address
    drivers/media/video/cx231xx/cx231xx-417.c: In function ‘cx231xx_load_firmware’:
    Remove HID and polling via firmware API. Implement direct access to remote codes via memory read and write.
    HID and polling via firmware api never worked 100% well and there was also some limitations which tied used remote and device together.
    [    5.567632] dvb-usb: found a 'TerraTec Cinergy T Stick RC' in cold state, will try to load a firmware
    [    5.693497] dvb-usb: downloading firmware from file 'dvb-usb-af9015.fw'
    [    6.007696] af9013: firmware version:5.1.0
    5718 B0 and 5719 devices will use a new selfboot firmware format.  This
    pcie_port_acpi_setup() calls pcie_aer_get_firmware_first() that
    a PCIe Root Complex if pcie_aer_get_firmware_first() returns 'false'
    (at which point it should use request_firmware() rather than some magic
    the firmware's probe-after-rx functionality on
    timer, so those devices won't reload firmware too often.
    firmware failing to reenable the iommu on resume. It
    Current firmware only allows us to send IRQs to the first processor or
    to the all_mask, but the firmware is only considering whether the
    arch-(and sometimes firmware-)specific code, and passed to
    bnx2: Update firmware to 6.0.x.
    - Use hardware RSS indirection table instead of the slower firmware-
    shared wlan.h header from the firmware git.
    firmware format.
    In the NVS/INI-parameters for the driver/firmware there is the FEM
    call request_firmware instead of trying to open the file directly from
    iwlagn: fix module firmware name for 130 series device
    130 series device should use firmware name with 130 in it.
    New firmware files for all bnx2x devices
    bnx2x: create folder for bnx2x firmware files
    Preparation work for upcoming firmware interface changes.
    reset will be repeated until scan finish. But since firmware is in bad
    leaving the device name, which antennas are used and what firmware
    cards where the user has not applied the PLX firmware update.
    as a seperate coprocessor. SDMA needs its own firmware which is
    requested using the standard request_firmware mechanism. The firmware
    picks the correct firmware entry point from a table contained in
    the firmware image itself.
    the firmware. Support for this is currently not implemented. Also,
    We can start restarting firmware or RF kill switch can be turned on
    ar9170: Remove MODULE_FIRMWARE references to two-stage firmware
    The combined firmware ar9170.fw is preferred and supports all devices.
    References to the older two-stage firmware are unnecessary.
    carl9170: support firmware-based rx filter
    Therefore the new 1.8.8.3 firmware introduces a flexible
    wl1271: Support firmware TX packet aggregation
    Instead of sending one packet at a time to the firmware, try to
    wl1271: Support firmware RX packet aggregation
    Instead of retrieving one packet at a time from the firmware, try to
    proved quite challenging even with GPLv2 firmware.
    new enhancements to the GPLv2 firmware. It took 1 year, 5 months,
    introduced by the previous nonexistant firmware patch.
    staging: brcm80211: handle missing firmware better
    Handle non-extistent firmware more gracefully.
    rate for null-func frames (which increases their range, as the firmware does
    a type of busy-loop. The same problem occurs if the firmware fails to deliver
    scenarios, as the scan completion event from the firmware may be processed
    to be able to inform the firmware when association is fully complete (including
    Implement the command function to send CMD_SET_STA_STATE to the firmware. This
    release_firmware() accepts NULL pointers.
    firmware.
    manageability firmware will handle the PHY configuration.
    Staging: ft1000: fix mode of firmware image file
    interfering while the firmware is down for
    in from the chip and data members parsed from the binary firmware file.
    rf reset or firmware reload in order bring device back to
    If firmware reload is required and scan is in process, skip the
    reload request. There is a possibility firmware reload during
    To optimize register read/write operations, the HTC firmwares were patched
    tg3: Don't send APE events for NCSI firmware
    NCSI firmware does not accept APE events.  It relies on a "driver state"
    the firmware to the target, the USB descriptors are
    in case of firmware hung.
    When we are not able to send abort command to firmware, notify mac80211
    Patch fix not cancel scanning when restarting firmware, what is
    carl9170: firmware parser and debugfs code
    staging: brcm80211: Fix URLs for firmware files.
    Don't rely on wl_firmware::fw_cnt in wl_release_fw().
    considered, and the firmware can be very picky
    Tests with recent firmware on Intel X25-M 80GB and OCZ Vertex 60GB SSDs
    show a shift since I last tested in December: in part because of firmware
    firmware). The modems seem to use bDeviceClass 0 and iProduct "ADSL USB
    HID: ntrig: identify firmware version
    This adds firmware version polling to the end of probe and reports the
    IPv4 and IPv6 offload with the firmware separately and enable what
    checksum offload features are supported/enabled by firmware.
    The driver requires firmware that runs on the chip's network
    '/lib/firmware/ath6k/AR6003/hw2.0/' for the driver to initialize
    Clock Management Unit (PRCMU) firmware in U8500.
    qlcnic: backout firmware initialization update
    o Backing out "firmware initialization update" changes, commit-id
           [<ffffffff812d3e9d>] request_firmware_work_func+0x54/0x6f
    rt2x00: Wakeup hardware before loading firmware
    register must be reset to 0 before loading the firmware.
    Instead of during rt2800{pci,usb}_write_firmware it
    must actually be done in rt2800_load_firmware() before
    firmware will set a special flag onto the last outgoing
    The BE ASIC/firmware doesnot reserve and assign MAC address for VFs.
    Also extend the firmware reload timer much longer for BT coex to make sure
    there are will be no mistake to reload firmware too fast and too often.
    CLOSE_PORT command to the firmware.
    ucode firmware may need to be released as experimental for testing or
      firmware_class: fix typo in error path
    and out of the firmware during PROM calls, that simply won't work.
    So what we did was always give the firmware buffers that were locked
    USB: io_ti: check firmware version before updating
    If we can't read the firmware for a device from the disk, and yet the
    device already has a valid firmware image in it, we don't want to
    replace the firmware with something invalid.  So check the version
    firmware_class: fix typo in error path
    In the error path, _request_firmware sets
    firmware_p to NULL rather than *firmware_p,
    which leads to passing a freed firmware
    struct to drivers when the firmware file
    ERROR: "b1_load_firmware" [drivers/isdn/hardware/avm/b1pcmcia.ko] undefined!
    release_firmware() handles NULL parameters.
    qlcnic: firmware initialization update
      - Onnto dataTale RSM4QO, old firmware (not anymore with current
        firmware),
      - inXtron Hydra Super-S LCM, old as well as current firmware
      ALSA: riptide - Fix detection / load of firmware files
      ath9k_htc: load proper firmware for device ID 7015
    Virtual function are not privilge to initialize firmware.
    enic: Add new firmware devcmds
    Add new firmware devcmds:  CMD_PROXY_BY_INDEX, CMD_CONFIG_INFO_GET
    enic: Add support for firmware management device
    This patch adds support for firmware management device in enic driver.
    A management device is a virtual PCIe device that firmware can present
    the host and adapter firmware for all management operations.
    bnx2x: Load firmware in open() instead of probe()
    Loading firmware when actually bringing eth device up.
    firmware files is not available yet.
    libertas: [spi] use common firmware request helper and new firmware locations
    linux-firmware puts libertas firmware in /libertas.  Fix the driver to
    look there first, but fall back to the old firmware names if the new
    ones don't exist.  Add preference for newer firmware versions too.
    libertas: [sdio] use common firmware request helper and new firmware locations
    linux-firmware puts libertas firmware in /libertas.  Fix the driver to
    look there first, but fall back to the old firmware names if the new
    ones don't exist.  Add preference for newer firmware versions too.
    libertas: [cs] use common firmware request helper and new firmware locations
    linux-firmware puts libertas firmware in /libertas.  Fix the driver to
    look there first, but fall back to the old firmware names if the new
    libertas: add two-stage firmware request helper
    SDIO, GSPI, and CS all use 2-stage firmware and the loading
    to override the automatic firmware choice, otherwise just walk
    the bus driver's firmware table and pick out the first firmware
    or the main firmware, but let the other of the pair be chosen
    libertas: [usb] use new firmware locations
    Look for firmware where the linux-firmware tree actually puts it, but
    fall back to original firmware name & location when the new location
    firmware.
    Secondarily we must not add_preferred_console() using the firmware
    logic was always triggering o n openfirmware device node match, make
    ALSA: riptide - Fix detection / load of firmware files
    /sys/firmware/acpi/tables/
    /sys/firmware/acpi/interrupts/
    linuxfirmwarekit ISO (linuxfirmwarekit.org) to verify the kernel
    support and the firmware implementation.
      [SCSI] qla4xxx: Stop firmware before doing init firmware.
    .5000 series device, it is being reported firmware got reload more
      firmware: ibft depends on SCSI
    ath9k_htc: load proper firmware for device ID 7015
    This patch handles the firmware loading properly
    firmware: ibft depends on SCSI
      Input: elantech - discard the first 2 positions on some firmwares
    BT firmware.
      RDMA/nes: Read firmware version from correct place
    in performant mode.  This is a lie told by buggy firmware.
      PCI: export SMBIOS provided firmware instance and label to sysfs
      firmware: Update hotplug script
    older and newer firmware versions.
    [SCSI] qla4xxx: Stop firmware before doing init firmware.
    If BIOS is enabled then drivers init firmware fails since
    iscsi_boot_sysfs does not depend on firmware. Any iscsi driver
    Input: elantech - discard the first 2 positions on some firmwares
    workaround as in the other driver. Also, detect another firmware
    firmware: Update hotplug script
    script may load the firmware twice - both at "add"
    firmware images are used. A good example is the b43
    firmware loader: embed device into firmware_priv structure
    and managing them separately embed struct device into struct firmware_priv.
    firmware loader: use statically initialized data attribute
    and copying it into per-firmware data before registering. Using the
    firmware command, we just fake one when the scan request is triggered
    Some APs get pissy if you don't send the firmware the extended rates
    au1000_eth uses firmware calls to get a valid MAC address, and changes
    supported chips can use whatever firmware interface they need; the default
    implementation maintains compatibility with existing, YAMON-based firmware.
            firmware-version: N/A
    RDMA/nes: Read firmware version from correct place
    iwl-agn.c: In function ‘iwlagn_load_firmware’:
    The firmware handles '\t' internally, so stop trying to emulate it
    If you tell users that it's a firmware bug then they'll probably just
    and also add a sanity check to ensure that the firmware gives us a realistic
    The firmware of production devices does not support this interface so this
    tg3: Detect APE firmware types
    This patch adds code to determine the APE firmware type and report this
    along with the firmware version.
    Simplifies the logic for handling firmware 1.20 RC messages, fixing the
    V4L/DVB: get_dvb_firmware: update af9015
    New driver contains new firmware 5.1.0.0. Fix script to get that.
    V4L/DVB: af9013: add support for firmware 5.1.0.0
    Add support for new firmware version 5.1.0.0.
    V4L/DVB: lgs8gxx: remove firmware for lgs8g75
    firmware loader.
    V4L/DVB: Retrieve firmware for az6027
    V4L/DVB: ivtv: Increment driver version due to firmware loading changes
    V4L/DVB: ivtv: Automatic firmware reload
    If the firmware has failed, this patch will automatically reload &
    V4L/DVB: ivtv: Add firmare monitoring and debug mode to ignore firmware problems
    When a device is opened the firmware state will be checked. If it isn't
    export SMBIOS provided firmware instance and label to sysfs").
    drivers/pci/pci.h: In function ‘pci_create_firmware_label_files’:
    drivers/pci/pci.h: In function ‘pci_remove_firmware_label_files’:
    from the functions 'pci_create_firmware_label_files' and
    'pci_remove_firmware_label_files' defined as void.
    +static inline void pci_create_firmware_label_files(struct pci_dev *pdev)
    +static inline void pci_remove_firmware_label_files(struct pci_dev *pdev)
    Update gpio-keys setup so it matches what is on default firmware.
    of a firmware revision string etc..
      Max number of cores passed to firmware: 0x0000000000000080
      Max number of cores passed to firmware: 128 (NR_CPUS = 256)
    from the device, since they are initially written by firmware.
    PCI: export SMBIOS provided firmware instance and label to sysfs
    This patch exports SMBIOS provided firmware instance and label of
      /sys/bus/pci/devices/.../label which contains the firmware name for
      /sys/bus/pci/devices/.../index which contains the firmware device type
    even if the config option is disabled the system firmware may have turned
    The PCI SIG documentation for the _OSC OS/firmware handshaking interface
    more frequently if device missing delay timer (which is LSI specific firmware
    [SCSI] qla2xxx: Stop firmware before doing init firmware.
    If BIOS is enabled then drivers init firmware fails since
    [SCSI] qla2xxx: Check for golden firmware and show version if available
    fw_type shost attribute indicates the firmware type supported by the adapter.
    the firmware command.  Just let the caller fill them in before pushing
    the command to the firmware.
    even listed in any of the firmware documentation I have (and I
    - Add debugfs support to obtain firmware trace, driver trace
      fwtrc: collect current firmware trace.
      fwsave: collect last saved fw trace as a result of firmware crash.
    the ioim. To fix this, whenever a response is received from firmware for an
    BFA UF module did not hold lock when seding uf post buffer message to firmware
    [SCSI] bfa: update to support firmware configuation
    Add AEN events related to firmware configuation.
    - Add a new firmware image for HP mezzanine card, which is running in
      FC only mode. Rename firmware image to reflect the difference. Change the
      firmware download code accordingly for the above changes.
    v2: Extended the 5771X disconnect timeout from 10s to 20s as the firmware
    due to temporary SAS Address for SATA device generated by firmware. Final
    It is possible that firmware can have device page0 in its table, but that
    only if there is Bus Target mapping is done in firmware. Driver will always
    check B_T mapping of firmware before reporting device to upper layer.
    Loginfo is return from firmware. With DID_BUS_BUSY the path fails over
    behave the same for older versions of firmware.
    in performant mode.  This is a lie told by buggy firmware.
    - Add support for new SLER specific firmware status codes.
    [SCSI] qla2xxx: Support for loading Unified ROM Image (URI) format firmware file.
    the firmware needs to fetch for a given number of scatter gather
    [SCSI] hpsa: expose controller firmware revision via /sys.
    01.29.00.00 firmware, with SATA disks, and with smartd running, I'm seeing
    applications, or firmwares.
    device hardware (e.g., device type, device hardware revision, firmware
    and also add a sanity check to ensure that the firmware gives us a realistic
    iwlagn: fix firmware loading TLV error path
    gcc complains about the firmware loading:
    iwl-agn.c: In function ‘iwlagn_load_firmware’:
    Older firmwares fixed the middle byte of the Synaptics capabilities
    query to 0x47, but starting with firmware 7.5 the middle byte
    When driver is sending a command or data and the firmware is also
    continue to send the command/data to firmware right after processing
    send anything because firmware is in sleep state after that. Previously
    in, but no device tree was proved by firmware.  It makes
    on the firmware rather than hardware.  Presumably, this means
    blinking.  This was done to match the original DNS-323 firmware which
    care about the behaviour of the original firmware.  Therefore, change
    The order of freeing the IRQ and freeing the device in firmware
    device with firmware, and then call free_irq.
    drm/nouveau: remove ability to use external firmware
    rt2x00: Move common firmware loading into rt2800lib
    Large parts of the firmware initialization are shared
    tg3: Report driver version to firmware
    to the firmware in addition to the current use.
    a firmware assisted hibernation, since the firmware handles writing
    firmware doesn't allow these sets to be mixed, so up to several scan commands
    set, by breaking the sets into smaller parts if needed (the firmware can scan
    coming from the firmware. Effectively, whenever there is bluetooth traffic,
    The wl1271 firmware is able to send an indication to the host, when this
    IB/qib: Use request_firmware() to load SD7220 firmware
    preventing some unexpected interaction with other firmware commands.
    ibm,client-architecture-support structure. On new versions of firmware that
    Mention that the CAPI controller methods load_firmware() and
    qlge: Don't use firmware when forcing firmware dump.
    In some cases the firmware may be dead.  Instead we dump the firmware
    iwlwifi: add debug print for parsing firmware TLV
    When parsing TLV during loading firmware, if encounter any TLV error,
    before reload the firmware; but the stuck queue timer kick in after
    firmware error and reload the firmware even fw_restart=0. In this case,
    driver should not reload the firmware, it is important to help debugging
    firmware reload from debugfs, which can bypass the checking and perform
    firmware reload all the time.
    When there is a firmware error or the firmware is reloaded for some other
    firmware reload we can, among other things, run out of key indices.
    cxgb4vf: update to latest T4 firmware API file
    Update to latest T4 firmware API file.
    cxgb3: request 7.10 firmware
    Adapt to buggy device firmware which accepts setting HLC only in the
    enic: Add new firmware devcmds
    Add new firmware devcmds - CMD_PROXY_BY_BDF, CMD_PACKET_FILTER_ALL,
    enic: Clean up: Add wrapper routines for firmware devcmd calls
    Add wrapper routines that issue devcmds to firmware and ensure that a
    space and starting CID that may not be always correct when firmware
    Without setting this bit the firmware will not examine the RTS/CTS setting
    kernel 2.6.31 for the following reason: The join command of the firmware
    There is no need to free/alloc host resources during firmware
    Code is added to send 11d enable command to firmware while
    initialisation and pass 11d specific information to firmware
    netxen_nic and qlcnic driver depends on firmware_class module.
    manageability checks (for 82577/82578 and ICHx) must check the firmware
    firmware properly. Now, it checks the eswitch set bit in the FW capabilities
    Some bogus firmwares include properties with "/" in their name. This
    For CUR requests, we shouldn't confuse the firmware with an overlong
    everything is coded in 16bit - this works for all firmware
    TMR_CTRL. Manfred probably had this bit set by the firmware for
      iwlwifi: move sysfs_create_group to post request firmware
    iwlwifi: move sysfs_create_group to post request firmware
    have safely got the firmware.
    request_firmware: request_firmware which is a sysfs operation
    the firmware, avoiding this deadlock.
           [<c071838d>] _request_firmware+0x29d/0x550
           [<c07186c7>] request_firmware+0x17/0x20
      USB: xhci: Print NEC firmware version.
    SPI layer and needs firmware/SFI changes to fix that.
    USB: xhci: Print NEC firmware version.
    The NEC xHCI host controller firmware version can be found by putting a
    The firmware version debug line in dmesg will look like:
    xhci_hcd 0000:05:00.0: NEC firmware version 30.21
    firmware loading properly.
    firmware.
    A single shared memory region used to communicate with firmware is
    for a particular card.  The information in the firmware info table is correct
    only host goes into sleep state and firmware is always ready, those
    This is the maximum supported by the firmware.
        a firmware bug), performs its idea of gap count optimization and
    NIC functionality including any firmware initialization, chip reset etc. Non
    A single shared memory region used to communicate with firmware is
    register restore to before the decoder firmware call to stop playback.
    For yuv video output, pass fake values to avoid firmware trying to change
    Check firmware state when loading module & if firmware is not responding exit
    activate it for firmware version <= 17.
    Add MSI support, may be enabled with firmware version 18.
    "be2net: Bug fix to avoid disabling bottom half during firmware upgrade."
      ACPI, APEI, PCIE AER, use general HEST table parsing in AER firmware_first setup
      leds: Fix leds-gpio openfirmware compile issue
    leds: Fix leds-gpio openfirmware compile issue
    Fix a compile issue when openfirmware is enabled from commit
    firmware eventually.
    microcontroller and associated firmware.
    Analogous to ACPI's /sys/firmware/acpi/tables/...
    create /sys/firmware/sfi/tables/
    NPE-C: firmware functionality 0x5, revision 0x2:1
    HSS mode (this is most probably bug in NPE-A HSS firmware).
    it works at least on one 46" touchscreen with 2.00SMS firmware) and
    Commit "ar9170: wait for asynchronous firmware loading"
    Pid: 6246, comm: firmware/ar9170 Not tainted 2.6.34-wl #54
    Process firmware/ar9170 (pid: 6246)
     [<f8487353>] ? ar9170_usb_firmware_failed+0x43/0x70 [ar9170usb]
     [<c125983c>] ? request_firmware_work_func+0x2c/0x70
     [<c1259810>] ? request_firmware_work_func+0x0/0x70
      be2net: Bug fix to avoid disabling bottom half during firmware upgrade.
    be2net: Bug fix to avoid disabling bottom half during firmware upgrade.
    Certain firmware commands/operations to upgrade firmware could take several
    patch now does all firmware upgrade operations asynchronously using a
    version firmware, the definitions for SPIB/I2CB will still
    load_firmware and reset_ctr can cause userspace callers to hang
      thinkpad-acpi: don't depend on led_path for led firmware type (v2)
    firmware loader: do not allocate firmare id separately
    fw_id has the same life time as firmware_priv so it makes sense to move
    it into firmware_priv structure instead of allocating separately.
    firmware loader: split out builtin firmware handling
    Split builtin firmware handling into separate functions to clean up the
    firmware loader: rely on driver core to create class attribute
    firmware class: export nowait to userspace
    When we use request_firmware_nowait(), userspace may
    with request_firmware() it has to in order to not
    and have been checked for the requested firmware file.
    Driver core: Reduce the level of request_firmware() messages
    The messages from _request_firmware() informing that firmware is
    being requested or built-in firmware is going to be used are printed
    firmware_class: fix memory leak - free allocated pages
    firmware: speed up request_firmware()
    firmware' so that we can free it from release_firmware()
    The fix doesn't break the firmware load speed.
      [SCSI] aacraid: expose physical devices for models with newer firmware
    additional firmware file. However, qcserial doesn't handle firmware
    ever used in large quantity (the major exception is firmware
      Input: synaptics - set dimensions as reported by firmware
    WARNING: at drivers/firmware/dmi_scan.c:423 dmi_matches+0x70/0x160()
    firmware firstly, then reported to Linux by firmware. This way, some
    can be checked by firmware to produce more valuable hardware error
    ACPI, APEI, PCIE AER, use general HEST table parsing in AER firmware_first setup
    firmware_first setup. It is rebased on general HEST tabling parsing
    code of APEI. The firmware_first setup code is moved from PCI core to
    works in "firmware first" mode, this is needed by general PCIE AER
    execute, and so to drive the firmware to fulfill the corresponding
    Input: synaptics - set dimensions as reported by firmware
    Newer Synaptics firmware allows to query maximim dimensions reported by
    V4L/DVB: tm6000: renaming firmware
    needs to load another firmware, and the i2c implementation on this device
    V4L/DVB: Add firmware v2.4 to xc2028/xc3028 extracting tool
    The firmware were seen to be needed with some tm6000 devices that don't
    V4L/DVB: s2255drv: firmware reload on timeout
    to check asynchronous firmware load state, which is protected
    WARN() is used in some places to report firmware or hardware bugs that
    Both ACPI and SFI firmwares will have MCFG space, but the error message
    times out because of firmware issues (incorrect vpd length, etc.) on the
    their vendor for new firmware.
    fbmem, drm/nouveau: kick firmware framebuffers as soon as possible
    Fix it by kicking firmware driver(s) before we start touching the hardware.
    that run a similar protocol as VDP but in firmware, thus hiding the protocol
    the firmware call occurs only during the first 100 lines of the top field.
    Since the change that stops the CX23415/6 firmware-intiiated secondary stream
    When a capture is started, the firmware also appears to start a secondary
     * pd-main.c:58:12: warning: symbol 'firmware_name' was not declared. Should it be static?
    V4L/DVB: xc3028: fix regression in firmware loading time
    Fix a regression in the firmware loading time where it went from 1080 ms to
    tuner, although the firmware seems to be modified to work with
    solos-pci uses request_firmware() for firmware upgrades
    bnx2: Update 5709 MIPS firmware and version to 2.0.15.
    New firmware fixes a performance regression on small packets.
    Device state need to be mark as FAILED, if fail to start firmware.
    qlcnic: module param for firmware load option
    firmware after suspend. This saves about 30 secounds on reset waiting
    [SCSI] aacraid: expose physical devices for models with newer firmware
    With the new JBOD firmware, physical drives are not available for
    thinkpad-acpi: don't depend on led_path for led firmware type (v2)
    the firmware wants.
    close to the way the IBM event-based volume hotkey firmware does as
    around a bug in recent Lenovo firmware (e.g. T400), which causes the
    firmware to not update the volume_toggle bit in certain situations.
    would misdetect it as an ancient model 570 firmware.
    [SCSI] qla2xxx: Check for ISP84xx before processing to get 84xx firmware version.
    To work-around a firmware crash problem, we disable sending
    iwlagn: use firmware event/error log information
    notification is received, new firmware files
    iwlwifi: don't crash on firmware file missing info
    If a firmware file misses one of the required
    crashes. Let it gracefully refuse that firmware
    during which time AMT (manageability firmware) can put the adapter into an
    the firmware to the target. This is needed to process
    by having specific firmware API for it. The reasons
    for this could be that the firmware provides better
    The ACPI spec tells us that the firmware will reenable SCI_EN on resume.
    wimax/i2400m: driver defaults to firmware v1.5 for i6x60 devices
    Firmware is available in the linux-firmware package.
    wimax/i2400m: driver defaults to firmware v1.5 for i5x50 devices
    Updates the i2400m driver to default to firmware versions v1.5 for the
    Firmware available in linux-firmware.
    of dev_start(). When i2400m_firmware_check fails, all the works done
    requesting the firmware.
      ar9170: wait for asynchronous firmware loading
    that do not but are bootable through a vendor firmware specific
    before: /sys/firmware/ibft.
    vendor/fw boot info gets export in /sys/firmware/iscsi_bootX, where X is the
    thus be a firmware SYSASSERT when the current active LQ command is sent.
    iwlagn: implement loading a new firmware file type
    The old firmware file type does not allow indicating
    any firmware capabilities, which we frequently want
    This implements a new firmware type that is based on
    iwlagn: prepare for new firmware file format
    Currently the first four bytes in a firmware file
    It doesn't belong into firmware loading,
    iwlagn: show and store firmware build number
    iwlwifi: dump firmware build info in error case
    Dump the firmware version and build number in case of firmware SW
    error. This would help firmware engineer analyze the error log.
    iwlagn: wait for asynchronous firmware loading
    When we kick off a firmware loading process,
    waiting for the firmware loading to finish
      HID: ntrig: explain firmware quirk
      HID: fix N-trig touch panel with recent firmware
      ACPI: fix acpi_hest_firmware_first_pci() caused oops
    (the firmware will remain active for 128ms after sending the null func for
    caused by the firmware being busy with scanning related activities.
    The reason for this is that the firmware JOIN command clears WPA(2) key
                    * firmware error-handling and device reset
    ar9170: wait for asynchronous firmware loading
    "ar9170: load firmware asynchronously"
    When we kick off a firmware loading request and then unbind,
    > Pid: 6588, comm: firmware/ar9170 Not tainted 2.6.34-rc5-wl #43
    > [<c12569f9>] ? _request_firmware+0x139/0x3e0
    > [<c1256cc0>] ? request_firmware_work_func+0x20/0x70
    > [<c1256ca0>] ? request_firmware_work_func+0x0/0x70
    Avoid that by waiting for the firmware loading to finish
    stopped or not. Unfortunatley on POWER7, firmware seems to not like
    ACPI: fix acpi_hest_firmware_first_pci() caused oops
    acpi_hest_firmware_first_pci() could be called when acpi is disabled
    robust. This makes it possible to work around the SDK7786's firmware's
      Input: elantech - fix firmware version check
    In older versions of the elantech hardware/firmware those bits always
    Input: elantech - fix firmware version check
    was trying to compare firmware with 2.48, but was failing on majors
    Note that WPA-enabled firmwares (9.xx series) will not work fully with
    (firmware loading and WPA).
    firmwares.  Confidence and InRange are high for all finger events
    [SCSI] qla4xxx: Updated firmware ready timeout algorithm
    Updated firmware ready timeout algorithm to prevent
     in the firmware before marking the DDB missing.
    Some firmware versions don't behave properly when
    firmware to only enable the active scanning after
    libertas: fix 8686 firmware loading regression
    failures loading the second-stage firmware on 8686 devices.
    (This was introduced in "libertas: consolidate SDIO firmware wait code".
    ibm,associativity-form property firmware supports form 1 affinity and
    like USB305, USB306 provided the corresponding firmware version is I2.0
    This driver will not work with earlier firmware versions than the ones shown
      last sysfs file: /sys/devices/platform/microcode/firmware/microcode/loading
    If the firmware puts a device back into D0 state at resume time, we'll
    MT9234ZBA usb dialup fax modems. It is based on a patch and firmware
    and/or replaced from outside the OS (by firmware). This is
      drm/radeon: fix cypress firmware typo.
    preserved on firmwares that have it.
    bnx2x: Use VPD-R V0 entry to display firmware revision
    Add module firmware declaration for the new adapters;
    libertas: Davinci platforms need more time loading helper firmware
    Davinci platforms apparently need more time in-between helper firmware
    libertas: consolidate SDIO firmware wait code
    Consolidate a bunch of C&P code that waits for the firmware to be ready.
    of Touch events for single touch firmwares.  This patch just puts Touch back
    firmware requires the driver to enable VLAN tag stripping.  If VLAN
    values left by the firmware.
    - Clear queue memory when creating firmware queues to prevent stale entries.
    Now support the 22" display and its updated firmware, including touch
    After Host Reset firmware will have new list of device handles for the target.
    [SCSI] bnx2i: make firmware use statsn field when constructing header
    instruct firmware to use driver/iscsid provided expected statsn field
    3. Reorganised support for reset, management and update FCoE firmware commands.
    when firmware is sending a device reset. The fix is to change the
    driver/firmware device removal handshake is failing. Due to this failure,
    the controller firmware is not sending out device add events when the target
    is reconnected. This is root caused to a race in the driver/firmware device
    from the same space in the firmware, so we shouldn't
    The firmware clears default WEP keys on
    rssi triggers to the firmware, and enabling the firmware rssi trigger
    drm/radeon: fix cypress firmware typo.
    HID: ntrig: explain firmware quirk
    Commit 6549981bc54777c ("HID: fix N-trig touch panel with recent firmware")
    adds a quirk that is needed for devices with more recent firmware so that
    The maple platform failed to load because it's firmware could not take a
    HID: fix N-trig touch panel with recent firmware
    Added an init message that avoids device freeze with recent firmware.
    for data-frames (null-funcs) let the firmware use the current rate policy to
    The firmware does not like the host configuring the keep-alive after it has
      asked them to please pass it on to the firmware team. I have been
      new firmware version, that you can expect to see released around the
    So, turn off NCQ on the drive w/ the current firmware revision.
    This patch extracts the firmware version from the VPD area and changes
    The code that extracts the firmware version from the device's NVRAM
    assumes the firmware version member is a clean slate.  The following
    patch will add code to extract the firmware version from the VPD area
      [SCSI] qla1280: retain firmware for error recovery
      [SCSI] advansys: fix regression with request_firmware change
    in the firmware version.
      powerpc/fsl: add device tree binding for QE firmware
     parm: fw_restart50:restart firmware in case of error (deprecated) (int)
     parm: fw_restart:restart firmware in case of error (int)
    mac80211 skips drop_unencrypted checks if the driver/firmware has
    results in the firmware sending up a bunch of packets
    wl1271: Fix memory leak in firmware crash scenario
    a firmware crash scenario.) Fix the leak.
    After the busy-words, if the firmware did not complete by the end of the
    Clean up the code to convert a firmware rate class index into an index
    to its FLASH where firmware and splash image are saved.
    netxen: fix corner cases of firmware recovery
    [SCSI] qla1280: retain firmware for error recovery
    The qla1280 driver acquires its firmware via udev.  During boot the firmware
    reload firmware (host reset), the firmware load may fail if the root device
    firmware loaded via the initial request_firmware() for use during error
    [SCSI] advansys: fix regression with request_firmware change
    trying to load it without firmware files present. After looking closely
    this is related to commit "[SCSI] advansys: use request_firmware". The
    problem is that after switch to request_firmware, asc_dvc->err_code
    isn't being set when firmware files aren't found or loading fails.
    when request_firmware fails, this is a change of behaviour of the code
    before request_firmware addition, making it continue to load and it
    fails later as the firmware wasn't really loaded.
    The fix prevents application path from sending get-firmware-state mbx command
    powerpc/fsl: add device tree binding for QE firmware
    Define a binding for embedding a QE firmware blob into the device tree.  Also
    define a new property for the QE node that links to a firmware node.
    OF_DT_END_NODE and OF_DT_BEGIN_NODE were not. My firmware NOPs out
    This patch fixes MAC address handling. To achieve this, firmware booting had
    of 32us. The firmware however wants it in us, so add the conversion.
    code as the firmware will do the test internally on its own.
    driver complains about a firmware hang instead.  When I asked I was
    It provides access to profiles, settings, firmware, weight,
    transfer is stop, the driver will force firmware reload and bring the
    without bringing interface down fails with a firmware error. This is
      driver-core: fix missing kernel-doc in firmware_class
      sysfs: use sysfs_bin_attr_init in firmware class driver
    when after a failed firmware load attempt the driver modules are removed
    driver-core: fix missing kernel-doc in firmware_class
    Fix kernel-doc warning in firmware_class.c:
    Warning(drivers/base/firmware_class.c:94): No description found for parameter 'attr'
    sysfs: use sysfs_bin_attr_init in firmware class driver
    bnx2 0000:08:00.0: firmware: requesting bnx2/bnx2-mips-06-5.0.0.j6.fw
     [<ffffffff81279c61>] _request_firmware+0x2f1/0x650
     [<ffffffff8127a04e>] request_firmware+0xe/0x10
    for firmware notify commands.
      [SCSI] bfa: Added firmware save clear feature for BFA driver.
    The SIU ASoC driver must load firmware to program the DSP, therefore it
    firmware, thereby causing driver initialization failure.
    airo : Print of firmware version
    For the firmware version 5.30.17 the log file shows:
    firmware class to retrieve the waveform, and the request to initiate the
    commands and responses between the driver and firmware (also
    the firmware indicates the association succeeded later. We need
    drivers/net/wireless/ipw2x00/ipw2200.c: In function ‘ipw_load_firmware’:
    firmware, keep only the reading part and move
    Disable host TX rate control. The wl1271 firmware is already managing rate
    wl1271: Clean up firmware block allocation calculation
    This patch uses a higher precision timer to synchronize with the firmware
    Don't mask firmware interrupts while processing interrupts. This allows the
    This patch will ack RX frames read from the firmware in one single write,
    to PLT mode" enabled the RX path in firmware so that now driver received
    driver-core: firmware_class: remove base.h header inclusion
    Turns out firmware_class does not depend on it at all so remove it.
    about the port structures in the firmware, and make sure the SG page
    [SCSI] bfa: Added firmware save clear feature for BFA driver.
    memory-hotplug: create /sys/firmware/memmap entry for new memory
    Interface firmware_map_add was not called explicitly.  Remove it and add
    function firmware_map_add_hotplug as hotplug interface of memmap.
    to function firmware_map_add_hotplug.
    [SCSI] bfa: Resume BFA operations after firmware mismatch is resolved.
        operations after BFA init done on a firmware mismatch.
      * In normal cases of no firmware mismatch this thread is terminated
        proper config attributes are set after firmware mismatch.
    [SCSI] bfa: New interface to handle firmware upgrade scenario
    Staging: rt{2860,2870}sta: Use request_firmware() to load firmware
    firmware-loading code which checked a version number and CRC at the
    The removed firmware will be added to the linux-firmware.git
    Staging: sep: include driver name in firmware filenames
    enabled (at the firmware level), due to misc fun related to the
    firmware that I'm working from at the moment[*], as there are inter-
    The firmware will be submitted for inclusion in dwmw2's linux-firmware
    Staging: rtl8192e: Small code fixes for r819xE_firmware.c
    be2net: download NCSI section during firmware update
    Adding code to update NCSI section while updating firmware on the controller.
    USB: isight-firmware: declare MODULE_FIRMWARE
    The pbLua firmware (http://pblua.com/) for the Lego Mindstorms NXT
      Log firmware load process, remove delay
    USB: cxacru: firmware writes on OHCI are slow, log progress
    writing firmware and then log the ATM device information
    iwlwifi: load firmware asynchronously before mac80211 registration
    loading firmware asynchronously from ->probe() before
    where firmware is required to know parameters.
    those will only be supported by new firmware images.
    Hence, to start with, convert iwlwifi to load firmware
    firmware loading fails, and only registering with the
    wireless subsystems after firmware has been loaded
    new firmware capabilities, depending on the firmware
    ar9170: load firmware asynchronously
    This converts ar9170 to load firmware asynchronously
    all firmware has been loaded successfully. If, on the
    other hand, any firmware fails to load, it will now
    possibility of passing bad value to firmware.
            drivers/firmware/iscsi_ibft.c
    firmware.
    been changed in the hardware/firmware.
      drivers/firmware/iscsi_ibft.c: remove NIPQUAD_FMT, use %pI4
      [SCSI] qla2xxx: Add firmware ETS burst support.
    drivers/firmware/iscsi_ibft.c: remove NIPQUAD_FMT, use %pI4
    XC3028L (firmware 3.2 and upper). Fix it.
    reported troubles with newer firmwares found on xc3028l chips.
    vendorcmds.h contains the vendor commands for firmware.
    V4L/DVB: get_dvb_firmware: Fix typo, sort list of components
    V4L/DVB: get_dvb_firmware: Add function to retrieve nGene firmwares
    Use 'get_dvb_firmware ngene' to download 'ngene_15.fw' and 'ngene_17.fw'.
    V4L/DVB: ngene: Remove firmware debugging
    Remove firmware debugging, because setting ngene_fw_debug and requesting
    firmware from file causes a kernel error.
    V4L/DVB: ngene: Always use firmware loader
    Always use firmware loader.
    2250 firmware uses an 8-bit address in the usb vendor request.  A
    If there is ever going to be a FireDTV or FloppyDTV firmware which does
    The fix makes sure that such an unexpected firmware is safely recognized
    by fdtv_alloc as an unknown firmware.
    V4L/DVB (13930): dib0700: rework IR logic for firmware 1.20
    When firmware 1.20 was introduced, the dib0700 switched from a polling model
    firmware bug.
    in favor of newer index entries.  This change ensures the firmware always has
    63 buffers/MDLs as that is the firmware limit per stream and IDX stream buffers
    V4L/DVB (13840): smsusb: Add ISDB-T firmware for Hauppauge WinTV-Nova-T-MiniStick
    such as the system firmware "enables" and uses a performance
    so we really need to get the firmware to do the right thing.
    default for firmware TP-76.
    Calls to communicate with system firmware via a SMI (using dcdbas)
    This removes dependence on external firmware for NV50 generation cards.
    special new firmware table on this platform, but given that we do have
    this situation with a reset of the radio or the firmware, depending on how
    handoff from firmware to hw framebuffers") didn't add fb_destroy
    reversed, resulting in firmware instability in regard of the feature. Fix
    The new firmware does not allow removal of unicast keys - they will be
    NVS file, and hence the firmware frame filtering would not work properly.
    and by ensuring the firmware is in active mode after the failure.
    [SCSI] qla2xxx: Add firmware ETS burst support.
    (FCP2) the firmware is holding.  While iterating through the
    Before FIP support, the firmware interface allowed multicast address
    allow the firmware interface to now register mcast addresses for fnic too.
    bnx2x: Use firmware 5.2.13
    Switch to the new firmware version (5.2.13).
    New firmware version (5.2.13).
    bnx2: Update firmwares and update version to 2.0.8.
    This is necessary for the ARM firmware to send correct data to the driver.
    Users with a single touch firmware report not seeing the DOUBLETAP events; this
    This cleans up the behavior particularly for the latest firmware, which
    ALSA: usb-audio: reduce MIDI packet size to work around broken firmware
    Extend the list of devices whose firmware does not expect more than one
    ALSA: Echoaudio - Add firmware cache #2
    This patch implements a simple cache for the firmware files when CONFIG_PM is defined.
    This patch changes get_firmware(), free_firmware() and adds
    free_firmware_cache(). The first two functions implement a very
    firmwares when the module is unloaded.
    free_firmware() releases the firmware immediately and
    free_firmware_cache() does nothing.
    ALSA: Echoaudio - Add firmware cache #1
    Changes the way the firmware is passed through functions.
    When CONFIG_PM is enabled the firmware cannot be released because the
    With this patch the firmware is passed as an index of the struct
    firmware card_fw[] in place of a pointer. That same index is then used
    to locate the firmware in the firmware cache.
    of Y2_HW_WOL_ON is confusing; what it means is transition to firmware SPI
    situation by reseting the uCode firmware.  If the actual_ack_count/expected_
    iwlwifi: clear all the stop_queue flag after load firmware
    All the queues are awake and ready to use after loading firmware,
    for firmware reload case, if any queues was stopped before
    receive interrupts from firmware after registering interrupt, but without
    being ready to deal with interrupts from firmware yet.
    iwlwifi: add debug function to reset/reload radio/firmware
    Adding function to force reset radio or reload firmware from debugfs.
     - reload firmware
    iwlwifi: clear all tx queues when firmware ready
    behaviour of the original firmware, userspace can change the trigger
    powerpc: Make powerpc_firmware_features __read_mostly
    We use firmware_has_feature quite a lot these days, so it's worth putting
    powerpc_firmware_features into __read_mostly.
    it not working on older firmware.
    [SCSI] qla1280: Drop host_lock while requesting firmware
    request_firmware() may sleep and it appears to be safe to release the
    [SCSI] lpfc: unify two if branches with the same code in lpfc_decode_firmware_rev()
    this wrapper function used to send request to controller firmware to modify
    Pid: 12661, comm: firmware/carl91 2.6.33-rc5-wl #18
    Retrying commands seldomly works, most often the firmware is in a
    only that firmware was using incorrect WMM settings.
    lose ATA devices on resume.  New firmware which fixes the problem is
    already available.  Add G725 with old firmwares to the broken suspend
    powerpc/pseries: Pass more accurate number of supported cores to firmware
    firmware via the ibm,client-architecture call was set by a previous
    multiple threads per core, thus permitting the firmware to assign
    the value passed to firmware.
    For NX2031, first try to scrub interrupt before requesting firmware
    sfc: Handle firmware assertion failure while resetting
    This allows the driver to recover if the MC firmware has crashed due
      starfire: clean up properly if firmware loading fails
    o After firmware recovery, clear device reset state transition register.
      Otherwise firmware reload can occur unnecessary.
    libertas: add comment re: v10 firmware key handling
    starfire: clean up properly if firmware loading fails
    if firmware loading fails.  This results in a BUG() on a second attempt to
    Due to a hardware bug in the SFC9000 family, the firmware must
    when this command is indeed enabled it has been found to trigger firmware
    added back if there is a future need and the firmware problem it triggers
    It causes a big boot delay because the firmware is not available.
    glitch (incorrect reading of the error register or firmware bug) and
    firmware related issue on Samsung n130 on bko#14314.
    With the v10 firmware running on 8688 HW, clearing WPA keys after setting the
    [SCSI] qla2xxx: Remove firmware hint for 81xx parts.
    An enhancement to the LSI Disk Array Controller firmware is being
    qlge: Add module param to force firmware core dump.
    Default setting is 'off', don't allow force firmware dump.
    qlge: Add serdes reg blocks dump to firmware dump.
    qlge: Add RAM dump to firmware dump.
    qlge: Add probe regs to firmware dump.
    qlge: Add basic firmware dump.
    Adding the infrstructure and basic data for the firmware
    The firmware coredump is turned OFF by default.  There will be no
    qlge: Add data for firmware dump.
    Enhance module information with the names of the firmware files
    correctly detect and/or install the firmware files relevant to
    b43: Declare at least one real firmware file using MODULE_FIRMWARE.
    Enhances module information with the names of the firmware files
    correctly detect and/or install the firmware files relevant to
      macids for AP and STA mode.  (Typically, STA firmware images will
      support only one macid, #0, in STA mode, and AP firmware images
    mwl8k: post per-vif firmware commands as per-vif commands
    supported firmware commands that are actually per-vif commands.  Use
    vif they operate on gets passed down into the firmware.
    mwl8k: prepare for posting per-vif firmware commands
    One of the bytes in the mwl8k firmware command header is the 'macid'
    mwl8k: use firmware capability field to decide which bands to register
    firmware only for now).  This enables 5 GHz STA operation.
    mwl8k: handle 5 GHz legacy rate bitmaps in firmware commands
    before giving it to the firmware, as the firmware follows the bitmap
    The mwl8k firmware uses indices into the 2.4 GHz band rate table for
    on the capability bitmask returned by the firmware.
    Add MODULE_FIRMWARE tags for the mwl8k firmware images that don't
    have them yet, and move them to where the firmware image names are
    wl1251 firmware supports U-APSD just with a simple queue configuration
    implementation assumes that firmware takes care of the wakeup and
    mwl8k: implement AP firmware station database maintenance
    STA firmware uses UPDATE_STADB to manipulate the hardware station
    database, whereas AP firmware uses SET_NEW_STN -- this implements the
    running on AP firmware.
    rings to drain, the firmware can end up doing batching of transmit ring
    This crash only happens if firmware supplies a defective ACPI namespace, so
      Then this request wont be passed to firmware and it will be added to
      driver mac list and will never make it to firmware.
    The patch implements a firmware command to fetch the eeprom data.
    drivers/firmware/iscsi_ibft.c: use %pM to show MAC address
    hso: Fix for 5 sec timeouts with v2.x firmware
    Older firmware ignored this request but did sent a reply. Newer firmware just
    STA firmware images on hardware that supports it.
    For STA firmware, move the per-peer hardware station ID to the
    mwl8k: bail out if there is no AP firmware image support for this chip
    If there was an error acquiring the firmware lock in
    (but not required) that the firmware has the knowledge that it
    o Dump registers such as tx ring and rx ring counter, firmware state,
      wl1251: timeout one too soon in wl1251_boot_run_firmware()
    reduced transfer rates. This patch takes enables the firmware to take advantage
    Previously a "firmware chooses" value was used for the rates of all control
    message templates set to the firmware. This resulted in a too high rate to be
    firmware - the FW will not be able to respond to probe requests autonomously.
    firmware-booting this small stabilization delay is required.
    firmware.
    In the new reference driver, some of the firmware configuration values have
    file also contains the initialization values.  For the latest firmwares, we
    With these tools, we shouldn't upload the firmware nor boot the firmware
    Newer firmwares require the dco itrim parameters to be set during
    The wl1271 firmware supports maximun 25.5dBm, so the driver was returning
    When we go back to idle, we issue a CMD_DISCONNECT to make sure the firmware
    wl1271: added radio parameters configuration values newer firmwares
    Add new radio parameters for new structures based on firmware revision
    wl1271: updated general parameters structure for newer firmwares
    wl1271: updated radio parameters structure for newer firmwares
    mwl8k: fix up AP vs. STA firmware image receive descriptor handling
    8687 only are actually used for all STA firmware images, whereas the
    AP firmware image is in use.
    unconditionally if the firmware image loaded reported the STA ready
    firmware.
    mwl8k: do rx/tx ring initialisation after loading firmware
    Whether the firmware we have loaded is AP or STA firmware decides
    rx/tx ring initialisation to be after firmware loading.
    mwl8k: get rid of the struct mwl8k_firmware abstraction
    mwl8k: firmware command code cleanup
    Sort firmware commands by command code, get rid of the 802_11 substring
    firmware command names.
    wl1251: timeout one too soon in wl1251_boot_run_firmware()
    enic: minimize pkt filter updates to firmware
    In set_multicast(), only push pkt filter changes down to firmware if
    so it cannot load firmware.
    sfc: QT2025C: Work around PHY firmware initialisation bug
    The PHY's firmware very occasionally appears to lock up very early, but
      in executing request_firmware() (on Intel CPUs at least) which doesn't
    as release_firmware and kfree are NULL pointer friendly
    o Unified firmware image size can be < 1 MB
    o NX_NEED_AER device state added, to synchronize with firmware
      see no response from it. Force firmware reset, if some pci-func
    USB: emi62: fix crash when trying to load EMI 6|2 firmware
    While converting emi62 to use request_firmware(), the driver was also
    of the FPGA firmware because the code tries to access the addr field of
    IP: [<f80d248c>] emi62_load_firmware+0x33c/0x740 [emi62]
      drm/nv50: fix suspend/resume delays without firmware present
    While it's might be technically true that only MESH-enabled firmwares
    difficult. To fix it, a firmware change is needed but in most cases that's
    firmware sleep after the error.
    hardcoded in CONFIG_CMDLINE by the ones received from firmware.  Therefore,
    using firmware remains the only reliable method to transfer the
    is not defined, retains the existing semantics, and firmware command-line
    drm/nv50: fix suspend/resume delays without firmware present
    Previously, if there was no firmware available, the DRM would just
    A module option has been added to force the use of external firmware
    Until a way to automatically query the firmware about its audio
    For firmware higher than 1.21, the xfer buffer size can be changed
    firmware: only allow EDD on x86
    cleanly include the firmware Kconfig.
    drivers/firmware/dmi_scan.c: use %pUB to print UUIDs
    Blackfin: pull in firmware Kconfig
    When switching to request_firmware() to load the context programs,
    Wii video game console is used by the firmware running on the Starlet
    Broadway processor. When running under the 'mini' firmware this is
      firmware_class: make request_firmware_nowait more useful
    ring.  Without it, the firmware can assert and cause bnx2x to report
    drivers/staging/vt6656/firmware.c:804: warning: format '%ld' expects type 'long int', but argument 3 has type 'unsigned int'
    firmware_class: make request_firmware_nowait more useful
    Unfortunately, one cannot hold on to the struct firmware
    that request_firmware_nowait() hands off, which is needed
    free it (via release_firmware).
    This driver requires firmware files not available in this kernel tree,
    Add additional PHY uC status check in case PHY firmware is not running
    Change thinkpad-acpi to ask the firmware to resume with the radios in
    Note that it means we respect the firmware's oddities.  Should the
    firmware support (no control over state storage in NVRAM, for
    EC firmware, 1V) to TPACPI_BRGHT_Q_EC, but keep TPACPI_BRGHT_Q_ASK set
    resource to firmware via the rtas set-indicator call.  To add a resource, it
    is first obtained from firmware via the rtas set-indicator call and then a
    from firmware and the parsing of information returned from the
    netxen: fix firmware type check
    Unified firmware image may not contain MN type of firmware.
    Driver should fall back to NOMN firmware type instead
      During suspend/resume and firmware recovery, acquire rtnl_lock,
    The FINALIZE_JOIN firmware command only looks at the first couple of
    mwl8k: increase firmware loading timeouts
    main firmware image should be at least 5 ms or so.  We were doing an
    the msleep argument to 5 fixes firmware loading e.g. when HZ=1000.
    Some firmware images need more than 200ms to initialize.  Bump the
    Before issuing any firmware commands, we wait for the transmit rings
    mwl8k: allow more time for firmware commands to complete
    Some firmware commands can under some circumstances take more than 2
    Packets exchanged between the mwl8k driver and the firmware always
    field is passed to/from the firmware via the tx/rx descriptors.
    sized FX2 firmware.
    V4L/DVB (13496): pvrusb2: Support manual extraction of 16KB FX2 firmware
    identify and locate newer vendor supplied firmware.  This change makes
    the feature work for the newer larger firmware size.
    V4L/DVB (13495): pvrusb2: Support 16KB FX2 firmware
    New FX2 firmware from Hauppauge is no longer 8KB in size - it's 16KB.
    (because the CD shipped with the hardware only has the 16KB firmware).
    firmware, so that the encoder will send the exact amount of bytes we specify
    on the i2c bus can cause problems on devices that require firmware download or
    solution will ever present itself.  I think that part's firmware is
    V4L/DVB (13188): xc5000: return an error on tuning attempts if firmware not loaded
    Xc5000 tuning attempts shouldn't return zero in the case where the firmware
    V4L/DVB (13042): Add NEC protocol to firmware v1.2 handler
    Currently, dvb_usb_dib0700_ir_proto is supported only with firmwares
    older than 1.2. Adds support for it also with the newer firmware.
    When debugging the wifi firmware, we need to disable the wimax core to gain
    This update follows the firmware engineers recommendations.
    - Fix firmware crash after vport create with high target count
    - Fix error when trying to load driver with wrong firmware on FCoE HBA.
    FIP or non-FIP mode is fully automatic if the firmware
    The fnic driver needs to push the assigned FC_ID to firmware.
    be marked free.  This is how the array people tell me their firmwares
    validate firmware status flags prior to assigning values from the
    [SCSI] qla2xxx: Retrieve firmware's maximum number of supported FCFs.
    [SCSI] qla2xxx: Reread firmware versions information after an ISP abort.
    Instead, query the information after the check for firmware ready
    [SCSI] qla2xxx: Add firmware-dump kobject uevent notification.
    bnx2: Read firmware version from VPD.
    Tg3's firmware is no longer loaded from tg3_init_one().  Remove the
    error path that releases the firmware back to the system.
    When a firmware command fails, only the failure codes are printed.
    Need to send a HALT command to the firmware to fully shutdown the bnx2x
    Handle few corner cases in firmware hang detection and recovery:
      firmware is done.
    o During probe, if start_firmware fails, restore reference
    o Don't increment refernce count, if start_firmware fails
      during firmware reset.
    firmware like the CP.  This firmware must be installed and
    accessble to the firmware loader for interrupts to function.
    compatible property of of_serial to let a firmware choose that model instead
    - MAC, PHY and board peripherals are managed by firmware
    sfc: Add firmware protocol definitions (MCDI)
    In new NICs flash is managed by firmware and we will use high-level
    New NICs have firmware managing the PHY, and we will discover the PHY
    Reading standard registers on the QT2025C before its firmware has
    Main users would be fullmac devices which firmwares are capable of
    we were sending the GENERAL_PARMS command to the firmware.  Now that that
    compatible property of of_serial to let a firmware choose that model instead
    hash on Siena will involve a firmware request.  So process them
    NICs firmware takes care of the XAUI link.  Also, an XMAC interrupt
    IR Blaster based on MSP430 (firmware although is different
    the EC firmware ID DMI field to never match.
    that he is using outdated firmware and should upgrade.
    Only some PHYs have firmware support for a LED blink mode, so we
    It won't recover from errors (that are bugs in the firmware or driver),
    be2net: Patch to flash redboot section while firmware update.
    Please apply patch to update redboot section while firmware update. Code
    autonegotiation if the firmware is blocking it (e.g. when an IDE-R session
    1. define macro for handling firmware api version
    firmware in some way, like wl1271 or like iwlwifi
    microseconds, which gives enough time for the firmware to receive probe
    response or beacon. Also handled the regain event from firmware once it
    wl1251: Set the correct dtim period to the firmware
    This patch sets the dtim period obtained from the mac80211 to firmware.
    The dtim period obtained from the mac80211 is not set to the firmware.
    to the firmware.
    wl1251: allocate space for firmware with vmalloc()
    Earlier firmware was stored to a memory area allocated with kmalloc()
    but finding a a contiguous area of memory long enough for the firmware is
    very difficult in certain cases. better to allocate the memory for firmware
      - It works around a firmware race condition if ELP is entered too fast
    use it, but is present in all released firmwares afaict.
    ... to avoid useless trial to load firmware on systems with
     [<ffffffffa0441acf>] p54u_upload_firmware_3887+0x2f/0x490 [p54usb]
     [<ffffffffa049c667>] ? p54_parse_firmware+0x427/0x450 [p54common]
    if it can't find it's firmware, it broke ipw2100 basically anytime you
    Value returned by firmware is the actual value, not a log.
    powerpc/qe: Add qe_upload_firmware() stub for non-QE builds
    constant, otherwise qe_upload_firmware() fails at sanity checking.
    management fifo during suspend.  This is now done by the firmware.
    the firmware, but a lot of others on the host.
      platform microcode: firmware: requesting amd-ucode/microcode_amd.bin
      Revert "ipw2200: fix oops on missing firmware"
    V4L/DVB (13079): dib0700: fixed xc2028 firmware loading kernel oops
    Fixing kernel oops when driver attemps to load xc2028 firmware.
    da03945140a035a2962f7f93e359085596f20499 ("qlge: Fix firmware mailbox
    If firmware doesn't grant over native hotplug control through ACPI
    Add support for the 88w8366 firmware receive descriptor format,
    mwl8k: implement AP firmware EDCA parameter configuration
    mwl8k: add AP firmware (mbss) handling to mwl8k_set_mac_addr()
    mwl8k: add AP firmware handling to ->start()
    mwl8k: add AP firmware handling to ->configure_filter()
    mwl8k: implement AP firmware antenna configuration
    mwl8k: add the commands used for AP firmware initialisation
    SET_HW_SPEC command, for initialising AP firmware.
    As different chip/firmware combinations support different
    As the receive descriptor format is determined by the firmware running
    descriptor formats vary a bit between different firmware releases,
    chip and firmware we're running on.
    mwl8k: handle loading AP firmware images
    AP and STA firmware images provide a different signature in the
    mwl8k: spell out the names of firmware images in the pci driver data
    To allow use of a more flexible firmware file naming scheme.
    Revert "ipw2200: fix oops on missing firmware"
    [  917.190002] last sysfs file: /sys/devices/pci0000:00/0000:00:1e.0/0000:02:0d.0/firmware/0000:02:0d.0/loading
    mwl8k: use cond_resched() when loading firmware blocks
    Since each firmware block takes on the order of several hundred usec
    the firmware loading process take a lot more time than just doing
    tasks a chance to run while the firmware is being loaded.
    mwl8k: fix GET_STAT firmware command packet layout
    registers when respecting Firmware First mode.  Platform firmware is
    break that firmware's behavior.
    For non hotplug PCI devices, the system firmware usually configures
    CLS correctly.  For pccard devices system firmware can't do it and
    firmware configures the correct value during boot.
    This patch makes pci_init() determine CLS by looking at what firmware
    qlge: Add firmware/driver sub-command support.
      ipw2200: fix oops on missing firmware
    Responses to firmware commands are read in by the command transmission
    Correct the endianness-handling of the firmware command result status handling
    firmware reports an error in execution. Previously this error would go
    iwlwifi: provide firmware version
    By setting the firmware version in wiphy it is possible to obtain this
                firmware-version: 228.57.2.23
                firmware-version: 15.28.2.8
    Some firmware may pass well over 256 bytes these days.
    ipw2200: fix oops on missing firmware
    [SCSI] stex: add support for reset request from firmware
    Add support for reset request from firmware for controllers
    firmware feature set. Add support for this case.
    [SCSI] megaraid_sas: use the firmware boot timeout when waiting for commands
    use the constant MEGASAS_RESET_WAIT_TIME when waiting for firmware
    Add a lock to the skinny firmware initialisation sequence to prevent
    [SCSI] mpt2sas: Freeze the sdev IO queue when firmware sends internal dev reset
    buffers for debugging firmware related issues.
    will enable support in the driver for debugging firmware timeout related
    controller firmware, and panic driver. The end user probably would want to
    driver, the devices there were not added, were never handshaked to firmware
      qlge: Fix firmware mailbox command timeout.
    qlge: Fix firmware mailbox command timeout.
    firmware events while waiting for it's command completion status.
    Devices with loadable firmware must have their firmware reloaded
    called. Work around this issue by only calling request_firmware()
    for a device's first firmware load, and cache a copy of the pointer
    to the firmware blob for that device, so that we may reload firmware
    netxen: module firmware hints
    Add MODULE_FIRMWARE hints for various firmware file types,
    netxen: support for new firmware file format
    Add support for extracting firmware from a unified
    file format which embeds firmware images for all chip
    the recent firmware update:
    bnx2: Update firmware to 5.0.0.j3.
    For 6x00 and 6x50 series devices, APIv4 is the lowest firmware version
    the firmware wants.
    convert the firmware value into WEXT values anyway.
    iwmc3200wifi: Set wiphy firmware version
    Our wiphy firmware version is a combination of the UMAC and LMAC ones.
    We need to be in sync with the latest firmware API.
    The latest firmware adds a ht_rates and a chain_energy field. The latter is
    the wl1271 firmware is done in little-endian by using cpu_to_le* and
    Also, all the struct definitions for data exchanged with the firmware has
    Add support to enable beacon early termination in the firmware. Early
    done in all cases, and it resulted in a kernel warning if firmware
    wl1271: Add structure for firmware configuration values
    In order to make the firmware configuration more manageable, collect
    If the 38.4MHz reference clock is configured to the firmware, it crashes
    firmware to boot, and everything appears to work.
    wl1271: Update boot time configuration for the new firmware
    With the change to the new firmware, there was a change to firmware memory
    The new firmware has fixed a firmware crash problem related to ELP entry.
    Remove RX workaround which is not needed with newer firmware revisions. This
    wl1271: Update memory mapping for firmware revision 6.1.0.0.241
    Update the memory regions and memory mapping to support firmware revision
    We need to listen to HW_AVAILABLE interrupts when using ELP with firmware
    because the firmware cleans some things up.  So we check if we're already
    firmware when we are disassociated.
    resetting device after firmware errors), there is no need for apm_ops.reset()
    apm_ops.init() as soon as it may be needed (e.g. quickly for firmware errors),
    wl1271: Mask unneeded events from firmware to conserve power
    Currently several events are enabled from the firmware for which there
    wl1271: Use vmalloc to allocate memory for firmware
    Use vmalloc to allocate memory for the firmware image, and use a smaller
    linear buffer for the actual transfer of the firmware to the chipset.
    Clear the probe-request template on the firmware after scan. Unless
    cleared, the firmware can independently send probe requests to the AP
    Configure the rate policies to the firmware based on the rates given by
     - Avoids known firmware issues with going to ELP too fast after an
    firmware for TX packets.
    parse board config structure directly (maintained by firmware).
    netxen: fix tx timeout handling on firmware hang
    the firmware watchdog task can catch need_reset request
    for existing users with sane firmware.
    Top driver is responsible for device initialization and firmware download.
    as well as bluetooth and GPS coms. (Wifi and WiMax provide their own firmware)
    In addition top driver is used to retrieve firmware logs
    Currently __i2400m_dev_start was forcing, after uploading firmware and
    value for the size field since only one set of firmware chunks is downloaded
    driver has finalized initializing its device's firmware, a
    before we do any acces to the device, even for doing firmware upload.
    basic infrastructure needed to load firmware onto the device.
    wimax/i2400m: don't overwrite error codes when failing to load firmware
    error code with -ENOENT; when a firmware fails to load, we want to
    This requires previously applied commits to cache the firmware image
    wimax/i2400m: cache firmware on system suspend
    In preparation for a reset_resume implementation, have the firmware
    can't load firmware until resume is completed or bad deadlocks
       + the list of firmware names to try
    wimax/i2400m: on firmware upload, select BCF header that matches device's request
    they boot. This barker is used to select, in the firmware file image,
    We modify the i2400m_fw_dnload() firmware loading path by adding a
    wimax/i2400m: support extended firmware format
    The SBCF firmware format has been extended to support extra headers
    firmware code with more than one certificate. This eases up
    wimax/i2400m: verify firmware format version is known
    wimax/i2400m: retry loading firmware files in sequence
    The i2400m firmware loader is given a list of firmware files to try to
    cases, where we might want to try to load a firmware and if it fails
    by the device to indicate the types of firmware it would take (signed
    to match a header in the firmware image before we can load it.
    the information needed to decide how to upload the firmware and which
    types of firmware to use. The database can be populated from module
    wimax/i2400m: decide properly if using signed vs non-signed firmware loading
    The i2400m based devices can boot two main types of firmware images:
    Currently the code is making the decission on what type of firmware
    wimax/i2400m: don't write to memory allocated by request_firmware()
    In kernel 2.6.31, the firmware requested to ram could be marked
    the firmware when things go wrong. The driver currently has a constant
    netxen: sysfs control for auto firmware recovery
    and firmware initialization.
    be entered with non-working link status if the system firmware didn't
    disabled due to hardware of software/firmware problems (including
    It turns out we have a duplicate firmware feature for hcall-bulk and the
    (mostly for firmware init and diagnostic tools).
    We had assumed that SAL firmware would return an error if it didn't
    acenic: Pass up error code from ace_load_firmware()
    If ace_load_firmware() fails, ace_init() cleans up but still returns
    qlge: Get rid of firmware handler debug code.
    qlge: Store firmware revision as early as possible.
    qlge: Add handler for DCBX firmware event.
      [SCSI] mpt2sas: Timeout occurred within the HANDSHAKE logic while waiting on firmware to ACK.
    This was accidentally omitted from one of the previous patches for firmware event
    handling.  The handler needs to the enable firmware irq mask when it's done
    at76c50x-usb: set firmware and hardware version in wiphy
    Set firmware and hardware version in wiphy so that user space can access
    cfg80211: add firmware and hardware version to wiphy
    It's useful to provide firmware and hardware version to user space and have a
    Add fields for firmware and hardware version to struct wiphy.
    with firmware versions 10.38.1.p25, 9.70.4.p0 respectively on 32-bit and 64-bit
    iwlwifi: add module firmware info for 1000 series
    The module firmware information of 1000 series is missing from iwlagn.
    After updating firmware stored in flash, users may wish to reset the
    relevant hardware and start the new firmware immediately.  This should
    Add rtnl to firmware worker threads that also use the HW semaphore register.
    qlge: Fix queueing of firmware handler in ISR.
    Check that we are not already polling firmware events before we queue the
    firmware event worker, then disable firmware interrupts.
    vxge: Check if FCS stripping is disabled by the firmware.
    - Added a function to check if FCS stripping is disabled by the firmware, if
    - By default FCS stripping is disabled by the firmware. With this assumption
     - This allowed the firmware to perform a generic DMA write to host memory.
    [SCSI] mpt2sas: Timeout occurred within the HANDSHAKE logic while waiting on firmware to ACK.
    timeout occurred within the HANDSHAKE logic while waiting on firmware to
    root caused to a logic timeout in the firmware code.  The proposed solution
    ALSA: sscape: convert to firmware loader framework
    The conversion solves the problem that firmware size was set to 64KB
    while non PnP cards have 128KB firmware files.
    An additional firmware initialization code has been moved from the OSS
    We can fix this by querying the firmware at load time and calling
    to it with the INIT_HCA firmware command.
    In some cases firmware can give us bad value of index in transmit
    so the firmware upload fails.
    In the worst case (with broken firmware) the sleep loop will take 1 second.
    In the common case (working firmware), it will only take a few milliseconds.
    But for using other purpose, /proc/kcore, this may includes some firmware
    which only have closed-source firmware available. If we had _open_
    firmware, bugs like this would be easy to fix.
    netxen: fix firmware init after resume
    After successful firmware init, return instead of
    firmware reset rehaul.
    always lead to firmware reset instead of pci function reset.
    for the input queue depending on the firmware. That can cause a connection
      V4L/DVB (13015): kmalloc failure ignored in m920x_firmware_download()
    Fixed up trivial conflicts in firmware/Makefile due to network driver
    (cxgb3) and drm (mga/r128/radeon) firmware being listed next to each
    1. Handle better the second-gen firmware, which has no HKEY mask
       b) use DMI quirks to detect the second-gen firmware;
          and available even on mask-less second-gen firmware;
       their reception from the firmware.  ALSA mixer and brightness
    4. Fully reset firmware interface on resume (restore hotkey
      drivers/scsi/ibmvscsi/ibmvscsi.c: asm/firmware.h is included more than once.
    Don't fetch firmware address and recompute channel control on each
    other functions exposed by its ACPI firmware, but for now only
    the second gen of HKEY firmware supported (the first gen didn't report
    Also, restore bits in the firmware mask after hotkey_source_mask is
    thinkpad-acpi: firmware version checks
    Use the quirk infrastructure to warn of outdated firmware and also of
    firmware versions that are known to cause problems.
    X40 (firmware 1V) and T41 (firmware 1R) have been confirmed to work
    For now, whitelist just these two firmware types.  It is best to have
    at least one more firmware type confirmed for Radeon 9xxx and Intel
    V4L/DVB (13015): kmalloc failure ignored in m920x_firmware_download()
    V4L/DVB (12938): SAA7164: Increase the firmware command timeout to avoid firmware errors.
    The firmware typically responds in < 50ms and, via the interrupts and
    V4L/DVB (12933): SAA7164: Fix IRQ related system hang when firmware is not found.
    V4L/DVB (12928): SAA7164: Increase firmware load tolerance
    It's timing out and aborting firmware load too quickly on some
    V4L/DVB (12752): get_dvb_firmware: add af9015 firmware
    Add af9015 firmware to get_dvb_firmware script.
    embedded platform which was fixed via firmware and now bko#14124
      PCI hotplug: clean up acpi_get_hp_params_from_firmware() interface
    Staging: rtl8192e: fix timeouts on firmware download
    Staging: rtl8192e: coding style cleanups on r819xE_firmware.c
    r819xE_firmware.c file.
    Staging: rtl8192e: remove another firmware header file not being used
    The built-in firmware images are never used, the firmware files
    are downloaded to the device through the standard firmware interface.
    This removes the firmware header file as it's not ever used.
    Staging: rtl8192e: remove firmware header file not being used
    This removes the r819xP firmware file that is never used.
    Staging: rt2870: remove old firmware
      rt3070 driver's firmware should be now also used by rt2870 driver
    Staging: sep: tidy firmware load
    chunks of the firmware loading ioctl (ie almost all of it)
    This driver no longer requires to have the firmware compiled in
    Furthermore, we now have the right to distribute the firmware
    Staging: wlan-ng: Convert firmware loading to load binary ihex format
    Convert prism2_usb firmware loading to load firmware in pre-compiled
    - The firmware is now expected to be in the same 'ihex' (.fw) format
    harmless because we won't change anything unless we discover firmware
    PCI hotplug: clean up acpi_get_hp_params_from_firmware() interface
    This patch makes acpi_get_hp_params_from_firmware() take a
    type of fiber.  This causes some strange fallout when firmware verification
    so the firmware upload fails.
    In the worst case (with broken firmware) the sleep loop will take 1 second.
    In the common case (working firmware), it will only take a few milliseconds.
      netxen: fix file firmware leak
      netxen: change firmware write size
    V4L/DVB (12613): cx25840: fix determining the firmware name
    Depending on the model there are three different firmwares to choose from.
    Unfortunately if a cx23885 is loaded first, then the global firmware name
    is overwritten with that firmware and if ivtv is loaded next, then it
    tries to load the wrong firmware. In addition, the original approach would
    also overwrite any firmware that the user specified explicitly.
    The generic firmware loading routine has now changed to preserve
    New code is turning ON firmware event from another special work called
    the firmware level.
    In fabric-login based on iop BIT_8 firmware notifies presence of
    Redesign tx timeout handling in line with new firmware
      context before requesting firmware reset.
    o For NX2031, since firmware heartbit is not supported
      directly request firmware reset.
    netxen: fix file firmware leak
    Release file firmware when no firmware reset is required.
    o Restrict memory accesss to 64 bit, currently only firmware
    netxen: change firmware write size
    Use 8 byte strides for firmware download into card
    (cciss: fix regression firmware not displayed in procfs)
    status.  This can be useful for when a platform firmware clobbers some
    in firmware, but only queue frames on one queue.
    Change that and also tell firmware about disabled QoS, so it
    for all users with the open, or one-stage firmware.
    request_firmware() & ethtool infrastructure. The trigger to flash the device
    will come from ethtool utility. The driver will invoke request_firmware()
    to be available in /lib/firmware/
    netxen: refactor firmware info code
    o Combine netxen_get_firmware_info(), netxen_check_options()
      so that they are updated every time firmware is reset.
    o Set dma mask everytime firmware is reset.
    netxen: fix ip addr hashing after firmware reset
    Reprogram local IP addresses after firmware is reset
    netxen: firmware hang detection
    Implement state machine to detect firmware hung state
    and recover. Since firmware will be shared by all PCI
    is required for initializing firmware.
      that checks firmware heartbit every 5 sec and detaches
      itself if firmware is dead. Last detaching function
      reloads firmware. Other functions wait for firmware
    Heartbit is not supported by NX2031 firmware.
    netxen: handle firmware load errors
    Unwind allocations and release file firmware when
    when firmware load fails.
      ipw2200: firmware DMA loading rework
    firmware commands during host reset.  Also, the setting of the shost state to
    Following host reset its possible that the controller firmware could
    3. Continue handshake with the firmware.
    Nic firmware can return zero for port MTU, so check for non-zero value
    enic: changes to driver/firmware interface
    Add driver/firmware interface for setting up RSS secret key and indirection
    Some driver -> nic firmware calls weren't guarded with a spinlock, exposing
    Nic firmware can place resources (queues, intrs, etc) on multiple BARs, so
    Alloc 12k skbuffs so that firmware can aggregate more
    load the firmware, then waiting for completion.
    net/ethtool: Add support for the ethtool feature to flash firmware image from a specified file.
    This patch adds support to flash a firmware image to a device using ethtool.
    The driver gets the filename of the firmware image and flashes the image
    using the request firmware path.
    A misconfiguration by the firmware of the U4 PCIe bridge on PowerMac G5
    which can get it out of sync with the firmware, thus breaking offb.
    at boot time. It also fixes a bug where the firmware provides us with
    the newest firmwares, and keeping a backward compatibility fallback path for
    older firmwares, where the configuration and result bitmaps were identical.
    it could be caused by 2 reasons: the firmware is roaming or the
    radeon: Use request_firmware()
    For Radeon 100- to 500-series, firmware blobs look like:
    For Radeon 600-series, there are two separate firmware blobs:
    The device firmware uses the MDIO bus during early setup.  If the driver
    modifies the MDIO bus configuration while it is in use by the firmware,
    after the firmware posts its magic signature, signifying initialization
    bnx2: Update firmware to 5.0.0.j3.
    firmware events, and errors.
    See http://simplefirmware.org for more information on SFI.
    mwl8k: missing endian conversion when printing firmware command result
    The CF8305 is a very old silicon running firmware version 3.0 . This card also
    Also, this card uses only one-stage firmware which is loaded the same way as
    helper firmware. The second-stage firmware isn't loaded on this card and doesn't
    During normal operation - stations are awake - the firmware refused
    the firmware to ignore the ps canceling for certain frames.
    ipw2200: firmware DMA loading rework
    for ipw2200 firmware loading in kernel 2.6.30. High order allocation is
    maximum firmware size support remains the same (64*8K).
    firmware).  The non-HES code is pretty similiar to the 32-bit FSL Book-E
    drm/r128: Use request_firmware() to load CCE microcode
    drm/mga: Use request_firmware() to load microcode
    and any access to standard MDIO registers before the PHY firmware has
    addresses are unknown to firmware. So packets take a slow
    path (lower priority) in firmware reducing performance.
    Driver needs to enable this "mac learning" mode in firmware.
    Both come from the hardware (influenced by firmware
    netxen: fix firmware reset logic
    If netxen_need_fw_reset() return 0 [ implies firmware is up
    Add ethtool -K knob to control LRO in firmware.
    queue mode. This ensures that the firmware is reinitialized with single
    - Fix for firmware dump failure
    Ability was to be managed in the adapter via firmware via flash settings.
    However, not all firmware images supported it. Uniformly support it
    Bluetooth: Fix complicated assignment of firmware for Marvell devices
    firmware names are assigned to specific device ids. Fix that by doing a
    The helper/firmware images of SD8688 can be downloaded from this tree:
    git://git.infradead.org/users/dwmw2/linux-firmware.git
    mwl8k: fix firmware command serialisation
    held over the entire firmware command submission.  And since waiting
    To fix mwl8k firmware command serialisation properly, we have the
    This leads to an implementation of a "firmware lock" as a mutex that
    mwl8k: don't touch 'command done' interrupt during firmware load
    Since firmware load commands don't generate 'command done' interrupts
    unnecessarily slows down the firmware load process.  Removing this bit
    of code speeds up loading a typical firmware image from 840 msec to
    mwl8k: sort firmware command list by opcode, and trim unused commands
    wl1251: halt the embedded CPU before loading firmware
    the interface back up, it will still be running and the firmware
    the firmware, enabling a second call to wl1251_boot() to succeed
    b43: Add LP-PHY firmware loading support
    Add support for loading LP-PHY firmware to b43_try_request_fw.
    which only have closed-source firmware available. If we had _open_
    firmware, bugs like this would be easy to fix.
    drivers/net/wireless/wl12xx/wl1271_boot.c: In function 'wl1271_boot_upload_firmware_chunk':
    [  566.430709] [<c0077f98>] (enable_irq+0x0/0x64) from [<bf0dfa78>] (wl12xx_boot_run_firmware+0xfc/0x170 [wl12xx])
    [  566.450851] [<bf0df97c>] (wl12xx_boot_run_firmware+0x0/0x170 [wl12xx]) from [<bf0e05f0>] (wl1251_boot+0xd4/0x108 [wl12xx])
    when requesting firmware.
    This is a boolean value set based on firmware capabilities, so move the
    Subsequently an attempt is made to load the firmware from the resulting
    This ensures right behavior across firmware reset.
    Fix oops ocurring at hibernation time.  This oops was due to the firmware fault
    are used to implement hardware raid.  Unfortunately some firmware
    ar9170usb: fix spurious firmware related message
    the former causes firmware commands to be issued which will time out
    Add support to handle aggregate packets from firmware.
    Local TCP flows are automatically identified by firmware
    when firmware advertises full 64-bit support.
    that firmware freezes in state where it does not respond to any RNDIS commands
    stated in the commit log. This patch fixes firmware issues picked
    Since Johannes indicates iwlwifi firmware cannot be changed to
      ACPI: root-only read protection on /sys/firmware/acpi/tables/*
    to update it to 64-bit (if firmware indicates support). Old
    ACPI: root-only read protection on /sys/firmware/acpi/tables/*
    Commit "iwlwifi: Handle new firmware file with ucode build number
      driver core: firmware_class:fix memory leak of page pointers array
    Some PowerMac firmwares set up a tiling surface at the beginning of VRAM
    driver core: firmware_class:fix memory leak of page pointers array
    firmware_data_write(), and should be freed in release function of firmware
    Enable vlan tx acceleration for NX3031 if firmware advertises
    netxen: fix skb alloc size for legacy firmware
    Request 1532 bytes skb data size for NX3031. NX2031 firmware
    netxen: clean up firmware version checks
    NX2031 firmware version will never be > 4.0.0, so replace
    in the firmware, so that these also reflect in "ethool -c".
    configures IP address in the firmware.
    netxen: refresh firmware info after reset
    o move dma mask update to netxen_start_firmware() so that
      if firmware changes across suspend (e.g. file -> flash)
    o re-read firmware capabilities after firmware reset.
    * frmware -> firmware
    iwlwifi: update 1000 series API version to match firmware
    firmware file now contains build number so API needs to be updated.
    iwlwifi: Handle new firmware file with ucode build number in header
    p54: fix beaconing related firmware crash
    This patch fixes a firmware crash which can be provoked by changing
    Not all AP are compatible with the driver(and firmware) yet, so YMMV.
    to be available for the public, lots of firmware modification and
    libertas: Fix problem with broken V4 firmware on CF8381
      more resources in the firmware.
    o Delete tx context after rx context, some firmware control
      Firmware: firmware_class, fix lock imbalance
    Firmware: firmware_class, fix lock imbalance
    Add omitted unlock in firmware_data_read.
    p54: Move firmware code
    Copy the firmware i/o code from p54common.c into a new file fwio.c
    Tested with V9 firmware by ensuring that IEEE PS is disabled when the
    Tested on a GSPI device with V9 firmware by confirming that we can
    V2: fix typo.  Also, this has been tested on GSPI and SDIO with V9 firmware.
    orinoco: make firmware download less verbose
    The firmware download code has been in a couple of releases, without any
    orinoco: firmware helpers should use dev_err and friends
    load the firmware before registerring with netdev.
    load the firmware before registerring with netdev.
    orinoco: Move firmware capability determination into hw.c
    the firmware before registerring with netdev.
    ELP mode is working now, let's enable it so that the firmware can sleep
    wl12xx: moved firmware version reading routine to chip-specific functions
    With WL1271, the firmware version can only be read right after booting the
    firmware version initially has been moved to a common place where it can be
    Power save support depends on the firmware capabilities rather than the
    card's hardware interface.  Use the FW_CAPINFO_PS bit in the firmware
    Also, the 'firmware_version' field is changed to '1' to allow the user
    cxgb3: use request_firmware() for the EDC registers setup
    use request_firmware() to load the phy's EDC programmation
    The f_dev in _request_firmware() is allocated via the fw_setup_device()
    and fw_register_device() calls and its class set to firmware_class (the
    Because of that, the _request_firmware() function on its -ENOENT error
    function.  For other functions, the QUERY_FW firmware command will
      V4L/DVB (12206): get_dvb_firmware: Correct errors in MPC718 firmware extraction logic
      V4L/DVB (12181): get_dvb_firmware: Add Yuan MPC718 MT352 DVB-T "firmware" extraction
    is done with a firmware upgrade. The fixes are -
    1. Ensure that the correct firmware version is used.
    V4L/DVB (12206): get_dvb_firmware: Correct errors in MPC718 firmware extraction logic
    The extraction routine for the MPC718 "firmware" had 2 bugs in it, where one
    && instead of || for deciding if the firmware length is reasonable.
    a "demod_init" function, a "firmware" must be obtained and loaded to get
    V4L/DVB (12181): get_dvb_firmware: Add Yuan MPC718 MT352 DVB-T "firmware" extraction
    DTV7 firmware from the xc3028-v27.fw firmware image.
    certain firmware events.
    firmware might still have some commands in flight, which
    but sadly there's a firmware issue causing the firmware
    So the firmware will send us commands which we haven't
    netxen: avoid frequent firmware reset
    Restrict firmware reset to following cases -
    o firmware is dead.
    o previous attempt to init firmware had failed.
    o we have got newer file firmware.
    Correct firmware encoding is 8 bit major, 8 bit minor and
    Also fix a infinite loop when cut-thru file firmware is
      ide: add QUANTUM FIREBALLct20 30 with firmware APL.090 to ivb_list[]
      netxen: fix firmware init handshake
    Added the patch module option to apply a "patch" as a firmware to
    Atom - and it might also be firmware dependent.
    ide: add QUANTUM FIREBALLct20 30 with firmware APL.090 to ivb_list[]
    Some PowerMac firmwares set up a tiling surface at the beginning of VRAM
    action of the firmware, this produces a glitch where the LED goes from on
    state by the firmware or hardware before Linux boots, and it is desired to
    netxen: fix firmware init handshake
    Make sure all functions run firmware init handshake.
    If PCI function 0 fails to initialize firmware, mark the
    bail out quickly instead of waiting 30s for firmware
    must happen *after* the chip's firmware is loaded, not before.  With
    Host software could issue interrupts to ME firmware, using H_IG bit. While
    Staging: wlan-ng: Move firmware loading into driver
    Move prism2 firmware loading from userspace into driver, using linux
    request_firmware(). Firmware is now loaded (if available) on device
    Staging: comedi: convert usbdux* to use firmware_request
    The firmware is now in the linux-firmware tree, so we can move these two
    drivers to use the proper request_firmware infrastructure.
    Staging: comedi: jr3_pci: Use struct device from pci_dev for firmware loading.
      netxen: fix detection of cut-thru firmware mode
    Perl is used on the kernel Makefile to generate documentation, firmwares
    firmware control commands didn't care to pause tx queue.
    netxen: fix detection of cut-thru firmware mode
    interface, as the firmware doesn't care if an attempt is made to
    Add a quirklist engine suitable for matching ThinkPad firmware,
    Extend the thinkpad model and firmware identification data with the
    release serial number for the BIOS and firmware (when available), as
    firmware versioning and model:
      AA = firmware model, see above
      V4L/DVB (11821): Siano: smscore - fix isdb-t firmware name
      fbdev: add support for handoff from firmware to hw framebuffers
    fbdev: add support for handoff from firmware to hw framebuffers
    info flag to denote a firmware fbdev, and adds a new aperture base/size
    there is a conflict with a firmware driver, and if there is the firmware
    firmware_map: fix hang with x86/32bit
    | the following code in drivers/firmware/memmap.c, the resource_size_t is 32bit
    |static int firmware_map_add_entry(resource_size_t start, resource_size_t end,
    |                  struct firmware_map_entry *entry)
    V4L/DVB (11821): Siano: smscore - fix isdb-t firmware name
    V4L/DVB (11817): Siano: smscards - fix wrong firmware assignment
    Remove wrong firmware assignments for Nova, Stellar
    Modules linked in: af9013 dvb_usb_af9015(+) dvb_usb dvb_core firmware_class
    V4L/DVB (11962): dvb: Fix broken link in get_dvb_firmware for nxt2004 (A180)
    Due to a reorganisation of AVermedia's websites, get_dvb_firmware
    V4L/DVB (11917): Fix firmware load for DVB-T @ 6MHz bandwidth for xc3028/xc3028L
    This patch fixes the firmware load for such countries, where the
    required firmware is the QAM one.
    QAM firmware doesn't work for cable. So, this patch also removes support
    damage the firmware on recent units.  As he seems to not want this hardware supported in Linux, and I do not know how to detect the difference between
    during firmware load and powering down the chip, I am taking out the reset.
    V4L/DVB (11802): xc5000: switch to new xc5000 firmware 1.6.114 with redistribution rights
    firmware, which eliminates the need for users to manually extract the blob
    V4L/DVB (11799): xc5000: don't load firmware until a tuning request is made
    Defer loading of the xc5000 firmware until it is actually needed.  This helps
    the HVR-950Q).  Also, the firmware load isn't really useful since we
    immediately put the device to sleep afterward, which means a firmware reload
    case he doesn't want to incur the cost of reloading the firmware when starting
    V4L/DVB (11797): xc5000: cleanup firmware loading messages
    firmware upload.  This is more important for boards like the HVR-950q that
    Starting in firmware version 1.1.44, Xceive recommends using the FINERFREQ for
    Expose the firmware build number along with the other version info
    for 10ms.  Reduce the value accordingly, which speeds up the firmware load
    V4L/DVB (11793): xc5000: Properly support power down for newer firmware
    Xceive got rid of the XREG_POWER_DOWN register in later firmware revisions.
    to sleep is to pull the reset pin (but don't reload the firmware).
    V4L/DVB (11792): xc5000: switch to new version of Xceive firmware
    This switches to a new version of the xc5000 firmware, extracted from the
    Also, had to make sure we were making sure the firmware was loaded in the
    V4L/DVB (11723): Link firmware to physical device
    device when loading firmwares. This will prevent the sysfs name
    V4L/DVB (11623): cx18: Verify cx18-av-core digitizer firmware loads correctly
    Add code to verify the cx18-av-core digitizer firmware loads correctly.  The
    verification function reads back and compares the firmware bytes loaded
    back to the firmware for use.  Also reduced the memory required for scheduling
    V4L/DVB (11617): cx18: Set up to wait for a one-shot response before sending a firmware cmd
    When sending an outgoing firmware command, prepare to wait before we raise the
    V4L/DVB (11616): cx18: Add a work queue for deferring empty buffer handoffs to the firmware
    needed.  This prevents any sleeps, caused by notifying the firmware of new
    V4L/DVB (11488): get_dvb_firmware: trivial url change
    firmware: remove broken example files
    The firmware example files are beyond broken, and will not work, and
    firmware: FIRMWARE_NAME_MAX removal
    As we're allocating the firmware name dynamically, we no longer need this
    firmware: wireless/libertas: prepare for FIRMWARE_NAME_MAX removal
    firmware name length restriction.
    firmware: pcmcia/ds: prepare for FIRMWARE_NAME_MAX removal
    firmware name length restriction.
    dont need to check for the firmware name length anymore.
    firmware: dvb/dvb-usb: prepare for FIRMWARE_NAME_MAX removal
    firmware name length restriction.
    This patch changes the dvb_usb_device_properties firmware field accordingly.
    firmware: tuners/xc2028: prepare for FIRMWARE_NAME_MAX removal
    firmware name length restriction.
    firmware: atm/ueagle-atm: prepare for FIRMWARE_NAME_MAX removal
    firmware name length restriction.
    firmware: allocate firmware id dynamically
    The firmware loader has a statically allocated 30 bytes long string for
    the firmware id (a.k.a. the firmware file name). There is no reason why
    firmware names lengths.
    driver core: fix documentation of request_firmware_nowait
    request_firmware_nowait declares it can be called in non-sleep contexts,
    but kthead_run called by request_firmware_nowait may sleep. So fix its
    driver core: firmware_class: replace kfree(dev) with put_device(dev)
    The card firmware does not set the Command Download Ready interrupt bit
    This patch allows the Adaptec firmware to pass on its values for Packetize and
    - Fix SLI4 firmware version not being saved or displayed correctly
    Merge git://git.infradead.org/~dwmw2/firmware-2.6
    * git://git.infradead.org/~dwmw2/firmware-2.6:
      firmware: speed up request_firmware(), v3
    generation bits are left in whatever state that firmware/BIOS set them to.
    tty:cyclades, load firmware even on Ze
    Ze needs firmware to be loaded as well as Zo. Move cyz_load_fw one
    When a device reset happens during firmware load [in
    Thus, on the retry path, pass the I2400M_MAC_REINIT to the firmware
    (firmware load) mode. This was causing issues on some hardware.
    being ready to accept firmware, the driver was currently trying to
    The code that sets up the i2400m (firmware load and general driver
    Add automagic feature flags, so the firmware can tell the driver
    ar9170: interpret firmware debug commands
    This adds new commands that the original firmware will not send
    but we can use them to debug firmware.
    qlge: Add support for retrieving firmware version.
      ALSA: hdsp - Add a comment about external firmwares for hdsp
      ALSA: hdsp: allow firmware loading from inside the kernel
    SAS topology scan is restructured. HBA firmware is generating more
    Now Firmware events are handled by firmware event queue.
    firmware, porting them to be single threaded using the generic MPT_MGMT
    mpt_clear_taskmgmt_in_progress_flag), as the fusion firmware only handles
    Rewrite of all internal generated functions that issue commands to firmware,
    [SCSI] qla2xxx: Export additional firmware-states for application support.
    As firmware will ultimately terminate (stop) and port
    [SCSI] qla2xxx: Fallback to 'golden-firmware' operation on supported ISPs.
    In case the onboard firmware is unable to be read or loaded for
    operation, attempt to fallback to a limited-operational firmware
    to reflash and correct a board with proper operational firmware.
    qlge: Fix timeout on firmware mailbox commands.
    Some firmware mailbox commands require the firmware to
    qlge: Fix bug in firmware event handler.
    Each firmware mailbox command can have a different number of
    an unrelated firmware async event (AE) can arrive.  When this
    qlge: Fix firmware event handler loop.
    field.  This patch adds a check to look for the firmware running on all
    risks corrupting firmware or overwriting vendor system recovery tools.
    firmware name length restriction.
    This patch gets rid of the statically allocated p54usb firmware string, and
    iwmc3200wifi: trim down calibration firmware name
    The patch trims down iwmc3200wifi calibration firmware name from
    shorten the firmware name because all calibration is done by LMAC.
    These devices require the 1-stage firmware, if not present we
    ar9170: add support for 1-stage firmware
    You can get the stage 1 firmware from here:
    http://www.kernel.org/pub/linux/kernel/people/mcgrof/firmware/ar9170/ar9170.fw
    http://www.kernel.org/pub/linux/kernel/people/mcgrof/firmware/ar9170/LICENSE
    This is a new firmware, tested with WNDA3100.
    Oddly enough, the firmware's JOIN/START commands don't appear to have
    And fix up setting authentication suite for v9+ firmware too.
    actually only needed for some firmware revs but it does no harm either way.
    still lots of Smartarray firmware that doesn't handle doing target resets
    firmware doesn't do it.
      usb-serial: fix crash when sub-driver updates firmware
      firmware reads the block size register before it reads IOE register.
    The "trace" pipe is used by the device to send firmware traces;
    usb-serial: fix crash when sub-driver updates firmware
    that new firmware was loaded and the device will disconnect and
    T3 firmware only supports one WRs worth of page list for fast register
    The firmware loading routine is split to an own function to improve
    libertas: read SD8688 firmware status from new register
    The scratch pad register is used to store firmware status after
    firmware is downloaded and initialized. After firmware status is
    Hence the firmware status code is no longer valid afterwards.
    SD8688 firmware introduces a new register for firmware status
    in a single firmware image. FUNC_INIT and FUNC_SHUTDOWN commands are
    When SD8688 card is inserted, the firmware image should be downloaded
    Alternatively, SD8688 firmware offers an enhanced method for driver
    IF_SDIO_RX_UNIT 0x43 is read one time after firmware is ready.
    [SCSI] qla2xxx: Add an override option to specify ISP firmware load semantics.
    As it may be useful during debugging to use a specific firmware
    [SCSI] qla2xxx: Don't try to 'stop' firmware if already in ROM code.
    p54spi: use firmware/DMA bug workaround that work under hight load in p54spi_rx
    code was tested against two versions of the N- Trig firmware: one that supports
      crypto: ixp4xx - check firmware for crypto support
      eeepc-laptop: Work around rfkill firmware bug
    firmware: speed up request_firmware(), v3
    Rather than calling vmalloc() repeatedly to grow the firmware image as
    A quick test with a 337KiB iwlagn firmware shows the time taken for
    request_firmware() going from ~32ms to ~5ms after I apply this patch.
    to limit the chances of nasty conflicts due to busted firmwares, we
    eeepc-laptop: Work around rfkill firmware bug
    1) Buggy firmware can change the RFKILL state by itself. This is easily
       to do for robustness, even if this particular firmware bug is fixed.
    On resume, the wireless toggle key causes the firmware to toggle the
    firmware is controlling the RFKILL state.
    toggle key twice to enable, due to the OS/firmware conflict.  (Assuming
    firmware has already toggled it, then you will never see a state change.
    ALSA: hdsp - Add a comment about external firmwares for hdsp
    When the hdsp driver is built in kernel, the corresponding firmware
    ALSA: hdsp: allow firmware loading from inside the kernel
    is enabled in the firmware or not. To do this, it keeps
    Now, this bit really needs to track what the _firmware_
    o release mac addresses in firmware in dev close().
      drivers/net/wireless/wl12xx/wl1251.c: In function 'wl1251_upload_firmware':
    >However, the device does not accept the firmware on resume.
    >> firmware part 1 upload failed (-71).
    Since "p54: prevent upload of wrong firmwares" we no longer allow
    outdated LM86 firmwares to be uploaded on ISL3887 (LM87) devices.
      [SCSI] mpt2sas : fix oops when firmware sends large sense buffer size
      Input: elantech - provide a workaround for jumpy cursor on firmware 2.34
    3c589_cs: add cis(firmware) of 3Com multifunction pcmcia card
     (1)add cis(firmware) of 3Com lan&modem mulitifunction pcmcia card.
    netxen: fix firmware download
    o hold the firmware in memory across suspend, since filesystem
    o reset the chip after requesting firmware, to minimize downtime
    it for older firmwares.
    code which broke older openfirmware device trees which this case.
    /sys/class/infiniband/nes?/fw_ver is not displaying firmware version
    firmware version number.
    With updated PHY firmware for SFP_D, setting the trace length to 1
    to broke the fifo for processing of firmware events.  After several iterations
    applications to pull ring buffers from controller firmware for debugging
    firmware related issues.
    What this patch does is sends reqeust to firmware to release the buffers prior
    branding that contains the card firmware/chip/bios versions.  If the SSDID
    [SCSI] mpt2sas : fix oops when firmware sends large sense buffer size
    There is a bug in firmware where the reply message frame says there is a
    the 1st 32bit before the 2nd 32bit has been written to by firmware.  In other
    being dma'd across pci memory from controller firmware as two 32bit pci writes.
    >From now on FW will be downloaded from the binary file using request_firmware.
    openfirmware device tree, and eliminates the assumption that the PHY
    openfirmware: Add OF phylib support code
    This patch makes changes in preparation for supporting open firmware
      ACPI: add /sys/firmware/acpi/interrupts/sci_not counter
      pcnet_cs: add cis(firmware) of the Allied Telesis LA-PCM
    MSP430 firmware on the DM355 EVM.  Verified using the RC5
    firmware with GPIO, LED, and RTC support.
    This limit applies to current (APIv1 and APIv2) 3945 firmware only, not
    supported firmware of any of the other cards.
    or the firmware will reject all of them, at the station is still blacklisted.
    received since SD8688/v10 firmware allows a gap between
    and causes buffer overflow in firmware.
    firmware versions for SD8385/SD8686.
    p54spi: compensate firmware alignment bug in p54spi_rx
    libertas: support mesh for various firmware versions
    RxPD have been changed in firmware version 10.x.y.z and newer.
    p54spi: fix p54spi_upload_firmware
    Instead of firmware itself p54_upload_firmware was sending to the device
    content of struct firmware and the following random garbage.
    Notice '&' before priv->firmware->data at p54spi_spi_write.
    and firmware.
    pcnet_cs: add cis(firmware) of the Allied Telesis LA-PCM
    pcnet_cs: add cis(firmware) of the Allied Telesis LA-PCM
    ACPI: add /sys/firmware/acpi/interrupts/sci_not counter
    available and request_firmware blocks.
    However, the device does not accept the firmware on resume.
    > firmware part 1 upload failed (-71).
    The Broadcom chips with 2.1 firmware handle the fallback case to a SCO
    absolute mode bit is not set as if masked out by the touchpad firmware.
    Input: elantech - provide a workaround for jumpy cursor on firmware 2.34
    It seems that Elantech touchpad firmware version 2.34 on the Hercules eCAFÉ
    myri10ge: allow per-board firmware overriding
    Add myri10ge_fw_names to override the default firmware
      x86: prevent /sys/firmware/sgi_uv from being created on non-uv systems
    microcode firmware can become available later on.
    In a scenario where there isn't any firmware available, we will have a
    CONFIG_SLUB_DEBUG_ON=y, that dumps this with no firmware available:
    This is used for protection against buggy hardware/firmware that raises
      powerpc: pseries/dtl.c should include asm/firmware.h
    powerpc: pseries/dtl.c should include asm/firmware.h
    dtl.c:238: error: implicit declaration of function 'firmware_has_feature'
    - We need firmware.h for these definitions.
    crypto: ixp4xx - check firmware for crypto support
     - the loaded firmware may not support crypto at all or
     - in case of no crypto support of the firmware, the module load will fail.
    Merge git://git.infradead.org/~dwmw2/firmware-2.6
    * git://git.infradead.org/~dwmw2/firmware-2.6:
      qla1280: Fix off-by-some error in firmware loading.
      firmware: Remove newly-added slicoss and sxg firmware images
      firmware/WHENCE: Add missing origin information for Ambassador atmsar11.fw
      ALSA: wavefront - Always use request_firmware()
      Remove fdump tool for av7110 firmware
      firmware: convert av7110 driver to request_firmware()
    Add-add conflicts in firmware/WHENCE fixed manually
    Enable multiple rx rings for older NX2031 chip, firmware 3.4.336
    Add support for asynchronous events from firmware,
    status reporting from firmware.
    netxen: defer firmware handshake
    Removed duplicate firmware handshake, defer it until first
    Add new register settings for new SFP+ PHY/firmware.
    x86: prevent /sys/firmware/sgi_uv from being created on non-uv systems
    /sys/firmware/sgi_uv should only be created on uv systems.
    qla1280: Fix off-by-some error in firmware loading.
       some custom command and modes.  (nand fusing, firmware patch, etc) If
    firmware: Remove newly-added slicoss and sxg firmware images
    These are available elsewhere (for example in the linux-firmware.git
    We are only putting stuff in the firmware/ directory of the kernel
    firmware which was previously being distributed separately.
      bnx2: Use request_firmware()
      myri_sbus: use request_firmware
    Conflict in firmware/WHENCE (SCSI vs net firmware)
    The init callback was used in several places to load firmware. Make a separate
    firmware/WHENCE: Add missing origin information for Ambassador atmsar11.fw
    ALSA: wavefront - Always use request_firmware()
    Always use request_firmware() for loading yss225_registers image.
    Remove fdump tool for av7110 firmware
    option to include arbitrary firmware files directly in the kernel image.
    firmware: convert av7110 driver to request_firmware()
      [SCSI] qlogicpti: use request_firmware
      [SCSI] advansys: use request_firmware
      [SCSI] qla1280: use request_firmware
      leds: Add openfirmware platform device support
    the last recently used brightness (in Mac OSX), while the firmware reports
    leds: Add openfirmware platform device support
      thinkpad-acpi: restrict access to some firmware LEDs
    bnx2: Use request_firmware()
    Separated the mips firmware and rv2p firmware into different files
    myri_sbus: use request_firmware
    Disallow UCMS+EC, thus avoiding races with the SMM firmware.
    hammering the firmware with multiple requests.
    thinkpad-acpi: restrict access to some firmware LEDs
    On almost all ThinkPads, LED access is write-only, and the firmware
    lose whatever message the firmware was trying to convey to the user
    model of the ThinkPad firmware and of the thinkpad-acpi driver.
      trivial: Fix misspelling of firmware
    firmware files.
    the Management Engine firmware. MEI is bi-directional, and either the
    host or Intel AMT firmware can initiate transactions.
    (Intel AMT) is resident in firmware. The micro-controller within the
    Management Engine (ME) firmware, which implements various services
    - Intel(R) Quiet System Technology (QST) is implemented as a firmware
    standard. It is implemented in the PC's hardware and firmware, and is
    Staging: comedi: usbdux[fast] firmware upload changes
    usbdux and usbduxfast upload now their firmware via the firmware kernel
    The firmware will usually be loaded from /lib/firmware. Upload via
    Fixed bug in firmware loading with multiple usbduxfast boards.
    The driver is implemented based on the firmware interface information
    This stops udev trying to load the firmware before to card is fully up.
    Staging: sxg: Add support to download the firmware using request_firmware()
    Add support for downloading the firmware using kernel-builtin mechanism.
    This will remove the need for the firmware files in the driver source code.
    This works on Rev B firmware.
    This patch makes the Sahara SXG driver use Rev B firmware instead of Rev A.
    The firmware version is 1.71
    Staging: sxg: Add firmware files for Rev B card
    This patch adds the new firmware files required by Rev B cards.
    Staging: sxg: fix build warnings in downloadB firmware files
    Staging: sxg: remove firmware files from sgx_ethtool.c
    * Add new firmware and remove all firmware file.
    * Add a switch to load either debug or free firmware.
    Staging: slicoss: add binary firmware to firmware directory
    Adds the firmware to the firmware directory in ihex format so it can be
    installed when doing make firmware_install.
    Also update the firmware location in the driver code so it can locate
    This should conclude the move to request_firmware().
    Staging: SLICOSS: remove the static firmware header files
    Remove the static headers with the firmware code, they are no longer needed.
    Staging: slicoss: use request_firmware
    This patch uses request_firmware() to download the firmware to the card.
    [SCSI] qlogicpti: use request_firmware
    [SCSI] advansys: use request_firmware
    [SCSI] qla1280: use request_firmware
    firmware initialization.  The original codes use of a theoretical
    of the firmware's own 'resource' (exchange IOCBs) capabilities.
    overly-pessimistic with regards to latencies in the firmware
    Interface allows for the update of onboard EDC firmware
    code and firmware versions in the scsi_qla_host_t structure.  Now
    [SCSI] qla2xxx: Always (re)read firmware version/capabilities information.
    With recent ISPs loading firmware from flash, a flash-update to
    the firmware-image region with a follow-on reset will reload the
    Original caching of data only made sense when firmware was bound
    [SCSI] qla2xxx: Correct over-allocation of firmware-dump buffer.
    firmware adds a known pattern and flags the driver that it should check for
    drivers to IO ports and memory regions claimed by ACPI firmware.
    type when the firmware says it's 80 conductor one, the cable detection should
    accurate firmware information on whether only 32-bit kernels are
    PDC_INVALID_ARG return as the firmware manual instructs, by assuming
      V4L/DVB (11296): cx23885: bugfix error message if firmware is not found
    V4L/DVB (11296): cx23885: bugfix error message if firmware is not found
    If the firmware failed to be found the error message indicated
    V4L/DVB (11226): avoid warnings for request_ihex_firmware on dabusb and vicam
    V4L/DVB (11138): get_dvb_firmware: add support for downloading the cx2584x firmware for pvrusb2
    V4L/DVB (11137): get_dvb_firmware: add cx23885 firmwares
    V4L/DVB (11136): get_dvb_firmware: Add download code for cx18 firmwares
    V4L/DVB (11108): get_dvb_firmware: Add option to download firmware for cx231xx
    H.264 video and stereo AAC audio. Newer firmwares accept also AC3
    the firmware sits on a flash chip.
    V4L/DVB (10764): cx18: Disable AC3 controls as the firmware doesn't support AC3
    stored the HW/PCB version and the software release of the firmware.
    V4L/DVB (10512): tda1004x: Fix eeprom firmware load on boards with 16MHz Xtal
    slow down breaks the eeprom firmware load. So, use normal speed for
    with firmware version 29.
    V4L/DVB (10443): cx18: Use correct line counts per field in firmware API call
    The driver was incorrectly setting 0 line counts in a firmware
    V4L/DVB (10435): cx18: Normalize APU after second APU firmware load
    Normalize the APU state before the second firmware load so that audio
    does not work yet due to firmware or cx18 driver issues.  This change affects
    firmware load was missed in earlier PLL parameter changes.  This one really
    smc91c92_cs: use request_firmware
    Added osi_load_firmware() instead of copying same thing twice
    3C359: use request_firmware
    yam: use request_firmware
    trivial: Fix misspelling of firmware
    Fix misspelling of firmware.
    ACPI backlight control w/o _BQC support is kinda firmware bug.
    hardware / firmware interface definitions for Atheros' AR9170 based devices.
    passive trip point if the firmware doesn't provide one. The assumption
    microblaze_v8: Open firmware files
      RDMA/cxgb3: Enforce required firmware
    ACPICA: Conditionally compile acpi_set_firmware_waking_vector64
    This seems to only occur after an FPGA or firmware upgrade.
    RDMA/cxgb3: Enforce required firmware
    The cxgb3 NIC driver can handle more firmware versions than iw_cxgb3,
    will load with firmware versions that iw_cxgb3 can't handle.  The FW
    iw_cxgb3.  Thus if the major number of the running firmware does not
    myri10ge: update firmware headers to 1.4.41
    Update myri10ge firmware headers to firmware version 1.4.41.
    of this by just writing sane firmware for the modem.
    development board with one MCP55, Coreboot firmware, no ACPI.
    PCI hotplug: fix wrong assumption in acpi_get_hp_hw_control_from_firmware
    Current acpi_get_hp_hw_control_from_firmware() has a assumption that
    acpi_get_hp_hw_control_from_firmware() might cause endless loop. We
    PCI hotplug: fix wrong assumption in acpi_get_hp_params_from_firmware
    Current acpi_get_hp_params_from_firmware() has a assumption that
    acpi_get_hp_params_from_firmware() might cause endless loop. We must
    Current firmware revision 5.60 still behaves the same,
    netxen: fix firmware download warnings
    Fix following warnings, by using integer firmware types.
    drivers/net/netxen/netxen_nic_hw.c: In function 'netxen_load_firmware':
    supported by all firmwares. However we have an alternative: hibernation.
    orinoco: firmware: consistently compile out fw cache support if not requested
    This patch enables the load balancing capability of firmware
    from specific locations and fails with firmware size changes.
    concerning the logging of firmware handles.
    firmware blobs externally.
    Commit 47a8b0cc (Enable PCIe AER only after checking firmware
    - add data direction in req_msg because new firmware version
    The interrupt routine is good for normal cases. However, if the firmware
    There's no way for us to express to firmware that we want a
    Use minimum value for max vport during firmware initialization in LOOP
    causes firmware initialization failure.
    echo "/lib/firmware"
    iwlwifi: update 5150 API version to support new firmware
    qlge: Add support for lost firmware events.
    When the firmware is issuing events to the driver the events
    firmware will build and special event that captures those that
    qlge: Save status from firmware crash (system err).
    qlge: Improve handling for firmware init failure.
    MPI processor reset if the firmware failed to initialize.
    qlge: Clean up event handler for firmware init.
    qlge: Add worker-handler for firmware events.
    qlge: Add firmware support for insert/remove SFP.
    netxen: firmware download improvements
    o prefer cut-through firmware (doesn't require on-card memory).
    o load flashed firmware if newer.
    Support larger dma mask if firmware indicates capability
    This device has more firmware support for link management, setting
    qlge: Add support for firmware mailbox commands.
    typhoon: repair firmware loading
    The conversion to avoid using pci_alloc_consistent() broke the firmware
    usage of the firmware image. Go back to loading a page at a time.
    Also, since the user can now give us utter garbage for firmware, do a
    indicates a bad firmware checksum.  If so, prepare to reflash rather
    Newer i2400m firmwares (>= v1.4) extend the data RX protocol so that
    variable 'idle_mode_disabled' when the firmware is a newer version
    The method for setting the idle mode timeout in the older firmwares is
    wimax/i2400m: firmware_check() encodes the firmware version in i2400m->fw_version
    Upcoming modifications will need to test for the running firmware
    implement backward compatibility with older firmware versions.
    Modify i2400m_firmware_check() to encode in i2400m->fw_version the
    major and minor version numbers of the firmware interface.
    longer supported (nor available, as it is a preproduction firmware),
    Add support for firmware interface v9.2.x (current is 9.1.x). Firmware
    to the driver will start pressing those switches when the firmware
    wimax/i2400m: add the ability to fallback to other firmware files if the default is not there
    In order to support backwards compatibility with older firmwares when
    can declare a list of firmware files they can work with (in general
    these will be each a different version). The firmware loader will try
    Thus, if a user doesn't have the latest and greatest firmware that a
    the firmware from a previous release.
    terminated array firmware file names (and renamed to bus_fw_names) and
    firmware being currently used. All code that needs to print the
    firmware file name uses i2400m->fw_name instead of the old
    The code in i2400m_dev_bootstrap() that loads the firmware is changed
    with an iterator over the firmware file name list that tries to load
    request_firmware() (and thus stopping the iteration).
    reflect which firmwares they support.
    typhoon: Add missing firmware copy.
    typhoon: Need non-vmalloc memory to DMA firmware to the card.
    request_firmware() gives vmalloc'd memory, which is not suitable
    Use a kmalloc()'d copy of the firmware for this DMA operation.
    indicate a hardware failure rather than a firmware error.
    orinoco: prevent accessing memory outside the firmware image
    orinoco: validate firmware header
    Check the Agere firmware headers for validity before attempting to
    unwanted latency for every data packet or command sent to the firmware.
    The fix: check firmware capabilities returned by GET_HW_SPEC command.
    typhoon: Use request_firmware()
    tehuti: Use request_firmware()
    tg3: Add DASH firmware version reporting
    This patch adds code to report the DASH firmware version.
    tg3: Refactor firmware version routines
    This patch reorganizes the firmware version routines in preparation for
    qlge: Move firmware event handler.
    This is not a logical change but rather a move of the inbound firmware event
    qlge: Clean up firmware reset path.
    qlge: Add defines for firmware support.
      PCI: Enable PCIe AER only after checking firmware support
    /sys/firmware/acpi/tables/dynamic/.
    That's because the controller firmware fills different serial number in
    be done in response to firmware events as well as during initialization.
    netxen: firmware download support
    PCI: Enable PCIe AER only after checking firmware support
    any root or switch port without first checking to see if firmware will grant
    downstream switch ports after the check for firmware support (aer_osc_setup)
    old firmware. New firmware (4.0.0+) abstracts this.
      wimax/i2400m: driver loads firmware v1.4 instead of v1.3
    The new firmware release exports further RTC calls. This
    which firmware expresses using a property named "ibm,pe-total-#msi".
    For old firmwares which don't have the property, we assume there are
      fujitsu-laptop: Use RFKILL support bitmask from firmware
    fujitsu-laptop: Use RFKILL support bitmask from firmware
    It turns out that the firmware has a bitmask which indicates what rfkill-related
    firmware does not give us status updates for that particular bit.
    wimax/i2400m: driver loads firmware v1.4 instead of v1.3
    of the i2400m firmware instead of v1.3. The v1.4 version of the
    firmware has been submitted to David Woodhouse for inclusion in the
    linux-firmware tree and it is already available at
    software and firmware has a few issues that will make it difficult to
    the 1.4 firmware) has intermitent issues with the 1.3 firmware.
    deployed and tested with the codebase in 2.6.29-rc, the 1.4 firmware
    Alternatively, a user could always force feed a 1.4 firmware into a
    $ cd /lib/firmware
       firmware has recovered from the PCI PM reset.
    bug in openfirmware workaround") breaks model comparison on OLPC; the value
    designs do this in firmware/hardware, so it's better not to have it in
    mac80211. It's a lot better to do this in firmware/hardware, or if
    orinoco: Move firmware handling into a separate file
      bnx2: Update 5709 firmware.
      bnx2: Update 5706/5708 firmware.
    bnx2: Update 5709 firmware.
    New firmware fixes a data corruption issue when receiving and
    bnx2: Update 5706/5708 firmware.
    New firmware fixes a data corruption issue when receiving and
    (rev 41 or earlier). This is taken care of during firmware init.
     drivers/firmware/iscsi_ibft.c: In function ‘ibft_init’:
     drivers/firmware/iscsi_ibft.c:942: warning: format ‘%lx’ expects type ‘long unsigned int’, but argument 2 has type ‘phys_addr_t’
    wouldn't boot. The AmigaOne's U-boot firmware seems to have a problem
    The AmigaOne uses U-boot as firmware, which doesn't support a flattened
    We need to increment i in the loop that queries what interrupts firmware
    fore200: fix oops on failed firmware load
    Fore 200 ATM driver fails to handle request_firmware failures and oopses
    when no firmware file was found. Fix it by checking for the right return
    Correct response-queue-0 processing by instructing the firmware
    enic: Add api for link down count and to get firmware notification status.
    Return notify intr credits after notify intr from firmware.  This is
    rt2x00: Validate firmware in driver
    The get_firmware_crc() callback function isn't flexible
    enough when dealing with multiple firmware versions.
    It might in some cases be possible that the firmware
    Create the check_firmware() callback function where the driver
    has complete freedom in how to validate the firmware.
    Tracking down the firmware loading problem led to this commit.
    The driver can now load firmware, but is not fully functional.
    also adds a version check for a newer mgmt unit firmware.
    Simple RTC driver for the MSP430 firmware on the DM355 EVM board.  Other
    current firmware.
    Early versions of the SFX7101 firmware could complete link training in
    be unnecessary with production firmware.  Therefore remove it.
    Enable a firmware option that appears to be necessary for reliable
      ieee1394: sbp2: don't assume zero model_id or firmware_revision if there is none
    firmwares (3.4.216 and older) running on older (NX2031) chip,
    b43: Automatically probe for opensource firmware
    First probe for proprietary firmware and then probe for opensource firmware.
    2) If opensource firmware is available, but no proprietary (Distros can only ship open fw)
    libertas: fix CF firmware loading for some cards
    interprets non-zero return values from firmware load functions as an
    error, this sometimes caused spurious firmware load failures.
    rt2x00: Restrict firmware file lengths
    Add extra security to the drivers for firmware loading,
    check the firmware file length before uploading it to
    the hardware. Incorrect lengths might indicate a firmware
    otherwise incorrect firmware.
    Drivers without firmware can also have custom regulatory maps
    notified about killswitch state changes. The firmware loading is still
    Sadly, we have to call usb_reset_device before we can upload the firmware on 3887.
    firmware is loaded). The firmware loading is still done in iwl3945_up.
    This patch adds support to upload pre-calculated calibration data to the firmware.
    Old firmwares had no problems processing frames which filled eighth of the memory window.
    However we have to be a bit more careful with fat frames when we talk to new firmwares.
    Fix misleading comment in lbs_setup_firmware.
    If driver/firmware/hardware does not support CCMP for management
    p54: prevent upload of wrong firmwares
    This patch will prevent anyone to upload a firmware which was not designed for his device.
    There is no easy way to detect if a firmware is for PCI or for USB (1st Gen),
    This patch introduce new shiny named labels for our 8 (4 - on old firmware) queues.
    mini) don't have firmware_version and model_id, hence none of the iPod
    the firmware that early.
    The stick works with both, the old and new firmwares:
    ieee1394: sbp2: don't assume zero model_id or firmware_revision if there is none
    or firmware_revision.
    model_id.  It only changes how model_id and firmware_revision are logged
    firmware level.
      [SCSI] qla2xxx: Modify firmware-load order precedence for ISP81XX parts.
    if the firmware allows the OS to claim control via the _OSC method so
    _OSC method or the firmware refusing to hand off control) then we can
    solos: Clean up firmware loading code
    We no longer try to load firmware while the ATM is up and running.
    Simon has patches which migrate us to request_firmware_nowait(), for
    solos: FPGA and firmware update support.
    [SCSI] qla2xxx: Modify firmware-load order precedence for ISP81XX parts.
    firmware image within a segment of flash, driver would fallback
    to loading this firmware if the request-firmware interface failed
    ship with a suggested-to-be-used firmware image within flash
    firmware load fails, the driver will then fallback to loading
    firmware via the request-firmware interface (ql8100_fw.bin).
    the firmware should hopefully send us notification of other
    In theory, the firmware acks the received a data frame, before signaling the driver to free it again.
    If we let the firmware do the data encryption, we have to remove the ICV and
    all memory allocations where page alignment is required by firmware.
    implemented using standard ACPI hotplug - nor does the firmware provide the
    tg3: Fix firmware loading
    This patch modifies how the tg3 driver handles device firmware.
    the same name.  Specifically, the patch moves the request_firmware call
    into a separate tg3_request_firmware() function and calls that function
    request_firmware calls.  The original firmware patch unnecessarily
    requested TSO firmware for devices that did not need it.  This patch
    reduces the set of devices making TSO firmware patches to approximately
    Finally, the patch reduces the effects of a request_firmware() failure.
    For those devices that are requesting TSO firmware, the driver will turn
    off the TSO capability.  If TSO firmware becomes available at a later
    Data structures that come over the wire from the WLAN firmware must be packed.
    this is what firmware actually presents.
    firmware changes to match PAPR.
    Handle some HKEY events that are actually firmware alarms.  For
    from the ACPI firmware.  It was getting too long and deep.
    Store in firmware NVRAM the radio state on machine shutdown for WWAN and
    Instruct the firmware to not enable the radios when resuming.  This
    firmware (unlike the real one).  They also don't issue deprecated proc
    Whoops.  It breaks firmware uploading.
    netxen: hold tx lock while sending firmware commands
    Some firmware commands like mac address addition/deletion are sent
    netxen: firmware init fix
    This cuts the firmware init time by 40%.
    netxen: fix endianness in firmware commands
    o Set restricted (little endian) data types in firmware command
    ti_usb_3410_5052: add Multi-Tech firmware
    Add the Multi-Tech cellular modem firmware to the TI USB serial driver.
    This firmware was extracted from:
    Firmware licence: "all firmware components are redistributable in binary
    ti_usb_3410_5052: support alternate firmware
    alternate firmware for alternate vendor/product IDs.
    All LM87 firmwares need a explicit termination "packet",
       This is actually only necessary for some obsolete p54usb firmwares.
    Replace cpumask_t with cpumask_var_t in drivers/firmware/dcdbas.c.
      [SCSI] qla2xxx: Correct MQ-chain information retrieval during a firmware dump.
      [SCSI] qla2xxx: Collapse EFT/FCE copy procedures during a firmware dump.
    This driver makes use of the dcdbas interface to the Dell firmware to
    The dcdbas code allows calls to be made into the firmware on Dell systems.
      i2400m/SDIO: firmware upload backend
      i2400m/USB: firmware upload backend
      i2400m: firmware loading and bootrom initialization
    [SCSI] qla2xxx: Correct MQ-chain information retrieval during a firmware dump.
    [SCSI] qla2xxx: Collapse EFT/FCE copy procedures during a firmware dump.
    Software should not touch this region of flash, as the firmware
    > in our tests are manifesting in firmware detected overruns.  Here's
    firmware: convert e100 driver to request_firmware()
      HOSTCC  firmware/ihex2fw
    /home/rafael/src/linux-2.6/firmware/ihex2fw.c:268: fatal error: opening dependency file firmware/.ihex2fw.d: Read-only file system
    make[3]: *** [firmware/ihex2fw] Error 1
    The issue turns out to be that we when we install firmware pick
    up the list of firmware blobs from firmware/Makefile.
    1) Move the list of firmware blobs to a separate file
    As I seriously beleive that the list of firmware blobs should be
      trivial: Fix misspelling of "firmware" in docs for ncr53c8xx/sym53c8xx
      trivial: Fix misspelling of "firmware" in powerpc Makefile
      trivial: Fix misspelling of "firmware" in usb.c
      trivial: Fix misspelling of "firmware" in qla1280.c
      trivial: Fix misspelling of "firmware" in a100u2w.c
      trivial: Fix misspelling of "firmware" in megaraid.c
      trivial: Fix misspelling of "firmware" in ql4_mbx.c
      trivial: Fix misspelling of "firmware" in acpi_memhotplug.c
      trivial: Fix misspelling of "firmware" in ipw2100.c
      trivial: Fix misspelling of "firmware" in atmel.c
      trivial: Fix misspelled firmware in Kconfig
    That's especially true if it turns out that any firmware ends up putting
    _OSC for it because firmware may not reject control of any feature it
    i2400m/SDIO: firmware upload backend
    able to load firmware to the SDIO device.
    i2400m/USB: firmware upload backend
    able to load firmware to the USB device.
    i2400m: firmware loading and bootrom initialization
    Implements the firmware loader (using the bus-specific driver's
    firmware file to the device.
    Coming-soon versions of the firmware have this issue solved.
     - boot / firmware upload protocol
    (emi26: use request_firmware()):
    emi26 - firmware loader 1-1:1.0: emi26_probe start
    usb 1-1: firmware: requesting emi26/loader.fw
    usb 1-1: firmware: requesting emi26/bitstream.fw
    usb 1-1: firmware: requesting emi26/firmware.fw
    last sysfs file: /sys/devices/pci0000:00/0000:00:1d.0/usb1/1-1/firmware/1-1/loading
    After the last "package" of firmware data is sent to the device, we dereference
    make firmware/dsp56k/bootstrap.asm buildable on a56
    Make firmware/dsp56k/bootstrap.asm buildable on a56, the free Motorola
    drivers/firmware/dmi_scan.c:475: No description found for parameter 'str'
    drivers/firmware/dmi_scan.c:592: No description found for parameter 'f'
    drivers/firmware/dmi_scan.c:592: No description found for parameter 'str'
    Staging: slicoss: use request_firmware
    This should make the driver use request_firmware() instead of a static
    firmware.
    trivial: Fix misspelling of "firmware" in docs for ncr53c8xx/sym53c8xx
    Fix misspelling of "firmware" in docs for ncr53c8xx/sym53c8xx
    It's spelled "firmware".
    trivial: Fix misspelling of "firmware" in powerpc Makefile
    Fix misspelling of "firmware" in powerpc Makefile
    It's spelled "firmware".
    trivial: Fix misspelling of "firmware" in usb.c
    Fix misspelling of "firmware" in usb.c
    It's spelled "firmware".
    trivial: Fix misspelling of "firmware" in qla1280.c
    Fix misspelling of "firmware" in qla1280.c
    It's spelled "firmware".
    trivial: Fix misspelling of "firmware" in a100u2w.c
    Fix misspelling of "firmware" in a100u2w.c
    It's spelled "firmware".
    trivial: Fix misspelling of "firmware" in megaraid.c
    Fix misspelling of "firmware" in megaraid.c
    Fixed "firmware", "ownership" and grammar in the same comment.
    trivial: Fix misspelling of "firmware" in ql4_mbx.c
    Fix misspelling of "firmware" in ql4_mbx.c
    It's spelled "firmware".
    trivial: Fix misspelling of "firmware" in acpi_memhotplug.c
    Fix misspelling of "firmware" in acpi_memhotplug.c
    It's spelled "firmware".
    trivial: Fix misspelling of "firmware" in ipw2100.c
    Fix misspelling of "firmware" in ipw2100.c
    It's spelled "firmware".
    trivial: Fix misspelling of "firmware" in atmel.c
    Fix misspelling of "firmware" in atmel.c
    It's spelled "firmware".
    trivial: Fix misspelled firmware in Kconfig
    Fix misspelled firmware in Kconfig
    It's spelled "firmware".
    acenic: Missed delete of acenic_firmware.h
    When I applied the firmware conversion I made a mistake
    which caused the acenic_firmware.h deletion to not happen.
    starfire: use request_firmware()
    firmware: convert tg3 driver to request_firmware()
            u8 firmware_major
            u8 firmware_minor
            u8 firmware_fix
            data... (in __be32 words, which is native for the firmware)
    firmware: convert acenic driver to request_firmware()
    We store the firmware in its native big-endian form now, so the loop in
    We can forget the BSS,SBSS sections of the firmware, since we were
    It is already known that buggy firmwares exist which report a bogus
    otherwise the firmware authors would have noticed their mistake.
    Basic MFD framework for the MSP430 microcontroller firmware used
         * Announces firmware revision
    line.  This allows us to work-around broken Personal Server firmware.
    set the VDCLK and AIMCLK PLLs to sane values before the APU and CPU firmware
    xc2028 0-0061: Device is Xceive 3028 version 1.0, firmware version 2.7
    V4L/DVB (9895): cx18: Refine the firmware load and firmware startup process
    Refine the firmware load and firmware startup process.  Significant changes
    are to ensure the SCB and IPC area are correct before starting up the firmware,
    and letting the CPU firmware start up the APU firmware for us.
    Removed magic number that referred to firmware limit on the number of
    MDLs the firmware can maintain for any stream at any one time.
    V4L/DVB (9804): cx18: Avoid making firmware API calls with the queue lock held
    cx18: Avoid making firmware API calls with the queue lock held.  The source
    the firmware for CPU_DE_SET_MDL while holding the queue lock, so we can get
    q_busy to hold buffers the firmware has for use.  q_free holds truly unused
    buffers in a pool.  New buffers are given to the firmware as soon as the
    firmware returns one, if there are any to give to the firmware.
    Since firmware load happens on 1 or 2 seconds on most devices, this is not a pain.
    Since the firmware load is now fast on most boards, better to keep the tuner
    No one probably cares that the firmware took forever to ack our command, as
    they always seem to succeed whether or not the firmware acks it in a reasonable
    V4L/DVB (9599): cx18: Fix unitialized variable problem upon APU firmware file read failure
    If APU firmware file read failed, the jump vector to the APU was undefined and
    V4L/DVB (9597): cx18: Minor fixes to APU firmware load process
    can know when it is not safe to send MDLs to the firmware.
    interface, as it served no purpose (only the firmware reads the
    firmware on that device starts up strangely; it sends no data in
    the firmware/hardware can process the pdu. This patch allows
    The SFT9001 firmware implements cable diagnostics; run those and
        pc: d000000000064a24: .ehea_update_firmware_handles+0x84/0x47c [ehea]
    is, only that it is passed to firmware and that the first error
    myri10ge: update firmware headers to 1.4.37
    Update myri10ge firmware headers to 1.4.37:
    errata related to prefetch should be sorted out by firmware by
    the kernel however just in case oooold firmwares don't do it.
    cleared by the system firmware when rebooting the partition.
    latency. Some hardware have support for this in firmware, but some
    Power save now only works with devices which handle power save in firmware.
    In case the firmware has support for this, drivers can disable this feature
    This fixes some locking w.r.t. the lower MAC (firmware).
    if we want to free a frame right after it was send to the firmware,
    This driver transfers firmware. It may just as well set the correct
    a few devices have buggy firmware that crashes when it receives this
    phone to include a more recent firmware revision.
    the lower 32 bits of the _SUN returned by firmware.
    (Respect "const" qualifier of firmware->data.)
    the bulk pipe faster than the firmware was injecting information, which would
    Due to miscommunication, P/N was mistaken as firmware revision
    > [  113.920933] Modules linked in: af_packet irnet ppp_generic slhc ircomm_tty ircomm binfmt_misc loop dm_mirror dm_region_hash dm_log dm_round_robin dm_multipath dm_mod alim15x3 ide_core nvram toshiba cryptomgr aead crypto_blkcipher michael_mic crypto_algapi orinoco_cs orinoco hermes_dld hermes pcmcia firmware_class snd_ali5451 snd_ac97_codec ac97_bus snd_seq_dummy snd_seq_oss snd_seq_midi_event snd_seq snd_seq_device smsc_ircc2 snd_pcm_oss snd_pcm rtc_cmos irda snd_timer snd_mixer_oss rtc_core snd crc_ccitt yenta_socket rtc_lib rsrc_nonstatic i2c_ali1535 pcmcia_core pcspkr psmouse soundcore i2c_core evdev sr_mod snd_page_alloc alim1535_wdt cdrom fan sg video output toshiba_acpi rfkill thermal backlight ali_agp processor ac button input_polldev battery agpgart ohci_hcd usbcore reiserfs pata_ali libata sd_mod scsi_mod [last unloaded: scsi_wait_scan]
    This is needed for recovery in case a PHY firmware upgrade is aborted.
    This patch fixes sporadic firmware restarts when scanning while associated.
    The firmware will quietly cancel a scan (while associated) if the dwell time
    be hit and the driver causes a firmware restart which results in
    than the actual beacon interval to work around the firmware issue. Furthermore
            arch/arm/mach-netx/xc.c: In function ‘xc_request_firmware’:
    iwlwifi: rely on API version read from firmware
    This adds the infrastructure to support older firmware APIs.
    load the most recent firmware and progressively try lower versions.
    The API version is also read from the firmware self and stored as part
    of the iwl_priv structure. Only firmware that is supported by driver will
    be loaded. The version number read from firmware is compared
    This fixes the checksum calculation for lm87 firmwares
    have to do the bookkeeping of p54's firmware state for everything.
    Those firmwares are probably capable of reprogramming the device's eeprom.
    power save buffering mechanism in firmware completely.
      ide: add SAMSUNG SP0822N with firmware WA100-10 to ivb_list[]
    ide: add SAMSUNG SP0822N with firmware WA100-10 to ivb_list[]
      V4L/DVB (9732): sms1xxx: use new firmware for Hauppauge WinTV MiniStick
      V4L/DVB (9639): Make dib0700 remote control support work with firmware v1.20
      V4L/DVB (9635): v4l: s2255drv fix firmware test on big-endian
    Some recent Seagate harddrives have firmware bug which causes FLUSH
    firmware.  Implement ATA_HORKAGE_FIRMWARE_UPDATE and blacklist these
    ALSA: pcxhr - change firmware filenames
    - compatibility issue : change firmware filenames
      with new firmware > 1.0.17. Keep the old firmware files
      and add new firmware files with different names
    interface firmware, so the Vendor and Product names are generalized.
    on how the device firmware was suppose to handle it. Almost every device
    original Digianswer devices and dongles with an early CSR firmware.
    CSR reported that they fixed this for version 12 firmware. The last
    official release of version 11 firmware is build ID 115. The first
    1. Fix the fan_suspend handling of the T43 firmware quirk. If it is
    Include firmware and protocol images in the kernel image if requested
    Make firmware caching on startup optional, and make it default.
    cache firmware in the suspend pm_notifier. This configuration saves
    driver is configured to use a different firmware.
    Retrieval of external firmware has been resolved, and should work with
    ready when firmware has not been loaded.
    orinoco: Cache Symbol firmware
    firmware.
    iwlwifi: 4965 define firmware file name once
    'iwlwifi: define firmware file name once'
    p54pci: cache firmware for suspend/resume
    Johannes pointed out that the driver has cache the firmware for
    This enables the custom firmware regulatory solution option
    cfg80211: add support for custom firmware regulatory solutions
    us if their firmware can handle regulatory considerations *and*
    Add another model ID of a broken firmware to prevent early I/O errors
    Add another model ID of a broken firmware to prevent early I/O errors
    ALSA: pcxhr - add support for pcxhr stereo sound cards (firmware support)
    - Add support for pcxhr stereo cards and their firmware
    V4L/DVB (9732): sms1xxx: use new firmware for Hauppauge WinTV MiniStick
    New firmware image brings enhanced tuning performance.
    myri10ge: update firmware headers
    Update myri10ge firmware headers.
    enic: driver/firmware API updates
    Add driver/firmware compatibility check.
    Update firmware notify cmd to honor notify area size.
    be powered unless it is running management firmware.  For backwards
    compatibility, management firmware will still set the ENABLE_ASF bit.
    This patch extracts the bootcode firmware version from the alternate
    without blocking PHY register writes, the driver/firmware synchronization
    in the hardware (e.g. firmware is loaded). We already
    Please note that only firmware 5.110.22.p20 and above supports this feature.
    This patch only implements the driver/firmware interface, not the
    executed every time by device firmware and that causes harm.
    have been lost because the firmware crashed/reset.
    the case where the firmware was reset the driver will probably
    uses an NMI, (old-style-) ES7000 uses 'MIP' (a firmware driven in-memory
    V4L/DVB (9639): Make dib0700 remote control support work with firmware v1.20
    The format for reading the IR controller changed in firmware 1.20.  It now
    be using older firmware.
    required information on how the version 1.20 firmware works.
    V4L/DVB (9635): v4l: s2255drv fix firmware test on big-endian
      [SCSI] qla2xxx: Do not honour max_vports from firmware for 2G ISPs and below.
    The doorbell writes may be seen out of order by the firmware if they
    Was wondering about this code since supposedly the firmware will
    p54: introduce new names for device firmwares
    Johannes thought it would have been a good idea to change the firmware names.
      ALSA: hdsp: check for iobox and upload firmware during ioctl
      ALSA: HDSP: check for io box before uploading firmware
      kbuild: Fixup deb-pkg target to generate separate firmware deb
    kbuild: Fixup deb-pkg target to generate separate firmware deb
    firmware out to a linux-firmware-image package and adds an
    (unversioned) Suggests to the linux package for this firmware.
    ALSA: hdsp: check for iobox and upload firmware during ioctl
    asks the user to upload the firmware.
    tries to upload the firmware in the case, that it is not present, e.g.
    ALSA: HDSP: check for io box before uploading firmware
    currently the hdsp driver tries to upload the firmware, even if the
    before trying to upload the firmware.
    thus instead of messages complaining about the fifo status and firmware
    allowed to have an empty signature and /sys/firmware/acpi/tables uses the
    cciss: fix regression firmware not displayed in procfs
    This patch fixes a regression where the controller firmware version is not
    request to the firmware to abort a command failed.  By doing so,
    [SCSI] qla2xxx: Do not honour max_vports from firmware for 2G ISPs and below.
    communicate to firmware the number of page-ins it is performing when
    the firmware might be seriously busted.
    set-indicator(gqirm) call, and apparently firmware currently ignores
    firmware versions use it.
    DASH firmware runs on the APE side of the chip, but it requires a few MAC
    When WOL is enabled and management firmware is disabled, incoming
    When management firmware is enabled, the hardware must be informed that
    frames.  Normally management firmware will configure the MAC correctly
    the APE memory space.  By doing so, the DASH firmware can assume
    Example resource allocation from Jonathan Corbet, who has firmware that
    and that had various PCI resources in it set up by firmware.
    that were allocated inside of it by firmware, and because it is not
    orinoco: cache downloadable firmware image in memory for use during resume
    If card is using downloadable firmware (like Agere 9.x), firmware has
    to be reloaded during resume. It is not possible to use request_firmware
    for that, because tasks are still frozen, so request_firmware will
    just timeout and fail. So cache firmware image in memory for later
    orinoco: reload firmware on resume
    On resume card state is likely lost so we have to reload firmware
    SPI firmwares.
    the device's firmware. As p54_assign_address always put them into same memory location.
    iwlwifi: define firmware file name once
    string repeated for definition of ucode firmware file and in preparation for
    multiple firmware files need to consolidate location for their definition.
    those that are not under hardware or firmware control.
      p54: fix misbehavings when firmware can't be found
      ehea: Detect 16GB hugepages for firmware restriction
    p54: fix misbehavings when firmware can't be found
    ehea: Detect 16GB hugepages for firmware restriction
    be registered with firmware using "memory regions". 16GB hugepages
    may not be part of a memory region due to firmware restrictions.
      MIPS: TXx9: Make firmware parameter passing more robust
    MIPS: TXx9: Make firmware parameter passing more robust
    prom_getenv(), as VxWorks doesn't pass firmware parameters in a0-a3 (in my
      orinoco: reduce stack usage in firmware download path
      uwb: i1480/GUWA100U: fix firmware download issues
      mlx4_core: Get ethernet MTU and default address from firmware
    Some firmware fail to properly configure P2P bridges, leaving them
    than the firmware does to host bridges while not setting
    just be bogus firmware.
    drivers are loaded on platforms with broken firmware that assigns
    If firmware assigns the name N to multiple slots, then:
    strongly recommended in PCI firmware specification, it should query
    ACPI: thinkpad-acpi: Remove firmware backlight delays for Intel ACPI IGD OpRegion
    Instruct the ThinkPad ACPI firmware to remove delays on the processing of
    that state (but this is extremely unlikely, no ThinkPad firmware was
    the firmware  are either "auto" or "level 7" depending on whether the
    orinoco: reduce stack usage in firmware download path
    orinoco_dl_firmware and symbol_dl_mage allocate large local
    entities, such as system firmware, which might also be programming the
    mlx4_core: Get ethernet MTU and default address from firmware
    Get maximum ethernet MTU and default MAC address from the firmware
    open firmware.  Replace a left over is even (% 2) check with a check
      parisc: add pdc_coproc_cfg_unlocked and set_firmware_width_unlocked
    Removed duplicated #include <linux/firmware.h> in
      Staging: add me4000 firmware files
    someone more familiar with openfirmware-based platforms than I am
    The lm87 driver normally assumes that firmware configured the chip
    For it is EC firmware that decides when the EC
    firmware: use dev_printk when possible
    Make firmware entries match .gitignore entries.
    an ideal solution, because if any drivers want to upload firmware into
    after the driver's notifier used for uploading the firmware).
    drivers/firmware/iscsi_ibft.c: make 3 functions static
    Create /sys/firmware/sgi_uv sysfs entries for partition_id and coherence_id.
    unassigned by the firmware and tries to allocate resource for the
    of a hack we have in there that detects some Apple firmware unassigned
    to intuit that a bridge was left unassigned by the firmware, and thus
    on pSeries machines, or attempt to use partial firmware PCI setup.
    firmware to work with NAND chips.
    Freescale MC9S08QG8 (MCU) chip with the custom firmware
    bnx2i, when they rework their firmware according to netdev
    - cast firmware data to u8
      x86 setup: fix ghost entries under /sys/firmware/edd take 3
    This worked very well, however that was using his version of firmware.
    V4L/DVB (9055): tuner-xc2028: Do a better job selecting firmware type
    selection of the proper firmware type, by using a code to hint if the
    firmware to be loaded should be D2620 or D2633.
    firmware fixing the issue with the i2c that prevented the xc5000 from working.
    V4L/DVB (9039): Add support for new i2c API provided in firmware version 1.20
    (sending it as an i2c write request instead).  Version 1.20 of the firmware
    firmware fixing the issue as well as example i2c code utilizing the interface.
    (identical to?) a Terratec Cinergy HT USB XE, and for the firmware hints:
    DVB functionality tested OK with xine using the usual dib0700 firmware.
    It needs firmware for the tda10046 and analog sound needs saa7134-alsa.
    V4L/DVB (8968): replace xc3028 firmware filenames with defined default firmware names
    well on many older motherboards: mysterious I2C errors, firmware loading errors,
    V4L/DVB (8890): budget: Add callback to load firmware for the TDHD1 tuner
    Supply callback to load firmware for the TDHD1 tuner (using request_firmware).
    V4L/DVB (8752): s2255drv: firmware improvement patch
    Fix for reloading firmware when removing and reloading driver
    Handshaking for firmware loading and changing modes.
    Add TOSHIBA_RBTX4938_MPLEX_KEEP to keep MPLEX settings by firmware.
    * Select board by command-line option or firmware environment variable.
    firmware should pass NULL for fw_arg2.
    Staging: add me4000 firmware files
            move this to the request_firmware() interface
            - move firmware loading to request_firmware()
    current firmware does not support this feature.
      RDMA/nes: Fill in firmware version for ethtool
    parisc: add pdc_coproc_cfg_unlocked and set_firmware_width_unlocked
      x86, olpc: fix endian bug in openfirmware workaround
    some firmware (like PnP tables) more than we trust the hardware itself
    This is now possible with updated firmware.
    bnx2: Update 5706/5708 firmware.
    With this new firmware, the driver no longer has to modify the
    firmware provides no data in the event notification.
      V4L/DVB (8967): Use correct XC3028L firmware for AMD ATI TV Wonder 600
    Correct firmware type to MTS
    V4L/DVB (8967): Use correct XC3028L firmware for AMD ATI TV Wonder 600
    load the proper firmware to prevent the device from overheating.
    x86 setup: fix ghost entries under /sys/firmware/edd take 3
    firmware/transport residual-count mismatches.
    the SWFLAG bit for exclusive (to hardware and firmware) access to
    management firmware clears it after 100ms.
    RDMA/nes: Fill in firmware version for ethtool
    Fill in firmware version for ethtool_drvinfo.
    NVM and PHY accesses between the driver, firmware and hardware, remove the
    cause the firmware to prevent the driver getting the flag for all future
    qeth: use firmware MAC-address for layer2 hsi-devices
    Real HiperSocket devices in layer2 mode have a firmware-created
    firmware MAC-address for layer2 HiperSocket devices.
    NX3031 firmware now supports MSI-X interrupts on Quad GbE boards.
    serial ports. This is required for firmware diagnostics
    (ehea_update_firmware_handles() and ehea_update_bcmc_registrations())
    myri10ge: Rename DCA-related firmware counters
    Rename the cryptic "dca_capable" to "dca_capable_firmware"
    and "dca_enabled" to "dca_device_present" in the firmware
    sfc: Remove workaround for old firmware bug
    There was a bug in XAUI synchronisation in early 10Xpress firmware
    versions.  This is fixed in released firmware and we do not need to
    This avoids keeping those flags set and possibly miss configuring firmware.
    RXON. If we don't, the firmware will understand this as channel 11 above
    which is not possible due to regulatory constraints, leading to firmware
        update yet. The ucode has to be updated via 'firmware'.
    x86, olpc: fix endian bug in openfirmware workaround
      usb serial: ti_usb_3410_5052 obviously broken by firmware changes
    usb serial: ti_usb_3410_5052 obviously broken by firmware changes
    changes made to move the firmware loading to a separate function are
    broken (in ti_download_firmware(), status is set to -ENOMEM and never
    cassini: use request_firmware
    Tell the user/vendor he has a BIOS/firmware problem.
    automatically check with (or let linuxfirmwarekit do that):
    or on the Linuxfirmwarekit to tell vendors that they did something
        debugging and submiting on old firmware code to mailing
      - The linuxfirmwarekit (http://www.linuxfirmwarekit.org)
        tries to detect firmware bugs. It currently is doing that
    What do we need such a stupid linuxfirmwarekit for?
        firmwarekit on his most preferred machines. He chooses one without
    I double checked with the firmwarekit.
    For more info about the linuxfirmwarekit and why this is needed
    http://www.linuxfirmwarekit.org
    While severity matches with the firmwarekit, it might be tricky
    But in the linuxfirmwarekit this should be shown as a real
    hardware/firmware so don't transmit one.
    uwb: i1480/GUWA100U: fix firmware download issues
    IOGear firmware versions >= 1.4.12224 fail to be downloaded because of a
    This patch was tested on both i1480 and GUWA100U HWAs, with all firmware
    Some hardware/firmware combinations (most notably an IOGear HWA using the i1480
    firmware) kill the host controller after issuing a GET_MAC_PHY_INFO command.
    Add the driver for downloading the firmware to an Intel i1480 device.
    handle the reset command differently since after reset, the firmware is
    auto the default firmware settings are used.
    The command CMD_802_11_PA_CFG is only sent to older firmware, as Dan Williams
    noted the command was no longer supported in firmware V9+.
    The firmware can provide lots of useful statistics about noise floor,
    as one can see on the huge jump, it's very plausible that firmware does not report the
    p54: better firmware support
    firmwares for all devices up to atleast 2.13.3.0.
     * newer firmwares are more stable and reliable than the old ones.
    > {pts/1}% ls /sys/firmware/edd
      V4L/DVB (8843): tda10048_firmware_upload(): fix a memory leak
    p54usb: support LM87 firmwares
    This patch adds the necessary changes to support LM87 firmwares.
    p54: enhance firmware parser to reduce memory waste
    The firmware headers provides the right values for extra head-/tailroom
    V4L/DVB (8843): tda10048_firmware_upload(): fix a memory leak
    causes firmware error.  Note: iwlwifi supports HW with up to 3 RX
    require sending Full-ROXN command to the firmware. Full-RXON requires
    This allows updating PHY firmware for one interface without removing
      iwlwifi: fix 64bit platform firmware loading
    sysfs: document files in /sys/firmware/sgi_uv/
    Document files in /sys/firmware/sgi_uv/.
    error directory structure for the target in /sys/firmware/ibft does not
    iwlwifi: fix 64bit platform firmware loading
    This patch fixes loading firmware from memory above 32bit.
    don't diff generated firmware files
    With the new firmware infrastructure in 2.6.27, some files are generated and shouldn't be
    needless rebuild of the firmware/ihex2fw tool.
       behavior whatever the firmware programmed it to.
    The firmware supports 8 different queues and not only 4.
    The firmware wants a extra 1 byte padding for every curve point. But someone forgot to put
    with fixes for v9 and later firmware too.
    And while we're at it, grab min/max TX power from the firmware and use
    atmel: return ENOENT on request_firmware failure
    Return errors from request_firmware() (like other drivers that do
    firmware load on device open) and make up plausible codes for other
    firmware may be missing when the result of setting IFF_UP is ENOENT.
    v2: fix reversed check of atmel_wakeup_firmware() in probe_atmel_card()
    Includes basic plumbing to get the data into firmware, and retrieve it.
    orinoco: Use extended Agere scans available on 9.x series firmwares
    firmwares.
    orinoco: Invoke firmware download in main driver
    Firmware download is enabled for Agere in orinoco_cs. Symbol firmware
    Symbol based firmware is restricted to only download on spectrum_cs
    The firmware names are hardcoded for each firmware type.
    orinoco: Extend hermes_dld routines for Agere firmware
    Add checks to avoid overrunning the firmware image or PDA areas.
    orinoco: Make firmware download logic more generic
    firmware image
    orinoco: Move firmware download functionality into new module
    passed straight to the firmware.
    The libertas thin firmware only supports usb devices, but the usb functions have
    the "libertas" driver, it uses a different (thin) firmware, that makes it
    mac80211: allow no mac address until firmware load
    report their MAC address until the firmware is loaded. While the address is not
    libertas: add sysfs hooks to update boot2 and persistent firmware
    To use these features, copy the boot2 and firmware images to /lib/firmware and:
    echo <firmware_image_name> > /sys/class/net/ethX/lbs_flash_fw
    libertas: support boot commands to write persistent firmware and bootloader
    Add locking and non-locking versions of if_usb_prog_firmware to support
    programming firmware after and before driver bring-up respectively.  Add more
    suitable error codes for firmware programming process.  Add capability checks
    to help work around broken firmware that assigns the same name to multiple
    Instead, let's rename the slot on behalf of the user. If firmware
    to help work around broken firmware that assigns the same name to multiple
    Instead, let's rename the slot on behalf of the user. If firmware
      [SCSI] qla2xxx: Correct synchronization of software/firmware fcport states.
    If the firmware page size used for collaborative memory overcommit
    [SCSI] qla2xxx: Correct synchronization of software/firmware fcport states.
    capable device, both software and firmware do not perform an
    firmware performs an ADISC without a follow-on PRLI, leaving
    stale 'initiator-only' data in the firmware's port database.
    tg3: Fix firmware event timeouts
    link state reporting to UMP firmware") introduced code that waits for
    previous firmware events to be serviced before attempting to submit a
    This bug revealed that not all firmware versions service driver events
    though.  Since we do not know which versions of the firmware do and don't
    the DASH firmware will be lost.
    In certain cases when ASF or other management firmware is running, the
    Mark interrupt scheme in very old firmware incompatible. Interrupt mask
    For NX3031 mac addr should be read from firmware. mac addr in flash
    is still valid, but can be overridden by firmware if running in
    myri10ge: myri10ge_fw_name also overrides the rss firmware
    When myri10ge_fw_name is given, use it to override the rss firmware
    USB: ohci: make distrust_firmware a quirk
    USB: usb-storage: quirk around v1.11 firmware on Nikon D4
    usb-storage: quirk around v1.11 firmware on Nikon D40
    Just as in earlier firmware versions, we need to perform this
    have the same firmware problems historically.
    firmware/memmap: cleanup
    Various cleanup the drivers/firmware/memmap (after review by AKPM):
    isight_firmware: fix a leak and double kfree()
      V4L/DVB (8582): set mts_firmware for em2882 based Pinnacle Hybrid Pro
    setting is handled by firmware, driver needs to send request to
    For old chip revisions / firmware, driver still sets it directly.
    for old firmware/chip.
    For NX3031, the phy is managed by firmware, so driver should avoid
    firmware on the host and the driver, not communicating.
    myri10ge: update firmware headers
    Update myri10ge firmware headers.
    time and even better, makes use of the standard firmware (rather than
    V4L/DVB (8582): set mts_firmware for em2882 based Pinnacle Hybrid Pro
    Pinnacle Hybrid Pro (2304:0226) requires mts_firmware flag to have any
      Fix IHEX firmware generation/loading
    firmware was at 7.0 or greater, and this function also acquires the
    will NOT allow the open if the firmware isn't 7.0, so iw_cxgb3 can
    Fix IHEX firmware generation/loading
    Fix both the IHEX firmware generation (len field always null, and EOF
      firmware: silence __fw_modbuild and __fw_modinst 'Nothing to be done' messages
    drivers/net/wireless/rt2x00/rt73usb.c: In function 'rt73usb_load_firmware':
    firmware: silence __fw_modbuild and __fw_modinst 'Nothing to be done' messages
    Leave the __fw_install one though; when 'make firmware_install' does
    libertas: only enable rtap with mesh firmware
    Since only mesh-enabled firmware has the CMD_802_11_MONITOR_MODE on
    rt2x00: rt61pci needs another millisecond after firmware upload
    After the hardware has indicated the firmware upload has completed
    - Do more ident rewriting on RAID volumes to handle firmware provided
    - Report the firmware revision and device layout in RAID mode
    cxgb3: Allow 64KB firmware images.
    rt2x00: Large vendor requests for rt73usb firmware upload and beacons
    Switches rt73usb to use large vendor requests for firmware
    is useful for firmware uploads, beacon templates and keys, all
    Modules linked in: cpufreq_powersave cpufreq_ondemand cpufreq_userspace cpufreq_conservative ext3 jbd sd_mod pata_pcmcia libata scsi_mod pcmcia loop firmware_class pxafb cfbcopyarea cfbimgblt cfbfillrect pxa2xx_cs pxa2xx_core pcmcia_core snd_pxa2xx_ac97 snd_ac97_codec ac97_bus snd_pxa2xx_pcm snd_pcm_oss snd_mixer_oss snd_pcm snd_timer snd isp116x_hcd soundcore rtc_sa1100 snd_page_alloc pxa25x_udc usbcore rtc_ds1307 rtc_core
    Modules linked in: cpufreq_powersave cpufreq_ondemand cpufreq_userspace cpufreq_conservative ext3 jbd sd_mod pata_pcmcia libata scsi_mod pcmcia loop firmware_class pxafb cfbcopyarea cfbimgblt cfbfillrect pxa2xx_cs pxa2xx_core pcmcia_core snd_pxa2xx_ac97 snd_ac97_codec ac97_bus snd_pxa2xx_pcm snd_pcm_oss snd_mixer_oss snd_pcm snd_timer snd isp116x_hcd soundcore rtc_sa1100 snd_page_alloc pxa25x_udc usbcore rtc_ds1307 rtc_core
      [SCSI] qla2xxx: Issue proper ISP callbacks during stop-firmware.
    firmware: fix memmap printk format warnings
    Fix firmware/memmap printk format warnings:
      drivers/firmware/memmap.c:156: warning: format '%llx' expects type 'long long unsigned int', but argument 4 has type 'resource_size_t'
      drivers/firmware/memmap.c:161: warning: format '%llx' expects type 'long long unsigned int', but argument 4 has type 'resource_size_t'
    [SCSI] qla2xxx: Issue proper ISP callbacks during stop-firmware.
    callbacks during recovery, a stop-firmware failure could result
    [SCSI] qla2xxx: Verify the RISC is not in ROM code if firmware-load is disabled.
    firmware is in fact non-ROM code.  The non-ROM Get-ID mailbox
    The firmware group has suggested that FCE (Fibre Channel Event)
      firmware: create firmware binaries during 'make modules'.
    firmware: create firmware binaries during 'make modules'.
      powerpc/pseries: Utilities to set firmware page state
    Convert PCI err device from platform to open firmware of_dev to comply
    firmware: use memory_read_from_buffer()
    sx: push BKL down into the firmware ioctl handler
    Also fix the capability checking for firmware load.
    rio: push down the BKL into the firmware ioctl handler
    ip2: push BKL down for the firmware interface
        longer be ignored (boot firmware may not have enabled them).
    partitions.  The firmware will balance memory between the partitions
    powerpc/pseries: Utilities to set firmware page state
    Newer versions of firmware support page states, which are used by the
    flag in powerpc_firmware_features from the rtas ibm,get-system-parameters
     firmware_has_feature(FW_FEATURE_CMO)
    With some combinations of chips, firmware and drivers, such as the DEC
    firmware used for the initial console may not expect the state of the chip
    With some combinations of chips, firmware and drivers, such as the Zilog
    firmware used for the initial console may not expect the state of the chip
    firmware, as some registers it would have to examine are write-only.
    new firmware image).
    Add support for the following operations to mlx4 when device firmware
    V4L/DVB (8423): cx18: remove firmware size check
    Removed it, as this allows the user to load different firmware versions.
    The module needs an external firmware file.
    Change driver version to 4.0.0. Netxen firmwares as old as
    MAC addr, multicast filters, mtu are set through firmware commands
    in firmware v4.0.0+ because of virtualization of physical ports.
    Link status is also read from registers allocated by firmware for
    firmware commands for netxen firmware v4.0.0+.
    netxen: pci probe and firmware init changes
      for flashing firmware.
    Add ICM_ERROR firmware status code.  In mapping to errnos, -ENFILE
    Some firmware versions report a Local CA ACK Delay of 0.  In that
    Certain firmware versions sometimes cause spurious PATH_MIG events to
    {request,release}_firmware() dummies for the case of the actual
    and the firmware in some cases sets a really bad color palette. This
    this encoding set by the firmware, which happens on some SLOF
    change state (due to them being slaves of WLSW in firmware/hardware, but
    that reality not being always properly exported by the thinkpad firmware).
    On ThinkPads where the WLSW switch exists, the firmware or the hardware
    firmware interfaces, though... so the state thinkpad-acpi was reporting
    V4L/DVB (8312): sms1xxx: add firmware filenames to board properties for stellar and nova
    Assign the following firmware filenames:
    V4L/DVB (8311): sms1xxx: support device-specific firmware filenames on stellar usb1 sticks
    Add the capability to define device-specific firmware filenames for the SMS1010,
    with a mechanism to fall back to the generic firmware if the device-specific
    firmware is not present.
    V4L/DVB (8306): sms1xxx: log firmware download process by default
    smscoreapi.c: In function 'smscore_load_firmware_from_file':
    smsusb.c: In function 'smsusb1_load_firmware':
    V4L/DVB (8301): sms1xxx: add capability to define device-specific firmware filenames
    Add the capability to define device-specific firmware filenames for the SMS1150,
    with a mechanism to fall back to the generic firmware if the device-specific
    firmware is not present.
    V4L/DVB (8168): cx18: Upgrade to newer firmware & update cx18 documentation.
    firmware. Update the documentation where the firmware can be
    V4L/DVB (8165): cx18: fix v4l-cx23418-dig.fw firmware load.
    - reset the audio firmware (required for this board, harmless for the
    The cx18 can support transport streams with newer firmwares. Add a TS
    V4L/DVB (8098): xc5000: add module option to load firmware during driver attach
    The xc5000 firmware download process can be slow on certain devices.
    Add a module option, "init_fw" to perform the firmware download during
    xc5000_attach(), which would get the firmware download over with well
    bnx2: Update TPAT firmware
    /sys/firmware/edd/, no matter how many devices are actually present.
    Also fix unwanted rebuilds of the firmware/ihex2fw tool by including
    However, for PNPBIOS and ACPI devices, the OS uses firmware interfaces
    learns the correct order by using firmware interfaces that return the
    come from the firmware "possible resource settings" list.  Each entry
    instead of the list the firmware expects, which looks like this:
    In PNPBIOS and ACPI, we configure a device by giving firmware a
    as the "template" list we got from the firmware in the first
    ACPI: Enhance /sys/firmware/interrupts to allow enable/disable/clear from user-space
    Fix 'make clean' and .gitignore for firmware/ directory.
      ieee1394: sbp2: fix spindown for PL-3507 and TSB42AA9 firmwares
      firewire: fw-sbp2: fix spindown for PL-3507 and TSB42AA9 firmwares
    by the firmware in register dumps.
    be 12.  However, new ConnectX firmware can support a minimum
    To preserve firmware compatibility with released mlx4 drivers, the
    firmware will continue to return 12 as before for log_page_sz in
    process MADs of this class through the MAD_IFC firmware command.
    QUERY_DEV_CAP firmware command.  When modifying a QP to RTR, the max
    patch sets all QPs to the max value allowed as returned from firmware.
    Negotiate with boot code and ASF firmware to see if it can
    by firmware, the VLAN tag will be kept in the RX packet
    ack=1 means wait for firmware acknowledgement, and ack=0
    Jul 11 15:39:29 wangchen kernel: Modules linked in: ipip tunnel4 nfsd lockd nfs_acl auth_rpcgss sunrpc exportfs ipv6 snd_pcm_oss snd_mixer_oss snd_seq snd_seq_device af_packet binfmt_misc button battery ac loop dm_mod usbhid ff_memless pcmcia firmware_class ohci1394 8139too mii ieee1394 yenta_socket rsrc_nonstatic pcmcia_core ide_cd_mod cdrom snd_intel8x0 snd_ac97_codec ac97_bus snd_pcm i2c_i801 snd_timer snd i2c_core soundcore snd_page_alloc rng_core shpchp ehci_hcd uhci_hcd pci_hotplug intel_agp agpgart usbcore ext3 jbd ata_piix ahci libata dock edd fan thermal processor thermal_sys piix sd_mod scsi_mod ide_disk ide_core [last unloaded: freq_table]
    Fix accidental reference to tg3 firmware
    We're not updating the tg3 driver to use request_firmware() yet, but a
    reference to its firmware accidentally slipped in as part of commit
    c4667746 ("dabusb: use request_firmware()"). Remove it again.
    firmware: Correct dependency on CONFIG_EXTRA_FIRMWARE_DIR
    to update the manual dependency in firmware/Makefile, so it was
    Merge branch 'for-2.6.27' of git://git.infradead.org/users/dwmw2/firmware-2.6
    * 'for-2.6.27' of git://git.infradead.org/users/dwmw2/firmware-2.6: (64 commits)
      firmware: convert sb16_csp driver to use firmware loader exclusively
      dsp56k: use request_firmware
      edgeport-ti: use request_firmware()
      edgeport: use request_firmware()
      vicam: use request_firmware()
      dabusb: use request_firmware()
      cpia2: use request_firmware()
      ip2: use request_firmware()
      firmware: convert Ambassador ATM driver to request_firmware()
      whiteheat: use request_firmware()
      ti_usb_3410_5052: use request_firmware()
      emi62: use request_firmware()
      emi26: use request_firmware()
      keyspan_pda: use request_firmware()
      keyspan: use request_firmware()
      ttusb-budget: use request_firmware()
      kaweth: use request_firmware()
      smctr: use request_firmware()
      firmware: convert ymfpci driver to use firmware loader exclusively
      firmware: convert maestro3 driver to use firmware loader exclusively
    firmware: convert sb16_csp driver to use firmware loader exclusively
    dsp56k: use request_firmware
    edgeport-ti: use request_firmware()
    edgeport: use request_firmware()
    vicam: use request_firmware()
    HEX record format for this firmware -- because that gives us a simple
    dabusb: use request_firmware()
    cpia2: use request_firmware()
    Thanks for Jaswinder Singh for converting the firmware blob itself to ihex.
      pcmcia: allow for longer CIS firmware files
    rt2x00: Reset LED assoc status after firmware update
    must be reset after the firmware has been uploaded to the
    harmful in SMP systems where the firmware has already synchronized the
    firmware flaw.
    ieee1394: sbp2: fix spindown for PL-3507 and TSB42AA9 firmwares
    Reported by Tino Keitel:  PL-3507 with firmware from Prolific does not
    firewire: fw-sbp2: fix spindown for PL-3507 and TSB42AA9 firmwares
    Reported by Tino Keitel:  PL-3507 with firmware from Prolific does not
    Some FireWire disk firmwares do not stop the motor if power condition is
    for now.  The three firmwares which suffer from above mentioned problems
      echo "init=/bin/bash" > /sys/firmware/reipl/ccw/parm
    [S390] cio: Use locks when accessing /sys/firmware/cpi data.
    Mutex locks are used to avoid problems when /sys/firmware/cpi data
    When the firmware is in Fault state it will be identifed only when the next time
    regular interval to check the status of the firmware and if it is in Fault
    state, then the firmware will be reset by the driver.
    ip2: use request_firmware()
    firmware: convert Ambassador ATM driver to request_firmware()
    whiteheat: use request_firmware()
    ti_usb_3410_5052: use request_firmware()
    emi62: use request_firmware()
    emi26: use request_firmware()
    keyspan_pda: use request_firmware()
    keyspan: use request_firmware()
    ttusb-budget: use request_firmware()
    kaweth: use request_firmware()
    smctr: use request_firmware()
    firmware: convert ymfpci driver to use firmware loader exclusively
    firmware: convert maestro3 driver to use firmware loader exclusively
    firmware: convert korg1212 driver to use firmware loader exclusively
    ihex: add ihex2fw tool for converting HEX files into firmware images
    Fix up 'firmware_install' to be able to build $(hostprogs-y) too.
    ihex: request_ihex_firmware() function to load and validate firmware
    Some devices need their firmware as a set of {address, len, data...}
    Also a helper function which can verify that a 'struct firmware'
    firmware: Add firmware installation to modules_install, add firmware_install
    For 'make modules_install', install any firmware required by
    Also add a 'make firmware_install' target which doesn't depend on the
    configuration, but installs _all_ available in-kernel-tree firmware into
    $(INSTALL_FW_PATH), which defaults to /lib/firmware. This is intended
    packages containing firmware.
    firmware: Add CONFIG_FIRMWARE_IN_KERNEL option.
    This will control whether we build firmware into the kernel image for
    _every_ driver which we convert to request_firmware(), to avoid a
    firmware: Add CONFIG_EXTRA_FIRMWARE option
    This allows arbitrary firmware files to be included in the static kernel
    where the firmware loader can find them without requiring userspace to
    firmware: allow firmware files to be built into kernel image
    Some drivers have their own hacks to bypass the kernel's firmware loader
    and build their firmware into the kernel; this renders those unnecessary.
    Other drivers don't use the firmware loader at all, because they always
    want the firmware to be available. This allows them to start using the
    firmware loader.
    A third set of drivers already use the firmware loader, but can't be
    firmware: make fw->data const
    In preparation for supporting firmware files linked into the static
    const pointer is being passed to copy_from_user() to load the firmware into.
    This is okay in this case because the function has allocated the firmware
    struct itself, but the const qualifier is part of the firmware struct - so the
    firmware into.  This is okay in this case because the function has allocated
    the firmware struct itself, but the const qualifier is part of the firmware
    const pointer is being passed to copy_from_user() to load the firmware into.
    This is okay in this case because the function has allocated the firmware
    struct itself, but the const qualifier will be part of the firmware
    isight: treat firmware data as const
    x86 microcode: firmware data is const
    dell_rbu: firmware data is const
    ymfpci: treat firmware data as const
    Standardise both in-kernel and loaded firmware to be stored as
    maestro3: treat firmware data as const
    The maestro3 driver is byte-swapping its firmware to be host-endian in
    Doing that means that we need to switch the in-tree firmware to be
    instead, and use it on the in-tree firmware instead of the loaded
    firmware. It's a bit suboptimal but doesn't matter much right now
    tuners: treat firmware data as const
    gp8psk: treat firmware data as const
    cxusb: treat firmware data as const
    dvb frontends: treat firmware data as const
    ttusb-dec: treat firmware data as const
    bt8xx: treat firmware data as const
    cxgb3: treat firmware data as const
    irda-usb: treat firmware data as const
    atmel: treat firmware data as const
    p54: treat firmware data as const
    rt2x00: treat firmware data as const
    zd1201: treat firmware data as const
    aic94xx: treat firmware data as const
    cxacru: treat firmware data as const
    ueagle-atm: treat firmware data as const
    vx: treat firmware data as const
    pcxhr: treat firmware data as const
    riptide: treat firmware data as const
    vx222: treat firmware data as const
    myri10ge: treat firmware data as const
    cx25840: treat firmware data as const
    cyclades: treat firmware data as const
    bluetooth: treat firmware data as const
    libertas: treat firmware data as const
    const pointer is being passed to copy_from_user() to load the firmware into.
    This is okay in this case because the function has allocated the firmware
    struct itself, but the const qualifier is part of the firmware struct - so the
    bits are set to 1 by firmware at boot time, but are not restored
    This patch uses the /sys/firmware/memmap interface provided in the last patch
    firmware_map_add_early().
    sysfs: add /sys/firmware/memmap
    This patch adds /sys/firmware/memmap interface that represents the BIOS
        /sys/firmware/memmap/0/start   (hex number)
        cd /sys/firmware/memmap
     3. The function firmware_map_add() and firmware_map_add_early()
    and 'mem'), the /sys/firmware/memmap tree represents the unmodified memory
    map provided via the firmware. So kexec can:
    firmware: fix the request_firmware() dummy
    > (.text+0x33bab): undefined reference to `request_firmware'
    > (.text+0x33c3f): undefined reference to `release_firmware'
    potential hardware and firmware braindamage.
    firmware interface and retrieve all their data from the device tree).
    in the boot wrapper for Virtex targets without firmware.  Normally the
    firmware.
    reloading the firmware.
    powerpc: Consolidate CPU and firmware feature fixup macros
    The CPU and firmware feature fixup macros are currently spread across
    three files, firmware.h, cputable.h and asm-compat.h.  Consolidate them
    it's used for CPU features as well as firmware features.  Move it into
    powerpc: Tell firmware we support architecture V2.06
    lets the firmware know we support the 2.06 architecture.
    firmware allows.
    Also tell firmware that we know about POWER7.
      V4L/DVB (8097): xc5000: check device hardware state to determine if firmware download is needed
      V4L/DVB (8067): cx18: Fix firmware load for case when digital capture happens first
    b43: Add debugfs firmware debugging knob
    This adds a firmware debugging knob to debugfs.
    With this knob it's possible to enable advanced runtime firmware
    b43: Add simple firmware watchdog
    This adds a simple firmware watchdog for the opensource firmware.
    This will check every 15 seconds, if the firmware zeroed out the watchdog
    register. The firmware will do this in its eventloop.
    This is needed in order to implement firmware and driver debugging
    V4L/DVB (8097): xc5000: check device hardware state to determine if firmware download is needed
    This patch ensures that the xc5000 will have firmware loaded as needed if the
    GPIO pin is likely incorrect as the tuner firmware cannot be reloaded without a
    V4L/DVB (8067): cx18: Fix firmware load for case when digital capture happens first
    start has been changed to load the firmware if not already loaded.  Also fixed a
    When an error occurs at firmware loading, sometimes, tda1004x stops answering.
    A fresh copy of v.29 firmware, using get_firmware, is leading to an invalid
    firmware:
    tda1004x: found firmware revision ff -- invalid
    tda1004x: found firmware revision ff -- invalid
    tda1004x: waiting for firmware upload...
    tda1004x: Error during firmware upload
    tda1004x: found firmware revision ff -- invalid
    tda1004x: firmware upload failed
    Sometimes, loading/unloading this firmware makes tda1004x to return an invalid
    (unless they are tied by firmware/hardware somehow).
    pcmcia: allow for longer CIS firmware files
    Don't be more zealous with memory than the firmware class core.
    allocate all ICM pages passed to the FW.  Once firmware with a fix is
    released, we can make the workaround conditional on firmware version.
    bnx2: Update firmware to support multi rx rings.
      netxen: download firmware in pci probe
    netxen: download firmware in pci probe
    Downloading firmware in pci probe allows recovery in case of
    firmware failure by reloading the driver.
    Also reduced delays in firmware load.
    atm: [fore200e] convert to use request_firmware()
      isight_firmware: Avoid crash on loading invalid firmware
    isight_firmware: Avoid crash on loading invalid firmware
    firmware. Ensure that the firmware buffer is not overrun, while still
      drivers/built-in.o: In function `isight_firmware_load':
      isight_firmware.c:(.text+0x1ade08): undefined reference to `request_firmware'
      isight_firmware.c:(.text+0x1adf9c): undefined reference to `release_firmware'
    check_sal_cache_flush is used to detect broken firmware that drops
    The rx5670 has known buggy firmware, where SAL_CACHE_FLUSH drops
        http://bugzilla.kernel.org/show_bug.cgi?id=9487 buggy firmware expects four-byte IRQ resource descriptor (was: Serial port disappears after Suspend on Toshiba R25)
    eHEA has to call firmware functions in order to change the mac address
    is down these firmware calls would fail and are therefore not executed.
    shpchp: check firmware before taking control
    control from firmware.
        fails to get control from the firmware. But current shpchp
        doesn't check the return value of get_hp_hw_control_from_firmware().
    When we get a "PS sleep" event, we have to confirm this to the firmware.
    firmware won't send us a response. if_cs_host_to_card() is setting
      V4L/DVB (7990): Fix entry for PowerColor RA 330 and make it run with firmware version 2.7
    V4L/DVB (7990): Fix entry for PowerColor RA 330 and make it run with firmware version 2.7
      tuner-xc2028.c:(.text+0xbd896): undefined reference to `request_firmware'
      tuner-xc2028.c:(.text+0xbdd7a): undefined reference to `release_firmware'
      xc5000.c:(.text+0xc68e6): undefined reference to `request_firmware'
      xc5000.c:(.text+0xc6abe): undefined reference to `release_firmware'
      [SCSI] qla2xxx: Extend the 'fw_dump' SYSFS node the ability to initiate a firmware dump.
      [SCSI] qla2xxx: firmware semaphore to mutex
    libertas: speeds up downloading of CF firmware
    naps. Makes downloading the firmware slightly faster.
    (IORESOURCE_MEM, etc), so that we match the list from firmware
    (and the normal firmware) are used.  To enable msi-x, multi-slice
    Once firmware has been uploaded, they disconnect and reconnect with a
    UVC devices, it makes sense to provide the firmware loading
    handle the case where the device loses its firmware during hibernation
    "this_id" from a value returned in a firmware PortFacts response.  For my
    particular test case (SAS) the firmware id assigned to the initiator was
    make myri10ge_get_firmware_capabilities() static
    myri10ge_get_firmware_capabilities() static.
    Some devices running some WinCE firmware (with SC_* Samsung processors
    b43: Add firmware markers support
    This adds support for firmware markers.
    With firmware markers it's easily possible to check whether the
    firmware runs some codepath or not. The driver will throw a message
    when the firmware executes a MARKER(x).
    Add a firmware panic reason code that doesn't trigger a restart.
    This is useful for firmware debugging and avoiding endless
    restart loops. We can use FWPANIC_DIE to halt the firmware at a
    b43: Allow running without PCM firmware
    This patch adds code to allow running the device without PCM firmware loaded.
    Without PCM firmware we don't have hardware accelerated crypto on
    b43: Add hooks for firmware debugging
    This patch adds some hooks for firmware debugging.
    b43: Fix typo in firmware file name for 802.11 cores with rev 13
    and coded the wrong file name for the initvals firmware.
    4) drops a WEP packet which has been garbaged by firmware. This can
    This patch only implements the driver/firmware interface.
     - We were trying to access mesh stats even on meshless firmware.
      libertas: fix command timeout after firmware failure
    use older versions of firmware that do not already handle it.  The last
    Guest's firmware needs an iosapic with 48 pins for ia64 guests.  Needed to
    returned by the firmware as the max_sge value when device properties
    are queried.  However, the firmware also reports a limit on the
    libertas: fix command timeout after firmware failure
    [SCSI] qla2xxx: Extend the 'fw_dump' SYSFS node the ability to initiate a firmware dump.
    Recent firmwares no longer return the 'number of buffers' in
    [SCSI] qla2xxx: firmware semaphore to mutex
    request_firmware'
    :moxa.c:(.devinit.text+0x7e6e): undefined reference to release_firmware'
    demo firmware.  It should be removed.
    [POWERPC] pseries/firmware.c should include pseries/pseries.h
    implemented in firmware.c, so the latter should include the
    reset the device after firmware download.
            tristate "Userspace firmware loading support"
    xc5000.c:(.text+0x2dacd): undefined reference to `request_firmware'
    xc5000.c:(.text+0x2daf0): undefined reference to `release_firmware'
    xc5000.c:(.text+0x2db85): undefined reference to `release_firmware'
    firmware setup (in fact it breaks second uart).
    work properly.  These are done in the firmware, normally, but Linux
    shouldn't need to rely on the firmware running such things (someone
    could disable the PHY support in the firmware to save space, for instance).
    driver and the firmware.  The size of the interrupt
    myri10ge: cleanup retrieving of firmware capabilities
    Add myri10ge_get_firmware_capabilities() to retrieve TSO6 and
    interrupt slots capabilities from the firmware.
    firmware has DMA'ed the response.
    myri10ge: update firmware headers
    Update myri10ge firmware headers.
      sparc64: Work around memory probing bug in openfirmware.
    sparc64: Work around memory probing bug in openfirmware.
      cxgb3: Use CAP_SYS_RAWIO for firmware
    cxgb3: Use CAP_SYS_RAWIO for firmware
            Reload new firmware
    The firmware on MPC8610HPCD boards enables ULI ethernet and leaves it
    machw mechanism, it needs to be replaced by a fake openfirmware tree.
      bnx2: Update RV2P firmware for 5709.
      tg3: Add link state reporting to UMP firmware
    bnx2: Update RV2P firmware for 5709.
    The new RV2P firmware fixes 2 issues:
       with firmware management packets.  This was caused by the old
       firmware DMA'ing to the wrong address.
    tg3: Add link state reporting to UMP firmware
    "Universal Management Port".  This feature is implemented in firmware
    It turns out that the UMP firmware needs to know the current status
    of the link.  Because the firmware cannot touch the PHY registers while
    firmware will not operate correctly.
    This patch implements the new handshake with the UMP firmware.  Since
      [SCSI] megaraid_mbox: fix Dell CERC firmware problem
    For firmware that supports the feature(s), add the ability to start or
    firmware is using), and the list of firmware taken memory.
    Char: moxa, add firmware loading fix
    Char: moxa, merge c2xx and c320 firmware loading
    Char: moxa, add firmware loading
    Substitute ioctl load firmware interface by kernel firmware api.
    [SCSI] megaraid_mbox: fix Dell CERC firmware problem
    Newer Dell CERC firmware (>= 6.62) implement a random deletion handling
    So we disable the random deletion support if the offending firmware is
    firmware and driver changes to be done and tested now.
     - New firmware support for peer-to-peer mode:
      make pciehp_acpi_get_hp_hw_control_from_firmware()
    firmware loader: printk when requesting firmware
    Before requesting firmware, printk a message saying what we're requesting. This
    firmware: replace remaining __FUNCTION__ occurrences
    both the ACPI firmware and thinkpad-acpi to try to change the brightness at
    The switch to the ACPI backlight mode in the firmware is designed to be
    safe to use only as an one way trapdoor.  One is not to force the firmware
    When in ACPI mode, the backlight firmware just issues (standard) events for
    1. Place the ThinkPad firmware in ACPI backlight control mode
    interrupt numbers obtained from the firmware device tree, rather than
    to work around broken hardware or firmware, or (2) use the sysfs
    the firmware device tree pathname of the node that needs to be removed.
    metronomefb: don't free firmware twice in error path
    Right now, if request_irq or anthing after it fails than we free the firmware
      [SCSI] qla2xxx: Collapse RISC-RAM retrieval code during a firmware-dump.
    [SCSI] qla2xxx: Collapse RISC-RAM retrieval code during a firmware-dump.
    from guest firmware.
    ACPI, we don't bother checking the E820 table.  The PCI Express firmware
    it were requesting for setting a frequency on a place where firmware name
    make pciehp_acpi_get_hp_hw_control_from_firmware()
    this_patch_makes_the_needlessly_global_pciehp_acpi_get_hp_hw_control_from_firmware_static
    supposed to be unoccupied to verify that the firmware hasn't left the
    exclusive (i.e. firmware or hardware might change its state behind the
    additional properties it is compatible with the open firmware
    additional properties it is compatible with the open firmware
      V4L/DVB (7730): tuner-xc2028: Fix SCODE load for MTS firmwares
      V4L/DVB (7721): pvrusb2: Restructure cx23416 firmware loading to have a common exit point
      V4L/DVB (7720): pvrusb2: Fix bad error code on cx23416 firmware load failure
    V4L/DVB (7730): tuner-xc2028: Fix SCODE load for MTS firmwares
    There are different tables for MTS firmwares. This should be taken into
    account while selecting the proper firmware.
    V4L/DVB (7721): pvrusb2: Restructure cx23416 firmware loading to have a common exit point
    V4L/DVB (7720): pvrusb2: Fix bad error code on cx23416 firmware load failure
    3) seek_firmware were wanting an exact match for firmware type. This is
       wrong. As result, no SCODE firmware were loaded;
    4) A few files were including the wrong file for seeking demod firmwares;
    5) XC3028_FE_DEFAULT can be used, if user doesn't want to load a firmware.
    to test this firmware
    V4L/DVB (7609): em28xx-core: speed-up firmware load
       10x.  Load time for BASE firmware went from 13s to .973s
    V4L/DVB (7605): tuner-xc3028: Avoids too much firmware reloads
    V4L/DVB (7439): tuner-xc2028: Adds an option to allow forcing to load an specific firmware name
    There are a number of different firmware versions and variants, shipped
    an specific firmware name to be loaded. This helps to test for a firmware that
    This board works only with non-mts firmware
    V4L/DVB (7311): pvrusb2: Allow digital streaming without encoder firmware
    streaming is OK in this case even when the encoder's firmware is not
    V4L/DVB (7269): cx88: Powercolor Angel works only with firmware version 2.5
    V4L/DVB (7248): dabfirmware.h add missing license
    that the firmware is BSD licensed.
    firmware description the init routine returns an error and doesn't
    is in a clean state.  However, it doesn't wait for firmware to
    The solution is to wait for firmware to complete its work before
    the storage commands the moment it receives a GET_REPORT. The firmware
      firmware_sample_driver.c: fix coding style
    Fixed up trivial conflicts in firmware_sample_driver.c
    firmware_sample_driver.c: fix coding style
    Fix coding style in firmware_sample_driver...
    Add /sysfs/firmware/ibft/[initiator|targetX|ethernetX] directories along with
    # for a in `find /sys/firmware/ibft/ -type f -print`; do  echo -n "$a: ";  cat $a; done
    /sys/firmware/ibft/target0/target-name: iqn.2007.com.intel-sbx44:storage-10gb
    /sys/firmware/ibft/target0/nic-assoc: 0
    /sys/firmware/ibft/target0/chap-type: 0
    /sys/firmware/ibft/target0/lun: 00000000
    /sys/firmware/ibft/target0/port: 3260
    /sys/firmware/ibft/target0/ip-addr: 192.168.79.116
    /sys/firmware/ibft/target0/flags: 3
    /sys/firmware/ibft/target0/index: 0
    /sys/firmware/ibft/ethernet0/mac: 00:11:25:9d:8b:01
    /sys/firmware/ibft/ethernet0/vlan: 0
    /sys/firmware/ibft/ethernet0/gateway: 192.168.79.254
    /sys/firmware/ibft/ethernet0/origin: 0
    /sys/firmware/ibft/ethernet0/subnet-mask: 255.255.252.0
    /sys/firmware/ibft/ethernet0/ip-addr: 192.168.77.41
    /sys/firmware/ibft/ethernet0/flags: 7
    /sys/firmware/ibft/ethernet0/index: 0
    /sys/firmware/ibft/initiator/initiator-name: iqn.2007-07.com:konrad.initiator
    /sys/firmware/ibft/initiator/flags: 3
    /sys/firmware/ibft/initiator/index: 0
    ftp://ftp.software.ibm.com/systems/support/system_x_pdf/ibm_iscsi_boot_firmware_table_v1.02.pdf
    firmware: clean up samples for coding style issues
    This fixes up a number of coding style issues in the firmware sample files.
    firmware: move firmware_class from Documentation/ to samples/
    Move the firmware_class sample drivers to samples/ so that they are
    firmware.
    kexec is independent of the system firmware.
    tree is correct and reflects what the firmware did.
    firmware could find it.
    priv->resp_idx under the driver spinlock.  The firmware specs only permit
    one in the official i2c-tiny-usb firmware since i think it makes sense to get
    the change into the kernel before releasing a modified firmware.
    i2c-tiny-usb firmware versions (avrusb v1.06 and up, usbtiny v2.06 and up).
    When doing firmware-assisted scanning, iwlwifi drivers do not
    [SCSI] qla2xxx: Update firmware filenames for new ISP parts.
    problem is that the firmware can change the handle associated with the
    2. New firmware requires that one marker iocb be issued for each task
    When Driver sent wrong frame count to firmware.  As this particular
    Provide a facility to use the request_firmware() interface to get a SAS
    [POWERPC] bootwrapper: Add a firmware-independent simpleboot target.
    how to trigger a "HOST AWAKE" event from the firmware, so this part is
    * only overwrite priv->current_addr once the firmware call succeeded
    Other OS WOL support was introduced in PS3 system firmware 2.20.
    support was introduced in PS3 system firmware 2.20.
    This has nowhere been used. Note: in the firmware manual this was
    which describes the interface between the kernel and firmware or
    Recent netxen firmware has new scheme of generating MSI interrupts, it
    The driver will be able to deal with older firmware as well.
    * firmware for the CF card supports power saving
    subsequent MAC callback attempts to issue a firmware command.
    booting.  The openfirmware code will only map up to a certain amount
    As the result of a previous change that delayed the loading of the firmware,
    table not being found in the firmware. This patch moves the filter table
    check to ensure it's only done after the firmware has been loaded.
    The QS2x blades ships with v2.54 of the firmware, which use the same
    a trap in real mode while calling firmware.
    Also do other misc clean ups. Since the only input from firmware is non
      ACPI: add _PRT quirks to work around broken firmware
    rt2x00: Move firmware checksumming to driver
    If the firmware of the PS3 wireless hardware meets these beacons, it abandons parsing
      [POWERPC] QE: Make qe_get_firmware_info reentrant
      [POWERPC] QE: Fix QE firmware uploading limit
    ACPI: add _PRT quirks to work around broken firmware
    information from firmware.  This does not fix any regressions
      firmware: provide stubs for the FW_LOADER=n case
    firmware: provide stubs for the FW_LOADER=n case
    libsas has a case where it uses the firmware loader to provide services,
    stubs for the firmware loader API in the FW_LOADER=n case.
    [POWERPC] QE: Make qe_get_firmware_info reentrant
    called if the firmware was uploaded from the boot loader
    or the first time it was called if the firmware was
    [POWERPC] QE: Fix QE firmware uploading limit
    Fix a typo in qe_upload_firmware() that prevented uploading firmware on
    tery nvram rtc sr_mod ac sg firmware_class button processor cdrom
    want to do wierd things with the firmware and interrupts, etc.
    /sys/firmware/reipl/nss/name contains the nss name when defsys or
    based on info from our firmware guys but that killed performance. Turns out
    what earlier firmwares did by explicitly cracking open the
    initial stop-firmware mailbox command fails with a time-out
    stop-firmware/detect-failure/reset-risc loop, continue with
    driver unloading and discard the stop-firmware requirement.
    ipw2100/ipw2200: note firmware loading caveat in Kconfig help text
    Most wireless drivers load their firmware at interface open time, which
    load their firmware at probe time because firmware is required to read the
    has made special arrangements (including firmware plus a loader in the
    rt2x00: Driver requiring firmware should select crc algo
    when performing a checksum on the firmware.
    This patch adds kdump support to the ehea driver. As the firmware doesn't free
    The PNP device gets a "firmware_node" link pointing to the ACPI device,
    a "physical_node" link pointing back to the PNP device.  Other firmware
    firmware tables to the rest of the system.
      V4L/DVB (7200): Fix FM firmware loading
    The idea of this thing is we could save/restore the firmware's
    palette when breaking in and out of the firmware prompt.
    And we can provide better debugging and firmware command
    V4L/DVB (7200): Fix FM firmware loading
    Else several firmwares will deny the re-login because they somehow
    Also a firmware ID is printed. This is a unique identifier blob for a specific
    version of the firmware. This ID is attached to a specific version of the firmware
    This helps users to select the right firmware for their device.
    firmware for the driver. (The script will grep the .ko for the "Firmware-ID: xxx" string.)
    While the driver might still support other versions of the firmware for backward
    b43legacy: fix firmware load message level
    The firmware version information should always get printed. Not only on a
    b43legacy: add firmware information to modinfo
    This adds the firmware ID to modinfo.
    b43: Fix firmware load message level
    The firmware version information should always get printed. Not only
    b43: Add firmware information to modinfo
    This adds the firmware ID to modinfo.
    Also a firmware ID is printed. This is a unique identifier blob for a specific
    version of the firmware. This ID is attached to a specific version of the firmware
    This helps users to select the right firmware for their device.
    firmware for the driver. (the script will grep the .ko for the "Firmware-ID: xxx" string.
    While the driver might still support other versions of the firmware for backward
    PS3 firmware 1.94 added the source of power and reset events to the
    bootwrapper.  Changes in the PS3 system firmware 2.20 cause this bug
    firmwares don't cause such a catastrophic failure, and so this
    firmware.
    WRs.  However, NEC is only supported starting with firmware 2.2.232,
    so we use constant-sized WRs for older firmware.  And, since MLX QPs
      [POWERPC] Fix cell IOMMU null pointer explosion on old firmwares
    set at startup time.  Some future boot loaders or firmware could have this
    [POWERPC] Fix cell IOMMU null pointer explosion on old firmwares
    it on older firmwares that don't contain the "dma-ranges" properties.
    > uses the same RAID firmware vendor, it would've
    > probably been better if the RAID firmware vendor
    > fixed the firmware to not set the VALID bit if the
    BIT_2 of the firmware attributes is only valid on FW-interface-2
    incorrect initialize-firmware mailbox command to be issued for
    [SCSI] qla2xxx: Clear EFT buffer before firmware reinitialization.
    [SCSI] qla2xxx: Add MODULE_FIRMWARE hint for ISP25XX firmware.
    the firmware file for the dell_rbu driver changes, which breaks all of
    also in preparation to handle the handover from the initial firmware-based
    ACPI: create /sys/firmware/acpi/interrupts
    See Documentation/ABI/testing/sysfs-firmware-acpi
       according to whichever boot firmware your board expects.
    - firmware_revision, product_id, vendor_id: used once, remove from struct
    - firmware_revision_num: only written to once
    firmware is not able to ACK any received packets anymore.
    The firmware QUERY_ADAPTER command does not return vendor_id,
    For memfree devices, the firmware QUERY_ADAPTER command does not
    this in the driver and firmware.
    drivers/firmware/: Spelling fixes
    are only valid if they are reported as available by the firmware. Since
    Handle some HKEY events that the firmware uses to report the reason for a
    The firmware will also report if the operation that triggered the wake up
    While the firmware does tell us whether we are waking from a suspend or
    4. log a printk notice when the firmware doesn't set the hot key
    platfor firmware has returned control to the OS on wake up.
    by the firmware or the kernel, then enabling memory decoding
    Modules linked in: binfmt_misc ipv6 nfs lockd nfs_acl sunrpc dm_snapshot dm_mirror dm_mod hfsplus uinput ams input_polldev genrtc cpufreq_powersave i2c_powermac therm_adt746x snd_aoa_codec_tas snd_aoa_fabric_layout snd_aoa joydev snd_aoa_i2sbus snd_pcm_oss snd_mixer_oss snd_pcm snd_timer snd_page_alloc pmac_zilog serial_core evdev ide_cd cdrom snd appletouch soundcore snd_aoa_soundbus bcm43xx firmware_class usbhid ieee80211softmac ff_memless firewire_ohci firewire_core ieee80211 ieee80211_crypt crc_itu_t sungem sungem_phy uninorth_agp agpart ssb
    G_PRINTER: Adds a USB printer gadget driver for use in printer firmware.
    This adds a USB printer gadget driver for use in printer firmware.
    The purpose of the logic is to tell the firmware that ASYM_PAUSE is
    [BNX2]: Update firmware.
    Update firmware to support programmable flow control.
      [ALSA] snd:emu10k1: E-Mu updates. Fixes to firmware loading and support for 0404.
    [ALSA] snd:emu10k1: E-Mu updates. Fixes to firmware loading and support for 0404.
    This device has io_type == 1 (Multiface) and firmware_rev > 0xa
    3GB, plus any offset required by firmware.  The firmware offset is encoded
    If firmware does not implement AUX_LOOP comand in 32 bit mode it
      - allegedly 32768s from an old OXFW911 firmware
    x86_64, parameters passed to EFI firmware services need to follow the EFI
    wrapped before calling the firmware service.  The duplicated code between
    b43: Fix firmware caching
    We must also store the ID string (filename) for the cached firmware blobs
    and verify that we really have the right firmware cached before using it.
    The CF card only has a very old firmware (5.0.16p0). This firmware doesn't
    mesh_config when the card is inserted. So check the firmware version before
    libertas: always show firmware release
    Always shows the firmware release.
    Also converts the firmware release into something that is easily comparable.
    iwlwifi: delay firmware loading from pci_probe to network interface open
    This patch moves the firmware loading (read firmware from disk and load
       impossible to get the firmware image from hard disk in the PCI probe
       handler. Thus delaying the firmware loading into the network
       interface open time is the way to go. Note, we only read the firmware
       is succeeded, we cache the firmware image into the host memory. This
       power as possible. Unloading the firmware from the wireless device
    b43: Add support for new firmware
    This patch adds support for new firmware.
    Old firmware is still supported until July 2008.
    To get new firmware, go to
    You can extract firmware out of the "wl_ap.o" file contained
    Fwcutter-010 with official support for a new firmware image will
    b43: Add N-PHY related initvals firmware filenames.
    This adds the initval filenames for the N-PHY firmware.
    on the special multicast queue. The firmware will take care
    often than not, the real cause is that the firmware has crapped itself,
    When the firmware returns 0x0004, it wants us to try again later. We can
    the firmware responds with 0x0004 (which means -EAGAIN).
    Move the various firmware setup bits into a separate function, which
    libertas: allow for PS mode to be disabled when firmware doesn't support it
    There is weirdness here; the firmware seems to refuse to change channels
    Especially in the light of OLPC trac #5461, in which the firmware starts
    libertas: wait for 'firmware ready' event from firmware after loading
    libertas: don't run thread while firmware not yet ready
    libertas: switch to a waitqueue and timer for handling USB firmware load
    This makes it easier to support the new 'firmware ready' event which is
    in the new firmware, too.
    libertas: improve reliability of firmware reloading on USB
    The firmware is always initialised before we register the netdevices.
    One day we might try loading firmware in ->open(), but still it won't be
    devices, and there seem to be firmware problems with staying associated
    libertas: cope with device which already has firmware loaded
    until I noticed that firmware for the CF card sends my extranous bytes.
    firmware. It's somewhat dubious for USB devices too, but that's a
    libertas: handy function to call firmware commands
    Using an arbitrary firmware command was actually very painful. One
    Always copy the latest BSS information from the firmware's results to
    iwlwifi: avoid firmware command sending if rfkill is enabled
    * convert mac events to decimal, as this is what the firmware
    Requires firmware version 5.110.19.p0 or newer, available here:
    http://dev.laptop.org/pub/firmware/libertas/
    This feature requires firmware version 5.110.19.p0 or newer, available
    here: http://dev.laptop.org/pub/firmware/libertas/
    [BNX2]: Update firmware to support S/G RX buffers.
    perform the whole scan process by hardware and/or firmware. The hardware
    Tested by the nslu2-linux and openwrt projects in public firmware releases.
    making any changes.  This way, if the Efika firmware is updated to fix
    form "fsl,mpc5200-*" to better conform to open firmware generic names
    http://www.openfirmware.org/1275/practice/gnames/gnamv14a.html
     2. Reboot from DASD "B" using "/sys/firmware/reipl/ccw/device"
    files under the directory /sys/firmware/ are used for that configuration.
      [SCSI] aic7xxx: fix firmware build
      IB/mthca: Update latest "native Arbel" firmware revision
    IB/mthca: Update latest "native Arbel" firmware revision
    for the respective port to become active. Since firmware does not
    plugged in again, firmware will handle that properly by sending an
    RDMA/cxgb3: Support version 5.0 firmware
    The 5.0 firmware now supports translating sgls in recv work requests,
    Note: this change requires 5.0 firmware.
      V4L/DVB (7063): xc5000: Fix OOPS caused by missing firmware
    V4L/DVB (7063): xc5000: Fix OOPS caused by missing firmware
    xc5000: Fix OOPS caused by missing firmware.
    V4L/DVB (6954): There isn't a MTS radio firmware
    Try to load non-MTS firmware instead.
    Also, MTS firmware is required for audio to work on HVR950.
    V4L/DVB (6938): Add a tool for extracting xc3028 version 2.7 firmware
    This tool allows the extraction of xc3028 v2.7 firmware from HVR 12x0 file.
    If we are selecting the S-Code firmware to load by name, then we must mask
    from userspace, apparantly the xceive firmware is already factoring in
    V4L/DVB (6855): xc2028: select DTV78 firmware if tuning 7MHz VHF / 8MHz UHF
    It seems that the DTV78 firmware is intended for use in locations where
    If we switch to DTV78 firmware when we detect this condition, we can
    avoid firmware reloads when switching between VHF and UHF transponders.
    can hint to us to use DTV78 firmware from the first tuning attempt.
    conditions with specific firmware combinations.  Document these and only
    against the firmware we are checking instead of against the the "type"
    V4L/DVB (6851): xc2028: include int_freq in firmware version display
    Add "int_freq" to the debugging output when selecting firmware and the
    HAS_IF flag when dumping firmware during load.
    firmware upload the encoder is apparently not muted, making the unmutes
    Load the firmware on cx88-blackbird driver load.
    ATSC standard-specific firmware is D2633 on both v2.5 and v2.7. Better to
    auto-select this firmware, overriding ctrl.d2633.
    DVB-S is not supported. Also, there are some QAM6 firmwares for xc3028, but it
    selecting any IF defined at firmware file.
    V4L/DVB (6671): Avoids checking digital/analog at check_firmware
    Since check_firmware is called via analog or digital set freq routines, move
    Not all 8MHz firmware are marked with F8MHz.
    V4L/DVB (6661): Remove firmware reload hack for analog
    complete firmware reload.
    Xc2028.3028 has two type of firmwares: audio-standard specific ones and
    baseband MTS firmwares. MTS firmwares provide stereo decoding for 6 MHz
    BTSC/EIAJ and for monoaural audio decoding on 8 MHz firmwares.
    firmware, this patch converts it to a bitfield that can be shared with other
    Those standards use 6 MHz firmware.
    share the same USB device ID.  The first (ZL10353 w/ firmware in ROM) is
    already supported; the latter two both require firmware and have either
    "warm" device which is running the embedded firmware, and a "cold" device
    that needs us to upload firmware to it before it will work.  We patch the
    NB: These devices use a different firmware file from previous bluebird
        devices.  You need a new firmware file to make this work.
    V4L/DVB (6653): Add support for the DViCO FusionHDTV NANO2 w/ZL10353 and firmware
    firmware in ROM on the device.
    V4L/DVB (6652): xc2028: try non-8MHZ init1 firmware
    When loading init1 firmware, there may not be an 8MHz specific version.
    When searching for standard-specific analog firmware, only certain
    the firmware to load.
    V4L/DVB (6650): xc2028: base firmwares should have std0
    When loading BASE firmware, we must use std = 0.
    NB: a firmware package is required to use this device.
    V4L/DVB (6647): xc2028: retry firmware load if tuner does not respond
    firmware load.  Retry the firmware load if the firmware/hardware version
    V4L/DVB (6646): xc2028: rework firmware (re)loading process
    Define a list of valid "firmware types" for each combination of BASE,
    DTV and SCODEs.  By masking the appropriate firmware bits off we can
    just use one "type" for the firmware searching and also flag when we
    are looking for a BASE, DTV or SCODE type firmware.  This makes it
    individual firmware part.
    Add a structure to remember what firmware properties we have.  This
    contains the currently loaded/wanted  base firmware (type), video std
    When checking whether the current firmware needs to be reloaded, first
    figure out exactly what "type" of firmware we want (base, std and
    V4L/DVB (6645): xc2028: allow selection of D2633 firmware
    Add a bit to select D2633 DTV firmware to struct xc2028_ctrl, so that it can
    V4L/DVB (6644): xc2028: use correct offset into scode firmware
    When validating and loading SCODE firmware we need to take into account the
    V4L/DVB (6643): xc2028: use best match instead of first partial match during firmware selection
    Rather than picking the first video standard firmware that supports any of
    as many of them as possible.  This improves the likelihood that the firmware
    V4L/DVB (6640): xc2028: correctly select 8MHz firmware
    We were using priv->bandwidth to select the base firmware to load, not the
    firmware loaded.
    V4L/DVB (6638): xc2028: firmware loading cleanup
    failed firmware load to prevent firmware accidentally being freed on us.
    Clean up the firmware load/error messages somewhat and rename priv->version
    V4L/DVB (6619): Use MTS firmware for the HVR-900
    The HVR-900 requires the MTS version of the xc3028 firmware in order
    to get any sound. The below patch selects this firmware variant on
    TM5600/TM6000 needs clock reset during firmware load. This patch adds the
    Also, avoids uneeded firmware loads.
    select them. This is needed only for NICAM and A2 firmwares, since AM, BTSC and
    EAIJ are already properly handled, on firmware version 2.7.
    V4L/DVB (6592): Add the capability to work with more complete firmwares
    Firmware version 2.7 has other firmware types. This patch adds the capability
    DiB7700P, MT2060 and using last drivers (6040:6a79c243aecc), firmware
    Hauppauge firmwares can be decoded using tveeprom. This patch adds HVR-900 as
    occurrences, and at xc3028_get_reg. Also, improves the hardware/firmware
    firmware loading.
    V4L/DVB (6431): Improve firmware format
    V4L/DVB (6428): Make the naming of the DTV firmware files more consistent
    [SCSI] aic7xxx: fix firmware build
    On some firmware versions (e.g. 1.90), the storage device may not show up
    driver model.  This is being done to try to use the firmware layer which
    Kobject: change drivers/firmware/efivars.c to use kobject_init_and_add
    Kobject: change drivers/firmware/edd.c to use kobject_init_and_add
    firmware: change firmware_kset to firmware_kobj
    There is no firmware "subsystem" it's just a directory in /sys that
    firmware: remove firmware_(un)register()
    As I rewrote the whole firmware.c file, add my copyright.
    kobject: convert /sys/firmware/acpi/ to use kobject_create
    firmware: export firmware_kset so that people can use that instead of the braindead firmware_register interface
    Needed for future firmware subsystem cleanups.
    In the end, the firmware_register/unregister functions will be deleted
    kset: convert drivers/base/firmware.c to use kset_create
    [POWERPC] QE: Add ability to upload QE firmware
    Define the layout of a binary blob that contains a QE firmware and instructions
    on how to upload it.  Add function qe_upload_firmware() to parse the blob
    QE firmware node to booting-without-of.txt.
    There is a case where 54xx HBA loads MID firmware as it use 24xx
    firmware. In this case, the driver should issue
    Original code would clear the buffer after the firmware had
    firmware.
    FCE support enables the firmware to record FC extended link
    firmware's FCE buffer; and finally, the FCE buffer will be
    extracted during a firmware-dump scenario.
    controller environment where firmware download boot functionality is
    invoked.  The problem is due to the firmware download is being done in
    In experiments in the lab we managed to trigger an Adapter firmware
    failed by the Adapter correctly. The adapter firmware panic that
    adapters in the field with this specific firmware bug so we do not
    Some it821x RAID firmwares return 0 for the err return off both devices.
    microcontroller firmware doesn't appear to get it right. IT821x clears
    - GPIO pins are configured by the firmware,
    - CDM configuration (clocking) is setup correctly by firmware,
    fabric, firmware generates one interrupt for each RSCN. Based on
    set by the firmware to indicate the vport the RSCN was meant for.
    supported for any given firmware version and ISP type.  Use this
    SCSI_MLQUEUE_HOST_BUSY until firmware alerts the client of a CRQ
        and copy the BIOS image into /lib/firmware folder.
              to update BIOS image from /lib/firmware/as483c01.ufi file into
              to verify BIOS image between /lib/firmware/asc48c01.ufi file
    will mean a longer load time of the cx2584x firmware.
    firmware does not provide all required properties.
    pretty much never care about what the various firmwares have done on
    since we just get the firmware id flipped in get_drvinfo output
    tries to map the interrupt indicated by PCI_INTERRUPT_LINE if the firmware
    Apple firmware has a strange way to "close" bridge resources by setting
    by the firmware.  This is no longer necessary as the generic code
    ps3fb: Update for firmware 2.10
    ps3fb: Update for firmware 2.10
    As of PS3 firmware version 2.10, the GPU command buffer size must be at least 2
    BIOS/firmware programmed initial timing for later use.  The accessor
      ide: add /sys/bus/ide/devices/*/{model,firmware,serial} sysfs entries
    can convince the device firmware folks to fix the issue.
      [MIPS] Atlas, Malta: Don't free firmware memory on free_initmem.
    [MIPS] Atlas, Malta: Don't free firmware memory on free_initmem.
    ide: add /sys/bus/ide/devices/*/{model,firmware,serial} sysfs entries
    Several pSeries firmware versions share a rare locking issue in the
    firmware doesn't match the kernel needs and the device needs
    so remove a firmware feature test.
    ibm_newemac: Skip EMACs that are marked unused by the firmware
    Freeing firmware memory: 978944k freed
    UEFI firmware with appropriate Output Protocol and pass the video information
    appropriate for EFI firmware.
      USB: add support for an older firmware revision for the Nikon D200
    USB: add support for an older firmware revision for the Nikon D200
    support an older firmware revision of the Nikon D200. This patch includes the
    on machines that have no firmware PCI initialization
    This may be because buggy SMM firmware messes with the 8259A (configured
    Using own tx_packets counter instead of firmware counters.
    driver when I had broken firmware uploaded. The cause may have
    sys_open / sys_read were used in the early 1.2 days to load firmware from
    request_firmware() API that implements this in a nice, consistent way.
    This is a good thing, since using sys_open / sys_read etc for firmware is a
    other threads for example.  For those who don't want the firmware loader,
    Newer firmware versions return physical port information to the
    openfirmware node.
    it has been setup by firmware.
    determine if the two residuals, firmware-calculated and FCP_RSP,
    consistent with what earlier firmwares did by explicitly
      V4L/DVB (6378): DiB0700-device: Using 1.10 firmware
    V4L/DVB (6378): DiB0700-device: Using 1.10 firmware
    As for most of the users the 1.10 firmware is an improvement we should
    use this firmware always now.
    CX2341X_OSD_SET_PIXEL_FORMAT firmware calls to be skipped when the pixel
    Unfortunately, another firmware call on the PVR350 sometimes scrambles the
    This patch appends the management firmware version to the bootcode
    firmware string reported through ethtool.
    The current INIT_HCA firmware command timeout is sufficient for the
    [SCSI] aic7xxx: Fix firmware build
    The following scenario leads to total confusion of the platform firmware on
    [BNX2]: Update 5709 firmware to 3.7.1.
    This firmware update fixes a problem running with IPMI management
    firmware.
    The newer firmware may return more than 96 bytes of sense data when it
    doc firmware_sample_firmware_class.c: kmalloc + memset conversion to kzalloc
     Documentation/firmware_class/firmware_sample_firmware_class.c | 5246 -> 5211 (-35 bytes)
    Since we might have misconfigured firmware or cpus that have a linesize
    ps3fb: enhance horizontal panning on firmware 1.90 and up
    ps3fb: Enhance horizontal panning on firmware 1.90 and up:
      - On firmware 1.90 and up, L1GPU_CONTEXT_ATTRIBUTE_FB_BLIT supports copying
    > Maybe this is memory-interleave by firmware config.
    AC710/750 but has a different firmware.
    [ALSA] wavefront - Use standard firmware loader
    Use the standard firmware loader for loading ICS2115 OS firmware file.
    Due to this rewrite, user will have to copy or make symlink the firmware
    file appropriately to the standard firmware path such as /lib/firmware.
    [ALSA] snd-emu10k1:Unmute the Audio/Micro Dock after firmware load.
    [ALSA] snd-emu10k1:Improves firmware loading for E-Mu cards.
    myri10ge: update firmware headers
    Update myri10ge firmware headers to latest upstream version with
      [IA64] add driver for ACPI methods to call native firmware
      [IA64] abstract SAL_CALL wrapper to allow other firmware entry points
    [IA64] add driver for ACPI methods to call native firmware
    AML methods can use this OpRegion to call native firmware entry points.
    ACPI does not define a mechanism for AML methods to call native firmware
    After the handler is installed, an AML method can call native firmware by
    storing the arguments and firmware entry point to specific offsets in the
    handler loads up the arguments, makes the firmware call, and returns the
    [IA64] abstract SAL_CALL wrapper to allow other firmware entry points
    either ia64_sal or some other firmware entry point.
    According to the PCI firmware spec (3.0), the OS must claim control
    This is normal - the device did not respond so firmware will be loaded.
    phone.  As reported by Juan Ignacio Cherrutti, there's new firmware
    to the boot load firmware of a USB Bit Whacker.  It's running the
    MicroChip Pic18 boot loader firmware and I'm putting together a flash
    Ueagle-atm driver load DSP firmware in function, which is running from
    common workqueue. In some (error) circumstances loading firmware may
    older chipsets at USB level. However DSP firmware and CMVs
    USB: Remove unneeded pointer intf from speedtch_upload_firmware()
    which fixes funnies on a few systems where the BIOS firmware leaves us in an
    interesting choice of modes, or embedded boxes with no firmware which come up
    to trigger a rescan whenever the firmware signals an event.
    * The firmware version of ST3160812AS is "3.ADJ" no "3.AD".
    [SCSI] qla2xxx: Clear options-flags while staging firmware-execution.
    [SCSI] qla2xxx: Query additional RISC registers during ISP25XX firmware dump.
    the firmware LOAD/DUMP memory mailbox command routines.  When
    [SCSI] qla2xxx: Collapse and simplify ISP2XXX firmware dump routines.
    [SCSI] hptiop: adding new firmware interface and more PCI device IDs
    - check adapter firmware version and use appropriate interface accordingly
    request FIFO instead of Doorbell writes when firmware support High priority
      drivers/firmware: const-ify DMI API and internals
    The 88w8385 chip, using SDIO interface and firmware release 5.0.11p0,
    down.  Unfortunately, the firmware sends scan completed events many
    are sticky, they might be from interface shutdown time after firmware has
    [BNX2]: Optimize firmware loading.
    <vda.linux@googlemail.com> to further optimize firmware loading.
    and use it repeatedly instead of doing this for every firmware image.
    2. We eliminate the BSS and SBSS firmware sections in bnx2_fw*.h since
    It can be useful in other drivers which need to store firmwares
    In response to an investigation into the firmware of the "Digi Rightswitch"
    includes the timeout for the firmware which is already
    Update firmware version.
    Removed the workaround that was needed for PS3 firmware versions
    somehow get to it. Newer firmwares have it in the device tree such that
    products). For now, provide a hardcoded fallback for older firmwares.
    This patch moves all firmware load responsibility into the interface-specific
    code and gets rid of the firmware pointer in the generic card structure.  It
    and hw_prog_firmware.  It also makes the init sequence from interface
    Because the USB driver code uses the same TX URB callback for both firmware
    'priv' being NULL.  All USB firmware upload bits have been changed to not
    Describe the association response status code the firmware
    Don't trust the firmware to always send them at the right time,
    [PATCH] libertas: pass boot2 version to firmware
    Boot2 version used to be hardcoded in the uploaded firmware,
    this patch preserves the boot2 version before uploading firmware
    and sends it to the firmware again on resume.
    [PATCH] libertas: monitor mode support for OLPC firmware
    OLPC 'bleeding edge' Marvell firmware release (most likely, 5.110.16.p2).
    After loading the firmware, mesh autostart will be disabled. After that, the
    They contains the same info: the firmware command opcode and, when the
    firmware sends back a result, the command opcode ORed with 0x8000.
    This is supported from Marvell firmware version 5.110.16.p0 (to be released).
    The CF/SDIO firmware doesn't support Mesh, so priv->mesh_dev is
    have not much to do with firmware, they are various card- and network-stack
    functions and use them everywhere firmware requires a rate index rather
    The firmware requires the 4 basic rates to have the MSB set, but most
    on basic rates when pushing rate arrays to firmware instead of doing a ton
    [PATCH] libertas: move generic firmware reset command to common code
    Support for new mesh control knobs on firmware 5.220.11.p4:
    IE has been introduced in firmware release 5.110.14. Note:
    in future firmware releases.
    [POWERPC] MPC5200: Don't make firmware fixups into common code
    and instead get their firmware to setup the CPU the right way.
    mlx4_core: Use mmiowb() to avoid firmware commands getting jumbled up
    66547550 ("IB/mthca: Use mmiowb() to avoid firmware commands getting
    IB/mthca: Use mmiowb() to avoid firmware commands getting jumbled up
    IB/ehca: Fix mem leak of firmware ctrlblock in ehca_create_srq()
    Some firmware levels exhibit a race condition between H_ALLOC_RESOURCE(MR)
    IB/ehca: Use remap_4k_pfn() to map firmware contexts to user space
    Use Paul's new remap_4k_pfn() function to map our 4K firmware contexts
    firmware contexts. Return the context's offset within a 64K page to
    facilitate manual firmware extraction as per the procedure documented
    V4L/DVB (6112): cx25840: use a workqueue to load the firmware
    Loading the firmware using the i2c bit-banging code blocks the kernel.
    Move the firmware load code into a workqueue so that it plays well with
    Changing the VBI format requires a CX2341X_ENC_INITIALIZE_INPUT firmware
    Since the saa7127 has no firmware it is OK to initialize it immediately.
    The CX2341X_ENC_INITIALIZE_INPUT firmware call requires careful handling,
    appears that this method can actually crash the audio firmware.
    V4L/DVB (5993): cx25840: resetting also requires reloading the firmware
    Resetting without reloading the firmware is not enough. Sometimes the
    firmware is 'stuck' and needs to be reloaded.
    V4L/DVB (5964): Fixed remote control for dib0700 with new firmware
    The new firmware returns the data of the REQUEST_POLL_RC request in
    It also includes a new firmware for the dib0700 which is necessary to
    V4L/DVB (5924): ivtv-fb: initializing the fb should trigger ivtv firmware load
    ivtv-fb: initializing the framebuffer should trigger ivtv firmware load
    The firmware is now loaded when the driver is actually used for the first
    add code for autodetection and firmware download to the Miglia TVMini USB
    DVB-T adapter.  After firmware download, the device re-registers using
    drivers/firmware: const-ify DMI API and internals
    2) const-ify DMI internals, since DMI firmware tables should,
    [POWERPC] Use cache-inhibited large page bit from firmware
    Discussions with firmware architects have confirmed that the bit in
    uses can be used to set up mappings if the firmware failed to do so in a
    this is required in case the firmware initialized a device
    [POWERPC] bootwrapper: Add PlanetCore firmware support
    It seems that some versions of firmware will report a device
    > firmware not dropping a dubious packet). I must confess I'm not
    ACPI: thinkpad-acpi: check version of hot key firmware
    Check the HKEY firmware version (HKEY.MHKV handler), and refuse to load if
    infrequent failures in the firmware that resulted in 'IRQ READY TIMEOUT'
    Some firmwares (such as PlanetCore) only provide a base MAC address, and
    This will be used by the PlanetCore firmware support to construct
    This will be needed by PlanetCore firmware support.
      netxen: Avoid firmware load in PCI probe
    call is before firmware reload, causing reads and writes across PCI bus after
    firmware reload
    netxen: Avoid firmware load in PCI probe
    Loading firmware during PCI probe can lead to incorrect initialization,
    ago as a workaround for firmware bug, a better workaround was submitted for
    this a while ago. So removing original hack that loads firmware during probe.
    The IOC3 driver's UART detection bits used to rely on the the firmware
    Fix the bug that the major version part of the firmware version number
    is ignored in the comparison done by ps3_compare_firmware_version
    What's happening here is the firmware is detecting a Xfer-ready from the
      [POWERPC] axonram: Module modification for latest firmware API changes
    [POWERPC] axonram: Module modification for latest firmware API changes
    is handled by firmware itself.
    windows than those set by firmware quirk_e100_interrupt() is causing
    time points to a invalid PCI window (set by firmware).
    Upgrade the unusual_devs.h file to support the new 1.01 firmware for the Nikon D80.
    The driver requires that the port has already been set up by the firmware
    Tested on Pegasos2 with firmware version 20040810, and two IDE disks.
      V4L/DVB (6016): get_dvb_firmware: update script for new location of tda10046 firmware
    V4L/DVB (6016): get_dvb_firmware: update script for new location of tda10046 firmware
    Update get_dvb_firmware script for the new location of the
    tda10046 firmware.
    fabric's Management Server.  Request relogin when the firmware
    proper SBP-2 firmware will report transport errors.  So let's leave it
    Warning(linux-2.6.23-rc1//drivers/base/firmware_class.c:245): No description found for parameter 'bin_attr'
    This is a workaround for firmware bug with 2nd port of multiport adapter,
    drivers/char/cyclades.c:4908: undefined reference to `request_firmware'
    drivers/char/cyclades.c:4979: undefined reference to `release_firmware'
    netxen: Load firmware during probe, dma watchdog fix.
    The firmware should be loaded after resetting hardware during PCI probe,
    For the Freescale PCIe PHBs Not all firmwares setup the virtual P2P
      [POWERPC] Fix future firmware feature fixups function failure
      ACPI: Populate /sys/firmware/acpi/tables/
      ACPI: update feature-removal-schedule.txt, /sys/firmware/acpi/namespace is gone
    [POWERPC] Fix future firmware feature fixups function failure
    Move firmware feature initialisation from pSeries_init_early to the
    earlier pSeries_probe_hypertas so they are initialised before firmware
    Currently firmware feature sections are only used for iSeries which
    ACPI: Populate /sys/firmware/acpi/tables/
    ACPI: update feature-removal-schedule.txt, /sys/firmware/acpi/namespace is gone
    The /sys/firmware/acpi/namespace has already been removed in 2.6.21.
    Keep note of ThinkPad model, BIOS and EC firmware information, and log it
    The firmware knows how many hot keys it supports, so export this
    And the driver knows which keys are always handled by the firmware in all
    way, do *not* enable hotkeys that are always handled by the firmware.
    Revise ACPI HKEY functionality to better interface with the firmware, and
    i386: insert HPET firmware resource after PCI enumeration has completed
    the HPET firmware resources will be identified, but it should also not
    This confuses the ACPI platform firmware that doesn't update the AC adapter
    freezing-of-tasks.txt mentions firmware issues without mentioning the use
    firmware, this code needs to manage bite-sized chunks of kernel pages,
    firmware memory consumption.  If enabled via the mr_largepage module
      [CELL] cell: indexing of SPUs based on firmware vicinity properties
    [CELL] cell: indexing of SPUs based on firmware vicinity properties
    information provided by the firmware through a special vicinity
    of Malta firmware.
      Start split out of common open firmware code
      [ALSA] snd-emu10k1:Enable E-Mu 1616m notebook firmware loading.
    extraction routines during firmware-dump.
    Yay, the first one from Seagate.  3.ALC firmware is okay.  This was
    [ALSA] snd-emu10k1:Enable E-Mu 1616m notebook firmware loading.
    Start split out of common open firmware code
    should let the platform firmware know that we're going to enter the low power
    At least on some machines it is necessary to prepare the ACPI firmware for the
      [PATCH] Fix ipw2200 set wrong power parameter causing firmware error
      IB/mthca: Fix printk format used for firmware version in warning
    a MAC address for the reception of BC packets in firmware from the port up
    Better way of creating and loading the firmware used.
    Update for get_dvb_firmware script to extract the files for opera usb-box
    Help file for creating the firmware added
    V4L/DVB (5795): Fix: remove unused struct that could avoiding load the firmware
    V4L/DVB (5771): Get_dvb_firmware: update script for new location
    Get_dvb_firmware: update script for new location of sp8870 firmware
    Now that cx88-blackbird is only accepting the official firmware image,
    we no longer have any need to store the size of the firmware inside the
    V4L/DVB (5733): Blackbird should accept only new cx2341x encoding firmwares
    Remove temporary support for older 256 kB firmwares.
    ivtv, pvrusb2 and blackbird can now all handle the newer larger firmwares,
    so support for the older (buggier) firmware can be removed.
    V4L/DVB (5729): Remove support for 256 Kb firmware files.
    For backwards compatibility firmware files of 256 Kb were allowed: all
    drivers have now been updated to support the newer larger firmwares so
    remove this compatibility code and only support the newer firmware.
    Revert "[POWERPC] Do firmware feature fixups after features are initialised"
    Incorrect dma mask was used for blinkled (firmware assert) recovery or
    [BNX2]: Add delay before reading firmware version.
    The management firmware may still be loading during bnx2_init_one()
    because of the D3hot -> D0 transition and the firmware version may
    [PATCH] Fix ipw2200 set wrong power parameter causing firmware error
    The power mode can only be set 0~5 to firmware. Otherwise there will be a
    firmware error generated. This patch fixed the invalid power mode requested
    IB/mthca: Fix printk format used for firmware version in warning
    When warning about out-of-date firmware, current mthca code messes up
    to the firmware yet, so the firmware cannot return the value when the QP
    Char: cyclades, add firmware loading
    cyclades, add firmware loading
    This is also a partial workaround for a bug in the LDOM firmware which
    [BNX2]: Print management firmware version.
    Add management firmware version for ethtool -i.
    the logic to interface with the firmware to control the remote PHY
    [PATCH] zd1211rw: Defer firmware load until first ifup
    While playing with the firmware a while back, I discovered a way to
    access the device's entire address space before the firmware has been
    Previously we were loading the firmware early on (during probe) so that
    Now that we can read the EEPROM without having firmware, we can defer
    firmware loading until later while still reading the MAC address early
    filesystem is available and firmware loading would fail.
    When firmware reports a nondisruptive port configuration change event,
     - Hardware capabilities are queried from the firmware
     - The maximum MTU is queried from the firmware instead of assuming a
    streaming to rdma mode is broken on the passive side.  The firmware
    NOTE: This change also bumps the required firmware version to 4.3.
    from the QUERY_DEV_CAP firmware command, rather than hard-coding 2 GB.
    firmware revision.  This is made a separate patch, as it will
    mips au1xxx_ide.h: use NULL as firmware-revision wildcard
    ide_in_drive_list(): accept NULL as the wildcard for firmware revision
    83xx/85xx have multiple PHBs and the firmwares on these devices tend not
    Some HP firmware leaves the SMCf010 IRDA device incompletely configured, or
    behind the back of the firmware is likely to make things inconsistent.
    Don't clobber the firmware's internal state machine by setting
    [POWERPC] PS3: Compare firmware version
    Add a utility routine ps3_compare_firmware_version() to compare system
    firmware versions.  Uses the existing ps3_get_firmware_version() routine.
    [POWERPC] Do firmware feature fixups after features are initialised
    On pSeries the firmware features are not setup until ppc_md.init_early,
    so we can't do the firmware feature sections fixups till after this.
    Currently firmware feature sections is only used on iSeries which inits
    the firmware features much earlier.  This is a bug in waiting on
    Moreover firmware seems to "forget" to set DMA capable bit for the
    Upcoming firmware introduces command interface revision 3, which
    new MLX4_FLAG_OLD_PORT_CMDS that it is set after querying the firmware
    New ConnectX firmware introduces FW command interface revision 2,
    firmware, so we change the driver to allow only FW command interface
    revisions 2.  This means that users will have to update their firmware
    to work with the new driver, but the firmware is changing quickly and
    the old firmware has lots of other bugs anyway, so this shouldn't be too
     - Extract VPI resource cnt from firmware
    well as a change in buffer posting.  Note: the new firmware extensions
    support is available only on these newer adapters. The latest firmware
    fact the firmware mapped target ids saved in per device object is phys_disk_num
           firmware version is latter than 1.42
    mappings set up by the OpenBIOS firmware when it configures the EBC
    robust to changes in firmware configuration.  In particular, some of
      [PATCH] libertas: pull current channel from firmware on mesh autostart
      [PATCH] libertas: don't byte-swap firmware version number. It's a byte array.
    With firmware 5.220.11.p5, this allows to specify the anycast addresses the
    This avoids channel mismatch between driver and firmware in case we change
    [PATCH] libertas: pull current channel from firmware on mesh autostart
      mlx4_core: Check firmware command interface revision
      libata: print device model and firmware revision for ATAPI devices
    [PATCH] libertas: don't byte-swap firmware version number. It's a byte array.
    Now it at least manages to load the firmware.
    [PATCH] libertas: support for mesh autostart on firmware 5.220.11
    the GTK to the firmware.
    This patch needs/is needed for firmware 5.220.9.p11.
    mesh and fwt ioctls to work properly with firmware version 5.220.10.p0
    mesh-aware firmware you can omit the calls to this functions.
    This gives time to the firmware so it can go back to the association
    libata: print device model and firmware revision for ATAPI devices
      For ATA/CFA devices, libata prints out the device model and firmware revision.
    NetXen: Fix ping issue after reboot on Blades with 3.4.19 firmware
    NetXen: Fix initialization and subsequent ping issue on 3.4.19 firmware
    firmware was moved to 3.4.19. After configured interface up, ping
    So have to re-load the firmware again in probe routine.
      firmware: remove orphaned Email
    least one firmware which never sends a response but appears to work
    so that such firmware is usable.
    another device (E2 router) and a commonly used firmware does respond.
    firmware: remove orphaned Email
    deactivated. He was in charge of the firmware_class code, and still got
      supported since it821x firmware takes care of DMA mode programming).
      et all when in RAID mode - depend solely on firmware to do the tuning
    Found by the Mellanox firmware group.
    mlx4_core: Check firmware command interface revision
    HCA firmware with incompatible changes to the FW commmand interface is
    initialization and bail out if the firmware advertises a revision that
    which the machine's firmware believes is the console device, and it sets a
    firmware or firewall or whatever.  But "firewire-" has a nice ring to
    qla4xxx_build_ddb_list() firmware ddb state needs to be updated by
    Workaround another device firmware bug, wherein CDC descriptors get
    SYNCHRONIZE_CACHE only affect the cache on the controller. Our firmware
    or to the ERROR state, but mlx4 firmware does not support this and
    state, but mthca firmware does not support this and returns an error if
    firmware call fails due to out of resources.  Some other error codes
    the firmware pokes at the old-style divisor registers. If we detected it
    to the device. For 'normal' devices the command will be handled by firmware.
    firmware will not process the command for it. This will make the console to
    the translation between scsi mid layer and firmware. To achieve this
       firmware is known to not report all actual luns
    Turns out we have an old version of firmware that stores the mac address
    IPMI: Add PPC openfirmware unregister
      [POWERPC] Check cache coherency of kernel vs firmware
    Also, the firmware for those platforms does not completely configure
    [POWERPC] Check cache coherency of kernel vs firmware
    the kernel (CONFIG_NOT_COHERENT_CACHE) matches that left by the firmware,
    Unfortunately, the firmware on some of mv64x60-based platforms do not
      [ALSA] usb-audio: work around broken M-Audio MidiSport Uno firmware
      [ALSA] do not depend on FW_LOADER when internal firmware images are used
    [ALSA] usb-audio: work around broken M-Audio MidiSport Uno firmware
    The firmware of the M-Audio USB Uno MIDI Interface has, at least in
    [ALSA] do not depend on FW_LOADER when internal firmware images are used
    Since request_firmware() is no longer used when the internal firmware
    [ALSA] Don't use request_firmware if internal firmwares are defined
    Don't use request_firmware() if the internal firmwares are defined
    [ALSA] Kconfig: clarify help text for external firmware entries
    The external firmware files are not in the alsa-plugins but in the
    alsa-firmware package.
    because these drivers use the firmware loader regardless of whether
    there is an in-kernel firmware image.
    [ALSA] echoaudio - increase sleep time at loading firmware
    (Note: the driver still works fine with the old firmware after this change.
    [ALSA] Enable Kconfig options for external firmwares
    Some drivers are already ifdefs for enabling external firmwares
    V4L/DVB (5578): Workaround for bad hardare/firmware on some pluto2 devices
    This patch constitutes a workaround for a hardware/firmware problem of the
    It turns out many/most versions of firmware enable MMIO when
      [SCSI] qla2xxx: Attempt to stop firmware only if it had been previously executed.
        processing firmware commands.  Also controls resource allocation
    Some HP/Compaq firmware reports via ACPI that the SMCF010 IR device is
    But EFI 2.00 firmware is starting to appear, and the 2.00 changes don't
    utilities.  The symptom is that cyzload refuses to load the firmware.  I
    ipmi: add powerpc openfirmware sensing
    [SCSI] qla2xxx: Attempt to stop firmware only if it had been previously executed.
    for older firmware.
    myri10ge: replace the chipset whitelist with firmware autodetection
    firmware's auto-detection features to choose which firmware to load.
    The driver now loads the aligned firmware, performs a MXGEFW_CMD_UNALIGNED_TEST,
    and falls back to using the unaligned firmware if:
    - The firmware is too old (ie, MXGEFW_CMD_UNALIGNED_TEST is an unknown command).
    The setting of allmulti when adopting firmware with the rx-filter
    myri10ge: update firmware headers
    Update myri10ge firmware headers to those of 1.4.16.
    myri10ge: support new firmware counters
    flattened device tree based on information from the firmware.  The
    New firmware platforms must define a "msi-available-ranges" property on their
    On some Apple machines the HT MSI mappings are not enabled by firmware, so
    Implement MSI support via RTAS (RTAS = run-time firmware on pSeries
    been assigned by firmware and the device also supports LSI. Devices that
      firmware already does that.
    HW.  Also update the minimum required firmware version.
    initial timeout occurs waiting for the firmware to come ready,
    In ipr dual adapter configurations, the ipr adapter firmware
    is requested by the adapter firmware logging an error with
    in the adapter firmware sending potentially multiple commands
    [BNX2]: Update 5709 firmware.
    Add ipv6 TSO support in firmware.
    [BNX2]: Update 5708 firmware.
    make life easier for the firmware.
    Some versions of pSeries firmware fail to set up a
    is hopefully just beta levels of firmware. But just in case
    this firmware escapes into the wild, this patch will avoid
    over the bus, as is the case with some TV adapters when the firmware is
    power management: remove firmware disk mode
    This patch removes the firmware disk suspend mode which is the wrong approach,
    it is supposed to be used for implementing firmware-based disk suspend but
    takes its WWPN) try to extract this from open firmware instead and if
    This will point out firmware bugs.
    registers which are configured by firmware and get cleared on
    Sometimes the initial firmware values are inconsistent and need to be
    been done after the multiport support is added in firmware.
    from testing a broken firmware version
    is searching for its firmware. If the tuner is attached to the tda10046
    V4L/DVB (5380): Cx25840-firmware include cleanup
    There is no reason why cx25840-firmware.c would need to include
    tuner is attached.  Some more initialization, such as firmware loading,
    tda10046 has its firmware - which is also necessary in analog mode
    V4L/DVB (5315): Tda1004x: check request firmware for NULL ponter again
    - set GPIOs before firmware load. This helps to avoid I2C address
    - changed firmware load mechanism to always:
    - corrected name of tda10046 firmware image (backward compatible).
    Driver core: switch firmware_class to uevent_suppress.
    firmware_uevent(). Get rid of the now unneeded FW_STATUS_READY
      e1000: FIX: firmware handover bits
      IB/mthca: Update HCA firmware revisions
    so we don't need the OBP firmware range handling at all.
    while testing this.  You can't use the 'class-code' OF firmware
    e1000: FIX: firmware handover bits
    Upon code inspection it was spotted that the firmware handover bit get/set
    Up to 16 thermal sensors are supported on new firmware (but nobody has
    supported on older firmware.  Thermal sensor mapping is model-specific.
    use the WRITE_MTT firmware command rather than writing directly if
    interoperate with such firmware can use this; it should not be used for
    Reset MPIC on boot to clear some timer state that firmware might
    includes that.  Without it, the original firmware mappings in the high BATs
    ACPI: thinkpad-acpi: update fan firmware documentation
    firmware.  This patch has no code changes.
    Driver-specific constants are now prefixed TPACPI_, ThinkPad firmware
    IB/mthca: Update HCA firmware revisions
    Update the driver's list of current firmware versions with Mellanox's
            Earlier firmware revisions need MVI fix as well.
            On UP1500 firmware reports wrong AGP IRQ (10 instead of 5).
    driver promises the HCA firmware that bits 3 and 23 of all memory keys
    The firmware assigns irq 20/21 to the VIA IDE device on Pegasos.
    graphics card plugged in. Detect if the firmware stdout is the serial
            - Easier to support platforms whose firmware passes a
    loader_info fields to the firmware's command line, rather than having
    This normally is not an issue as firmware gives dma-windows under
      myri10ge: fix management of the firmware 4KB boundary crossing restriction
    myri10ge: fix management of the firmware 4KB boundary crossing restriction
    Simpler way of dealing with the firmware 4KB boundary crossing
    The problem occurs since the microcode driver uses request_firmware() in
    support for this function has been removed from the firmware.
    [SCSI] aacraid: remove unused or deprecated firmware constants
    never been used in the driver or in the firmware (and thus are
    corresponding port as initially set by firmware. However that function
    The missing cast did result a warning when calling an 32-bit ARC firmware
    page size is not 4kB since the firmware cannot cross 4K boundary.
    Use the regular firmware on Serverworks HT2100 PCIe ports since this
      [IrDA]: Delay needed when uploading firmware chunks
    Some firmware versions will return a slot reset state of "1"
    index (such as is used by the firmware or an EEPROM to indicate MAC
    [IrDA]: Delay needed when uploading firmware chunks
    With 42101001.sb firmwares, we need a 10 ms delay between firmware chunks
    This may work if BIOS/firmware configured the host/device for DMA and chipset
    where doing this could clobber still-live firmware data structures can
    the firmware packet.  If this uninitialised field contains a bogus
    value, ha->cmd_len can become much larger than the actual firmware
    config pages, the firmware doesn't complete the reply in time, and we
    This normally is not an issue as firmware gives us dma-windows under
      V4L/DVB (5260): Cx88-blackbird: allow usage of both 376836 and 262144 sized firmware images
    V4L/DVB (5260): Cx88-blackbird: allow usage of both 376836 and 262144 sized firmware images
    firmware image released by Hauppauge Computer Works, while retaining
    compatibility with the older firmware images.
    cx2341x firmware can be downloaded at: http://dl.ivtvdriver.org/ivtv/firmware/
      V4L/DVB (5276): Cxusb: fix firmware patch for big endian systems
      V4L/DVB (5255): Fix cx25840 firmware loading.
    V4L/DVB (5276): Cxusb: fix firmware patch for big endian systems
    Without this patch, the device will not be detected after firmware download
    V4L/DVB (5255): Fix cx25840 firmware loading.
    causing the firmware load to fail for the ivtv driver. The correct
    device to load the firmware.
    myri10ge: workaround buggy adopted firmwares
    Work around a bug which occurs when adopting firmware versions
    spidernet: load firmware when open
    This patch moves calling init_firmware() from spider_net_probe() to
    Some Bluetooth drivers need one or more binary firmware images. Export
      [MIPS] Cobalt: Rename "Colo" MTD partition to "firmware".
    violation.  Currently, only some Maxtors with early firmware revisions
    are showing this problem.  Those firmwares have other NCQ related
    [MIPS] Cobalt: Rename "Colo" MTD partition to "firmware".
    firmware. Anyway, firmware loading is not used / required by the device.
    V4L/DVB (5212): Pvrusb2: Be more forgiving about encoder firmware size
    The pvrusb2 driver previously rejected encoder firmware whose size was
    possible to find cx23416 firmware whose size doesn't conform to this
    limit.  So change the firmware loader implementation to be more
    dropped support for it because it depends on firmware and does not work
    on all USB host chips. Further, I have no firmware with remote
    CX2341X_ENC_SET_3_2_PULLDOWN are not implemented in the Conexant firmware.
    not implemented in the firmware, and clarified several issues around reverse
      [SCSI] aic94xx: tie driver to the major number of the sequencer firmware
    USB Storage: indistinguishable devices with broken and unbroken firmware
    it correctly, by just returning success without involving the firmware.
    firmware what the identify data is of the device that is attached to
    [SCSI] aic94xx: tie driver to the major number of the sequencer firmware
    The sequencer firmware file has both a string (currently showing
    that Adaptec may issue sequencer firmware in the future which could be
    tied to the particular major number of the firmware (i.e. the current
    driver will load any 1.x firmware).  Additionally, the driver will print
    current firmware will print out
    aic94xx: Found sequencer firmware version 1.1 (V17/10c6)
    in the firmware, which allows easier debugging before probing
    must be set by the firmware. This patch also adds code to the
    firmware/kernel
    HCAs, once we get rid of the use of the WRITE_MTT firmware command.
      - ppc/openfirmware specific
      [SCSI] aic94xx: update for v28 firmware
    [PATCH] docbook: add edd firmware interfaces
    Cleanup kernel-doc notation in drivers/firmware/edd.c.
    use for firmware loading.  Remove the reserved letter (M) from
    this whole-disk partition exists to tell the firmware the
    drives into dmesg to add the full ATA firmware revision and model
    that has a different bitrate from what the firmware programs the
    [ALSA] maestro3: add request_firmware()
    Load the ASSP codes using request_firmware(), if possible, instead of
    [ALSA] korg1212: add request_firmware()
    Load the DSP code using request_firmware(), if possible, instead of
    [ALSA] wavefront: add request_firmware()
    Load the YSS225 register initialization data using request_firmware(),
    [ALSA] sb16: add request_firmware()
    Load the CSP programs using request_firmware(), if possible, instead of
    using the built-in firmware blobs.
    [ALSA] ymfpci: add request_firmware()
    Load the DSP and controller microcode using request_firmware(), if
    possible, instead of using the built-in firmware.
    This will need to be updated later to provide a firmware hook to handle
      [POWERPC] Only use H_BULK_REMOVE if the firmware supports it
    [POWERPC] Only use H_BULK_REMOVE if the firmware supports it
    JS20 blade, where the firmware doesn't support H_BULK_REMOVE.  This
    adds a firmware check so that on machines that don't have H_BULK_REMOVE,
      Driver Core: Increase the default timeout value of the firmware subsystem
    The in-kernel bcm43xx driver only works with V3 firmware, whereas the
    firmware. In bcm43xx-d80211, the fwpostfix module parameter is used
    Driver Core: Increase the default timeout value of the firmware subsystem
    The ipw driver sometimes takes a long time to load its firmware.
    the firmware loader to make this a non-issue, this is a minimal fix.
    [POWERPC] ps3: get firmware version
    Add a new routine ps3_get_firmware_version() and use it to output the firmware
    certain firmware levels are affected.
    [POWERPC] Maple: don't override bus-range supplied by firmware
    NetXen: Added ethtool support for user level firmware management utilities.
    NetXen: firmware crb init changes.
     - fw_reg_addr() is needed to compute addresses of firmware registers, as this
       is dynamic based upon firmware
    [PATCH] EFI x86: pass firmware call parameters on the stack
    When calling into the EFI firmware, the parameters need to be passed on
    [SCSI] aic94xx: update for v28 firmware
    These changes work compatibly with the old V17 firmware
    according to the new V28 firmware. The patch has redefined the register
    3.    The new sequencer firmware v28 for Aic94xx SAS/SATA Linux open
    This extension was into a reserved field that firmware should
    supplied by firmware and get paranoid about reserved fields.
    Fusion firmware requires target reset following hotplug removal event,
    DOS support is no longer needed since the Linux firmware kit
    As ISP24xx firmware can return a CS_DATA_UNDERRUN completion
    This includes BIOS, EFI, FCODE and firmware versions.
    the firmware to driver interface.
    firmwares.  Sprious FISes during NCQ command phase occur on many
    than using the name property (which can differ between firmwares and
      ehea: Fixing firmware queue config issue
    [MTD] [NAND] Inherit CAFÉ NAND timing setup from firmware
    This patch is to make the driver work with multiple minor firmware versions
    ehea: Fixing firmware queue config issue
    firmware configurations
    I set the firmware bracket to 1.00 exactly, in case AMI or Sun fix it with a
    firmware update. Hey, you never know.
    [SCSI] aic94xx: Match request_firmware with release_firmware
    The vmalloc() blob holding the sequencer firmware wasn't being released at
    necessary in case the BIOS has locked read-only the firmware hub space.
    Also prevent any attempt to write to firmware space if it cannot be write
      IB/mthca: Don't execute QUERY_QP firmware command for QP in RESET state
    IB/mthca: Don't execute QUERY_QP firmware command for QP in RESET state
    QUERY_QP firmware command (because it will fail).
      NetXen: driver reload fix for newer firmware.
    NetXen: driver reload fix for newer firmware.
    level. This caused lots of problems on some buggy firmware. Please consider
    1.      Remove /sys/firmware/acpi
    /sys/firmware to /sys/devices.
    between the kernel and the firmware which is setup only later.
    For PAPR partitions with large amounts of memory, the firmware has an
    The other part of this patch is telling the firmware that we can
    here, because the firmware will invoke a reboot if the memory
    firmware is currently using.  This is because firmware can't change
    the representation on the fly.  Further, some firmware versions used
    This card has no firmware eeprom. The old version still should not
    need a firmware file due to an undocumented feature of the TDA10046.
    Some firmwares have "pcie" for the "name" property of the CPC945 PCI
    it must override firmware's notion of what the busses are numbered.
    [POWERPC] Only enable cpu hotplug via RTAS if the required firmware support is found
    during firmware upgrades and resets.  The patch never returns the HOSED state,
    things to happen when in firmware update mode.
    Add detection of those commands (cold reset, warm reset, and any firmware
    Change the SSID on the E500 as a workaround for a firmware bug.  It looks like
    initiate an undock request to the firmware.
    firmware and ACPI DSDT.  If the BIOS and the ACPI DSDT also do not
    ACPI: ibm-acpi: store embedded controller firmware version for matching
    code to store the firmware version of the EC for later usage, e.g.
    It also prints the firmware version when starting up.
    new-style ThinkPad controller firmwares as an experimental feature.  The
    extended for 16 sensors if the firmware supports 16 sensors.
    actually the same thing on these firmwares, but unfortunately IBM never
    The ipw2200 BSS firmware passes on the TSF information within ipw_rx_frame,
    but monitor firmware doesn't. I add back the IEEE80211_RADIOTAP_TSFT flags
    This command needs information from both firmware and driver. First copy
    information from firmware to buffer, then fill in driver information.
      [POWERPC] Tell firmware we can handle POWER6 compatible mode
    Also, a CIS override autoloaded using the firmware loader may
    [PATCH] NetXen: multiport firmware support, ioctl interface
            - Multiport and newer firmware support
    /sys/firmware/ipl/loadparm: shows loadparm of current system (ro)
    /sys/firmware/reipl/ccw/loadparm: loadparm used for next reboot (rw)
    [POWERPC] Tell firmware we can handle POWER6 compatible mode
    to the list of PVR values that the kernel tells firmware it is able to
    a new firmware feature bit for this, FW_FEATURE_PS3_LV1.
    turns the firmware feature check into a run-time option.
    Adds the needed firmware feature bits for the PS3.
    This adds code to look at the properties firmware puts in the device
    The oprofile driver relies on a firmware RTAS call to setup the debug bus
    second firmware RTAS call to reset the debug bus to the non pass thru
    platform-specific information firmware provides.  Thus, this patch
    [BNX2]: Download 5709 firmware.
    [BNX2]: New firmware to support 5709 (part 4).
    [BNX2]: New firmware to support 5709 (part 3).
    [BNX2]: New firmware to support 5709 (part 2).
    [BNX2]: New firmware to support 5709 (part 1).
    [BNX2]: Re-organize firmware structures.
    Re-organize the firmware handling code and declarations a bit to make
    firmware had problem receiving all packets in this configuration.
    New firmware and setting the PROM_VLAN bit when in promiscuous mode
    [PATCH] NetXen: temp monitoring, newer firmware support, mm footprint reduction
            - Driver changes to support newer version of firmware
    IO transactions.  This seems to be a firmware bug which sneaked into
      ACPI: Change ACPI to use dev_archdata instead of firmware_data
      Driver core: convert firmware code to use struct device
    ACPI: Change ACPI to use dev_archdata instead of firmware_data
    Change ACPI to use dev_archdata instead of firmware_data
    It also removes the firmware_data field from struct device as this
    DMA operation pointers, NUMA node ID, firmware specific data, etc...
    Driver core: convert firmware code to use struct device
    hooked to struct device.firmware_data. This structure contains for now a
    firmware about  OSC_EXT_PCI_CONFIG_SUPPORT flag.  that causes
    pcie control from firmware), regardless of whether or not _OSC was
      - load and execute firmware
    the ipr firmware.
    if the firmware didn't configure them properly, which seems to
      [TG3]: Increase 5906 firmware poll time.
    [TG3]: Increase 5906 firmware poll time.
    firmware loop was changed to maximum 20ms.
      IB/ehca: Assure 4K alignment for firmware control blocks
    Fix the AMSO1100 firmware version computation, which was broken
    pci_remove_bus_device() if we cannot find the firmware device tree node
    the firmware when bringinh up new machines.
    the RTAS mechanism for updating firmware.  RTAS assumes 4k for flash
    block and list sizes when preparing and sending a firmware image to
    IB/ehca: Assure 4K alignment for firmware control blocks
    Assure 4K alignment for firmware control blocks in 64K page mode,
    with 4K length and 4K alignment in order to alloc/free firmware
    the conclusion that if the hw/firmware sets a bit in the interrupt
      IB/mthca: Fix MAD extended header format for MAD_IFC firmware command
    The check to see if the firmware drops interrupts during a
    IB/mthca: Fix MAD extended header format for MAD_IFC firmware command
    into the MAD_IFC firmware command at incorrect offsets (mostly off by
      CS_COMPLETE as ISP24xx firmware no longer reports
    link.  Recent firmwares contain a workaround whereby the
    stop-firmware mailbox command prevents the ISP from entering
    must verify that the stop-firmware mailbox command completes
    re-executing firmware.
    feature fixups, one for CPU features and one for firmware features. In
    [PATCH] firmware/dcdbas: add size check in smi_data_write
    So what would happen is that any device mapped by the firmware
    that this initialization along with the firmware bin/sachu3/zzzlp2.eni
    The bcm203x firmware loading driver uses a timer to trigger the URB
    At the moment we rely on a cpu feature bit or a firmware property to
    Platform firmware exports the support for Native C-state to OS using
    [PATCH] firmware/efivars: handle error
    [PATCH] firmware/dell_rbu: handle sysfs errors
    drivers/firmware/dell_rbu.c: In function 'packetize_data':
    drivers/firmware/dell_rbu.c:252: warning: format '%lu' expects type 'long unsigned int', but argument 3 has type 'int'
    [PATCH] ehea: firmware (hvcall) interface changes
    [PATCH] firmware/dcdbas: fix bug in error cleanup
    using SLOF. Also disable an obsolete firmware workaround.
      [PARISC] Make firmware calls irqsafe-ish...
    [PARISC] Make firmware calls irqsafe-ish...
    firmwares on the field. However, the new wrapper has a bug which makes
      [POWERPC] spufs: remove support for ancient firmware
    This enables support for new firmware test releases.
    [POWERPC] spufs: remove support for ancient firmware
    Any firmware that still uses the 'spc' nodes already
    resources are assigned by firmware.  The 'start' member of ioapic device
    ioapic devices by firmware.
    On powermac, when open firmware is set to use the SCC for console, this
    It adds correct AGC setting for the 3000P, correct firmware download state
    changed the line pitch from what the firmware set it to.  Fix it by making
    Fix ide_in_drive_list: drive_table->id_firmware should be searched *in*
    - mapping of id and lun by firmware
    It is confirmed that this field is not used by firmware, so cancel
    [PATCH] isicom: correct firmware loading
    - loading of firmware didn't fail when something went wrong (returned 0).
    [PATCH] build sound/sound_firmware.c only for OSS
    All sound/sound_firmware.c contains is mod_firmware_load() that is a legacy
    This patch builds it into an own sound_firmware module that is only built
    device but without a firmware hub, there was a 50% chance that the code
    detection of the firmware hub to better qualify the existence of an RNG.
    partitions.  But they are not usable.  Maybe the firmware uses it to find
    [PATCH] kthread: drivers/base/firmware_class.c
    Replace kernel_thread() call in drivers/base/firmware_class.c with
    [IrDA]: irda-usb needs firmware loader
    The mailbox access and firmware interface are quite different from
    Put the firmware polling logic into a separate function.  This makes
    Using the new heartbeat code, the ASF firmware will also check the
    updating the firmware in the Uxxx series adapter, but as
    sequencer for communicating with the firmware on the other
    [PATCH] x86 microcode: using request_firmware to pull microcode
    Using request_firmware to pull ucode from userspace, so we don't need the
    into the firmware dir (I had a tool to split previous big data file into
    [SCSI] aic94xx: require firmware loader
    aic94xx relies on external firmware and thus requires FW_LOADER.
    A new revision of the Avermedia A800 does not reenumerate after download the firmware.
    V4L/DVB (4463): New firmware for Nova-t-usb2
    "I have now with success extracted a working firmware for the 93004 rev. C1A2."
    This patch increments the firmware version to 2.
    on NXT2004 based boards before the firmware is loaded.
    [PATCH] bcm43xx-softmac: improve wrong firmware message
    [ALSA] hdsp - Fix auto-updating of firmware
    Fixed the auto-updating of firmware if the breakout box was switched
    off/on.  The firmware binary itself was already cached but it wasn't
    loaded properly.  Also, request_firmware() is issued if the box was
    with firmware at module loading time but later it's erased.
    [TG3]: Constify firmware structs
    Constify largish areas of firmware data in Tigon3 ethernet driver.
    CONFIG_PPC_ISERIES is set and includes a firmware feature check in
    device can be configured under /sys/firmware/dump.
    /sys/firmware/reipl.
    firmware ops (fw_ops), device tree ops (dt_ops), and console ops
    INIC-1530 firmware accepted the 10 bytes version but replied with bogus
    [PATCH] bcm43xx: Add firmware version printout
      [PATCH] myri10ge: update the firmware download URL in Kconfig
    [PATCH] myri10ge: improve firmware selection
    Improve the firmware selection by adding 2 cases where we should use the
    optimized firmware:
    [PATCH] myri10ge: update the firmware download URL in Kconfig
    Update the firmware download URL in Kconfig to match the header
    firmware to change bits in some FCR registers.
    EX8350/8300/16350/16300 controllers.  The controller's firmware accepts
    Add a tag which shows what the firmware file we're requesting is.
    [SCSI] MODULE_FIRMWARE for binary firmware(s)
    request_firmware in order to pull in binary firmware blobs from userland
    determine which binary firmware blobs must be included with a kernel in
    advertising that a particular firmware file is to be loaded - it will
    This problem was noticed by one of the Phyp firmware folks.
    The ipw2200 firmware/ucode only support values from 0 to 254. So mark 255
      o aic94xx: convert to request_firmware interface
    While testing Moxa C218T/PCI on PowerPC 405EP I found that loading firmware
    After I fixed this I found that uploading firmware in a system with
      not I think enough to handle malicious firmware attacks.  That said such an
    Software must explicitely re-enable extended firmware tracing
    [PATCH] myri10ge: use multicast support in the firmware
    Some recent myri10ge firmwares support multicast filtering as well
    whether the firmware support those. mgp->fw_multicast_support
    [PATCH] spectrum_cs: Fix firmware uploading errors
    This fixes firmware upload failures which prevent the driver from
    IB/mthca: Update HCA firmware revisions
    Update the driver's list of HCA firmware revisions to make sure people
    running Sinai firmware older than 1.1.0 get a message suggesting a
    firmware upgrade.  Update the Arbel versions as well while we are at it.
    Intersil firmware 1.7.4 (and possibly others) loses the antenna
    [PATCH] myri10ge: define some previously hardwired firmware constants
    Define some previously hardwired firmware constants.
    [SCSI] aacraid: Restart adapter on firmware assert (Update 2)
    device doesn't have SRQ support (because of ancient firmware) so that
    ACPI: add message if firmware_register() init fails
    existing firmware upload routine.
    downloads the firmware + boot code, modifies it, and uploads it again
    [SCSI] mptfc: properly wait for firmware target discovery to complete
    Based upon a conversation I had with LSI's fibre channel firmware guru,
    firmware link initialization / target discovery to complete.
    [SCSI] lpfc 8.1.7 : Fix failing firmware download due to mailbox delays needing to be longer
    Fix failing firmware download due to mailbox delays needing to be longer.
      [PATCH] myri10ge - Write the firmware in 256-bytes chunks
    [PATCH] myri10ge - Write the firmware in 256-bytes chunks
    When writing the firmware to the NIC, the FIFO is 256-bytes long,
      [POWERPC] force 64bit mode in fwnmi handlers to workaround firmware bugs
    /proc/pal/*/version_info is a bit confusing.  HP firmware, at least,
    [PATCH] myri10ge - Always do a dummy RDMA after loading the firmware
    Always do a dummy RDMA after loading the firmware to work around
    subsystem that speaks SCSI at the firmware level.
    [POWERPC] force 64bit mode in fwnmi handlers to workaround firmware bugs
    The firmware of POWER4 and JS20 systems does not switch the cpu to 64bit
    The Pegasos firmware doesn't create a valid "ranges" property for the
    sparc32 and the firmware just returns a raw pointer to
      [SCSI] mptfusion: firmware download boot fix's
    [SCSI] mptfusion: firmware download boot fix's
    firmware.
    using very good firmware these days...
    ACPI: handle firmware_register init errors
      provide a proper interrupt tree from the firmware so that fallback isn't
    [PATCH] release_firmware() fixes
    Use release_firmware() to free requested resources.
    According to Documentation/firmware_class/README the request_firmware()
    call should be followed by a release_firmware().  Some drivers do not
    however free the firmware previously allocated with request_firmware().
    This patch tries to fix this by making sure that release_firmware() is used
    "rssi" value returned by the firmware after it is converted into a
    [SCSI] lpfc 8.1.7: Fix txcmplq related panics on heavy IO while downloading firmware
    Fix txcmplq related panics on heavy IO while downloading firmware
    The Pegasos firmware doesn't create a valid "ranges" property for the
    up to them. Additionally, the firmware is redistributable and they have
    This patch removes the old pre-parsing of the open firmware interrupt
    addresses from the firmware.
    devices (these are devices the firmware reports as existing, but what
    firmware reports that the lower expander also has another expander
      [POWERPC] Use little-endian bit from firmware ibm,pa-features property
      [POWERPC] Add the use of the firmware soft-reset-nmi to kdump.
    way the irq description in the firmware device-tree get translated to linux
    [POWERPC] Use little-endian bit from firmware ibm,pa-features property
    Apparently some firmware versions forget enabling the dual-edge bit,
    [POWERPC] Add the use of the firmware soft-reset-nmi to kdump.
    With this patch, kdump uses the firmware soft-reset NMI for two purposes:
    solved with the use of a firmware generated soft-reset. After the
    version firmware which supports dynamic reconfiguration of NUMA.)
          For this reason, a firmware vendor who supports Windows writes plural
    firmware call, so continue to boot if the call fails because of
    This patch introduces 3 more files to the /sys/firmware/stable tree:
    [SCSI] qla2xxx: Correctly set the firmware NOS/OLS timeout during initialization.
    used with external firmware module loaders.
    firmware informs the host software that it could not transition
    [SCSI] qla2xxx: Rework firmware-trace facilities.
    - Defer firmware dump-data raw-to-textual conversion to
      allocations of firmware dump memory.
    - Dump request and response queue data as per firmware group
    - Add extended firmware trace support for ISP24XX/ISP54XX chips.
    the same chip but requires firmware support which we don't have on
    - make firmware edid independent from framebuffer (No need to choose
    kernel-api DocBook.  Clean up kernel-doc in drivers/firmware/dmi_scan.c.
    does not work anymore.  Ofcourse that problem was a bug in firmware
    V4L/DVB (4106): Fix problems with AV7110 firmware building
    Fix AV7110 firmware dependencies so that parallel builds work correctly.
    host the requisite firmwares there as well)
    V4L/DVB (3982): Cx88-blackbird: use encoder firmware filename defined in cx2341x.h
    Since the filename of the cx23416 encoder firmware image
    V4L/DVB (3971): Cx88-blackbird: use standard filename for cx23416 firmware
    cx88-blackbird uses the same encoder firmware for the cx23416 chip that is
    This patch alters the driver to expect the cx23416 encoder firmware to be
    V4L/DVB (3970): Cx88-blackbird: use firmware api commands defined in cx2341x.h
    This patch also fixes compilation for AV7110 firmware
    V4L/DVB (3723): Avoid unnecessary firmware re-loads in or51132 frontend
    As QAM_64, QAM_256, and QAM_AUTO all use the same firmware, switching
    between these modulations doesn't require a firmware re-load.  This also
    fixes a mishandled error condition, in which the firmware file is loaded
    into the kernel, the clock mode is changed, but then the firmware upload
    There is some old code in the or51133 firmware loading function that
    into an area the firmware claimed was free and available memory for
    [PATCH] USB: Whiteheat: fix firmware spurious errors
    Attached patch fixes spurious errors during firmware load.
    [PATCH] USB: cdc-acm: add a new special case for modems with buggy firmware
    [PATCH] firmware_class: s/semaphores/mutexes
    Hi, this patch converts semaphores to mutexes for Randy's firmware_class.
    device is enabled.  This can happen either if the firmware assigns
    initialization in firmware, this causes some devices which don't
    specification" and is basically a way for invoking firmware
    as firmware "backdoors" go, this seems one of the cleaner methods, so
    better than each inventing their own firmware "backdoor".
    for timer interrupts (using firmware_has_feature).
    firmware:
      [BNX2]: Use compressed firmware
      [BNX2]: Add firmware decompression
      intelfb: use firmware EDID for mode database
    parameters from firmware. So hotplug parameters are never programed at
    Added support for RM200C machines with big endian firmware
    This driver adds support for firmware loading and start, stop, reset
    [BNX2]: Use compressed firmware
    [BNX2]: Add firmware decompression
    Add functions to decompress firmware before loading to the internal
    CPUs. Compressing the firmware reduces the driver size significantly.
    Add a counter for packets dropped by firmware.
    try to load all existing firmwares but only the matching one
    Memfree firmware is in rare cases reporting WQE index == base - 1 in
    [POWERPC] check firmware state before suspending
    ibm,suspend-me rtas call.  If the firmware is not in the correct
    smarter to first check the firmware state, and only if it is waiting,
    [POWERPC] Fix builtin command line interaction with firmware
    Apple 970 xserves and IBM JS20 blades with SLOF.  The firmware of these
    firmware_revision value as the older DViCO Momobay CX-1.
    The fibre channel firmware provides a timer which is similar in purpose
    the firmware timer to a default of one second which significantly reduces
    2) Always try to sync with the firmware, if there is no
       firmware running do not treat it as an error and instead
    characters the firmware isn't able to handle some or all of them, and so
    will usually work because by then the firmware's had time to make room. But
    The IBM Cell blade firmware might confuse the kernel to think it's a
    pSeries machine. This fixes it for now. With a bit of luck, the firmware
    The code in prom_init.c calling the firmware
    fails to properly pass the instance handle of the firmware object when
    the firmware crashing. (Found by Segher, thanks !)
    * Avoid PCI burst when writing the firmware on chipset with unaligned completions.
    intelfb: use firmware EDID for mode database
    Use firmware EDID for the driver's private mode database.
    Due to a firmware device tree bug, RTC and NVRAM accesses (including
      V4L/DVB (3832): Get_dvb_firmware: download nxt2002 firmware from new driver location
      V4L/DVB (3825): Remove broken 'fast firmware load' from cx25840.
    [PATCH] drivers/base/firmware_class.c: cleanups
      - register_firmware()
      - firmware_class_uevent()
    Semantic changes in ISP24xx firmware behaviour inadvertently
    [SCSI] qla2xxx: Consolidate firmware-dump handling across ISPs.
    [SCSI] qla2xxx: Remove obsolete firmware-loader-module support.
    If firmware image is unavailable via request_firwmare(), then
    configurations that extend the time for the firmware to declare that it
    some device/firmware combinations, so set the default to 0 until we
    firmware. This fixes it by using strcmp instead of strncmp to match what
    V4L/DVB (3832): Get_dvb_firmware: download nxt2002 firmware from new driver location
    This patch updates the get_dvb_firmware script to download the firmware
    V4L/DVB (3825): Remove broken 'fast firmware load' from cx25840.
    The fast firmware load hack in cx25840 uses private data. In fact, it
    firmware is unable to successfully handle tuning after a powered down state.
    It turns out the firmware on the TT budget-ci 1.1 slots doesn't generate
      [PATCH] USB: Emagic USB firmware loading fixes
    [PATCH] USB: Emagic USB firmware loading fixes
    It's become apparent as machines get faster that the emagic kernel firmware
    drivers/usb/misc/emi62.c: emi62_load_firmware - error loading firmware:
    airo(eth0): WPA unsupported (only firmware versions 5.30.17 and greater
    airo_test_wpa_capable assumes that the softSubVer part of the firmware
    I have firmware version 5.30.17 and cap_rid.softSubVer is 0x11==17.
    the firmware tells us.
      powerpc/pseries: Tell firmware our capabilities on new machines
    Also tell firmware that we know about POWER6.
    powerpc/pseries: Tell firmware our capabilities on new machines
    This adds code to call a new firmware method to tell the firmware
    Fix the driver to return SUCCESS if the firmware or driver doesn't
    for debuging firmware events).  We allocated 50 bytes on local stack
    without freeing `result' if we leave via the no_firmware: label.
            when firmware reports target is no longer there, return
    airo cards with firmware versions of 5.30.17 and higher support WPA.
    This patch recognizes WPA-capable firmware versions and adds support for
    [PATCH] ipw2200: Do not continue loading the firmware if kmalloc fails
    [PATCH] orinoco: delay FID allocation after firmware initialization
    so that the user at least can report the firmware version that fails.
      [PATCH] pcmcia: fix comment for pcmcia_load_firmware
    [PATCH] pcmcia: fix comment for pcmcia_load_firmware
    The comment of "pcmcia_load_firmware" is wrong: the
    firmware(*.cis) files reside in /lib/firmware/ _not_
    /lib/firmware/cis/ .
      [PATCH] orinoco: fix truncating commsquality RID with the latest Symbol firmware
    firmware loading failing on a 2100.
    [PATCH] orinoco: fix truncating commsquality RID with the latest Symbol firmware
    Symbol firmware F3.91-71 has an additional word in the commsquality RID.
    Airo firmware versions >= 5.30.17 send re-association events to the
      from the firmware.
          [PATCH] DMI: move dmi_scan.c from arch/i386 to drivers/firmware/
          This is simply "mv arch/i386/kernel/dmi_scan.c drivers/firmware/" (removing
    In the STIR421x case, when the firmware upload fails, we need to
    [PATCH] DMI: move dmi_scan.c from arch/i386 to drivers/firmware/
    This is simply "mv arch/i386/kernel/dmi_scan.c drivers/firmware/" (removing
    firmware (and this is the value currently returned by
    Once patched with Sigmatel's firmware, this chip "almost" follows the
      [WATCHDOG] pcwd.c firmware-info patch
    [WATCHDOG] pcwd.c firmware-info patch
    Get the firmware version into the private data struct
    V4L/DVB (3657): Kconfig: Add firmware download comments for or51211 and or51132
    - Added firmware download comments to or51211 and or51132 Kconfig help text.
    The FWSEND parameter controls the size of the firmware chunks sent
    The bt8xx drivers uses request_firmware()
    The saa7134 drivers uses request_firmware()
    after MC45 powers on, it takes more than 2 secs until firmware fully
    be a firmware crash that also takes down the partition.  A firmware
    Various dodgy firmware might give us nodes and/or properties in the device
    actual bogus firmware could try it, but just for completeness.
    [PATCH] powerpc: Rename and export ppc64_firmware_features
    We need to export ppc64_firmware_features for modules. Before we do that
    I think we should probably rename it to powerpc_firmware_features.
    On CHRP machines we are supposed to call into firmware (RTAS)
    a fallback to the old behaviour when we find older firmware,
    [PATCH] powerpc: Change firmware_has_feature() to a macro
    So that we can use firmware_has_feature() in a BUG_ON() and have the compiler
    firmware_has_feature to a macro. Unfortunate, but necessary at least until
    The isicom driver uses request_firmware() and thus needs to select
    The icom driver uses request_firmware()
      V4L/DVB (3573): Cxusb: remove FIXME: comment in bluebird_patch_dvico_firmware_download
    [PATCH] Doc: fix example firmware source code
    Fix Documentation/firmware_class/ examples so that they will build.
    V4L/DVB (3573): Cxusb: remove FIXME: comment in bluebird_patch_dvico_firmware_download
    Removed the FIXME comment from bluebird_patch_dvico_firmware_download:
    A single firmware image is used to support all of the bluebird boxes.
    The firmware sets all devices to PID: d700. Instead of using that, the
    Problem showed up now because of new system firmware on one platform.
    > >              * Bus already configured by firmware, process it in the first
      [PATCH] powerpc: Replace platform_is_lpar() with a firmware feature
    Not much to say here except that some drives have fixed and bad firmware
      Documentation/dvb/get_dvb_firmware: fix firmware URL
      [SCSI] fusion - move some debug firmware event debug msgs to verbose level
    [PATCH] powerpc: Replace platform_is_lpar() with a firmware feature
    Documentation/dvb/get_dvb_firmware: fix firmware URL
    This patch fixes a wrong URL in Documentation/dvb/get_dvb_firmware.
      [PATCH] firmware: fix BUG: in fw_realloc_buffer
      IB/mthca: Update firmware versions
    The cx25840 module requires external firmware in order to function,
    [TG3]: Add firmware version info
    Leave TSO off by default on older chips that do firmware TSO because
    [PATCH] firmware: fix BUG: in fw_realloc_buffer
      [PATCH] ipw2200: Change debug level for firmware error logging
    IB/mthca: Update firmware versions
    Update known firmware versions in driver's table to the latest releases.
    table from the firmware/hypervisor on the new cpu.
    cross-calls from the OBP firmware requires some trick code sequences
    1) Race conditions with the request_firmware interface and udev/hotplug
    are improved as only a single request_firmware call is now required to
    load the firmware and microcode (vs. 3 separate calls previously)
    2) The monitor mode firmware (sniffer) is now packaged with the correct
    firmware image to the 3.0 version available from:
            http://ipw2200.sf.net/firmware.php
    notifications that we've been receiving from firmware.  This
    when to pre-emptively restart the firmware/ucode in anticipation of
    firmware errors!  But since setting this new threshold, I haven't seen
    [PATCH] ipw2200: Change debug level for firmware error logging
    The spidernet drivers uses request_firmware() and thus needs to select
    the fusion firmware sends the
    The driver will read firmware config pages
    (3) initialize the hba firmware handle
    Cleanup of mptsas firmware event handlers.
    [SCSI] fusion - move some debug firmware event debug msgs to verbose level
    added some more firmware events descriptions.
    loginfo codes returned by the mpt fusion firmware.
    Resync with latest 23xx firmware -- 3.03.20.
    Resync with latest 24xx firmware -- 4.00.18.
    [SCSI] qla2xxx: Remove legacy ISP6312 firmware loader.
    As new 23xx firmware will accomidate ISP63xx types.
    Driver was keying off internal cores. Use what the firmware reports instead.
    MP3 player.  Its card-reader firmware has the common
    firmware-version: N/A
    of the OBP firmware device tree node.  If it's a Sun part we'll
    V4L/DVB (3292): Fixed xc3028 firmware extractor, added terratec fw support
    Fixed xc3028 firmware extractor for terratec's emBDA.sys firmware
    Fixed delay in firmwareupload, now terratec's firmware also works
    Maple firmware does not need PCI resource allocation, and in fact, it
    drivers/net/tokenring/smctr.c: In function `smctr_load_firmware':
    [Bluetooth] Fix firmware loading problem of BT3C driver
    firmware. This workaround is broken and makes the driver oops when
    loading the firmware. This patch removes this workaround and uses now
    When debugging is enabled, the mthca_QUERY_DEV_LIM() firmware command
    extracted from the firmware response, so some of the values that get
    [PATCH] wrong firmware location in IPW2100 Kconfig entry
    Firmware should go into /lib/firmware, not /etc/firmware.
    [PATCH] powerpc: Move pSeries firmware feature setup into platforms/pseries
    Currently we have some stuff in firmware.h and kernel/firmware.c that is
    [PATCH] powerpc: Clean up pSeries firmware feature initialisation
    [ARM] 3302/1: make pci=firmware the default for ixp2000
    Most ixp2000 boards don't actually work if pci=firmware isn't used, so
    of setting pci=firmware.
    Recent ISP24xx firmwares require that mailbox register 8 be
    The reset state is undefined and some firmware doesn't clear this bit
    V4L/DVB (3313): FIX: Check if FW was downloaded or not + new firmware file
    - When a firmware was downloaded dvb_usb_device_init returns NULL for the
    - A new firmware should be used with digitv devices.
    V4L/DVB (3313): FIX: Check if FW was downloaded or not + new firmware file
    - When a firmware was downloaded dvb_usb_device_init returns NULL for the
    - A new firmware should be used with digitv devices.
    - Reduce dangerously high firmware download speed with 16MHz xtal
    tda10046lifeview to get_dvb_firmware to download tda10046 firmware
    [SCSI] fusion - mptctl -firmware download fix
    Fix's firmware download ioctl to work with SAS.
    [PATCH] ide: set latency when resetting it821x out of firmware mode
    This is to work around a defect in HP rx5670 firmware: when an interrupt
    We use UDSL_IGNORE_EILSEQ flags because ADI firmware doesn't reply to
    as error recovery, or firmware download in flashless
    Adding verbose message returned from firmware
    from firmware to the event syslog.  This shows
    > According to the firmware engineers, Fibre needs to be 40 seconds
    firmware queue is flushed out off outstanding
    responding to firmware asyn events, and reporting
    [PATCH] ipw2200: Scale firmware loading watchdog with the firmware size
    greatly increases the likelihood that a firmware reload will succeed
    "loading" and "data" files are racy when you load 2 firmwares in quick
    succession. Second, the timeout for DMAing the firmware needs to scale
    with the size of the firmware being loaded. That is, the watchdog needs
    I no longer get the firmware load errors, though this is at best a hacky
    the fatal errors in firmware which cause reloads; it just causes the
    This does not seem to fix the firmware restarts, but it does do "the
    Convert semaphores to mutexes in mthca.  Leave firmware command
    firmware instead.
    [LIBATA] Blacklist certain Maxtor firmware revisions for FUA support
    [PATCH] appletalk/cops.h: missing const in struct ltfirmware
    [SCSI] ibmvscsi: handle re-enable firmware message
    New versions of the Power5 firmware can send a "re-enable" message to
    Skip the last digit when reporting the firmware version.
    [BNX2]: Improve handshake with firmware
    enabled. ASF firmware will not parse packets correctly if VLAN tags
    [PATCH] e1000: Added firmware version reporting for 8257{1|2|3} controllers
    The EEPROM image version is reported as a firmware version for these controllers.
    Fixed VLAN support by switching control over to the firmware.
    [PATCH] spidernet: read firmware from the OF device tree
    request_firmware() is sometimes problematic, especially
    in initramfs, reading the firmware from Open Firmware
    We still try to get the firmware from the file system
    updates of the spidernet firmware without reflashing
    [PATCH] spidernet: check if firmware was loaded correctly
    Uploading the device firmware may fail if wrong input data
    firmware, it is also necessary to release firmware's nvram lock in
    [PATCH] Remove old firmware headers from rio drivers
    [PATCH] Remove internal firmware building files from rio
    [PATCH] hostap: allow flashing firmware
    Host AP driver has code to support writing firmware to non-volatile
    The dell_rbu driver creates entries in /sys/class/firmware/dell_rbu/ by
    calling request_firmware_nowait (without hotplug ) this function inturn
    /sys/class/firmware/dell_rbu/loading , data and the thread waits on the
    to image_type the /sys/class/firmware/dell_rbu entries can be created.
    The driver code was changed to not create /sys/class/firmware/dell_rbu
    [SCSI] qla2xxx: Kconfig update: Add URL to download firmware images.
    the firmware would have updated the Get ID List port-entries
    [SCSI] qla2xxx: Update firmware-dump procedure for ISP24xx.
    firmware specification.
    firmware into the card, and was due to a
    will cause the firmware to use the portname as a base for
    firmware doesn't generate similar events for expanders addition/removal
    SPI links to its DataFlash chip and (eventually) firmware running in the card.
    [PATCH] powerpc: Add/remove/update properties in firmware device tree
    Cleanup firmware old-way fields in header file.
    New-style firmware will often place multiple different functions
    If the firmware is unable to reset the PCI slot for some reason, then
    New versions of firmware introduce a new method by which the
    V4L/DVB (3336): Bluebird firmware hosting moved to common dvb firmware dir on linuxtv.org
    - Get_dvb_firmware script updated accordingly:
    + my $url = "http://www.linuxtv.org/download/dvb/firmware/dvb-usb-blue$
    V4L/DVB (3327): Remove DViCO specific firmware hacks from the generic code.
    - Move the code that patches bluebird firmware before upload from the
    Patch correct "warm" USB IDs into bluebird firmware before download.
    accesses in most cases, from the firmware tree. However, it still wants
    V4L/DVB (3287): Add DViCO Bluebird firmware to dvb_get_firmware script
    - Add DViCO Bluebird firmware to dvb_get_firmware script,
    V4L/DVB (3268): Use combined firmware for DVB-T and ATSC Bluebird FusionHDTV USB models.
    - Now using firmware "dvb-usb-bluebird-01.fw",
      using dvb-usb-bluebird-atsc-01.fw firmware.
    V4L/DVB (3260): Using new firmware for the WideView Stick
    - A new firmware fixes VHF tuning issues. This changes the firmware file name in the driver.
    V4L/DVB (3243): add firmware instructions for nxt2002 and nxt2004
    - add firmware instructions for nxt2002 and nxt2004
    V4L/DVB (3242): make the firmware dir docs consistent in the v4l-dvb tree.
    - make the firmware dir documentation and comments consistent in the v4l-dvb tree.
    V4L/DVB (3198): make cx25840 recover from some firmware load failures
    - In the rare event that a 333MHz i2c firmware load fails after
    DVB (2441): Driver support for live-ac3, firmware >= 2621 required.
    - Driver support for live-ac3, firmware >= 2621 required.
    DVB (2421): Fixed oddities at firmware download
    - Fixed oddities at firmware download
    - modified the dvb-usb-part to allow a device-specific firmware download
    - added an option to specify whether a device reconnects after a firmware download or not.
    The CONFIG_PPC_OF symbol is used to mean that the firmware device tree
    well as firmware bugs in the past.
    I can't really get a conclusive answer from the firmware
    [PATCH] powerpc: serial port discovery: cope with broken firmware
    This makes it deal with the fact that the Pegasos firmware reports that
    can come up at the same speed it was set to by the firmware.
    ADDRESS64 descriptors in _PRS.  HP firmware uses them for built-in serial
    Add code to handle case where board firmware does not start the
    More care on loading firmware, take into account fw->size can't be zero.
    The driver uses the in-kernel firmware loader :
    - to load  a first usb firmware when the modem is in pre-firmware state
    - to load the dsp firmware that are swapped in host memory.
    * One bulk endpoint for uploading dsp firmware
        - if we need to upload a page of the dsp firmware
    probably due to a bug in its firmware.
    always safe to set qp access flags in the firmware command if either
    2. Add a missing handshake with firmware to enable WOL.
    4. Add nvram arbitration before halting the firmware.
    scsi_device for saving unique firmware mapping. This will be required
    firmware.
      firmware feature of interrupt coalesing. The firmware allows a
    [SCSI] qla2xxx: Resync with latest released ISP24xx firmware -- 4.00.16.
    [SCSI] qla2xxx: Add support for embedded ISP24xx firmware.
    [SCSI] qla2xxx: Add full firmware(-request) hotplug support for all ISPs.
    Transition driver to exclusively use the request_firmware()
    interfaces to retrieve firmware-blobs from user-space.  This
    embedded firmware-binary images are removed from the
    Upon request, the driver caches the firmware image until the
    use the firmware-loader modules, but, should be considered
    regardless of firmware completion status.
    [SCSI] zfcp: fix link down handling during firmware update
    Don't check link down payload in case of firmware update.
    mode, despite what the documentation (of the QUERY_DEV_LIM firmware
    The way the hardware and firmware work is that there is one shared RX
    rp8400 firmware).
    due to firmware errors.
    company) who has a strange 2GB restriction in firmware. But
    [PATCH] v4l: 976: ensure consistent v4l firmware prefixes
    Ensure consistent v4l firmware prefixes.
    [PATCH] v4l: (958) Make cx25840 use firmware image named 'cx25840.fw'
    Change default filename of firmware image to 'cx25840.fw'
    [PATCH] fix leaks in request_firmware_nowait
    Some devices (e.g. Qlogic iSCSI HBA hardware like QLA4010 up to firmware
    So scan the firmware device tree and count the number of cpu
    Fix default VGA console on SN platforms.  Since SN firmware does not pass
    We have been printing the raw ppc64_firmware_features during boot. Since
    these methods seems to be be the most common ACPI firmware problem
    the firmware first handed us this device.  This will allow the
    the firmware has handed over the device.  Te state resore funcion
    "permanent failure" from the firmware. Ignore permanent failures on empty slots.
            firmware.c
    * get_dvb_firmware:
    - Added support for the NXT2004 firmware. This firmware works with both
    Some older firmware reports SLIT distances of 0xff and results in bestnode
    Some powermac machines were crashing in the quiesce firmware call
    Updated firmware version stamp to 2.4 from 2.3 so it will use the latest firmware.
    You can obtain the firmware at http://ipw2200.sf.net/firmware.php
    Fixed parameter reordering in firmware log routine.
    Fixes WEP firmware error condition.
    Card with WEP enabled and using shared-key auth will have firmware
    Make all the places the firmware fails to load showerrors (in decimal,
    [Bug 455] Fix frequent channel change generates firmware fatal error.
    disassociate command to the firmware which will cause the fatal error.
    in ipw_send_cmd(), when ensures that commands will not be sent to firmware
    ring buffer for caching host commands sent to the firmware. They can
    Switched firmware error dumping so that it will capture a log available
    via sysfs even if debugging disabled.  When a firmware error is
    Fix firmware error when setting tx_power.
    beacon info in firmware.
    encryption is enabled. It sometimes causes a firmware stall (firmware
    * Fixed #592 race condition during association causing firmware errors
    * Fixed ipw_wx_sw_reset doesn't switch firmware if mode is changed.
    * Fixed problem with firmware restart if wpa_supplicant was used to set a key
      abort that could periodically cause a firmware restart.
    * Updated the firmware requirement from 2.2 to 2.3 which supports
    Fixed problem with Ad-Hoc network creation causing a firmware error if
    [PATCH] drivers/firmware: kmalloc + memset -> kzalloc conversion
    to get the firmware setting.  It significantly improves the quality of
    slow (>15 minutes to flash a new firmware with KCS, >20 seconds to retrieve
    it polls quite rapidly.  This decrease a firmware flash time from 15 minutes
    BMCs can get into ERROR0 state while flashing new firmware, particularly while
    single-threaded firmware may not be able to process new commands.  In
    pSeries also, it was needlessly complex. Now we just do two firmware tests at
    still verifying with the firmware architects the proper to get the
    adapter firmware. The queueing model is the NACA queueing model,
    some of the adapter firmware queue state that made handling QERR=0
    IBM has finally agreed that the "Version Matching" between firmware and
    [PATCH] bnx2: update firmware handshake for 5708
    Add speed reporting to management firmware. This allows management
    firmware to know the current speed without contending for MII
    [PATCH] bnx2: update firmware for 5708
    Update bnx2 firmware with support for 5708.
    - clean up the firmware check code.
    function to write the DSP firmware into the ASSP chip before sending the
    Mellanox has decided that the components of the firmware version are
    Cell uses the same code as pSeries for flashing the firmware
    [PATCH] firmware: fix all kernel-doc warnings
    /sys/firmware/ipl/device
    /sys/firmware/ipl/binary_parameter
    /sys/firmware/ipl/ipl_type
    Fix types for firmware arguments.  Don't define unneeded messages.
    [PATCH] ppc64 boot: print firmware provided stackpointer
    Show firmware provided stackpointer during boot.
    prism54 is leaking information when passing transmits to the firmware.
    firmware will timeout and reset the device if no heartbeat is received
    [SCSI] qla2xxx: Resync with latest released ISP23xx/63xx firmware -- 3.03.18.
    Also, the firmware.c file should include <linux/device.h>
    to get the prototype of  firmware_register() and
    firmware_unregister().
    to the included headers for firmware.c.
    drivers/base/firmware.c:17:5: warning: symbol 'firmware_register' was not declared. Should it be static?
    drivers/base/firmware.c:23:6: warning: symbol 'firmware_unregister' was not declared. Should it be static?
    drivers/base/firmware.c:28:12: warning: symbol 'firmware_init' was not declared. Should it be static?
    firmware will not generate system interrupt.
    *** Warning: "cpu_online_map" [drivers/firmware/dcdbas.ko] undefined!
    Talk about buggy firmware...  the OF on the Longtrail returns 0
    some pSeries-specific firmware flashing bits.  The parts of rtas.c
    [PATCH] powerpc: Move firmware.h into include/asm-powerpc
    Move firmware.h into include/asm-powerpc.
    I presume firmware does this for us on those.
    Doing a "SUNW,stop-self" firmware call on the other cpus is not the
    correct thing to do when dropping into the firmware for a halt,
    the firmware ones needs to be more air tight.  It turns
    2) Doing a firmware call via the normal C call prom_set_trap_table()
       TLB entries for the firmware call.
       One idea is to do a by-hand firmware call like we do in the
    /sys/class/firmware/dell_rbu/loading and data files to disappear and reappear
     echo 1 > /sys/class/firmware/dell_rbu/loading
     cat the packetfile > /sys/class/firmware/dell_rbu/data
     echo 0 > /sys/class/firmware/dell_rbu/loading
    The driver takes the file which came through /sys/class/firmware/dell_rbu/data
    the firmware address space.
    VM these days.  It worked by luck on many systems because the firmware
    By allocating early memory for the firmware page tables, we
    1) Read in firmware translations table while still on the
       firmware's trap table.
    4) Build firmware page tables using __alloc_bootmem().
    [netdrvr starfire] fix highmem and broken firmware issues
    (the firmware cksum engine works only on 32-bit chunks, yuck), so
    parameters from the firmware.
    mailbox buffer before calling the firmware command.
    binary SW_7xx_SER.cis and to put it into /lib/firmware/
    We first take over the trap table from the firmware.  Then, using this
    to the correct location, use portable firmware calls to do
    firmware, we don't need to load dummy mappings there
    take over the trap table from the firmware.
    note section used by open firmware indicates that it requires a virtual
    chrp and openfirmware initialization sections, and then unifies
    chrp and openfirmware initialization sections, and then unifies
    chrp and openfirmware initialization sections, and then unifies
    chrp and openfirmware initialization sections, and then unifies
      It is possible that due to user error the /sys/class/firmware/dell_rbu
            echo 1 > /sys/class/firmware/dell_rbu/loading
            echo 0 > /sys/class/firmware/dell_rbu/loading
      This will make the entries in /sys/class/firmware/ to disappear and the
    - Fix i2c code if fb_firmware_edid() returns NULL
    The call to fb_firmware_edid may return NULL but this is not checked before
    When using the kernel firmware loader, initialize the card shortname
    system, with properties that tell us what addresses the firmware has
    not supposed to be reading their config space either.  The firmware
    machines, where we get the MAC address from their respective firmware
    [PATCH] Fix breakage on ppc{,64} by "nvidiafb: Fallback to firmware EDID"
    [PATCH] printk : Documentation/firmware_class/firmware_sample_driver.c
    not been assigned by the firmware since it's not used on the machine and
    [PATCH] nvidiafb: Fallback to firmware EDID
    - Fallback to firmware EDID if chipset has no DDC/I2C support or if I2C
    [PATCH] fbdev: Resurrect hooks to get EDID from firmware
    o extended rc5 protocol, firmware >= 0x2620 required
    [PATCH] dvb: av7110: conditionally disable workaround for broken firmware
    Disable COM_IF_LOCK workaround for firmware > 0x261f.
    [PATCH] dvb: av7110: disable superflous firmware handshake
    Disable superflous firmware handshake.
    [PATCH] dvb: usb: cxusb: fixes for new firmware
    1) a firmware update made by the vendor, which has to be done in Windows
       no backwards compatibility with the old firmware as it didn't work anyway
    firmwares tested so far.
    Some firmware (e.g. Thinkpad T21) leaves devices in D3hot after a
    firmware don't set the chassis capability bit in the Get Device ID, but
    The ipmi driver does not have a way to handle firmware-generated events
    SMS_ATN bit may never get cleared by firmware, leaving the driver looping
    [PATCH] modified firmware_class.c to support no hotplug
    Upgrade the request_firmware_nowait function to not start the hotplug
    action on a firmware update.
    - Check return value from firmware device tree functions
    initialize their firmware.  The symptom is a repeated Unit Attention with
    [SPARC64]: Don't include drivers/firmware/Kconfig
        Driver for 802.11b cards using RAM-loadable Symbol firmware, such as
        The driver implements Symbol firmware download.  The rest is handled
        Utilities for downloading the Symbol firmware are available at
        It is not supported by this driver because it has no firmware in
    board is expected to be done by the firmware.
    [SCSI] qla2xxx: Stop firmware execution at unintialization time.
    On ISP24xx parts, stop execution of firmware during ISP
    firmware version, ISP serial number, ISP type, ISP product ID,
    firmware will recogonize such devices during local-loop
    firmware, e.g., HP rx7620 and rx8620 descriptions of HPET, has this bug.
            drivers/built-in.o: In function `philips_tu1216_request_firmware':
            budget-av.c:(.text+0xb937b): undefined reference to `request_firmware'
    - modify ROM assignment code as per Ben's suggestion: try to use firmware
    Some RS64-based machines (p620, F80, others) have problems with firmware
    firmware feature check to phys_to_abs().
    [PATCH] ppc64: make firmware_has_feature() stronger
    Make firmware_has_feature() evaluate at compile time for the non pSeries
    [PATCH] ppc64: create firmware_has_feature()
    Create the firmware_has_feature() inline and move the firmware feature
    [PATCH] ppc64: remove firmware features from cpu_spec
    The firmware_features field of struct cpu_spec should really be a separate
    variable as the firmware features do not depend on the chip and the
    When we call the INIT_IB firmware command to bring up a port, use
    fixes breakage seen when the firmware is build to allow 4X only.
    firmware command through sysfs.
    [PATCH] IB: Update current firmware versions in mthca driver
    BLIST_SPARSELUN.  I've tested this change with several HSG firmware
    which doesn't buffer (like firmware) and let access to at least 64k blocks i
    like you want to initialise the firmware with the current timeout of the
    offers much larger io commands, is more friendly to the internal firmware
    structure requiring less translation efforts by the firmware and offers
    the firmware version.
    Some firmware (e.g. Thinkpad T21) leaves devices in D3hot after a
    Rebuild the aic7xxx firmware doesn't work anymore after this change
    are presented by the firmware?  But, distros want one kernel for all systems
    The code that sets the altivec capability of the CPU based on firmware
    This also works around a bug in the firmware loader: The example provided
    in Documentation/firmware_class no longer works, as the firmware loader now
      - tms380tr.c, tms380tr.h: new DMA API, use real device fo firmware loader
    (workaround for firmware bug that left IBSS IE in the Beacon
    that any firmware *has* to configure VGA port forwarding for the boot
    - Fixed Oops with request_firmware()
    by new HCA firmware.
    initiating a soft-reset, insure the firmware has completed
    [SCSI] qla2xxx: Add firmware version number to qla24xx_fw_version_str().
    Add firmware version number to qla24xx_fw_version_str().
    Resync with latest 21xx firmware      -- 1.19.25.
    Resync with latest 22xx firmware      -- 2.02.08.
    Resync with latest 23xx/63xx firmware -- 3.03.15.
    diagnostic firmware dump routines.
    acpi_get_firmware_table (tbxfroot.c) to prevent a fault
    [ACPI] PCI can now get suspend state from firmware
    Uses new field in struct device: firmware_data
    firmware necessary, + minor updates.
    [PATCH] dvb: ttpci: more error handling for firmware communication
    [PATCH] dvb: ttpci: fix error handling for firmware communication
    [PATCH] dvb: add missing release_firmware() calls
    Add missing release_firmware() calls to fix memory leaks.
    [PATCH] dvb: frontend: bcm3510: fix firmware version check
    Fix limit for firmware version check was too low for tda10045.
    We dont need to use the PERFMON exception on POWER5, in fact the firmware
    [PATCH] openfirmware: implement hotplug for macio devices
    [PATCH] openfirmware: add sysfs nodes for open firmware devices
    [PATCH] openfirmware: generate device table for userspace
    440GX interrupt controller.  This helps when board firmware for some reason
    [PATCH] request_firmware(): avoid race conditions
    device attributes and already firmware allocated memory are freed.  Don't
    drivers/firmware/pcdp.c
    drivers/firmware/pcdp.h
    devices attached to it that have not been configured by firmware.  In this
    [PATCH] pcmcia: request CIS via firmware interface
    Use the firmware method to load replacement CIS tables.  It is recommended
    that the /lib/firmware/cis/ points to /etc/pcmcia/cis or the other way round
    so that both old-style cardmgr and new-style hotplug/firmware can access these
    Future versions of Mellanox HCA firmware will require command mailboxes to be
    it's probable that Linux -- or device firmware -- will need to be involved
    Doesn't do any firmware loading etc, just transmission and reception.
    [PATCH] orinoco: manual roaming for Symbol and Intersilfirmware
    [PATCH] kfree cleanups for drivers/firmware/
    Here's a patch with kfree() cleanups for drivers/firmware/efivars.c Patch
        All CPUs get passed their firmware assigned physical id in r3
        Since firmware is not around, there is no other way to obtain
    [PATCH] I2O: Adaptec specific SG_IO access, firmware access through sysfs and 2400A workaround
     - Added sysfs attribute for firmware read and write access for I2O
     - Added special handling of firmware read and write access for Adaptec
     - Added PCI ID of Promise SX6000 with firmware >= 1.20.x.x
    it.  A power cycle is usually required in order to reset a firmware in a bad
    a power down and enabled, the power cycle command is sent to the BMC firmware.
    baud rate and data bits.  So if firmware doesn't supply them, let
    fans or other board components due to hardware and firmware
    consistent with the values printed by firmware, service processor,
    firmware, but they don't set up the device nodes yet. There is a single
    The firmware provides the location and size of the nvram
    whole TCE table at setup time, in case firmware left any active
    firmware.
    [TG3]: Add TSO firmware license
    ipr 0001:d0:01.0: Adapter firmware version: 020A005C
    In file included from drivers/firmware/pcdp.c:18:
    drivers/firmware/pcdp.h:48: error: field `addr' has incomplete type
    drivers/firmware/pcdp.c: In function `setup_serial_console':
    drivers/firmware/pcdp.c:27: error:  `ACPI_ADR_SPACE_SYSTEM_MEMORY' undeclared (first use in this  function)
    firmware about its capabilities on pSeries machines, I included the
    function to give the capabilities to firmware but somehow forgot the
    [TG3]: Fix bug in tg3_load_firmware_cpu
    ppc firmware upload fix
    be set correctly (normally by BIOS/firmware) in order for it to
    Add a new module param, show_firmware_partition.
    [SCSI] qla1280: update firmware
    Update SCSI firmware images:
    fixed a tuning problem for cards based on the old firmware (Steffen Motzer,
    [PATCH] dvb: tda10046: support for different firmware versions
    added support for different tda10046 firmware versions.  tested with v20, v21
    [PATCH] orinoco: Symbol 3.0x firmware needs broken_disableport
      [netdrvr starfire] Add GPL'd firmware, remove compat code
      Consolidate allocation of firmware buffers.  In the process, remove
      duplication of a workaround for an old symbol firmware bug, and fix a
      firmware doesn't like that much.  Also don't attempt to override the
      firmware's default channel number for IBSS mode (I believe default
      will continue attempting to send packets even when the firmware has
      told us we've lost our link to the AP.  On some firmwares this
      because we have an interrmittent connection, but the firmware is able
      other cards, it causes the firmware to fall in a screaming heap :(
    V2 firmware controllers only in the register offsets and removes support
    [PATCH] aoe: add firmware version to info in sysfs
    add firmware version to info in sysfs
    [PATCH] ppc64: firmware workaround
    Recent gcc 4.0 testing uncovered a firmware issue.  Some properties are larger
    [PATCH] ppc64: tell firmware about kernel capabilities
    supposed to be supplying a structure to firmware that tells firmware about
    this data structure to the firmware.
    just setting them when they are allowed in case the firmware got them wrong)
    the spec, but didn't) and defines a "Belcarra firmware" pseudo-class.
    > 2. I'm OK with the full bcd range if Apple is changing it on firmware
    exported.  This can for example happen if you have hotpluggable firmware in
    [PATCH] add TIMEOUT to firmware_class hotplug event
    > The current implementation of the firmware class breaks a fundamental
    Here we add a TIMEOUT value to the hotplug environment of the firmware
    Minor tweaks to firmware command handling: kill off an unused get of a value,
    the HCA's translation tables rather than requiring a firmware command.  For
    [PATCH] IB/mthca: add SYNC_TPT firmware command
    Add code for SYNC_TPT firmware command, which will be used by FMR
    I misunderstood the MTT size value returned by the firmware -- it is really
    as the original firmware did.  This meant that our MTT addresses ended up
    [PATCH] ppc64: Detect altivec via firmware on unknown CPUs
    firmware in addition to the cpu table.  This allows newer CPUs that aren't
